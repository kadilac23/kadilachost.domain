typeof navigator !== "undefined" && function(root, factory) {
    if (typeof define === "function" && define.amd) {
        define(function() {
            return factory(root)
        })
    } else if (typeof module === "object" && module.exports) {
        module.exports = factory(root)
    } else {
        root.lottie = factory(root);
        root.bodymovin = root.lottie
    }
}(window || {}, function(window) {
    "use strict";
    var svgNS = "http://www.w3.org/2000/svg",
        locationHref = "",
        initialDefaultFrame = -999999,
        subframeEnabled = !0,
        idPrefix = "",
        expressionsPlugin, isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent),
        cachedColors = {},
        bmRnd, bmPow = Math.pow,
        bmSqrt = Math.sqrt,
        bmFloor = Math.floor,
        bmMax = Math.max,
        bmMin = Math.min,
        BMMath = {};

    function ProjectInterface() {
        return {}
    }! function() {
        var t, e = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"],
            r = e.length;
        for (t = 0; t < r; t += 1) BMMath[e[t]] = Math[e[t]]
    }(), BMMath.random = Math.random, BMMath.abs = function(t) {
        if ("object" === typeof t && t.length) {
            var e, r = createSizedArray(t.length),
                i = t.length;
            for (e = 0; e < i; e += 1) r[e] = Math.abs(t[e]);
            return r
        }
        return Math.abs(t)
    };
    var defaultCurveSegments = 150,
        degToRads = Math.PI / 180,
        roundCorner = .5519;

    function roundValues(t) {
        bmRnd = t ? Math.round : function(t) {
            return t
        }
    }

    function styleDiv(t) {
        t.style.position = "absolute", t.style.top = 0, t.style.left = 0, t.style.display = "block", t.style.transformOrigin = "0 0", t.style.webkitTransformOrigin = "0 0", t.style.backfaceVisibility = "visible", t.style.webkitBackfaceVisibility = "visible", t.style.transformStyle = "preserve-3d", t.style.webkitTransformStyle = "preserve-3d", t.style.mozTransformStyle = "preserve-3d"
    }

    function BMEnterFrameEvent(t, e, r, i) {
        this.type = t, this.currentTime = e, this.totalTime = r, this.direction = i < 0 ? -1 : 1
    }

    function BMCompleteEvent(t, e) {
        this.type = t, this.direction = e < 0 ? -1 : 1
    }

    function BMCompleteLoopEvent(t, e, r, i) {
        this.type = t, this.currentLoop = r, this.totalLoops = e, this.direction = i < 0 ? -1 : 1
    }

    function BMSegmentStartEvent(t, e, r) {
        this.type = t, this.firstFrame = e, this.totalFrames = r
    }

    function BMDestroyEvent(t, e) {
        this.type = t, this.target = e
    }

    function BMRenderFrameErrorEvent(t, e) {
        this.type = "renderFrameError", this.nativeError = t, this.currentTime = e
    }

    function BMConfigErrorEvent(t) {
        this.type = "configError", this.nativeError = t
    }

    function BMAnimationConfigErrorEvent(t, e) {
        this.type = t, this.nativeError = e
    }
    roundValues(!1);
    var createElementID = (F = 0, function() {
            return idPrefix + "__lottie_element_" + (F += 1)
        }),
        F;

    function HSVtoRGB(t, e, r) {
        var i, s, a, n, o, h, l, p;
        switch (h = r * (1 - e), l = r * (1 - (o = 6 * t - (n = Math.floor(6 * t))) * e), p = r * (1 - (1 - o) * e), n % 6) {
            case 0:
                i = r, s = p, a = h;
                break;
            case 1:
                i = l, s = r, a = h;
                break;
            case 2:
                i = h, s = r, a = p;
                break;
            case 3:
                i = h, s = l, a = r;
                break;
            case 4:
                i = p, s = h, a = r;
                break;
            case 5:
                i = r, s = h, a = l
        }
        return [i, s, a]
    }

    function RGBtoHSV(t, e, r) {
        var i, s = Math.max(t, e, r),
            a = Math.min(t, e, r),
            n = s - a,
            o = 0 === s ? 0 : n / s,
            h = s / 255;
        switch (s) {
            case a:
                i = 0;
                break;
            case t:
                i = e - r + n * (e < r ? 6 : 0), i /= 6 * n;
                break;
            case e:
                i = r - t + 2 * n, i /= 6 * n;
                break;
            case r:
                i = t - e + 4 * n, i /= 6 * n
        }
        return [i, o, h]
    }

    function addSaturationToRGB(t, e) {
        var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
        return r[1] += e, 1 < r[1] ? r[1] = 1 : r[1] <= 0 && (r[1] = 0), HSVtoRGB(r[0], r[1], r[2])
    }

    function addBrightnessToRGB(t, e) {
        var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
        return r[2] += e, 1 < r[2] ? r[2] = 1 : r[2] < 0 && (r[2] = 0), HSVtoRGB(r[0], r[1], r[2])
    }

    function addHueToRGB(t, e) {
        var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
        return r[0] += e / 360, 1 < r[0] ? r[0] -= 1 : r[0] < 0 && (r[0] += 1), HSVtoRGB(r[0], r[1], r[2])
    }
    var rgbToHex = function() {
        var t, e, i = [];
        for (t = 0; t < 256; t += 1) e = t.toString(16), i[t] = 1 === e.length ? "0" + e : e;
        return function(t, e, r) {
            return t < 0 && (t = 0), e < 0 && (e = 0), r < 0 && (r = 0), "#" + i[t] + i[e] + i[r]
        }
    }();

    function BaseEvent() {}
    BaseEvent.prototype = {
        triggerEvent: function(t, e) {
            if (this._cbs[t])
                for (var r = this._cbs[t], i = 0; i < r.length; i += 1) r[i](e)
        },
        addEventListener: function(t, e) {
            return this._cbs[t] || (this._cbs[t] = []), this._cbs[t].push(e),
                function() {
                    this.removeEventListener(t, e)
                }.bind(this)
        },
        removeEventListener: function(t, e) {
            if (e) {
                if (this._cbs[t]) {
                    for (var r = 0, i = this._cbs[t].length; r < i;) this._cbs[t][r] === e && (this._cbs[t].splice(r, 1), r -= 1, i -= 1), r += 1;
                    this._cbs[t].length || (this._cbs[t] = null)
                }
            } else this._cbs[t] = null
        }
    };
    var createTypedArray = function() {
        function r(t, e) {
            var r, i = 0,
                s = [];
            switch (t) {
                case "int16":
                case "uint8c":
                    r = 1;
                    break;
                default:
                    r = 1.1
            }
            for (i = 0; i < e; i += 1) s.push(r);
            return s
        }
        return "function" == typeof Uint8ClampedArray && "function" == typeof Float32Array ? function(t, e) {
            return "float32" === t ? new Float32Array(e) : "int16" === t ? new Int16Array(e) : "uint8c" === t ? new Uint8ClampedArray(e) : r(t, e)
        } : r
    }();

    function createSizedArray(t) {
        return Array.apply(null, {
            length: t
        })
    }

    function createNS(t) {
        return document.createElementNS(svgNS, t)
    }

    function createTag(t) {
        return document.createElement(t)
    }

    function DynamicPropertyContainer() {}
    DynamicPropertyContainer.prototype = {
        addDynamicProperty: function(t) {
            -1 === this.dynamicProperties.indexOf(t) && (this.dynamicProperties.push(t), this.container.addDynamicProperty(this), this._isAnimated = !0)
        },
        iterateDynamicProperties: function() {
            var t;
            this._mdf = !1;
            var e = this.dynamicProperties.length;
            for (t = 0; t < e; t += 1) this.dynamicProperties[t].getValue(), this.dynamicProperties[t]._mdf && (this._mdf = !0)
        },
        initDynamicPropertyContainer: function(t) {
            this.container = t, this.dynamicProperties = [], this._mdf = !1, this._isAnimated = !1
        }
    };
    var getBlendMode = (Oa = {
            0: "source-over",
            1: "multiply",
            2: "screen",
            3: "overlay",
            4: "darken",
            5: "lighten",
            6: "color-dodge",
            7: "color-burn",
            8: "hard-light",
            9: "soft-light",
            10: "difference",
            11: "exclusion",
            12: "hue",
            13: "saturation",
            14: "color",
            15: "luminosity"
        }, function(t) {
            return Oa[t] || ""
        }),
        Oa, lineCapEnum = {
            1: "butt",
            2: "round",
            3: "square"
        },
        lineJoinEnum = {
            1: "miter",
            2: "round",
            3: "bevel"
        },
        Matrix = function() {
            var s = Math.cos,
                a = Math.sin,
                n = Math.tan,
                i = Math.round;

            function t() {
                return this.props[0] = 1, this.props[1] = 0, this.props[2] = 0, this.props[3] = 0, this.props[4] = 0, this.props[5] = 1, this.props[6] = 0, this.props[7] = 0, this.props[8] = 0, this.props[9] = 0, this.props[10] = 1, this.props[11] = 0, this.props[12] = 0, this.props[13] = 0, this.props[14] = 0, this.props[15] = 1, this
            }

            function e(t) {
                if (0 === t) return this;
                var e = s(t),
                    r = a(t);
                return this._t(e, -r, 0, 0, r, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            }

            function r(t) {
                if (0 === t) return this;
                var e = s(t),
                    r = a(t);
                return this._t(1, 0, 0, 0, 0, e, -r, 0, 0, r, e, 0, 0, 0, 0, 1)
            }

            function o(t) {
                if (0 === t) return this;
                var e = s(t),
                    r = a(t);
                return this._t(e, 0, r, 0, 0, 1, 0, 0, -r, 0, e, 0, 0, 0, 0, 1)
            }

            function h(t) {
                if (0 === t) return this;
                var e = s(t),
                    r = a(t);
                return this._t(e, -r, 0, 0, r, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            }

            function l(t, e) {
                return this._t(1, e, t, 1, 0, 0)
            }

            function p(t, e) {
                return this.shear(n(t), n(e))
            }

            function m(t, e) {
                var r = s(e),
                    i = a(e);
                return this._t(r, i, 0, 0, -i, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, n(t), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(r, -i, 0, 0, i, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            }

            function f(t, e, r) {
                return r || 0 === r || (r = 1), 1 === t && 1 === e && 1 === r ? this : this._t(t, 0, 0, 0, 0, e, 0, 0, 0, 0, r, 0, 0, 0, 0, 1)
            }

            function c(t, e, r, i, s, a, n, o, h, l, p, m, f, c, d, u) {
                return this.props[0] = t, this.props[1] = e, this.props[2] = r, this.props[3] = i, this.props[4] = s, this.props[5] = a, this.props[6] = n, this.props[7] = o, this.props[8] = h, this.props[9] = l, this.props[10] = p, this.props[11] = m, this.props[12] = f, this.props[13] = c, this.props[14] = d, this.props[15] = u, this
            }

            function d(t, e, r) {
                return r = r || 0, 0 !== t || 0 !== e || 0 !== r ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t, e, r, 1) : this
            }

            function u(t, e, r, i, s, a, n, o, h, l, p, m, f, c, d, u) {
                var y = this.props;
                if (1 === t && 0 === e && 0 === r && 0 === i && 0 === s && 1 === a && 0 === n && 0 === o && 0 === h && 0 === l && 1 === p && 0 === m) return y[12] = y[12] * t + y[15] * f, y[13] = y[13] * a + y[15] * c, y[14] = y[14] * p + y[15] * d, y[15] *= u, this._identityCalculated = !1, this;
                var g = y[0],
                    v = y[1],
                    b = y[2],
                    P = y[3],
                    E = y[4],
                    x = y[5],
                    S = y[6],
                    A = y[7],
                    C = y[8],
                    T = y[9],
                    _ = y[10],
                    k = y[11],
                    D = y[12],
                    M = y[13],
                    F = y[14],
                    w = y[15];
                return y[0] = g * t + v * s + b * h + P * f, y[1] = g * e + v * a + b * l + P * c, y[2] = g * r + v * n + b * p + P * d, y[3] = g * i + v * o + b * m + P * u, y[4] = E * t + x * s + S * h + A * f, y[5] = E * e + x * a + S * l + A * c, y[6] = E * r + x * n + S * p + A * d, y[7] = E * i + x * o + S * m + A * u, y[8] = C * t + T * s + _ * h + k * f, y[9] = C * e + T * a + _ * l + k * c, y[10] = C * r + T * n + _ * p + k * d, y[11] = C * i + T * o + _ * m + k * u, y[12] = D * t + M * s + F * h + w * f, y[13] = D * e + M * a + F * l + w * c, y[14] = D * r + M * n + F * p + w * d, y[15] = D * i + M * o + F * m + w * u, this._identityCalculated = !1, this
            }

            function y() {
                return this._identityCalculated || (this._identity = !(1 !== this.props[0] || 0 !== this.props[1] || 0 !== this.props[2] || 0 !== this.props[3] || 0 !== this.props[4] || 1 !== this.props[5] || 0 !== this.props[6] || 0 !== this.props[7] || 0 !== this.props[8] || 0 !== this.props[9] || 1 !== this.props[10] || 0 !== this.props[11] || 0 !== this.props[12] || 0 !== this.props[13] || 0 !== this.props[14] || 1 !== this.props[15]), this._identityCalculated = !0), this._identity
            }

            function g(t) {
                for (var e = 0; e < 16;) {
                    if (t.props[e] !== this.props[e]) return !1;
                    e += 1
                }
                return !0
            }

            function v(t) {
                var e;
                for (e = 0; e < 16; e += 1) t.props[e] = this.props[e];
                return t
            }

            function b(t) {
                var e;
                for (e = 0; e < 16; e += 1) this.props[e] = t[e]
            }

            function P(t, e, r) {
                return {
                    x: t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12],
                    y: t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13],
                    z: t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14]
                }
            }

            function E(t, e, r) {
                return t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12]
            }

            function x(t, e, r) {
                return t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13]
            }

            function S(t, e, r) {
                return t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14]
            }

            function A() {
                var t = this.props[0] * this.props[5] - this.props[1] * this.props[4],
                    e = this.props[5] / t,
                    r = -this.props[1] / t,
                    i = -this.props[4] / t,
                    s = this.props[0] / t,
                    a = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / t,
                    n = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / t,
                    o = new Matrix;
                return o.props[0] = e, o.props[1] = r, o.props[4] = i, o.props[5] = s, o.props[12] = a, o.props[13] = n, o
            }

            function C(t) {
                return this.getInverseMatrix().applyToPointArray(t[0], t[1], t[2] || 0)
            }

            function T(t) {
                var e, r = t.length,
                    i = [];
                for (e = 0; e < r; e += 1) i[e] = C(t[e]);
                return i
            }

            function _(t, e, r) {
                var i = createTypedArray("float32", 6);
                if (this.isIdentity()) i[0] = t[0], i[1] = t[1], i[2] = e[0], i[3] = e[1], i[4] = r[0], i[5] = r[1];
                else {
                    var s = this.props[0],
                        a = this.props[1],
                        n = this.props[4],
                        o = this.props[5],
                        h = this.props[12],
                        l = this.props[13];
                    i[0] = t[0] * s + t[1] * n + h, i[1] = t[0] * a + t[1] * o + l, i[2] = e[0] * s + e[1] * n + h, i[3] = e[0] * a + e[1] * o + l, i[4] = r[0] * s + r[1] * n + h, i[5] = r[0] * a + r[1] * o + l
                }
                return i
            }

            function k(t, e, r) {
                return this.isIdentity() ? [t, e, r] : [t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12], t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13], t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14]]
            }

            function D(t, e) {
                if (this.isIdentity()) return t + "," + e;
                var r = this.props;
                return Math.round(100 * (t * r[0] + e * r[4] + r[12])) / 100 + "," + Math.round(100 * (t * r[1] + e * r[5] + r[13])) / 100
            }

            function M() {
                for (var t = 0, e = this.props, r = "matrix3d("; t < 16;) r += i(1e4 * e[t]) / 1e4, r += 15 === t ? ")" : ",", t += 1;
                return r
            }

            function F(t) {
                return t < 1e-6 && 0 < t || -1e-6 < t && t < 0 ? i(1e4 * t) / 1e4 : t
            }

            function w() {
                var t = this.props;
                return "matrix(" + F(t[0]) + "," + F(t[1]) + "," + F(t[4]) + "," + F(t[5]) + "," + F(t[12]) + "," + F(t[13]) + ")"
            }
            return function() {
                this.reset = t, this.rotate = e, this.rotateX = r, this.rotateY = o, this.rotateZ = h, this.skew = p, this.skewFromAxis = m, this.shear = l, this.scale = f, this.setTransform = c, this.translate = d, this.transform = u, this.applyToPoint = P, this.applyToX = E, this.applyToY = x, this.applyToZ = S, this.applyToPointArray = k, this.applyToTriplePoints = _, this.applyToPointStringified = D, this.toCSS = M, this.to2dCSS = w, this.clone = v, this.cloneFromProps = b, this.equals = g, this.inversePoints = T, this.inversePoint = C, this.getInverseMatrix = A, this._t = this.transform, this.isIdentity = y, this._identity = !0, this._identityCalculated = !1, this.props = createTypedArray("float32", 16), this.reset()
            }
        }();
    ! function(o, h) {
        var l, p = this,
            m = 256,
            f = 6,
            c = "random",
            d = h.pow(m, f),
            u = h.pow(2, 52),
            y = 2 * u,
            g = m - 1;

        function v(t) {
            var e, r = t.length,
                n = this,
                i = 0,
                s = n.i = n.j = 0,
                a = n.S = [];
            for (r || (t = [r++]); i < m;) a[i] = i++;
            for (i = 0; i < m; i++) a[i] = a[s = g & s + t[i % r] + (e = a[i])], a[s] = e;
            n.g = function(t) {
                for (var e, r = 0, i = n.i, s = n.j, a = n.S; t--;) e = a[i = g & i + 1], r = r * m + a[g & (a[i] = a[s = g & s + e]) + (a[s] = e)];
                return n.i = i, n.j = s, r
            }
        }

        function b(t, e) {
            return e.i = t.i, e.j = t.j, e.S = t.S.slice(), e
        }

        function P(t, e) {
            for (var r, i = t + "", s = 0; s < i.length;) e[g & s] = g & (r ^= 19 * e[g & s]) + i.charCodeAt(s++);
            return E(e)
        }

        function E(t) {
            return String.fromCharCode.apply(0, t)
        }
        h["seed" + c] = function(t, e, r) {
            var i = [],
                s = P(function t(e, r) {
                    var i, s = [],
                        a = typeof e;
                    if (r && "object" == a)
                        for (i in e) try {
                            s.push(t(e[i], r - 1))
                        } catch (t) {}
                    return s.length ? s : "string" == a ? e : e + "\0"
                }((e = !0 === e ? {
                    entropy: !0
                } : e || {}).entropy ? [t, E(o)] : null === t ? function() {
                    try {
                        if (l) return E(l.randomBytes(m));
                        var t = new Uint8Array(m);
                        return (p.crypto || p.msCrypto).getRandomValues(t), E(t)
                    } catch (t) {
                        var e = p.navigator,
                            r = e && e.plugins;
                        return [+new Date, p, r, p.screen, E(o)]
                    }
                }() : t, 3), i),
                a = new v(i),
                n = function() {
                    for (var t = a.g(f), e = d, r = 0; t < u;) t = (t + r) * m, e *= m, r = a.g(1);
                    for (; y <= t;) t /= 2, e /= 2, r >>>= 1;
                    return (t + r) / e
                };
            return n.int32 = function() {
                return 0 | a.g(4)
            }, n.quick = function() {
                return a.g(4) / 4294967296
            }, n.double = n, P(E(a.S), o), (e.pass || r || function(t, e, r, i) {
                return i && (i.S && b(i, a), t.state = function() {
                    return b(a, {})
                }), r ? (h[c] = t, e) : t
            })(n, s, "global" in e ? e.global : this == h, e.state)
        }, P(h.random(), o)
    }([], BMMath);
    var BezierFactory = function() {
        var t = {
                getBezierEasing: function(t, e, r, i, s) {
                    var a = s || ("bez_" + t + "_" + e + "_" + r + "_" + i).replace(/\./g, "p");
                    if (o[a]) return o[a];
                    var n = new h([t, e, r, i]);
                    return o[a] = n
                }
            },
            o = {};
        var l = 11,
            p = 1 / (l - 1),
            e = "function" == typeof Float32Array;

        function i(t, e) {
            return 1 - 3 * e + 3 * t
        }

        function s(t, e) {
            return 3 * e - 6 * t
        }

        function a(t) {
            return 3 * t
        }

        function m(t, e, r) {
            return ((i(e, r) * t + s(e, r)) * t + a(e)) * t
        }

        function f(t, e, r) {
            return 3 * i(e, r) * t * t + 2 * s(e, r) * t + a(e)
        }

        function h(t) {
            this._p = t, this._mSampleValues = e ? new Float32Array(l) : new Array(l), this._precomputed = !1, this.get = this.get.bind(this)
        }
        return h.prototype = {
            get: function(t) {
                var e = this._p[0],
                    r = this._p[1],
                    i = this._p[2],
                    s = this._p[3];
                return this._precomputed || this._precompute(), e === r && i === s ? t : 0 === t ? 0 : 1 === t ? 1 : m(this._getTForX(t), r, s)
            },
            _precompute: function() {
                var t = this._p[0],
                    e = this._p[1],
                    r = this._p[2],
                    i = this._p[3];
                this._precomputed = !0, t === e && r === i || this._calcSampleValues()
            },
            _calcSampleValues: function() {
                for (var t = this._p[0], e = this._p[2], r = 0; r < l; ++r) this._mSampleValues[r] = m(r * p, t, e)
            },
            _getTForX: function(t) {
                for (var e = this._p[0], r = this._p[2], i = this._mSampleValues, s = 0, a = 1, n = l - 1; a !== n && i[a] <= t; ++a) s += p;
                var o = s + (t - i[--a]) / (i[a + 1] - i[a]) * p,
                    h = f(o, e, r);
                return .001 <= h ? function(t, e, r, i) {
                    for (var s = 0; s < 4; ++s) {
                        var a = f(e, r, i);
                        if (0 === a) return e;
                        e -= (m(e, r, i) - t) / a
                    }
                    return e
                }(t, o, e, r) : 0 === h ? o : function(t, e, r, i, s) {
                    for (var a, n, o = 0; 0 < (a = m(n = e + (r - e) / 2, i, s) - t) ? r = n : e = n, 1e-7 < Math.abs(a) && ++o < 10;);
                    return n
                }(t, s, s + p, e, r)
            }
        }, t
    }();

    function extendPrototype(t, e) {
        var r, i, s = t.length;
        for (r = 0; r < s; r += 1)
            for (var a in i = t[r].prototype) Object.prototype.hasOwnProperty.call(i, a) && (e.prototype[a] = i[a])
    }

    function getDescriptor(t, e) {
        return Object.getOwnPropertyDescriptor(t, e)
    }

    function createProxyFunction(t) {
        function e() {}
        return e.prototype = t, e
    }

    function bezFunction() {
        var D = Math;

        function y(t, e, r, i, s, a) {
            var n = t * i + e * s + r * a - s * i - a * t - r * e;
            return -.001 < n && n < .001
        }
        var p = function(t, e, r, i) {
            var s, a, n, o, h, l, p = defaultCurveSegments,
                m = 0,
                f = [],
                c = [],
                d = bezierLengthPool.newElement();
            for (n = r.length, s = 0; s < p; s += 1) {
                for (h = s / (p - 1), a = l = 0; a < n; a += 1) o = bmPow(1 - h, 3) * t[a] + 3 * bmPow(1 - h, 2) * h * r[a] + 3 * (1 - h) * bmPow(h, 2) * i[a] + bmPow(h, 3) * e[a], f[a] = o, null !== c[a] && (l += bmPow(f[a] - c[a], 2)), c[a] = f[a];
                l && (m += l = bmSqrt(l)), d.percents[s] = h, d.lengths[s] = m
            }
            return d.addedLength = m, d
        };

        function g(t) {
            this.segmentLength = 0, this.points = new Array(t)
        }

        function v(t, e) {
            this.partialLength = t, this.point = e
        }
        var b, t = (b = {}, function(t, e, r, i) {
            var s = (t[0] + "_" + t[1] + "_" + e[0] + "_" + e[1] + "_" + r[0] + "_" + r[1] + "_" + i[0] + "_" + i[1]).replace(/\./g, "p");
            if (!b[s]) {
                var a, n, o, h, l, p, m, f = defaultCurveSegments,
                    c = 0,
                    d = null;
                2 === t.length && (t[0] !== e[0] || t[1] !== e[1]) && y(t[0], t[1], e[0], e[1], t[0] + r[0], t[1] + r[1]) && y(t[0], t[1], e[0], e[1], e[0] + i[0], e[1] + i[1]) && (f = 2);
                var u = new g(f);
                for (o = r.length, a = 0; a < f; a += 1) {
                    for (m = createSizedArray(o), l = a / (f - 1), n = p = 0; n < o; n += 1) h = bmPow(1 - l, 3) * t[n] + 3 * bmPow(1 - l, 2) * l * (t[n] + r[n]) + 3 * (1 - l) * bmPow(l, 2) * (e[n] + i[n]) + bmPow(l, 3) * e[n], m[n] = h, null !== d && (p += bmPow(m[n] - d[n], 2));
                    c += p = bmSqrt(p), u.points[a] = new v(p, m), d = m
                }
                u.segmentLength = c, b[s] = u
            }
            return b[s]
        });

        function M(t, e) {
            var r = e.percents,
                i = e.lengths,
                s = r.length,
                a = bmFloor((s - 1) * t),
                n = t * e.addedLength,
                o = 0;
            if (a === s - 1 || 0 === a || n === i[a]) return r[a];
            for (var h = i[a] > n ? -1 : 1, l = !0; l;)
                if (i[a] <= n && i[a + 1] > n ? (o = (n - i[a]) / (i[a + 1] - i[a]), l = !1) : a += h, a < 0 || s - 1 <= a) {
                    if (a === s - 1) return r[a];
                    l = !1
                }
            return r[a] + (r[a + 1] - r[a]) * o
        }
        var F = createTypedArray("float32", 8);
        return {
            getSegmentsLength: function(t) {
                var e, r = segmentsLengthPool.newElement(),
                    i = t.c,
                    s = t.v,
                    a = t.o,
                    n = t.i,
                    o = t._length,
                    h = r.lengths,
                    l = 0;
                for (e = 0; e < o - 1; e += 1) h[e] = p(s[e], s[e + 1], a[e], n[e + 1]), l += h[e].addedLength;
                return i && o && (h[e] = p(s[e], s[0], a[e], n[0]), l += h[e].addedLength), r.totalLength = l, r
            },
            getNewSegment: function(t, e, r, i, s, a, n) {
                s < 0 ? s = 0 : 1 < s && (s = 1);
                var o, h = M(s, n),
                    l = M(a = 1 < a ? 1 : a, n),
                    p = t.length,
                    m = 1 - h,
                    f = 1 - l,
                    c = m * m * m,
                    d = h * m * m * 3,
                    u = h * h * m * 3,
                    y = h * h * h,
                    g = m * m * f,
                    v = h * m * f + m * h * f + m * m * l,
                    b = h * h * f + m * h * l + h * m * l,
                    P = h * h * l,
                    E = m * f * f,
                    x = h * f * f + m * l * f + m * f * l,
                    S = h * l * f + m * l * l + h * f * l,
                    A = h * l * l,
                    C = f * f * f,
                    T = l * f * f + f * l * f + f * f * l,
                    _ = l * l * f + f * l * l + l * f * l,
                    k = l * l * l;
                for (o = 0; o < p; o += 1) F[4 * o] = D.round(1e3 * (c * t[o] + d * r[o] + u * i[o] + y * e[o])) / 1e3, F[4 * o + 1] = D.round(1e3 * (g * t[o] + v * r[o] + b * i[o] + P * e[o])) / 1e3, F[4 * o + 2] = D.round(1e3 * (E * t[o] + x * r[o] + S * i[o] + A * e[o])) / 1e3, F[4 * o + 3] = D.round(1e3 * (C * t[o] + T * r[o] + _ * i[o] + k * e[o])) / 1e3;
                return F
            },
            getPointInSegment: function(t, e, r, i, s, a) {
                var n = M(s, a),
                    o = 1 - n;
                return [D.round(1e3 * (o * o * o * t[0] + (n * o * o + o * n * o + o * o * n) * r[0] + (n * n * o + o * n * n + n * o * n) * i[0] + n * n * n * e[0])) / 1e3, D.round(1e3 * (o * o * o * t[1] + (n * o * o + o * n * o + o * o * n) * r[1] + (n * n * o + o * n * n + n * o * n) * i[1] + n * n * n * e[1])) / 1e3]
            },
            buildBezierData: t,
            pointOnLine2D: y,
            pointOnLine3D: function(t, e, r, i, s, a, n, o, h) {
                if (0 === r && 0 === a && 0 === h) return y(t, e, i, s, n, o);
                var l, p = D.sqrt(D.pow(i - t, 2) + D.pow(s - e, 2) + D.pow(a - r, 2)),
                    m = D.sqrt(D.pow(n - t, 2) + D.pow(o - e, 2) + D.pow(h - r, 2)),
                    f = D.sqrt(D.pow(n - i, 2) + D.pow(o - s, 2) + D.pow(h - a, 2));
                return -1e-4 < (l = m < p ? f < p ? p - m - f : f - m - p : m < f ? f - m - p : m - p - f) && l < 1e-4
            }
        }
    }! function() {
        for (var s = 0, t = ["ms", "moz", "webkit", "o"], e = 0; e < t.length && !window.requestAnimationFrame; ++e) window.requestAnimationFrame = window[t[e] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[t[e] + "CancelAnimationFrame"] || window[t[e] + "CancelRequestAnimationFrame"];
        window.requestAnimationFrame || (window.requestAnimationFrame = function(t) {
            var e = (new Date).getTime(),
                r = Math.max(0, 16 - (e - s)),
                i = setTimeout(function() {
                    t(e + r)
                }, r);
            return s = e + r, i
        }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function(t) {
            clearTimeout(t)
        })
    }();
    var bez = bezFunction();

    function dataFunctionManager() {
        function m(t, e, r) {
            var i, s, a, n, o, h, l = t.length;
            for (s = 0; s < l; s += 1)
                if ("ks" in (i = t[s]) && !i.completed) {
                    if (i.completed = !0, i.tt && (t[s - 1].td = i.tt), i.hasMask) {
                        var p = i.masksProperties;
                        for (n = p.length, a = 0; a < n; a += 1)
                            if (p[a].pt.k.i) d(p[a].pt.k);
                            else
                                for (h = p[a].pt.k.length, o = 0; o < h; o += 1) p[a].pt.k[o].s && d(p[a].pt.k[o].s[0]), p[a].pt.k[o].e && d(p[a].pt.k[o].e[0])
                    }
                    0 === i.ty ? (i.layers = f(i.refId, e), m(i.layers, e, r)) : 4 === i.ty ? c(i.shapes) : 5 === i.ty && u(i)
                }
        }

        function f(t, e) {
            for (var r = 0, i = e.length; r < i;) {
                if (e[r].id === t) return e[r].layers.__used ? JSON.parse(JSON.stringify(e[r].layers)) : (e[r].layers.__used = !0, e[r].layers);
                r += 1
            }
            return null
        }

        function c(t) {
            var e, r, i;
            for (e = t.length - 1; 0 <= e; e -= 1)
                if ("sh" === t[e].ty)
                    if (t[e].ks.k.i) d(t[e].ks.k);
                    else
                        for (i = t[e].ks.k.length, r = 0; r < i; r += 1) t[e].ks.k[r].s && d(t[e].ks.k[r].s[0]), t[e].ks.k[r].e && d(t[e].ks.k[r].e[0]);
            else "gr" === t[e].ty && c(t[e].it)
        }

        function d(t) {
            var e, r = t.i.length;
            for (e = 0; e < r; e += 1) t.i[e][0] += t.v[e][0], t.i[e][1] += t.v[e][1], t.o[e][0] += t.v[e][0], t.o[e][1] += t.v[e][1]
        }

        function o(t, e) {
            var r = e ? e.split(".") : [100, 100, 100];
            return t[0] > r[0] || !(r[0] > t[0]) && (t[1] > r[1] || !(r[1] > t[1]) && (t[2] > r[2] || !(r[2] > t[2]) && null))
        }
        var h, r = function() {
                var i = [4, 4, 14];

                function s(t) {
                    var e, r, i, s = t.length;
                    for (e = 0; e < s; e += 1) 5 === t[e].ty && (r = t[e], void 0, i = r.t.d, r.t.d = {
                        k: [{
                            s: i,
                            t: 0
                        }]
                    })
                }
                return function(t) {
                    if (o(i, t.v) && (s(t.layers), t.assets)) {
                        var e, r = t.assets.length;
                        for (e = 0; e < r; e += 1) t.assets[e].layers && s(t.assets[e].layers)
                    }
                }
            }(),
            i = (h = [4, 7, 99], function(t) {
                if (t.chars && !o(h, t.v)) {
                    var e, r, i, s, a, n = t.chars.length;
                    for (e = 0; e < n; e += 1)
                        if (t.chars[e].data && t.chars[e].data.shapes)
                            for (i = (a = t.chars[e].data.shapes[0].it).length, r = 0; r < i; r += 1)(s = a[r].ks.k).__converted || (d(a[r].ks.k), s.__converted = !0)
                }
            }),
            s = function() {
                var i = [4, 1, 9];

                function a(t) {
                    var e, r, i, s = t.length;
                    for (e = 0; e < s; e += 1)
                        if ("gr" === t[e].ty) a(t[e].it);
                        else if ("fl" === t[e].ty || "st" === t[e].ty)
                        if (t[e].c.k && t[e].c.k[0].i)
                            for (i = t[e].c.k.length, r = 0; r < i; r += 1) t[e].c.k[r].s && (t[e].c.k[r].s[0] /= 255, t[e].c.k[r].s[1] /= 255, t[e].c.k[r].s[2] /= 255, t[e].c.k[r].s[3] /= 255), t[e].c.k[r].e && (t[e].c.k[r].e[0] /= 255, t[e].c.k[r].e[1] /= 255, t[e].c.k[r].e[2] /= 255, t[e].c.k[r].e[3] /= 255);
                        else t[e].c.k[0] /= 255, t[e].c.k[1] /= 255, t[e].c.k[2] /= 255, t[e].c.k[3] /= 255
                }

                function s(t) {
                    var e, r = t.length;
                    for (e = 0; e < r; e += 1) 4 === t[e].ty && a(t[e].shapes)
                }
                return function(t) {
                    if (o(i, t.v) && (s(t.layers), t.assets)) {
                        var e, r = t.assets.length;
                        for (e = 0; e < r; e += 1) t.assets[e].layers && s(t.assets[e].layers)
                    }
                }
            }(),
            a = function() {
                var i = [4, 4, 18];

                function l(t) {
                    var e, r, i;
                    for (e = t.length - 1; 0 <= e; e -= 1)
                        if ("sh" === t[e].ty)
                            if (t[e].ks.k.i) t[e].ks.k.c = t[e].closed;
                            else
                                for (i = t[e].ks.k.length, r = 0; r < i; r += 1) t[e].ks.k[r].s && (t[e].ks.k[r].s[0].c = t[e].closed), t[e].ks.k[r].e && (t[e].ks.k[r].e[0].c = t[e].closed);
                    else "gr" === t[e].ty && l(t[e].it)
                }

                function s(t) {
                    var e, r, i, s, a, n, o = t.length;
                    for (r = 0; r < o; r += 1) {
                        if ((e = t[r]).hasMask) {
                            var h = e.masksProperties;
                            for (s = h.length, i = 0; i < s; i += 1)
                                if (h[i].pt.k.i) h[i].pt.k.c = h[i].cl;
                                else
                                    for (n = h[i].pt.k.length, a = 0; a < n; a += 1) h[i].pt.k[a].s && (h[i].pt.k[a].s[0].c = h[i].cl), h[i].pt.k[a].e && (h[i].pt.k[a].e[0].c = h[i].cl)
                        }
                        4 === e.ty && l(e.shapes)
                    }
                }
                return function(t) {
                    if (o(i, t.v) && (s(t.layers), t.assets)) {
                        var e, r = t.assets.length;
                        for (e = 0; e < r; e += 1) t.assets[e].layers && s(t.assets[e].layers)
                    }
                }
            }();

        function u(t) {
            0 !== t.t.a.length || "m" in t.t.p || (t.singleShape = !0)
        }
        var t = {
            completeData: function(t, e) {
                t.__complete || (s(t), r(t), i(t), a(t), m(t.layers, t.assets, e), t.__complete = !0)
            }
        };
        return t.checkColors = s, t.checkChars = i, t.checkShapes = a, t.completeLayers = m, t
    }
    var dataManager = dataFunctionManager();

    function getFontProperties(t) {
        for (var e = t.fStyle ? t.fStyle.split(" ") : [], r = "normal", i = "normal", s = e.length, a = 0; a < s; a += 1) switch (e[a].toLowerCase()) {
            case "italic":
                i = "italic";
                break;
            case "bold":
                r = "700";
                break;
            case "black":
                r = "900";
                break;
            case "medium":
                r = "500";
                break;
            case "regular":
            case "normal":
                r = "400";
                break;
            case "light":
            case "thin":
                r = "200"
        }
        return {
            style: i,
            weight: t.fWeight || r
        }
    }
    var FontManager = function() {
            var a = {
                    w: 0,
                    size: 0,
                    shapes: []
                },
                e = [];
            e = e.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
            var i = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"],
                r = [65039, 8205];

            function f(t, e) {
                var r = createTag("span");
                r.setAttribute("aria-hidden", !0), r.style.fontFamily = e;
                var i = createTag("span");
                i.innerText = "giItT1WQy@!-/#", r.style.position = "absolute", r.style.left = "-10000px", r.style.top = "-10000px", r.style.fontSize = "300px", r.style.fontVariant = "normal", r.style.fontStyle = "normal", r.style.fontWeight = "normal", r.style.letterSpacing = "0", r.appendChild(i), document.body.appendChild(r);
                var s = i.offsetWidth;
                return i.style.fontFamily = function(t) {
                    var e, r = t.split(","),
                        i = r.length,
                        s = [];
                    for (e = 0; e < i; e += 1) "sans-serif" !== r[e] && "monospace" !== r[e] && s.push(r[e]);
                    return s.join(",")
                }(t) + ", " + e, {
                    node: i,
                    w: s,
                    parent: r
                }
            }

            function c(t, e) {
                var r = createNS("text");
                r.style.fontSize = "100px";
                var i = getFontProperties(e);
                return r.setAttribute("font-family", e.fFamily), r.setAttribute("font-style", i.style), r.setAttribute("font-weight", i.weight), r.textContent = "1", e.fClass ? (r.style.fontFamily = "inherit", r.setAttribute("class", e.fClass)) : r.style.fontFamily = e.fFamily, t.appendChild(r), createTag("canvas").getContext("2d").font = e.fWeight + " " + e.fStyle + " 100px " + e.fFamily, r
            }
            var t = function() {
                this.fonts = [], this.chars = null, this.typekitLoaded = 0, this.isLoaded = !1, this._warned = !1, this.initTime = Date.now(), this.setIsLoadedBinded = this.setIsLoaded.bind(this), this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this)
            };
            return t.isModifier = function(t, e) {
                var r = t.toString(16) + e.toString(16);
                return -1 !== i.indexOf(r)
            }, t.isZeroWidthJoiner = function(t, e) {
                return e ? t === r[0] && e === r[1] : t === r[1]
            }, t.isCombinedCharacter = function(t) {
                return -1 !== e.indexOf(t)
            }, t.prototype = {
                addChars: function(t) {
                    if (t) {
                        var e;
                        this.chars || (this.chars = []);
                        var r, i, s = t.length,
                            a = this.chars.length;
                        for (e = 0; e < s; e += 1) {
                            for (r = 0, i = !1; r < a;) this.chars[r].style === t[e].style && this.chars[r].fFamily === t[e].fFamily && this.chars[r].ch === t[e].ch && (i = !0), r += 1;
                            i || (this.chars.push(t[e]), a += 1)
                        }
                    }
                },
                addFonts: function(t, e) {
                    if (t) {
                        if (this.chars) return this.isLoaded = !0, void(this.fonts = t.list);
                        var r, i = t.list,
                            s = i.length,
                            a = s;
                        for (r = 0; r < s; r += 1) {
                            var n, o, h = !0;
                            if (i[r].loaded = !1, i[r].monoCase = f(i[r].fFamily, "monospace"), i[r].sansCase = f(i[r].fFamily, "sans-serif"), i[r].fPath) {
                                if ("p" === i[r].fOrigin || 3 === i[r].origin) {
                                    if (0 < (n = document.querySelectorAll('style[f-forigin="p"][f-family="' + i[r].fFamily + '"], style[f-origin="3"][f-family="' + i[r].fFamily + '"]')).length && (h = !1), h) {
                                        var l = createTag("style");
                                        l.setAttribute("f-forigin", i[r].fOrigin), l.setAttribute("f-origin", i[r].origin), l.setAttribute("f-family", i[r].fFamily), l.type = "text/css", l.innerText = "@font-face {font-family: " + i[r].fFamily + "; font-style: normal; src: url('" + i[r].fPath + "');}", e.appendChild(l)
                                    }
                                } else if ("g" === i[r].fOrigin || 1 === i[r].origin) {
                                    for (n = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'), o = 0; o < n.length; o += 1) - 1 !== n[o].href.indexOf(i[r].fPath) && (h = !1);
                                    if (h) {
                                        var p = createTag("link");
                                        p.setAttribute("f-forigin", i[r].fOrigin), p.setAttribute("f-origin", i[r].origin), p.type = "text/css", p.rel = "stylesheet", p.href = i[r].fPath, document.body.appendChild(p)
                                    }
                                } else if ("t" === i[r].fOrigin || 2 === i[r].origin) {
                                    for (n = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'), o = 0; o < n.length; o += 1) i[r].fPath === n[o].src && (h = !1);
                                    if (h) {
                                        var m = createTag("link");
                                        m.setAttribute("f-forigin", i[r].fOrigin), m.setAttribute("f-origin", i[r].origin), m.setAttribute("rel", "stylesheet"), m.setAttribute("href", i[r].fPath), e.appendChild(m)
                                    }
                                }
                            } else i[r].loaded = !0, a -= 1;
                            i[r].helper = c(e, i[r]), i[r].cache = {}, this.fonts.push(i[r])
                        }
                        0 === a ? this.isLoaded = !0 : setTimeout(this.checkLoadedFonts.bind(this), 100)
                    } else this.isLoaded = !0
                },
                getCharData: function(t, e, r) {
                    for (var i = 0, s = this.chars.length; i < s;) {
                        if (this.chars[i].ch === t && this.chars[i].style === e && this.chars[i].fFamily === r) return this.chars[i];
                        i += 1
                    }
                    return ("string" == typeof t && 13 !== t.charCodeAt(0) || !t) && console && console.warn && !this._warned && (this._warned = !0, console.warn("Missing character from exported characters list: ", t, e, r)), a
                },
                getFontByName: function(t) {
                    for (var e = 0, r = this.fonts.length; e < r;) {
                        if (this.fonts[e].fName === t) return this.fonts[e];
                        e += 1
                    }
                    return this.fonts[0]
                },
                measureText: function(t, e, r) {
                    var i = this.getFontByName(e),
                        s = t.charCodeAt(0);
                    if (!i.cache[s + 1]) {
                        var a = i.helper;
                        if (" " === t) {
                            a.textContent = "|" + t + "|";
                            var n = a.getComputedTextLength();
                            a.textContent = "||";
                            var o = a.getComputedTextLength();
                            i.cache[s + 1] = (n - o) / 100
                        } else a.textContent = t, i.cache[s + 1] = a.getComputedTextLength() / 100
                    }
                    return i.cache[s + 1] * r
                },
                checkLoadedFonts: function() {
                    var t, e, r, i = this.fonts.length,
                        s = i;
                    for (t = 0; t < i; t += 1) this.fonts[t].loaded ? s -= 1 : "n" === this.fonts[t].fOrigin || 0 === this.fonts[t].origin ? this.fonts[t].loaded = !0 : (e = this.fonts[t].monoCase.node, r = this.fonts[t].monoCase.w, e.offsetWidth !== r ? (s -= 1, this.fonts[t].loaded = !0) : (e = this.fonts[t].sansCase.node, r = this.fonts[t].sansCase.w, e.offsetWidth !== r && (s -= 1, this.fonts[t].loaded = !0)), this.fonts[t].loaded && (this.fonts[t].sansCase.parent.parentNode.removeChild(this.fonts[t].sansCase.parent), this.fonts[t].monoCase.parent.parentNode.removeChild(this.fonts[t].monoCase.parent)));
                    0 !== s && Date.now() - this.initTime < 5e3 ? setTimeout(this.checkLoadedFontsBinded, 20) : setTimeout(this.setIsLoadedBinded, 10)
                },
                setIsLoaded: function() {
                    this.isLoaded = !0
                }
            }, t
        }(),
        PropertyFactory = function() {
            var m = initialDefaultFrame,
                s = Math.abs;

            function f(t, e) {
                var r, i = this.offsetTime;
                "multidimensional" === this.propType && (r = createTypedArray("float32", this.pv.length));
                for (var s, a, n, o, h, l, p, m, f = e.lastIndex, c = f, d = this.keyframes.length - 1, u = !0; u;) {
                    if (s = this.keyframes[c], a = this.keyframes[c + 1], c === d - 1 && t >= a.t - i) {
                        s.h && (s = a), f = 0;
                        break
                    }
                    if (a.t - i > t) {
                        f = c;
                        break
                    }
                    c < d - 1 ? c += 1 : (f = 0, u = !1)
                }
                var y, g, v, b, P, E, x, S, A, C, T = a.t - i,
                    _ = s.t - i;
                if (s.to) {
                    s.bezierData || (s.bezierData = bez.buildBezierData(s.s, a.s || s.e, s.to, s.ti));
                    var k = s.bezierData;
                    if (T <= t || t < _) {
                        var D = T <= t ? k.points.length - 1 : 0;
                        for (o = k.points[D].point.length, n = 0; n < o; n += 1) r[n] = k.points[D].point[n]
                    } else {
                        s.__fnct ? m = s.__fnct : (m = BezierFactory.getBezierEasing(s.o.x, s.o.y, s.i.x, s.i.y, s.n).get, s.__fnct = m), h = m((t - _) / (T - _));
                        var M, F = k.segmentLength * h,
                            w = e.lastFrame < t && e._lastKeyframeIndex === c ? e._lastAddedLength : 0;
                        for (p = e.lastFrame < t && e._lastKeyframeIndex === c ? e._lastPoint : 0, u = !0, l = k.points.length; u;) {
                            if (w += k.points[p].partialLength, 0 === F || 0 === h || p === k.points.length - 1) {
                                for (o = k.points[p].point.length, n = 0; n < o; n += 1) r[n] = k.points[p].point[n];
                                break
                            }
                            if (w <= F && F < w + k.points[p + 1].partialLength) {
                                for (M = (F - w) / k.points[p + 1].partialLength, o = k.points[p].point.length, n = 0; n < o; n += 1) r[n] = k.points[p].point[n] + (k.points[p + 1].point[n] - k.points[p].point[n]) * M;
                                break
                            }
                            p < l - 1 ? p += 1 : u = !1
                        }
                        e._lastPoint = p, e._lastAddedLength = w - k.points[p].partialLength, e._lastKeyframeIndex = c
                    }
                } else {
                    var I, V, B, R, L;
                    if (d = s.s.length, y = a.s || s.e, this.sh && 1 !== s.h)
                        if (T <= t) r[0] = y[0], r[1] = y[1], r[2] = y[2];
                        else if (t <= _) r[0] = s.s[0], r[1] = s.s[1], r[2] = s.s[2];
                    else {
                        var G = N(s.s),
                            z = N(y);
                        g = r, v = function(t, e, r) {
                            var i, s, a, n, o, h = [],
                                l = t[0],
                                p = t[1],
                                m = t[2],
                                f = t[3],
                                c = e[0],
                                d = e[1],
                                u = e[2],
                                y = e[3];
                            (s = l * c + p * d + m * u + f * y) < 0 && (s = -s, c = -c, d = -d, u = -u, y = -y);
                            o = 1e-6 < 1 - s ? (i = Math.acos(s), a = Math.sin(i), n = Math.sin((1 - r) * i) / a, Math.sin(r * i) / a) : (n = 1 - r, r);
                            return h[0] = n * l + o * c, h[1] = n * p + o * d, h[2] = n * m + o * u, h[3] = n * f + o * y, h
                        }(G, z, (t - _) / (T - _)), b = v[0], P = v[1], E = v[2], x = v[3], S = Math.atan2(2 * P * x - 2 * b * E, 1 - 2 * P * P - 2 * E * E), A = Math.asin(2 * b * P + 2 * E * x), C = Math.atan2(2 * b * x - 2 * P * E, 1 - 2 * b * b - 2 * E * E), g[0] = S / degToRads, g[1] = A / degToRads, g[2] = C / degToRads
                    } else
                        for (c = 0; c < d; c += 1) 1 !== s.h && (h = T <= t ? 1 : t < _ ? 0 : (s.o.x.constructor === Array ? (s.__fnct || (s.__fnct = []), s.__fnct[c] ? m = s.__fnct[c] : (I = void 0 === s.o.x[c] ? s.o.x[0] : s.o.x[c], V = void 0 === s.o.y[c] ? s.o.y[0] : s.o.y[c], B = void 0 === s.i.x[c] ? s.i.x[0] : s.i.x[c], R = void 0 === s.i.y[c] ? s.i.y[0] : s.i.y[c], m = BezierFactory.getBezierEasing(I, V, B, R).get, s.__fnct[c] = m)) : s.__fnct ? m = s.__fnct : (I = s.o.x, V = s.o.y, B = s.i.x, R = s.i.y, m = BezierFactory.getBezierEasing(I, V, B, R).get, s.__fnct = m), m((t - _) / (T - _)))), y = a.s || s.e, L = 1 === s.h ? s.s[c] : s.s[c] + (y[c] - s.s[c]) * h, "multidimensional" === this.propType ? r[c] = L : r = L
                }
                return e.lastIndex = f, r
            }

            function N(t) {
                var e = t[0] * degToRads,
                    r = t[1] * degToRads,
                    i = t[2] * degToRads,
                    s = Math.cos(e / 2),
                    a = Math.cos(r / 2),
                    n = Math.cos(i / 2),
                    o = Math.sin(e / 2),
                    h = Math.sin(r / 2),
                    l = Math.sin(i / 2);
                return [o * h * n + s * a * l, o * a * n + s * h * l, s * h * n - o * a * l, s * a * n - o * h * l]
            }

            function c() {
                var t = this.comp.renderedFrame - this.offsetTime,
                    e = this.keyframes[0].t - this.offsetTime,
                    r = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
                if (!(t === this._caching.lastFrame || this._caching.lastFrame !== m && (this._caching.lastFrame >= r && r <= t || this._caching.lastFrame < e && t < e))) {
                    this._caching.lastFrame >= t && (this._caching._lastKeyframeIndex = -1, this._caching.lastIndex = 0);
                    var i = this.interpolateValue(t, this._caching);
                    this.pv = i
                }
                return this._caching.lastFrame = t, this.pv
            }

            function d(t) {
                var e;
                if ("unidimensional" === this.propType) e = t * this.mult, 1e-5 < s(this.v - e) && (this.v = e, this._mdf = !0);
                else
                    for (var r = 0, i = this.v.length; r < i;) e = t[r] * this.mult, 1e-5 < s(this.v[r] - e) && (this.v[r] = e, this._mdf = !0), r += 1
            }

            function u() {
                if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length)
                    if (this.lock) this.setVValue(this.pv);
                    else {
                        var t;
                        this.lock = !0, this._mdf = this._isFirstFrame;
                        var e = this.effectsSequence.length,
                            r = this.kf ? this.pv : this.data.k;
                        for (t = 0; t < e; t += 1) r = this.effectsSequence[t](r);
                        this.setVValue(r), this._isFirstFrame = !1, this.lock = !1, this.frameId = this.elem.globalData.frameId
                    }
            }

            function y(t) {
                this.effectsSequence.push(t), this.container.addDynamicProperty(this)
            }

            function n(t, e, r, i) {
                this.propType = "unidimensional", this.mult = r || 1, this.data = e, this.v = r ? e.k * r : e.k, this.pv = e.k, this._mdf = !1, this.elem = t, this.container = i, this.comp = t.comp, this.k = !1, this.kf = !1, this.vel = 0, this.effectsSequence = [], this._isFirstFrame = !0, this.getValue = u, this.setVValue = d, this.addEffect = y
            }

            function o(t, e, r, i) {
                var s;
                this.propType = "multidimensional", this.mult = r || 1, this.data = e, this._mdf = !1, this.elem = t, this.container = i, this.comp = t.comp, this.k = !1, this.kf = !1, this.frameId = -1;
                var a = e.k.length;
                for (this.v = createTypedArray("float32", a), this.pv = createTypedArray("float32", a), this.vel = createTypedArray("float32", a), s = 0; s < a; s += 1) this.v[s] = e.k[s] * this.mult, this.pv[s] = e.k[s];
                this._isFirstFrame = !0, this.effectsSequence = [], this.getValue = u, this.setVValue = d, this.addEffect = y
            }

            function h(t, e, r, i) {
                this.propType = "unidimensional", this.keyframes = e.k, this.offsetTime = t.data.st, this.frameId = -1, this._caching = {
                    lastFrame: m,
                    lastIndex: 0,
                    value: 0,
                    _lastKeyframeIndex: -1
                }, this.k = !0, this.kf = !0, this.data = e, this.mult = r || 1, this.elem = t, this.container = i, this.comp = t.comp, this.v = m, this.pv = m, this._isFirstFrame = !0, this.getValue = u, this.setVValue = d, this.interpolateValue = f, this.effectsSequence = [c.bind(this)], this.addEffect = y
            }

            function l(t, e, r, i) {
                var s;
                this.propType = "multidimensional";
                var a, n, o, h, l = e.k.length;
                for (s = 0; s < l - 1; s += 1) e.k[s].to && e.k[s].s && e.k[s + 1] && e.k[s + 1].s && (a = e.k[s].s, n = e.k[s + 1].s, o = e.k[s].to, h = e.k[s].ti, (2 === a.length && (a[0] !== n[0] || a[1] !== n[1]) && bez.pointOnLine2D(a[0], a[1], n[0], n[1], a[0] + o[0], a[1] + o[1]) && bez.pointOnLine2D(a[0], a[1], n[0], n[1], n[0] + h[0], n[1] + h[1]) || 3 === a.length && (a[0] !== n[0] || a[1] !== n[1] || a[2] !== n[2]) && bez.pointOnLine3D(a[0], a[1], a[2], n[0], n[1], n[2], a[0] + o[0], a[1] + o[1], a[2] + o[2]) && bez.pointOnLine3D(a[0], a[1], a[2], n[0], n[1], n[2], n[0] + h[0], n[1] + h[1], n[2] + h[2])) && (e.k[s].to = null, e.k[s].ti = null), a[0] === n[0] && a[1] === n[1] && 0 === o[0] && 0 === o[1] && 0 === h[0] && 0 === h[1] && (2 === a.length || a[2] === n[2] && 0 === o[2] && 0 === h[2]) && (e.k[s].to = null, e.k[s].ti = null));
                this.effectsSequence = [c.bind(this)], this.data = e, this.keyframes = e.k, this.offsetTime = t.data.st, this.k = !0, this.kf = !0, this._isFirstFrame = !0, this.mult = r || 1, this.elem = t, this.container = i, this.comp = t.comp, this.getValue = u, this.setVValue = d, this.interpolateValue = f, this.frameId = -1;
                var p = e.k[0].s.length;
                for (this.v = createTypedArray("float32", p), this.pv = createTypedArray("float32", p), s = 0; s < p; s += 1) this.v[s] = m, this.pv[s] = m;
                this._caching = {
                    lastFrame: m,
                    lastIndex: 0,
                    value: createTypedArray("float32", p)
                }, this.addEffect = y
            }
            return {
                getProp: function(t, e, r, i, s) {
                    var a;
                    if (e.k.length)
                        if ("number" == typeof e.k[0]) a = new o(t, e, i, s);
                        else switch (r) {
                            case 0:
                                a = new h(t, e, i, s);
                                break;
                            case 1:
                                a = new l(t, e, i, s)
                        } else a = new n(t, e, i, s);
                    return a.effectsSequence.length && s.addDynamicProperty(a), a
                }
            }
        }(),
        TransformPropertyFactory = function() {
            var n = [0, 0];

            function i(t, e, r) {
                if (this.elem = t, this.frameId = -1, this.propType = "transform", this.data = e, this.v = new Matrix, this.pre = new Matrix, this.appliedTransformations = 0, this.initDynamicPropertyContainer(r || t), e.p && e.p.s ? (this.px = PropertyFactory.getProp(t, e.p.x, 0, 0, this), this.py = PropertyFactory.getProp(t, e.p.y, 0, 0, this), e.p.z && (this.pz = PropertyFactory.getProp(t, e.p.z, 0, 0, this))) : this.p = PropertyFactory.getProp(t, e.p || {
                        k: [0, 0, 0]
                    }, 1, 0, this), e.rx) {
                    if (this.rx = PropertyFactory.getProp(t, e.rx, 0, degToRads, this), this.ry = PropertyFactory.getProp(t, e.ry, 0, degToRads, this), this.rz = PropertyFactory.getProp(t, e.rz, 0, degToRads, this), e.or.k[0].ti) {
                        var i, s = e.or.k.length;
                        for (i = 0; i < s; i += 1) e.or.k[i].to = null, e.or.k[i].ti = null
                    }
                    this.or = PropertyFactory.getProp(t, e.or, 1, degToRads, this), this.or.sh = !0
                } else this.r = PropertyFactory.getProp(t, e.r || {
                    k: 0
                }, 0, degToRads, this);
                e.sk && (this.sk = PropertyFactory.getProp(t, e.sk, 0, degToRads, this), this.sa = PropertyFactory.getProp(t, e.sa, 0, degToRads, this)), this.a = PropertyFactory.getProp(t, e.a || {
                    k: [0, 0, 0]
                }, 1, 0, this), this.s = PropertyFactory.getProp(t, e.s || {
                    k: [100, 100, 100]
                }, 1, .01, this), e.o ? this.o = PropertyFactory.getProp(t, e.o, 0, .01, t) : this.o = {
                    _mdf: !1,
                    v: 1
                }, this._isDirty = !0, this.dynamicProperties.length || this.getValue(!0)
            }
            return i.prototype = {
                applyToMatrix: function(t) {
                    var e = this._mdf;
                    this.iterateDynamicProperties(), this._mdf = this._mdf || e, this.a && t.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.s && t.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && t.skewFromAxis(-this.sk.v, this.sa.v), this.r ? t.rotate(-this.r.v) : t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.data.p.s ? this.data.p.z ? t.translate(this.px.v, this.py.v, -this.pz.v) : t.translate(this.px.v, this.py.v, 0) : t.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                },
                getValue: function(t) {
                    if (this.elem.globalData.frameId !== this.frameId) {
                        if (this._isDirty && (this.precalculateMatrix(), this._isDirty = !1), this.iterateDynamicProperties(), this._mdf || t) {
                            var e;
                            if (this.v.cloneFromProps(this.pre.props), this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v), this.r && this.appliedTransformations < 4 ? this.v.rotate(-this.r.v) : !this.r && this.appliedTransformations < 4 && this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.autoOriented) {
                                var r, i;
                                if (e = this.elem.globalData.frameRate, this.p && this.p.keyframes && this.p.getValueAtTime) i = this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t ? (r = this.p.getValueAtTime((this.p.keyframes[0].t + .01) / e, 0), this.p.getValueAtTime(this.p.keyframes[0].t / e, 0)) : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t ? (r = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / e, 0), this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - .05) / e, 0)) : (r = this.p.pv, this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - .01) / e, this.p.offsetTime));
                                else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                                    r = [], i = [];
                                    var s = this.px,
                                        a = this.py;
                                    s._caching.lastFrame + s.offsetTime <= s.keyframes[0].t ? (r[0] = s.getValueAtTime((s.keyframes[0].t + .01) / e, 0), r[1] = a.getValueAtTime((a.keyframes[0].t + .01) / e, 0), i[0] = s.getValueAtTime(s.keyframes[0].t / e, 0), i[1] = a.getValueAtTime(a.keyframes[0].t / e, 0)) : s._caching.lastFrame + s.offsetTime >= s.keyframes[s.keyframes.length - 1].t ? (r[0] = s.getValueAtTime(s.keyframes[s.keyframes.length - 1].t / e, 0), r[1] = a.getValueAtTime(a.keyframes[a.keyframes.length - 1].t / e, 0), i[0] = s.getValueAtTime((s.keyframes[s.keyframes.length - 1].t - .01) / e, 0), i[1] = a.getValueAtTime((a.keyframes[a.keyframes.length - 1].t - .01) / e, 0)) : (r = [s.pv, a.pv], i[0] = s.getValueAtTime((s._caching.lastFrame + s.offsetTime - .01) / e, s.offsetTime), i[1] = a.getValueAtTime((a._caching.lastFrame + a.offsetTime - .01) / e, a.offsetTime))
                                } else r = i = n;
                                this.v.rotate(-Math.atan2(r[1] - i[1], r[0] - i[0]))
                            }
                            this.data.p && this.data.p.s ? this.data.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                        }
                        this.frameId = this.elem.globalData.frameId
                    }
                },
                precalculateMatrix: function() {
                    if (!this.a.k && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.appliedTransformations = 1, !this.s.effectsSequence.length)) {
                        if (this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.appliedTransformations = 2, this.sk) {
                            if (this.sk.effectsSequence.length || this.sa.effectsSequence.length) return;
                            this.pre.skewFromAxis(-this.sk.v, this.sa.v), this.appliedTransformations = 3
                        }
                        this.r ? this.r.effectsSequence.length || (this.pre.rotate(-this.r.v), this.appliedTransformations = 4) : this.rz.effectsSequence.length || this.ry.effectsSequence.length || this.rx.effectsSequence.length || this.or.effectsSequence.length || (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.appliedTransformations = 4)
                    }
                },
                autoOrient: function() {}
            }, extendPrototype([DynamicPropertyContainer], i), i.prototype.addDynamicProperty = function(t) {
                this._addDynamicProperty(t), this.elem.addDynamicProperty(t), this._isDirty = !0
            }, i.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty, {
                getTransformProperty: function(t, e, r) {
                    return new i(t, e, r)
                }
            }
        }();

    function ShapePath() {
        this.c = !1, this._length = 0, this._maxLength = 8, this.v = createSizedArray(this._maxLength), this.o = createSizedArray(this._maxLength), this.i = createSizedArray(this._maxLength)
    }
    ShapePath.prototype.setPathData = function(t, e) {
        this.c = t, this.setLength(e);
        for (var r = 0; r < e;) this.v[r] = pointPool.newElement(), this.o[r] = pointPool.newElement(), this.i[r] = pointPool.newElement(), r += 1
    }, ShapePath.prototype.setLength = function(t) {
        for (; this._maxLength < t;) this.doubleArrayLength();
        this._length = t
    }, ShapePath.prototype.doubleArrayLength = function() {
        this.v = this.v.concat(createSizedArray(this._maxLength)), this.i = this.i.concat(createSizedArray(this._maxLength)), this.o = this.o.concat(createSizedArray(this._maxLength)), this._maxLength *= 2
    }, ShapePath.prototype.setXYAt = function(t, e, r, i, s) {
        var a;
        switch (this._length = Math.max(this._length, i + 1), this._length >= this._maxLength && this.doubleArrayLength(), r) {
            case "v":
                a = this.v;
                break;
            case "i":
                a = this.i;
                break;
            case "o":
                a = this.o;
                break;
            default:
                a = []
        }(!a[i] || a[i] && !s) && (a[i] = pointPool.newElement()), a[i][0] = t, a[i][1] = e
    }, ShapePath.prototype.setTripleAt = function(t, e, r, i, s, a, n, o) {
        this.setXYAt(t, e, "v", n, o), this.setXYAt(r, i, "o", n, o), this.setXYAt(s, a, "i", n, o)
    }, ShapePath.prototype.reverse = function() {
        var t = new ShapePath;
        t.setPathData(this.c, this._length);
        var e = this.v,
            r = this.o,
            i = this.i,
            s = 0;
        this.c && (t.setTripleAt(e[0][0], e[0][1], i[0][0], i[0][1], r[0][0], r[0][1], 0, !1), s = 1);
        var a, n = this._length - 1,
            o = this._length;
        for (a = s; a < o; a += 1) t.setTripleAt(e[n][0], e[n][1], i[n][0], i[n][1], r[n][0], r[n][1], a, !1), n -= 1;
        return t
    };
    var ShapePropertyFactory = function() {
            var s = -999999;

            function t(t, e, r) {
                var i, s, a, n, o, h, l, p, m, f = r.lastIndex,
                    c = this.keyframes;
                if (t < c[0].t - this.offsetTime) i = c[0].s[0], a = !0, f = 0;
                else if (t >= c[c.length - 1].t - this.offsetTime) i = c[c.length - 1].s ? c[c.length - 1].s[0] : c[c.length - 2].e[0], a = !0;
                else {
                    for (var d, u, y = f, g = c.length - 1, v = !0; v && (d = c[y], !((u = c[y + 1]).t - this.offsetTime > t));) y < g - 1 ? y += 1 : v = !1;
                    if (f = y, !(a = 1 === d.h)) {
                        if (t >= u.t - this.offsetTime) p = 1;
                        else if (t < d.t - this.offsetTime) p = 0;
                        else {
                            var b;
                            d.__fnct ? b = d.__fnct : (b = BezierFactory.getBezierEasing(d.o.x, d.o.y, d.i.x, d.i.y).get, d.__fnct = b), p = b((t - (d.t - this.offsetTime)) / (u.t - this.offsetTime - (d.t - this.offsetTime)))
                        }
                        s = u.s ? u.s[0] : d.e[0]
                    }
                    i = d.s[0]
                }
                for (h = e._length, l = i.i[0].length, r.lastIndex = f, n = 0; n < h; n += 1)
                    for (o = 0; o < l; o += 1) m = a ? i.i[n][o] : i.i[n][o] + (s.i[n][o] - i.i[n][o]) * p, e.i[n][o] = m, m = a ? i.o[n][o] : i.o[n][o] + (s.o[n][o] - i.o[n][o]) * p, e.o[n][o] = m, m = a ? i.v[n][o] : i.v[n][o] + (s.v[n][o] - i.v[n][o]) * p, e.v[n][o] = m
            }

            function a() {
                this.paths = this.localShapeCollection
            }

            function e(t) {
                (function(t, e) {
                    if (t._length !== e._length || t.c !== e.c) return !1;
                    var r, i = t._length;
                    for (r = 0; r < i; r += 1)
                        if (t.v[r][0] !== e.v[r][0] || t.v[r][1] !== e.v[r][1] || t.o[r][0] !== e.o[r][0] || t.o[r][1] !== e.o[r][1] || t.i[r][0] !== e.i[r][0] || t.i[r][1] !== e.i[r][1]) return !1;
                    return !0
                })(this.v, t) || (this.v = shapePool.clone(t), this.localShapeCollection.releaseShapes(), this.localShapeCollection.addShape(this.v), this._mdf = !0, this.paths = this.localShapeCollection)
            }

            function r() {
                if (this.elem.globalData.frameId !== this.frameId)
                    if (this.effectsSequence.length)
                        if (this.lock) this.setVValue(this.pv);
                        else {
                            var t, e;
                            this.lock = !0, this._mdf = !1, t = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;
                            var r = this.effectsSequence.length;
                            for (e = 0; e < r; e += 1) t = this.effectsSequence[e](t);
                            this.setVValue(t), this.lock = !1, this.frameId = this.elem.globalData.frameId
                        }
                else this._mdf = !1
            }

            function n(t, e, r) {
                this.propType = "shape", this.comp = t.comp, this.container = t, this.elem = t, this.data = e, this.k = !1, this.kf = !1, this._mdf = !1;
                var i = 3 === r ? e.pt.k : e.ks.k;
                this.v = shapePool.clone(i), this.pv = shapePool.clone(this.v), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.paths.addShape(this.v), this.reset = a, this.effectsSequence = []
            }

            function i(t) {
                this.effectsSequence.push(t), this.container.addDynamicProperty(this)
            }

            function o(t, e, r) {
                this.propType = "shape", this.comp = t.comp, this.elem = t, this.container = t, this.offsetTime = t.data.st, this.keyframes = 3 === r ? e.pt.k : e.ks.k, this.k = !0, this.kf = !0;
                var i = this.keyframes[0].s[0].i.length;
                this.v = shapePool.newElement(), this.v.setPathData(this.keyframes[0].s[0].c, i), this.pv = shapePool.clone(this.v), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.paths.addShape(this.v), this.lastFrame = s, this.reset = a, this._caching = {
                    lastFrame: s,
                    lastIndex: 0
                }, this.effectsSequence = [function() {
                    var t = this.comp.renderedFrame - this.offsetTime,
                        e = this.keyframes[0].t - this.offsetTime,
                        r = this.keyframes[this.keyframes.length - 1].t - this.offsetTime,
                        i = this._caching.lastFrame;
                    return i !== s && (i < e && t < e || r < i && r < t) || (this._caching.lastIndex = i < t ? this._caching.lastIndex : 0, this.interpolateShape(t, this.pv, this._caching)), this._caching.lastFrame = t, this.pv
                }.bind(this)]
            }
            n.prototype.interpolateShape = t, n.prototype.getValue = r, n.prototype.setVValue = e, n.prototype.addEffect = i, o.prototype.getValue = r, o.prototype.interpolateShape = t, o.prototype.setVValue = e, o.prototype.addEffect = i;
            var h = function() {
                    var n = roundCorner;

                    function t(t, e) {
                        this.v = shapePool.newElement(), this.v.setPathData(!0, 4), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.localShapeCollection.addShape(this.v), this.d = e.d, this.elem = t, this.comp = t.comp, this.frameId = -1, this.initDynamicPropertyContainer(t), this.p = PropertyFactory.getProp(t, e.p, 1, 0, this), this.s = PropertyFactory.getProp(t, e.s, 1, 0, this), this.dynamicProperties.length ? this.k = !0 : (this.k = !1, this.convertEllToPath())
                    }
                    return t.prototype = {
                        reset: a,
                        getValue: function() {
                            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertEllToPath())
                        },
                        convertEllToPath: function() {
                            var t = this.p.v[0],
                                e = this.p.v[1],
                                r = this.s.v[0] / 2,
                                i = this.s.v[1] / 2,
                                s = 3 !== this.d,
                                a = this.v;
                            a.v[0][0] = t, a.v[0][1] = e - i, a.v[1][0] = s ? t + r : t - r, a.v[1][1] = e, a.v[2][0] = t, a.v[2][1] = e + i, a.v[3][0] = s ? t - r : t + r, a.v[3][1] = e, a.i[0][0] = s ? t - r * n : t + r * n, a.i[0][1] = e - i, a.i[1][0] = s ? t + r : t - r, a.i[1][1] = e - i * n, a.i[2][0] = s ? t + r * n : t - r * n, a.i[2][1] = e + i, a.i[3][0] = s ? t - r : t + r, a.i[3][1] = e + i * n, a.o[0][0] = s ? t + r * n : t - r * n, a.o[0][1] = e - i, a.o[1][0] = s ? t + r : t - r, a.o[1][1] = e + i * n, a.o[2][0] = s ? t - r * n : t + r * n, a.o[2][1] = e + i, a.o[3][0] = s ? t - r : t + r, a.o[3][1] = e - i * n
                        }
                    }, extendPrototype([DynamicPropertyContainer], t), t
                }(),
                l = function() {
                    function t(t, e) {
                        this.v = shapePool.newElement(), this.v.setPathData(!0, 0), this.elem = t, this.comp = t.comp, this.data = e, this.frameId = -1, this.d = e.d, this.initDynamicPropertyContainer(t), 1 === e.sy ? (this.ir = PropertyFactory.getProp(t, e.ir, 0, 0, this), this.is = PropertyFactory.getProp(t, e.is, 0, .01, this), this.convertToPath = this.convertStarToPath) : this.convertToPath = this.convertPolygonToPath, this.pt = PropertyFactory.getProp(t, e.pt, 0, 0, this), this.p = PropertyFactory.getProp(t, e.p, 1, 0, this), this.r = PropertyFactory.getProp(t, e.r, 0, degToRads, this), this.or = PropertyFactory.getProp(t, e.or, 0, 0, this), this.os = PropertyFactory.getProp(t, e.os, 0, .01, this), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.localShapeCollection.addShape(this.v), this.paths = this.localShapeCollection, this.dynamicProperties.length ? this.k = !0 : (this.k = !1, this.convertToPath())
                    }
                    return t.prototype = {
                        reset: a,
                        getValue: function() {
                            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertToPath())
                        },
                        convertStarToPath: function() {
                            var t, e, r, i, s = 2 * Math.floor(this.pt.v),
                                a = 2 * Math.PI / s,
                                n = !0,
                                o = this.or.v,
                                h = this.ir.v,
                                l = this.os.v,
                                p = this.is.v,
                                m = 2 * Math.PI * o / (2 * s),
                                f = 2 * Math.PI * h / (2 * s),
                                c = -Math.PI / 2;
                            c += this.r.v;
                            var d = 3 === this.data.d ? -1 : 1;
                            for (t = this.v._length = 0; t < s; t += 1) {
                                r = n ? l : p, i = n ? m : f;
                                var u = (e = n ? o : h) * Math.cos(c),
                                    y = e * Math.sin(c),
                                    g = 0 === u && 0 === y ? 0 : y / Math.sqrt(u * u + y * y),
                                    v = 0 === u && 0 === y ? 0 : -u / Math.sqrt(u * u + y * y);
                                u += +this.p.v[0], y += +this.p.v[1], this.v.setTripleAt(u, y, u - g * i * r * d, y - v * i * r * d, u + g * i * r * d, y + v * i * r * d, t, !0), n = !n, c += a * d
                            }
                        },
                        convertPolygonToPath: function() {
                            var t, e = Math.floor(this.pt.v),
                                r = 2 * Math.PI / e,
                                i = this.or.v,
                                s = this.os.v,
                                a = 2 * Math.PI * i / (4 * e),
                                n = .5 * -Math.PI,
                                o = 3 === this.data.d ? -1 : 1;
                            for (n += this.r.v, t = this.v._length = 0; t < e; t += 1) {
                                var h = i * Math.cos(n),
                                    l = i * Math.sin(n),
                                    p = 0 === h && 0 === l ? 0 : l / Math.sqrt(h * h + l * l),
                                    m = 0 === h && 0 === l ? 0 : -h / Math.sqrt(h * h + l * l);
                                h += +this.p.v[0], l += +this.p.v[1], this.v.setTripleAt(h, l, h - p * a * s * o, l - m * a * s * o, h + p * a * s * o, l + m * a * s * o, t, !0), n += r * o
                            }
                            this.paths.length = 0, this.paths[0] = this.v
                        }
                    }, extendPrototype([DynamicPropertyContainer], t), t
                }(),
                p = function() {
                    function t(t, e) {
                        this.v = shapePool.newElement(), this.v.c = !0, this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.localShapeCollection.addShape(this.v), this.paths = this.localShapeCollection, this.elem = t, this.comp = t.comp, this.frameId = -1, this.d = e.d, this.initDynamicPropertyContainer(t), this.p = PropertyFactory.getProp(t, e.p, 1, 0, this), this.s = PropertyFactory.getProp(t, e.s, 1, 0, this), this.r = PropertyFactory.getProp(t, e.r, 0, 0, this), this.dynamicProperties.length ? this.k = !0 : (this.k = !1, this.convertRectToPath())
                    }
                    return t.prototype = {
                        convertRectToPath: function() {
                            var t = this.p.v[0],
                                e = this.p.v[1],
                                r = this.s.v[0] / 2,
                                i = this.s.v[1] / 2,
                                s = bmMin(r, i, this.r.v),
                                a = s * (1 - roundCorner);
                            this.v._length = 0, 2 === this.d || 1 === this.d ? (this.v.setTripleAt(t + r, e - i + s, t + r, e - i + s, t + r, e - i + a, 0, !0), this.v.setTripleAt(t + r, e + i - s, t + r, e + i - a, t + r, e + i - s, 1, !0), 0 !== s ? (this.v.setTripleAt(t + r - s, e + i, t + r - s, e + i, t + r - a, e + i, 2, !0), this.v.setTripleAt(t - r + s, e + i, t - r + a, e + i, t - r + s, e + i, 3, !0), this.v.setTripleAt(t - r, e + i - s, t - r, e + i - s, t - r, e + i - a, 4, !0), this.v.setTripleAt(t - r, e - i + s, t - r, e - i + a, t - r, e - i + s, 5, !0), this.v.setTripleAt(t - r + s, e - i, t - r + s, e - i, t - r + a, e - i, 6, !0), this.v.setTripleAt(t + r - s, e - i, t + r - a, e - i, t + r - s, e - i, 7, !0)) : (this.v.setTripleAt(t - r, e + i, t - r + a, e + i, t - r, e + i, 2), this.v.setTripleAt(t - r, e - i, t - r, e - i + a, t - r, e - i, 3))) : (this.v.setTripleAt(t + r, e - i + s, t + r, e - i + a, t + r, e - i + s, 0, !0), 0 !== s ? (this.v.setTripleAt(t + r - s, e - i, t + r - s, e - i, t + r - a, e - i, 1, !0), this.v.setTripleAt(t - r + s, e - i, t - r + a, e - i, t - r + s, e - i, 2, !0), this.v.setTripleAt(t - r, e - i + s, t - r, e - i + s, t - r, e - i + a, 3, !0), this.v.setTripleAt(t - r, e + i - s, t - r, e + i - a, t - r, e + i - s, 4, !0), this.v.setTripleAt(t - r + s, e + i, t - r + s, e + i, t - r + a, e + i, 5, !0), this.v.setTripleAt(t + r - s, e + i, t + r - a, e + i, t + r - s, e + i, 6, !0), this.v.setTripleAt(t + r, e + i - s, t + r, e + i - s, t + r, e + i - a, 7, !0)) : (this.v.setTripleAt(t - r, e - i, t - r + a, e - i, t - r, e - i, 1, !0), this.v.setTripleAt(t - r, e + i, t - r, e + i - a, t - r, e + i, 2, !0), this.v.setTripleAt(t + r, e + i, t + r - a, e + i, t + r, e + i, 3, !0)))
                        },
                        getValue: function() {
                            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertRectToPath())
                        },
                        reset: a
                    }, extendPrototype([DynamicPropertyContainer], t), t
                }();
            var m = {
                getShapeProp: function(t, e, r) {
                    var i;
                    return 3 === r || 4 === r ? i = (3 === r ? e.pt : e.ks).k.length ? new o(t, e, r) : new n(t, e, r) : 5 === r ? i = new p(t, e) : 6 === r ? i = new h(t, e) : 7 === r && (i = new l(t, e)), i.k && t.addDynamicProperty(i), i
                },
                getConstructorFunction: function() {
                    return n
                },
                getKeyframedConstructorFunction: function() {
                    return o
                }
            };
            return m
        }(),
        ShapeModifiers = (gs = {}, hs = {}, gs.registerModifier = function(t, e) {
            hs[t] || (hs[t] = e)
        }, gs.getModifier = function(t, e, r) {
            return new hs[t](e, r)
        }, gs),
        gs, hs;

    function ShapeModifier() {}

    function TrimModifier() {}

    function RoundCornersModifier() {}

    function PuckerAndBloatModifier() {}

    function RepeaterModifier() {}

    function ShapeCollection() {
        this._length = 0, this._maxLength = 4, this.shapes = createSizedArray(this._maxLength)
    }

    function DashProperty(t, e, r, i) {
        var s;
        this.elem = t, this.frameId = -1, this.dataProps = createSizedArray(e.length), this.renderer = r, this.k = !1, this.dashStr = "", this.dashArray = createTypedArray("float32", e.length ? e.length - 1 : 0), this.dashoffset = createTypedArray("float32", 1), this.initDynamicPropertyContainer(i);
        var a, n = e.length || 0;
        for (s = 0; s < n; s += 1) a = PropertyFactory.getProp(t, e[s].v, 0, 0, this), this.k = a.k || this.k, this.dataProps[s] = {
            n: e[s].n,
            p: a
        };
        this.k || this.getValue(!0), this._isAnimated = this.k
    }

    function GradientProperty(t, e, r) {
        this.data = e, this.c = createTypedArray("uint8c", 4 * e.p);
        var i = e.k.k[0].s ? e.k.k[0].s.length - 4 * e.p : e.k.k.length - 4 * e.p;
        this.o = createTypedArray("float32", i), this._cmdf = !1, this._omdf = !1, this._collapsable = this.checkCollapsable(), this._hasOpacity = i, this.initDynamicPropertyContainer(r), this.prop = PropertyFactory.getProp(t, e.k, 1, null, this), this.k = this.prop.k, this.getValue(!0)
    }
    ShapeModifier.prototype.initModifierProperties = function() {}, ShapeModifier.prototype.addShapeToModifier = function() {}, ShapeModifier.prototype.addShape = function(t) {
        if (!this.closed) {
            t.sh.container.addDynamicProperty(t.sh);
            var e = {
                shape: t.sh,
                data: t,
                localShapeCollection: shapeCollectionPool.newShapeCollection()
            };
            this.shapes.push(e), this.addShapeToModifier(e), this._isAnimated && t.setAsAnimated()
        }
    }, ShapeModifier.prototype.init = function(t, e) {
        this.shapes = [], this.elem = t, this.initDynamicPropertyContainer(t), this.initModifierProperties(t, e), this.frameId = initialDefaultFrame, this.closed = !1, this.k = !1, this.dynamicProperties.length ? this.k = !0 : this.getValue(!0)
    }, ShapeModifier.prototype.processKeys = function() {
        this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties())
    }, extendPrototype([DynamicPropertyContainer], ShapeModifier), extendPrototype([ShapeModifier], TrimModifier), TrimModifier.prototype.initModifierProperties = function(t, e) {
        this.s = PropertyFactory.getProp(t, e.s, 0, .01, this), this.e = PropertyFactory.getProp(t, e.e, 0, .01, this), this.o = PropertyFactory.getProp(t, e.o, 0, 0, this), this.sValue = 0, this.eValue = 0, this.getValue = this.processKeys, this.m = e.m, this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length
    }, TrimModifier.prototype.addShapeToModifier = function(t) {
        t.pathsData = []
    }, TrimModifier.prototype.calculateShapeEdges = function(t, e, r, i, s) {
        var a = [];
        e <= 1 ? a.push({
            s: t,
            e: e
        }) : 1 <= t ? a.push({
            s: t - 1,
            e: e - 1
        }) : (a.push({
            s: t,
            e: 1
        }), a.push({
            s: 0,
            e: e - 1
        }));
        var n, o, h = [],
            l = a.length;
        for (n = 0; n < l; n += 1) {
            var p, m;
            if (!((o = a[n]).e * s < i || o.s * s > i + r)) p = o.s * s <= i ? 0 : (o.s * s - i) / r, m = o.e * s >= i + r ? 1 : (o.e * s - i) / r, h.push([p, m])
        }
        return h.length || h.push([0, 0]), h
    }, TrimModifier.prototype.releasePathsData = function(t) {
        var e, r = t.length;
        for (e = 0; e < r; e += 1) segmentsLengthPool.release(t[e]);
        return t.length = 0, t
    }, TrimModifier.prototype.processShapes = function(t) {
        var e, r, i, s;
        if (this._mdf || t) {
            var a = this.o.v % 360 / 360;
            if (a < 0 && (a += 1), e = 1 < this.s.v ? 1 + a : this.s.v < 0 ? 0 + a : this.s.v + a, (r = 1 < this.e.v ? 1 + a : this.e.v < 0 ? 0 + a : this.e.v + a) < e) {
                var n = e;
                e = r, r = n
            }
            e = 1e-4 * Math.round(1e4 * e), r = 1e-4 * Math.round(1e4 * r), this.sValue = e, this.eValue = r
        } else e = this.sValue, r = this.eValue;
        var o, h, l, p, m, f = this.shapes.length,
            c = 0;
        if (r === e)
            for (s = 0; s < f; s += 1) this.shapes[s].localShapeCollection.releaseShapes(), this.shapes[s].shape._mdf = !0, this.shapes[s].shape.paths = this.shapes[s].localShapeCollection, this._mdf && (this.shapes[s].pathsData.length = 0);
        else if (1 === r && 0 === e || 0 === r && 1 === e) {
            if (this._mdf)
                for (s = 0; s < f; s += 1) this.shapes[s].pathsData.length = 0, this.shapes[s].shape._mdf = !0
        } else {
            var d, u, y = [];
            for (s = 0; s < f; s += 1)
                if ((d = this.shapes[s]).shape._mdf || this._mdf || t || 2 === this.m) {
                    if (h = (i = d.shape.paths)._length, m = 0, !d.shape._mdf && d.pathsData.length) m = d.totalShapeLength;
                    else {
                        for (l = this.releasePathsData(d.pathsData), o = 0; o < h; o += 1) p = bez.getSegmentsLength(i.shapes[o]), l.push(p), m += p.totalLength;
                        d.totalShapeLength = m, d.pathsData = l
                    }
                    c += m, d.shape._mdf = !0
                } else d.shape.paths = d.localShapeCollection;
            var g, v = e,
                b = r,
                P = 0;
            for (s = f - 1; 0 <= s; s -= 1)
                if ((d = this.shapes[s]).shape._mdf) {
                    for ((u = d.localShapeCollection).releaseShapes(), 2 === this.m && 1 < f ? (g = this.calculateShapeEdges(e, r, d.totalShapeLength, P, c), P += d.totalShapeLength) : g = [
                            [v, b]
                        ], h = g.length, o = 0; o < h; o += 1) {
                        v = g[o][0], b = g[o][1], y.length = 0, b <= 1 ? y.push({
                            s: d.totalShapeLength * v,
                            e: d.totalShapeLength * b
                        }) : 1 <= v ? y.push({
                            s: d.totalShapeLength * (v - 1),
                            e: d.totalShapeLength * (b - 1)
                        }) : (y.push({
                            s: d.totalShapeLength * v,
                            e: d.totalShapeLength
                        }), y.push({
                            s: 0,
                            e: d.totalShapeLength * (b - 1)
                        }));
                        var E = this.addShapes(d, y[0]);
                        if (y[0].s !== y[0].e) {
                            if (1 < y.length)
                                if (d.shape.paths.shapes[d.shape.paths._length - 1].c) {
                                    var x = E.pop();
                                    this.addPaths(E, u), E = this.addShapes(d, y[1], x)
                                } else this.addPaths(E, u), E = this.addShapes(d, y[1]);
                            this.addPaths(E, u)
                        }
                    }
                    d.shape.paths = u
                }
        }
    }, TrimModifier.prototype.addPaths = function(t, e) {
        var r, i = t.length;
        for (r = 0; r < i; r += 1) e.addShape(t[r])
    }, TrimModifier.prototype.addSegment = function(t, e, r, i, s, a, n) {
        s.setXYAt(e[0], e[1], "o", a), s.setXYAt(r[0], r[1], "i", a + 1), n && s.setXYAt(t[0], t[1], "v", a), s.setXYAt(i[0], i[1], "v", a + 1)
    }, TrimModifier.prototype.addSegmentFromArray = function(t, e, r, i) {
        e.setXYAt(t[1], t[5], "o", r), e.setXYAt(t[2], t[6], "i", r + 1), i && e.setXYAt(t[0], t[4], "v", r), e.setXYAt(t[3], t[7], "v", r + 1)
    }, TrimModifier.prototype.addShapes = function(t, e, r) {
        var i, s, a, n, o, h, l, p, m = t.pathsData,
            f = t.shape.paths.shapes,
            c = t.shape.paths._length,
            d = 0,
            u = [],
            y = !0;
        for (p = r ? (o = r._length, r._length) : (r = shapePool.newElement(), o = 0), u.push(r), i = 0; i < c; i += 1) {
            for (h = m[i].lengths, r.c = f[i].c, a = f[i].c ? h.length : h.length + 1, s = 1; s < a; s += 1)
                if (d + (n = h[s - 1]).addedLength < e.s) d += n.addedLength, r.c = !1;
                else {
                    if (d > e.e) {
                        r.c = !1;
                        break
                    }
                    e.s <= d && e.e >= d + n.addedLength ? (this.addSegment(f[i].v[s - 1], f[i].o[s - 1], f[i].i[s], f[i].v[s], r, o, y), y = !1) : (l = bez.getNewSegment(f[i].v[s - 1], f[i].v[s], f[i].o[s - 1], f[i].i[s], (e.s - d) / n.addedLength, (e.e - d) / n.addedLength, h[s - 1]), this.addSegmentFromArray(l, r, o, y), y = !1, r.c = !1), d += n.addedLength, o += 1
                }
            if (f[i].c && h.length) {
                if (n = h[s - 1], d <= e.e) {
                    var g = h[s - 1].addedLength;
                    e.s <= d && e.e >= d + g ? (this.addSegment(f[i].v[s - 1], f[i].o[s - 1], f[i].i[0], f[i].v[0], r, o, y), y = !1) : (l = bez.getNewSegment(f[i].v[s - 1], f[i].v[0], f[i].o[s - 1], f[i].i[0], (e.s - d) / g, (e.e - d) / g, h[s - 1]), this.addSegmentFromArray(l, r, o, y), y = !1, r.c = !1)
                } else r.c = !1;
                d += n.addedLength, o += 1
            }
            if (r._length && (r.setXYAt(r.v[p][0], r.v[p][1], "i", p), r.setXYAt(r.v[r._length - 1][0], r.v[r._length - 1][1], "o", r._length - 1)), d > e.e) break;
            i < c - 1 && (r = shapePool.newElement(), y = !0, u.push(r), o = 0)
        }
        return u
    }, ShapeModifiers.registerModifier("tm", TrimModifier), extendPrototype([ShapeModifier], RoundCornersModifier), RoundCornersModifier.prototype.initModifierProperties = function(t, e) {
        this.getValue = this.processKeys, this.rd = PropertyFactory.getProp(t, e.r, 0, null, this), this._isAnimated = !!this.rd.effectsSequence.length
    }, RoundCornersModifier.prototype.processPath = function(t, e) {
        var r, i = shapePool.newElement();
        i.c = t.c;
        var s, a, n, o, h, l, p, m, f, c, d, u, y = t._length,
            g = 0;
        for (r = 0; r < y; r += 1) s = t.v[r], n = t.o[r], a = t.i[r], s[0] === n[0] && s[1] === n[1] && s[0] === a[0] && s[1] === a[1] ? 0 !== r && r !== y - 1 || t.c ? (o = 0 === r ? t.v[y - 1] : t.v[r - 1], l = (h = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0, p = d = s[0] + (o[0] - s[0]) * l, m = u = s[1] - (s[1] - o[1]) * l, f = p - (p - s[0]) * roundCorner, c = m - (m - s[1]) * roundCorner, i.setTripleAt(p, m, f, c, d, u, g), g += 1, o = r === y - 1 ? t.v[0] : t.v[r + 1], l = (h = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0, p = f = s[0] + (o[0] - s[0]) * l, m = c = s[1] + (o[1] - s[1]) * l, d = p - (p - s[0]) * roundCorner, u = m - (m - s[1]) * roundCorner, i.setTripleAt(p, m, f, c, d, u, g)) : i.setTripleAt(s[0], s[1], n[0], n[1], a[0], a[1], g) : i.setTripleAt(t.v[r][0], t.v[r][1], t.o[r][0], t.o[r][1], t.i[r][0], t.i[r][1], g), g += 1;
        return i
    }, RoundCornersModifier.prototype.processShapes = function(t) {
        var e, r, i, s, a, n, o = this.shapes.length,
            h = this.rd.v;
        if (0 !== h)
            for (r = 0; r < o; r += 1) {
                if (n = (a = this.shapes[r]).localShapeCollection, a.shape._mdf || this._mdf || t)
                    for (n.releaseShapes(), a.shape._mdf = !0, e = a.shape.paths.shapes, s = a.shape.paths._length, i = 0; i < s; i += 1) n.addShape(this.processPath(e[i], h));
                a.shape.paths = a.localShapeCollection
            }
        this.dynamicProperties.length || (this._mdf = !1)
    }, ShapeModifiers.registerModifier("rd", RoundCornersModifier), extendPrototype([ShapeModifier], PuckerAndBloatModifier), PuckerAndBloatModifier.prototype.initModifierProperties = function(t, e) {
        this.getValue = this.processKeys, this.amount = PropertyFactory.getProp(t, e.a, 0, null, this), this._isAnimated = !!this.amount.effectsSequence.length
    }, PuckerAndBloatModifier.prototype.processPath = function(t, e) {
        var r = e / 100,
            i = [0, 0],
            s = t._length,
            a = 0;
        for (a = 0; a < s; a += 1) i[0] += t.v[a][0], i[1] += t.v[a][1];
        i[0] /= s, i[1] /= s;
        var n, o, h, l, p, m, f = shapePool.newElement();
        for (f.c = t.c, a = 0; a < s; a += 1) n = t.v[a][0] + (i[0] - t.v[a][0]) * r, o = t.v[a][1] + (i[1] - t.v[a][1]) * r, h = t.o[a][0] + (i[0] - t.o[a][0]) * -r, l = t.o[a][1] + (i[1] - t.o[a][1]) * -r, p = t.i[a][0] + (i[0] - t.i[a][0]) * -r, m = t.i[a][1] + (i[1] - t.i[a][1]) * -r, f.setTripleAt(n, o, h, l, p, m, a);
        return f
    }, PuckerAndBloatModifier.prototype.processShapes = function(t) {
        var e, r, i, s, a, n, o = this.shapes.length,
            h = this.amount.v;
        if (0 !== h)
            for (r = 0; r < o; r += 1) {
                if (n = (a = this.shapes[r]).localShapeCollection, a.shape._mdf || this._mdf || t)
                    for (n.releaseShapes(), a.shape._mdf = !0, e = a.shape.paths.shapes, s = a.shape.paths._length, i = 0; i < s; i += 1) n.addShape(this.processPath(e[i], h));
                a.shape.paths = a.localShapeCollection
            }
        this.dynamicProperties.length || (this._mdf = !1)
    }, ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier), extendPrototype([ShapeModifier], RepeaterModifier), RepeaterModifier.prototype.initModifierProperties = function(t, e) {
        this.getValue = this.processKeys, this.c = PropertyFactory.getProp(t, e.c, 0, null, this), this.o = PropertyFactory.getProp(t, e.o, 0, null, this), this.tr = TransformPropertyFactory.getTransformProperty(t, e.tr, this), this.so = PropertyFactory.getProp(t, e.tr.so, 0, .01, this), this.eo = PropertyFactory.getProp(t, e.tr.eo, 0, .01, this), this.data = e, this.dynamicProperties.length || this.getValue(!0), this._isAnimated = !!this.dynamicProperties.length, this.pMatrix = new Matrix, this.rMatrix = new Matrix, this.sMatrix = new Matrix, this.tMatrix = new Matrix, this.matrix = new Matrix
    }, RepeaterModifier.prototype.applyTransforms = function(t, e, r, i, s, a) {
        var n = a ? -1 : 1,
            o = i.s.v[0] + (1 - i.s.v[0]) * (1 - s),
            h = i.s.v[1] + (1 - i.s.v[1]) * (1 - s);
        t.translate(i.p.v[0] * n * s, i.p.v[1] * n * s, i.p.v[2]), e.translate(-i.a.v[0], -i.a.v[1], i.a.v[2]), e.rotate(-i.r.v * n * s), e.translate(i.a.v[0], i.a.v[1], i.a.v[2]), r.translate(-i.a.v[0], -i.a.v[1], i.a.v[2]), r.scale(a ? 1 / o : o, a ? 1 / h : h), r.translate(i.a.v[0], i.a.v[1], i.a.v[2])
    }, RepeaterModifier.prototype.init = function(t, e, r, i) {
        for (this.elem = t, this.arr = e, this.pos = r, this.elemsData = i, this._currentCopies = 0, this._elements = [], this._groups = [], this.frameId = -1, this.initDynamicPropertyContainer(t), this.initModifierProperties(t, e[r]); 0 < r;) r -= 1, this._elements.unshift(e[r]);
        this.dynamicProperties.length ? this.k = !0 : this.getValue(!0)
    }, RepeaterModifier.prototype.resetElements = function(t) {
        var e, r = t.length;
        for (e = 0; e < r; e += 1) t[e]._processed = !1, "gr" === t[e].ty && this.resetElements(t[e].it)
    }, RepeaterModifier.prototype.cloneElements = function(t) {
        var e = JSON.parse(JSON.stringify(t));
        return this.resetElements(e), e
    }, RepeaterModifier.prototype.changeGroupRender = function(t, e) {
        var r, i = t.length;
        for (r = 0; r < i; r += 1) t[r]._render = e, "gr" === t[r].ty && this.changeGroupRender(t[r].it, e)
    }, RepeaterModifier.prototype.processShapes = function(t) {
        var e, r, i, s, a, n = !1;
        if (this._mdf || t) {
            var o, h = Math.ceil(this.c.v);
            if (this._groups.length < h) {
                for (; this._groups.length < h;) {
                    var l = {
                        it: this.cloneElements(this._elements),
                        ty: "gr"
                    };
                    l.it.push({
                        a: {
                            a: 0,
                            ix: 1,
                            k: [0, 0]
                        },
                        nm: "Transform",
                        o: {
                            a: 0,
                            ix: 7,
                            k: 100
                        },
                        p: {
                            a: 0,
                            ix: 2,
                            k: [0, 0]
                        },
                        r: {
                            a: 1,
                            ix: 6,
                            k: [{
                                s: 0,
                                e: 0,
                                t: 0
                            }, {
                                s: 0,
                                e: 0,
                                t: 1
                            }]
                        },
                        s: {
                            a: 0,
                            ix: 3,
                            k: [100, 100]
                        },
                        sa: {
                            a: 0,
                            ix: 5,
                            k: 0
                        },
                        sk: {
                            a: 0,
                            ix: 4,
                            k: 0
                        },
                        ty: "tr"
                    }), this.arr.splice(0, 0, l), this._groups.splice(0, 0, l), this._currentCopies += 1
                }
                this.elem.reloadShapes(), n = !0
            }
            for (i = a = 0; i <= this._groups.length - 1; i += 1) {
                if (o = a < h, this._groups[i]._render = o, this.changeGroupRender(this._groups[i].it, o), !o) {
                    var p = this.elemsData[i].it,
                        m = p[p.length - 1];
                    0 !== m.transform.op.v ? (m.transform.op._mdf = !0, m.transform.op.v = 0) : m.transform.op._mdf = !1
                }
                a += 1
            }
            this._currentCopies = h;
            var f = this.o.v,
                c = f % 1,
                d = 0 < f ? Math.floor(f) : Math.ceil(f),
                u = this.pMatrix.props,
                y = this.rMatrix.props,
                g = this.sMatrix.props;
            this.pMatrix.reset(), this.rMatrix.reset(), this.sMatrix.reset(), this.tMatrix.reset(), this.matrix.reset();
            var v, b, P = 0;
            if (0 < f) {
                for (; P < d;) this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1), P += 1;
                c && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, c, !1), P += c)
            } else if (f < 0) {
                for (; d < P;) this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !0), P -= 1;
                c && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -c, !0), P -= c)
            }
            for (i = 1 === this.data.m ? 0 : this._currentCopies - 1, s = 1 === this.data.m ? 1 : -1, a = this._currentCopies; a;) {
                if (b = (r = (e = this.elemsData[i].it)[e.length - 1].transform.mProps.v.props).length, e[e.length - 1].transform.mProps._mdf = !0, e[e.length - 1].transform.op._mdf = !0, e[e.length - 1].transform.op.v = 1 === this._currentCopies ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1)), 0 !== P) {
                    for ((0 !== i && 1 === s || i !== this._currentCopies - 1 && -1 === s) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1), this.matrix.transform(y[0], y[1], y[2], y[3], y[4], y[5], y[6], y[7], y[8], y[9], y[10], y[11], y[12], y[13], y[14], y[15]), this.matrix.transform(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]), this.matrix.transform(u[0], u[1], u[2], u[3], u[4], u[5], u[6], u[7], u[8], u[9], u[10], u[11], u[12], u[13], u[14], u[15]), v = 0; v < b; v += 1) r[v] = this.matrix.props[v];
                    this.matrix.reset()
                } else
                    for (this.matrix.reset(), v = 0; v < b; v += 1) r[v] = this.matrix.props[v];
                P += 1, a -= 1, i += s
            }
        } else
            for (a = this._currentCopies, i = 0, s = 1; a;) r = (e = this.elemsData[i].it)[e.length - 1].transform.mProps.v.props, e[e.length - 1].transform.mProps._mdf = !1, e[e.length - 1].transform.op._mdf = !1, a -= 1, i += s;
        return n
    }, RepeaterModifier.prototype.addShape = function() {}, ShapeModifiers.registerModifier("rp", RepeaterModifier), ShapeCollection.prototype.addShape = function(t) {
        this._length === this._maxLength && (this.shapes = this.shapes.concat(createSizedArray(this._maxLength)), this._maxLength *= 2), this.shapes[this._length] = t, this._length += 1
    }, ShapeCollection.prototype.releaseShapes = function() {
        var t;
        for (t = 0; t < this._length; t += 1) shapePool.release(this.shapes[t]);
        this._length = 0
    }, DashProperty.prototype.getValue = function(t) {
        if ((this.elem.globalData.frameId !== this.frameId || t) && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf = this._mdf || t, this._mdf)) {
            var e = 0,
                r = this.dataProps.length;
            for ("svg" === this.renderer && (this.dashStr = ""), e = 0; e < r; e += 1) "o" !== this.dataProps[e].n ? "svg" === this.renderer ? this.dashStr += " " + this.dataProps[e].p.v : this.dashArray[e] = this.dataProps[e].p.v : this.dashoffset[0] = this.dataProps[e].p.v
        }
    }, extendPrototype([DynamicPropertyContainer], DashProperty), GradientProperty.prototype.comparePoints = function(t, e) {
        for (var r = 0, i = this.o.length / 2; r < i;) {
            if (.01 < Math.abs(t[4 * r] - t[4 * e + 2 * r])) return !1;
            r += 1
        }
        return !0
    }, GradientProperty.prototype.checkCollapsable = function() {
        if (this.o.length / 2 != this.c.length / 4) return !1;
        if (this.data.k.k[0].s)
            for (var t = 0, e = this.data.k.k.length; t < e;) {
                if (!this.comparePoints(this.data.k.k[t].s, this.data.p)) return !1;
                t += 1
            } else if (!this.comparePoints(this.data.k.k, this.data.p)) return !1;
        return !0
    }, GradientProperty.prototype.getValue = function(t) {
        if (this.prop.getValue(), this._mdf = !1, this._cmdf = !1, this._omdf = !1, this.prop._mdf || t) {
            var e, r, i, s = 4 * this.data.p;
            for (e = 0; e < s; e += 1) r = e % 4 == 0 ? 100 : 255, i = Math.round(this.prop.v[e] * r), this.c[e] !== i && (this.c[e] = i, this._cmdf = !t);
            if (this.o.length)
                for (s = this.prop.v.length, e = 4 * this.data.p; e < s; e += 1) r = e % 2 == 0 ? 100 : 1, i = e % 2 == 0 ? Math.round(100 * this.prop.v[e]) : this.prop.v[e], this.o[e - 4 * this.data.p] !== i && (this.o[e - 4 * this.data.p] = i, this._omdf = !t);
            this._mdf = !t
        }
    }, extendPrototype([DynamicPropertyContainer], GradientProperty);
    var buildShapeString = function(t, e, r, i) {
            if (0 === e) return "";
            var s, a = t.o,
                n = t.i,
                o = t.v,
                h = " M" + i.applyToPointStringified(o[0][0], o[0][1]);
            for (s = 1; s < e; s += 1) h += " C" + i.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + i.applyToPointStringified(n[s][0], n[s][1]) + " " + i.applyToPointStringified(o[s][0], o[s][1]);
            return r && e && (h += " C" + i.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + i.applyToPointStringified(n[0][0], n[0][1]) + " " + i.applyToPointStringified(o[0][0], o[0][1]), h += "z"), h
        },
        audioControllerFactory = function() {
            function t(t) {
                this.audios = [], this.audioFactory = t, this._volume = 1, this._isMuted = !1
            }
            return t.prototype = {
                    addAudio: function(t) {
                        this.audios.push(t)
                    },
                    pause: function() {
                        var t, e = this.audios.length;
                        for (t = 0; t < e; t += 1) this.audios[t].pause()
                    },
                    resume: function() {
                        var t, e = this.audios.length;
                        for (t = 0; t < e; t += 1) this.audios[t].resume()
                    },
                    setRate: function(t) {
                        var e, r = this.audios.length;
                        for (e = 0; e < r; e += 1) this.audios[e].setRate(t)
                    },
                    createAudio: function(t) {
                        return this.audioFactory ? this.audioFactory(t) : Howl ? new Howl({
                            src: [t]
                        }) : {
                            isPlaying: !1,
                            play: function() {
                                this.isPlaying = !0
                            },
                            seek: function() {
                                this.isPlaying = !1
                            },
                            playing: function() {},
                            rate: function() {},
                            setVolume: function() {}
                        }
                    },
                    setAudioFactory: function(t) {
                        this.audioFactory = t
                    },
                    setVolume: function(t) {
                        this._volume = t, this._updateVolume()
                    },
                    mute: function() {
                        this._isMuted = !0, this._updateVolume()
                    },
                    unmute: function() {
                        this._isMuted = !1, this._updateVolume()
                    },
                    getVolume: function() {
                        return this._volume
                    },
                    _updateVolume: function() {
                        var t, e = this.audios.length;
                        for (t = 0; t < e; t += 1) this.audios[t].volume(this._volume * (this._isMuted ? 0 : 1))
                    }
                },
                function() {
                    return new t
                }
        }(),
        ImagePreloader = function() {
            var s = function() {
                var t = createTag("canvas");
                t.width = 1, t.height = 1;
                var e = t.getContext("2d");
                return e.fillStyle = "rgba(0,0,0,0)", e.fillRect(0, 0, 1, 1), t
            }();

            function t() {
                this.loadedAssets += 1, this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null)
            }

            function e() {
                this.loadedFootagesCount += 1, this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null)
            }

            function a(t, e, r) {
                var i = "";
                if (t.e) i = t.p;
                else if (e) {
                    var s = t.p; - 1 !== s.indexOf("images/") && (s = s.split("/")[1]), i = e + s
                } else i = r, i += t.u ? t.u : "", i += t.p;
                return i
            }

            function r() {
                this._imageLoaded = t.bind(this), this._footageLoaded = e.bind(this), this.testImageLoaded = function(t) {
                    var e = 0,
                        r = setInterval(function() {
                            (t.getBBox().width || 500 < e) && (this._imageLoaded(), clearInterval(r)), e += 1
                        }.bind(this), 50)
                }.bind(this), this.createFootageData = function(t) {
                    var e = {
                            assetData: t
                        },
                        r = a(t, this.assetsPath, this.path);
                    return assetLoader.load(r, function(t) {
                        e.img = t, this._footageLoaded()
                    }.bind(this), function() {
                        e.img = {}, this._footageLoaded()
                    }.bind(this)), e
                }.bind(this), this.assetsPath = "", this.path = "", this.totalImages = 0, this.totalFootages = 0, this.loadedAssets = 0, this.loadedFootagesCount = 0, this.imagesLoadedCb = null, this.images = []
            }
            return r.prototype = {
                loadAssets: function(t, e) {
                    var r;
                    this.imagesLoadedCb = e;
                    var i = t.length;
                    for (r = 0; r < i; r += 1) t[r].layers || (t[r].t && "seq" !== t[r].t ? 3 === t[r].t && (this.totalFootages += 1, this.images.push(this.createFootageData(t[r]))) : (this.totalImages += 1, this.images.push(this._createImageData(t[r]))))
                },
                setAssetsPath: function(t) {
                    this.assetsPath = t || ""
                },
                setPath: function(t) {
                    this.path = t || ""
                },
                loadedImages: function() {
                    return this.totalImages === this.loadedAssets
                },
                loadedFootages: function() {
                    return this.totalFootages === this.loadedFootagesCount
                },
                destroy: function() {
                    this.imagesLoadedCb = null, this.images.length = 0
                },
                getAsset: function(t) {
                    for (var e = 0, r = this.images.length; e < r;) {
                        if (this.images[e].assetData === t) return this.images[e].img;
                        e += 1
                    }
                    return null
                },
                createImgData: function(t) {
                    var e = a(t, this.assetsPath, this.path),
                        r = createTag("img");
                    r.crossOrigin = "anonymous", r.addEventListener("load", this._imageLoaded, !1), r.addEventListener("error", function() {
                        i.img = s, this._imageLoaded()
                    }.bind(this), !1), r.src = e;
                    var i = {
                        img: r,
                        assetData: t
                    };
                    return i
                },
                createImageData: function(t) {
                    var e = a(t, this.assetsPath, this.path),
                        r = createNS("image");
                    isSafari ? this.testImageLoaded(r) : r.addEventListener("load", this._imageLoaded, !1), r.addEventListener("error", function() {
                        i.img = s, this._imageLoaded()
                    }.bind(this), !1), r.setAttributeNS("http://www.w3.org/1999/xlink", "href", e), this._elementHelper.append ? this._elementHelper.append(r) : this._elementHelper.appendChild(r);
                    var i = {
                        img: r,
                        assetData: t
                    };
                    return i
                },
                imageLoaded: t,
                footageLoaded: e,
                setCacheType: function(t, e) {
                    this._createImageData = "svg" === t ? (this._elementHelper = e, this.createImageData.bind(this)) : this.createImgData.bind(this)
                }
            }, r
        }(),
        featureSupport = (zx = {
            maskType: !0
        }, (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) && (zx.maskType = !1), zx),
        zx, filtersFactory = (Ax = {}, Ax.createFilter = function(t, e) {
            var r = createNS("filter");
            return r.setAttribute("id", t), !0 !== e && (r.setAttribute("filterUnits", "objectBoundingBox"), r.setAttribute("x", "0%"), r.setAttribute("y", "0%"), r.setAttribute("width", "100%"), r.setAttribute("height", "100%")), r
        }, Ax.createAlphaToLuminanceFilter = function() {
            var t = createNS("feColorMatrix");
            return t.setAttribute("type", "matrix"), t.setAttribute("color-interpolation-filters", "sRGB"), t.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"), t
        }, Ax),
        Ax, assetLoader = function() {
            function a(t) {
                return t.response && "object" == typeof t.response ? t.response : t.response && "string" == typeof t.response ? JSON.parse(t.response) : t.responseText ? JSON.parse(t.responseText) : null
            }
            return {
                load: function(t, e, r) {
                    var i, s = new XMLHttpRequest;
                    try {
                        s.responseType = "json"
                    } catch (t) {}
                    s.onreadystatechange = function() {
                        if (4 === s.readyState)
                            if (200 === s.status) i = a(s), e(i);
                            else try {
                                i = a(s), e(i)
                            } catch (t) {
                                r && r(t)
                            }
                    }, s.open("GET", t, !0), s.send()
                }
            }
        }();

    function TextAnimatorProperty(t, e, r) {
        this._isFirstFrame = !0, this._hasMaskedPath = !1, this._frameId = -1, this._textData = t, this._renderType = e, this._elem = r, this._animatorsData = createSizedArray(this._textData.a.length), this._pathData = {}, this._moreOptions = {
            alignment: {}
        }, this.renderedLetters = [], this.lettersChangedFlag = !1, this.initDynamicPropertyContainer(r)
    }

    function TextAnimatorDataProperty(t, e, r) {
        var i = {
                propType: !1
            },
            s = PropertyFactory.getProp,
            a = e.a;
        this.a = {
            r: a.r ? s(t, a.r, 0, degToRads, r) : i,
            rx: a.rx ? s(t, a.rx, 0, degToRads, r) : i,
            ry: a.ry ? s(t, a.ry, 0, degToRads, r) : i,
            sk: a.sk ? s(t, a.sk, 0, degToRads, r) : i,
            sa: a.sa ? s(t, a.sa, 0, degToRads, r) : i,
            s: a.s ? s(t, a.s, 1, .01, r) : i,
            a: a.a ? s(t, a.a, 1, 0, r) : i,
            o: a.o ? s(t, a.o, 0, .01, r) : i,
            p: a.p ? s(t, a.p, 1, 0, r) : i,
            sw: a.sw ? s(t, a.sw, 0, 0, r) : i,
            sc: a.sc ? s(t, a.sc, 1, 0, r) : i,
            fc: a.fc ? s(t, a.fc, 1, 0, r) : i,
            fh: a.fh ? s(t, a.fh, 0, 0, r) : i,
            fs: a.fs ? s(t, a.fs, 0, .01, r) : i,
            fb: a.fb ? s(t, a.fb, 0, .01, r) : i,
            t: a.t ? s(t, a.t, 0, 0, r) : i
        }, this.s = TextSelectorProp.getTextSelectorProp(t, e.s, r), this.s.t = e.s.t
    }

    function LetterProps(t, e, r, i, s, a) {
        this.o = t, this.sw = e, this.sc = r, this.fc = i, this.m = s, this.p = a, this._mdf = {
            o: !0,
            sw: !!e,
            sc: !!r,
            fc: !!i,
            m: !0,
            p: !0
        }
    }

    function TextProperty(t, e) {
        this._frameId = initialDefaultFrame, this.pv = "", this.v = "", this.kf = !1, this._isFirstFrame = !0, this._mdf = !1, this.data = e, this.elem = t, this.comp = this.elem.comp, this.keysIndex = 0, this.canResize = !1, this.minimumFontSize = 1, this.effectsSequence = [], this.currentData = {
            ascent: 0,
            boxWidth: this.defaultBoxWidth,
            f: "",
            fStyle: "",
            fWeight: "",
            fc: "",
            j: "",
            justifyOffset: "",
            l: [],
            lh: 0,
            lineWidths: [],
            ls: "",
            of: "",
            s: "",
            sc: "",
            sw: 0,
            t: 0,
            tr: 0,
            sz: 0,
            ps: null,
            fillColorAnim: !1,
            strokeColorAnim: !1,
            strokeWidthAnim: !1,
            yOffset: 0,
            finalSize: 0,
            finalText: [],
            finalLineHeight: 0,
            __complete: !1
        }, this.copyData(this.currentData, this.data.d.k[0].s), this.searchProperty() || this.completeTextData(this.currentData)
    }
    TextAnimatorProperty.prototype.searchProperties = function() {
        var t, e, r = this._textData.a.length,
            i = PropertyFactory.getProp;
        for (t = 0; t < r; t += 1) e = this._textData.a[t], this._animatorsData[t] = new TextAnimatorDataProperty(this._elem, e, this);
        this._textData.p && "m" in this._textData.p ? (this._pathData = {
            f: i(this._elem, this._textData.p.f, 0, 0, this),
            l: i(this._elem, this._textData.p.l, 0, 0, this),
            r: this._textData.p.r,
            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
        }, this._hasMaskedPath = !0) : this._hasMaskedPath = !1, this._moreOptions.alignment = i(this._elem, this._textData.m.a, 1, 0, this)
    }, TextAnimatorProperty.prototype.getMeasures = function(t, e) {
        if (this.lettersChangedFlag = e, this._mdf || this._isFirstFrame || e || this._hasMaskedPath && this._pathData.m._mdf) {
            this._isFirstFrame = !1;
            var r, i, s, a, n, o, h, l, p, m, f, c, d, u, y, g, v, b, P, E = this._moreOptions.alignment.v,
                x = this._animatorsData,
                S = this._textData,
                A = this.mHelper,
                C = this._renderType,
                T = this.renderedLetters.length,
                _ = t.l;
            if (this._hasMaskedPath) {
                if (P = this._pathData.m, !this._pathData.n || this._pathData._mdf) {
                    var k, D = P.v;
                    for (this._pathData.r && (D = D.reverse()), n = {
                            tLength: 0,
                            segments: []
                        }, a = D._length - 1, s = g = 0; s < a; s += 1) k = bez.buildBezierData(D.v[s], D.v[s + 1], [D.o[s][0] - D.v[s][0], D.o[s][1] - D.v[s][1]], [D.i[s + 1][0] - D.v[s + 1][0], D.i[s + 1][1] - D.v[s + 1][1]]), n.tLength += k.segmentLength, n.segments.push(k), g += k.segmentLength;
                    s = a, P.v.c && (k = bez.buildBezierData(D.v[s], D.v[0], [D.o[s][0] - D.v[s][0], D.o[s][1] - D.v[s][1]], [D.i[0][0] - D.v[0][0], D.i[0][1] - D.v[0][1]]), n.tLength += k.segmentLength, n.segments.push(k), g += k.segmentLength), this._pathData.pi = n
                }
                if (n = this._pathData.pi, o = this._pathData.f.v, m = 1, p = !(l = f = 0), u = n.segments, o < 0 && P.v.c)
                    for (n.tLength < Math.abs(o) && (o = -Math.abs(o) % n.tLength), m = (d = u[f = u.length - 1].points).length - 1; o < 0;) o += d[m].partialLength, (m -= 1) < 0 && (m = (d = u[f -= 1].points).length - 1);
                c = (d = u[f].points)[m - 1], y = (h = d[m]).partialLength
            }
            a = _.length, i = r = 0;
            var M, F, w, I, V, B = 1.2 * t.finalSize * .714,
                R = !0;
            w = x.length;
            var L, G, z, N, O, H, j, q, W, Y, X, J, K = -1,
                $ = o,
                Z = f,
                U = m,
                Q = -1,
                tt = "",
                et = this.defaultPropsArray;
            if (2 === t.j || 1 === t.j) {
                var rt = 0,
                    it = 0,
                    st = 2 === t.j ? -.5 : -1,
                    at = 0,
                    nt = !0;
                for (s = 0; s < a; s += 1)
                    if (_[s].n) {
                        for (rt && (rt += it); at < s;) _[at].animatorJustifyOffset = rt, at += 1;
                        nt = !(rt = 0)
                    } else {
                        for (F = 0; F < w; F += 1)(M = x[F].a).t.propType && (nt && 2 === t.j && (it += M.t.v * st), (V = x[F].s.getMult(_[s].anIndexes[F], S.a[F].s.totalChars)).length ? rt += M.t.v * V[0] * st : rt += M.t.v * V * st);
                        nt = !1
                    }
                for (rt && (rt += it); at < s;) _[at].animatorJustifyOffset = rt, at += 1
            }
            for (s = 0; s < a; s += 1) {
                if (A.reset(), N = 1, _[s].n) r = 0, i += t.yOffset, i += R ? 1 : 0, o = $, R = !1, this._hasMaskedPath && (m = U, c = (d = u[f = Z].points)[m - 1], y = (h = d[m]).partialLength, l = 0), J = W = X = tt = "", et = this.defaultPropsArray;
                else {
                    if (this._hasMaskedPath) {
                        if (Q !== _[s].line) {
                            switch (t.j) {
                                case 1:
                                    o += g - t.lineWidths[_[s].line];
                                    break;
                                case 2:
                                    o += (g - t.lineWidths[_[s].line]) / 2
                            }
                            Q = _[s].line
                        }
                        K !== _[s].ind && (_[K] && (o += _[K].extra), o += _[s].an / 2, K = _[s].ind), o += E[0] * _[s].an * .005;
                        var ot = 0;
                        for (F = 0; F < w; F += 1)(M = x[F].a).p.propType && ((V = x[F].s.getMult(_[s].anIndexes[F], S.a[F].s.totalChars)).length ? ot += M.p.v[0] * V[0] : ot += M.p.v[0] * V), M.a.propType && ((V = x[F].s.getMult(_[s].anIndexes[F], S.a[F].s.totalChars)).length ? ot += M.a.v[0] * V[0] : ot += M.a.v[0] * V);
                        for (p = !0; p;) o + ot <= l + y || !d ? (v = (o + ot - l) / h.partialLength, G = c.point[0] + (h.point[0] - c.point[0]) * v, z = c.point[1] + (h.point[1] - c.point[1]) * v, A.translate(-E[0] * _[s].an * .005, -E[1] * B * .01), p = !1) : d && (l += h.partialLength, (m += 1) >= d.length && (m = 0, d = u[f += 1] ? u[f].points : P.v.c ? u[f = m = 0].points : (l -= h.partialLength, null)), d && (c = h, y = (h = d[m]).partialLength));
                        L = _[s].an / 2 - _[s].add, A.translate(-L, 0, 0)
                    } else L = _[s].an / 2 - _[s].add, A.translate(-L, 0, 0), A.translate(-E[0] * _[s].an * .005, -E[1] * B * .01, 0);
                    for (F = 0; F < w; F += 1)(M = x[F].a).t.propType && (V = x[F].s.getMult(_[s].anIndexes[F], S.a[F].s.totalChars), 0 === r && 0 === t.j || (this._hasMaskedPath ? V.length ? o += M.t.v * V[0] : o += M.t.v * V : V.length ? r += M.t.v * V[0] : r += M.t.v * V));
                    for (t.strokeWidthAnim && (H = t.sw || 0), t.strokeColorAnim && (O = t.sc ? [t.sc[0], t.sc[1], t.sc[2]] : [0, 0, 0]), t.fillColorAnim && t.fc && (j = [t.fc[0], t.fc[1], t.fc[2]]), F = 0; F < w; F += 1)(M = x[F].a).a.propType && ((V = x[F].s.getMult(_[s].anIndexes[F], S.a[F].s.totalChars)).length ? A.translate(-M.a.v[0] * V[0], -M.a.v[1] * V[1], M.a.v[2] * V[2]) : A.translate(-M.a.v[0] * V, -M.a.v[1] * V, M.a.v[2] * V));
                    for (F = 0; F < w; F += 1)(M = x[F].a).s.propType && ((V = x[F].s.getMult(_[s].anIndexes[F], S.a[F].s.totalChars)).length ? A.scale(1 + (M.s.v[0] - 1) * V[0], 1 + (M.s.v[1] - 1) * V[1], 1) : A.scale(1 + (M.s.v[0] - 1) * V, 1 + (M.s.v[1] - 1) * V, 1));
                    for (F = 0; F < w; F += 1) {
                        if (M = x[F].a, V = x[F].s.getMult(_[s].anIndexes[F], S.a[F].s.totalChars), M.sk.propType && (V.length ? A.skewFromAxis(-M.sk.v * V[0], M.sa.v * V[1]) : A.skewFromAxis(-M.sk.v * V, M.sa.v * V)), M.r.propType && (V.length ? A.rotateZ(-M.r.v * V[2]) : A.rotateZ(-M.r.v * V)), M.ry.propType && (V.length ? A.rotateY(M.ry.v * V[1]) : A.rotateY(M.ry.v * V)), M.rx.propType && (V.length ? A.rotateX(M.rx.v * V[0]) : A.rotateX(M.rx.v * V)), M.o.propType && (V.length ? N += (M.o.v * V[0] - N) * V[0] : N += (M.o.v * V - N) * V), t.strokeWidthAnim && M.sw.propType && (V.length ? H += M.sw.v * V[0] : H += M.sw.v * V), t.strokeColorAnim && M.sc.propType)
                            for (q = 0; q < 3; q += 1) V.length ? O[q] += (M.sc.v[q] - O[q]) * V[0] : O[q] += (M.sc.v[q] - O[q]) * V;
                        if (t.fillColorAnim && t.fc) {
                            if (M.fc.propType)
                                for (q = 0; q < 3; q += 1) V.length ? j[q] += (M.fc.v[q] - j[q]) * V[0] : j[q] += (M.fc.v[q] - j[q]) * V;
                            M.fh.propType && (j = V.length ? addHueToRGB(j, M.fh.v * V[0]) : addHueToRGB(j, M.fh.v * V)), M.fs.propType && (j = V.length ? addSaturationToRGB(j, M.fs.v * V[0]) : addSaturationToRGB(j, M.fs.v * V)), M.fb.propType && (j = V.length ? addBrightnessToRGB(j, M.fb.v * V[0]) : addBrightnessToRGB(j, M.fb.v * V))
                        }
                    }
                    for (F = 0; F < w; F += 1)(M = x[F].a).p.propType && (V = x[F].s.getMult(_[s].anIndexes[F], S.a[F].s.totalChars), this._hasMaskedPath ? V.length ? A.translate(0, M.p.v[1] * V[0], -M.p.v[2] * V[1]) : A.translate(0, M.p.v[1] * V, -M.p.v[2] * V) : V.length ? A.translate(M.p.v[0] * V[0], M.p.v[1] * V[1], -M.p.v[2] * V[2]) : A.translate(M.p.v[0] * V, M.p.v[1] * V, -M.p.v[2] * V));
                    if (t.strokeWidthAnim && (W = H < 0 ? 0 : H), t.strokeColorAnim && (Y = "rgb(" + Math.round(255 * O[0]) + "," + Math.round(255 * O[1]) + "," + Math.round(255 * O[2]) + ")"), t.fillColorAnim && t.fc && (X = "rgb(" + Math.round(255 * j[0]) + "," + Math.round(255 * j[1]) + "," + Math.round(255 * j[2]) + ")"), this._hasMaskedPath) {
                        if (A.translate(0, -t.ls), A.translate(0, E[1] * B * .01 + i, 0), S.p.p) {
                            b = (h.point[1] - c.point[1]) / (h.point[0] - c.point[0]);
                            var ht = 180 * Math.atan(b) / Math.PI;
                            h.point[0] < c.point[0] && (ht += 180), A.rotate(-ht * Math.PI / 180)
                        }
                        A.translate(G, z, 0), o -= E[0] * _[s].an * .005, _[s + 1] && K !== _[s + 1].ind && (o += _[s].an / 2, o += .001 * t.tr * t.finalSize)
                    } else {
                        switch (A.translate(r, i, 0), t.ps && A.translate(t.ps[0], t.ps[1] + t.ascent, 0), t.j) {
                            case 1:
                                A.translate(_[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[_[s].line]), 0, 0);
                                break;
                            case 2:
                                A.translate(_[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[_[s].line]) / 2, 0, 0)
                        }
                        A.translate(0, -t.ls), A.translate(L, 0, 0), A.translate(E[0] * _[s].an * .005, E[1] * B * .01, 0), r += _[s].l + .001 * t.tr * t.finalSize
                    }
                    "html" === C ? tt = A.toCSS() : "svg" === C ? tt = A.to2dCSS() : et = [A.props[0], A.props[1], A.props[2], A.props[3], A.props[4], A.props[5], A.props[6], A.props[7], A.props[8], A.props[9], A.props[10], A.props[11], A.props[12], A.props[13], A.props[14], A.props[15]], J = N
                }
                this.lettersChangedFlag = T <= s ? (I = new LetterProps(J, W, Y, X, tt, et), this.renderedLetters.push(I), T += 1, !0) : (I = this.renderedLetters[s]).update(J, W, Y, X, tt, et) || this.lettersChangedFlag
            }
        }
    }, TextAnimatorProperty.prototype.getValue = function() {
        this._elem.globalData.frameId !== this._frameId && (this._frameId = this._elem.globalData.frameId, this.iterateDynamicProperties())
    }, TextAnimatorProperty.prototype.mHelper = new Matrix, TextAnimatorProperty.prototype.defaultPropsArray = [], extendPrototype([DynamicPropertyContainer], TextAnimatorProperty), LetterProps.prototype.update = function(t, e, r, i, s, a) {
        this._mdf.o = !1, this._mdf.sw = !1, this._mdf.sc = !1, this._mdf.fc = !1, this._mdf.m = !1;
        var n = this._mdf.p = !1;
        return this.o !== t && (this.o = t, n = this._mdf.o = !0), this.sw !== e && (this.sw = e, n = this._mdf.sw = !0), this.sc !== r && (this.sc = r, n = this._mdf.sc = !0), this.fc !== i && (this.fc = i, n = this._mdf.fc = !0), this.m !== s && (this.m = s, n = this._mdf.m = !0), !a.length || this.p[0] === a[0] && this.p[1] === a[1] && this.p[4] === a[4] && this.p[5] === a[5] && this.p[12] === a[12] && this.p[13] === a[13] || (this.p = a, n = this._mdf.p = !0), n
    }, TextProperty.prototype.defaultBoxWidth = [0, 0], TextProperty.prototype.copyData = function(t, e) {
        for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return t
    }, TextProperty.prototype.setCurrentData = function(t) {
        t.__complete || this.completeTextData(t), this.currentData = t, this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth, this._mdf = !0
    }, TextProperty.prototype.searchProperty = function() {
        return this.searchKeyframes()
    }, TextProperty.prototype.searchKeyframes = function() {
        return this.kf = 1 < this.data.d.k.length, this.kf && this.addEffect(this.getKeyframeValue.bind(this)), this.kf
    }, TextProperty.prototype.addEffect = function(t) {
        this.effectsSequence.push(t), this.elem.addDynamicProperty(this)
    }, TextProperty.prototype.getValue = function(t) {
        if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length || t) {
            this.currentData.t = this.data.d.k[this.keysIndex].s.t;
            var e = this.currentData,
                r = this.keysIndex;
            if (this.lock) this.setCurrentData(this.currentData);
            else {
                var i;
                this.lock = !0, this._mdf = !1;
                var s = this.effectsSequence.length,
                    a = t || this.data.d.k[this.keysIndex].s;
                for (i = 0; i < s; i += 1) a = r !== this.keysIndex ? this.effectsSequence[i](a, a.t) : this.effectsSequence[i](this.currentData, a.t);
                e !== a && this.setCurrentData(a), this.v = this.currentData, this.pv = this.v, this.lock = !1, this.frameId = this.elem.globalData.frameId
            }
        }
    }, TextProperty.prototype.getKeyframeValue = function() {
        for (var t = this.data.d.k, e = this.elem.comp.renderedFrame, r = 0, i = t.length; r <= i - 1 && !(r === i - 1 || t[r + 1].t > e);) r += 1;
        return this.keysIndex !== r && (this.keysIndex = r), this.data.d.k[this.keysIndex].s
    }, TextProperty.prototype.buildFinalText = function(t) {
        for (var e, r, i = [], s = 0, a = t.length, n = !1; s < a;) e = t.charCodeAt(s), FontManager.isCombinedCharacter(e) ? i[i.length - 1] += t.charAt(s) : 55296 <= e && e <= 56319 ? 56320 <= (r = t.charCodeAt(s + 1)) && r <= 57343 ? (n || FontManager.isModifier(e, r) ? (i[i.length - 1] += t.substr(s, 2), n = !1) : i.push(t.substr(s, 2)), s += 1) : i.push(t.charAt(s)) : 56319 < e ? (r = t.charCodeAt(s + 1), FontManager.isZeroWidthJoiner(e, r) ? (n = !0, i[i.length - 1] += t.substr(s, 2), s += 1) : i.push(t.charAt(s))) : FontManager.isZeroWidthJoiner(e) ? (i[i.length - 1] += t.charAt(s), n = !0) : i.push(t.charAt(s)), s += 1;
        return i
    }, TextProperty.prototype.completeTextData = function(t) {
        t.__complete = !0;
        var e, r, i, s, a, n, o, h = this.elem.globalData.fontManager,
            l = this.data,
            p = [],
            m = 0,
            f = l.m.g,
            c = 0,
            d = 0,
            u = 0,
            y = [],
            g = 0,
            v = 0,
            b = h.getFontByName(t.f),
            P = 0,
            E = getFontProperties(b);
        t.fWeight = E.weight, t.fStyle = E.style, t.finalSize = t.s, t.finalText = this.buildFinalText(t.t), r = t.finalText.length, t.finalLineHeight = t.lh;
        var x, S = t.tr / 1e3 * t.finalSize;
        if (t.sz)
            for (var A, C, T = !0, _ = t.sz[0], k = t.sz[1]; T;) {
                g = A = 0, r = (C = this.buildFinalText(t.t)).length, S = t.tr / 1e3 * t.finalSize;
                var D = -1;
                for (e = 0; e < r; e += 1) x = C[e].charCodeAt(0), i = !1, " " === C[e] ? D = e : 13 !== x && 3 !== x || (i = !(g = 0), A += t.finalLineHeight || 1.2 * t.finalSize), _ < g + (P = h.chars ? (o = h.getCharData(C[e], b.fStyle, b.fFamily), i ? 0 : o.w * t.finalSize / 100) : h.measureText(C[e], t.f, t.finalSize)) && " " !== C[e] ? (-1 === D ? r += 1 : e = D, A += t.finalLineHeight || 1.2 * t.finalSize, C.splice(e, D === e ? 1 : 0, "\r"), D = -1, g = 0) : (g += P, g += S);
                A += b.ascent * t.finalSize / 100, this.canResize && t.finalSize > this.minimumFontSize && k < A ? (t.finalSize -= 1, t.finalLineHeight = t.finalSize * t.lh / t.s) : (t.finalText = C, r = t.finalText.length, T = !1)
            }
        g = -S;
        var M, F = P = 0;
        for (e = 0; e < r; e += 1)
            if (i = !1, 13 === (x = (M = t.finalText[e]).charCodeAt(0)) || 3 === x ? (F = 0, y.push(g), v = v < g ? g : v, g = -2 * S, i = !(s = ""), u += 1) : s = M, P = h.chars ? (o = h.getCharData(M, b.fStyle, h.getFontByName(t.f).fFamily), i ? 0 : o.w * t.finalSize / 100) : h.measureText(s, t.f, t.finalSize), " " === M ? F += P + S : (g += P + S + F, F = 0), p.push({
                    l: P,
                    an: P,
                    add: c,
                    n: i,
                    anIndexes: [],
                    val: s,
                    line: u,
                    animatorJustifyOffset: 0
                }), 2 == f) {
                if (c += P, "" === s || " " === s || e === r - 1) {
                    for ("" !== s && " " !== s || (c -= P); d <= e;) p[d].an = c, p[d].ind = m, p[d].extra = P, d += 1;
                    m += 1, c = 0
                }
            } else if (3 == f) {
            if (c += P, "" === s || e === r - 1) {
                for ("" === s && (c -= P); d <= e;) p[d].an = c, p[d].ind = m, p[d].extra = P, d += 1;
                c = 0, m += 1
            }
        } else p[m].ind = m, p[m].extra = 0, m += 1;
        if (t.l = p, v = v < g ? g : v, y.push(g), t.sz) t.boxWidth = t.sz[0], t.justifyOffset = 0;
        else switch (t.boxWidth = v, t.j) {
            case 1:
                t.justifyOffset = -t.boxWidth;
                break;
            case 2:
                t.justifyOffset = -t.boxWidth / 2;
                break;
            default:
                t.justifyOffset = 0
        }
        t.lineWidths = y;
        var w, I, V, B, R = l.a;
        n = R.length;
        var L = [];
        for (a = 0; a < n; a += 1) {
            for ((w = R[a]).a.sc && (t.strokeColorAnim = !0), w.a.sw && (t.strokeWidthAnim = !0), (w.a.fc || w.a.fh || w.a.fs || w.a.fb) && (t.fillColorAnim = !0), B = 0, V = w.s.b, e = 0; e < r; e += 1)(I = p[e]).anIndexes[a] = B, (1 == V && "" !== I.val || 2 == V && "" !== I.val && " " !== I.val || 3 == V && (I.n || " " == I.val || e == r - 1) || 4 == V && (I.n || e == r - 1)) && (1 === w.s.rn && L.push(B), B += 1);
            l.a[a].s.totalChars = B;
            var G, z = -1;
            if (1 === w.s.rn)
                for (e = 0; e < r; e += 1) z != (I = p[e]).anIndexes[a] && (z = I.anIndexes[a], G = L.splice(Math.floor(Math.random() * L.length), 1)[0]), I.anIndexes[a] = G
        }
        t.yOffset = t.finalLineHeight || 1.2 * t.finalSize, t.ls = t.ls || 0, t.ascent = b.ascent * t.finalSize / 100
    }, TextProperty.prototype.updateDocumentData = function(t, e) {
        e = void 0 === e ? this.keysIndex : e;
        var r = this.copyData({}, this.data.d.k[e].s);
        r = this.copyData(r, t), this.data.d.k[e].s = r, this.recalculate(e), this.elem.addDynamicProperty(this)
    }, TextProperty.prototype.recalculate = function(t) {
        var e = this.data.d.k[t].s;
        e.__complete = !1, this.keysIndex = 0, this._isFirstFrame = !0, this.getValue(e)
    }, TextProperty.prototype.canResizeFont = function(t) {
        this.canResize = t, this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this)
    }, TextProperty.prototype.setMinimumFontSize = function(t) {
        this.minimumFontSize = Math.floor(t) || 1, this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this)
    };
    var TextSelectorProp = function() {
            var c = Math.max,
                d = Math.min,
                u = Math.floor;

            function i(t, e) {
                this._currentTextLength = -1, this.k = !1, this.data = e, this.elem = t, this.comp = t.comp, this.finalS = 0, this.finalE = 0, this.initDynamicPropertyContainer(t), this.s = PropertyFactory.getProp(t, e.s || {
                    k: 0
                }, 0, 0, this), this.e = "e" in e ? PropertyFactory.getProp(t, e.e, 0, 0, this) : {
                    v: 100
                }, this.o = PropertyFactory.getProp(t, e.o || {
                    k: 0
                }, 0, 0, this), this.xe = PropertyFactory.getProp(t, e.xe || {
                    k: 0
                }, 0, 0, this), this.ne = PropertyFactory.getProp(t, e.ne || {
                    k: 0
                }, 0, 0, this), this.a = PropertyFactory.getProp(t, e.a, 0, .01, this), this.dynamicProperties.length || this.getValue()
            }
            return i.prototype = {
                getMult: function(t) {
                    this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();
                    var e = 0,
                        r = 0,
                        i = 1,
                        s = 1;
                    0 < this.ne.v ? e = this.ne.v / 100 : r = -this.ne.v / 100, 0 < this.xe.v ? i = 1 - this.xe.v / 100 : s = 1 + this.xe.v / 100;
                    var a = BezierFactory.getBezierEasing(e, r, i, s).get,
                        n = 0,
                        o = this.finalS,
                        h = this.finalE,
                        l = this.data.sh;
                    if (2 === l) n = a(n = h === o ? h <= t ? 1 : 0 : c(0, d(.5 / (h - o) + (t - o) / (h - o), 1)));
                    else if (3 === l) n = a(n = h === o ? h <= t ? 0 : 1 : 1 - c(0, d(.5 / (h - o) + (t - o) / (h - o), 1)));
                    else if (4 === l) h === o ? n = 0 : (n = c(0, d(.5 / (h - o) + (t - o) / (h - o), 1))) < .5 ? n *= 2 : n = 1 - 2 * (n - .5), n = a(n);
                    else if (5 === l) {
                        if (h === o) n = 0;
                        else {
                            var p = h - o,
                                m = -p / 2 + (t = d(c(0, t + .5 - o), h - o)),
                                f = p / 2;
                            n = Math.sqrt(1 - m * m / (f * f))
                        }
                        n = a(n)
                    } else n = 6 === l ? a(n = h === o ? 0 : (t = d(c(0, t + .5 - o), h - o), (1 + Math.cos(Math.PI + 2 * Math.PI * t / (h - o))) / 2)) : (t >= u(o) && (n = c(0, d(t - o < 0 ? d(h, 1) - (o - t) : h - t, 1))), a(n));
                    return n * this.a.v
                },
                getValue: function(t) {
                    this.iterateDynamicProperties(), this._mdf = t || this._mdf, this._currentTextLength = this.elem.textProperty.currentData.l.length || 0, t && 2 === this.data.r && (this.e.v = this._currentTextLength);
                    var e = 2 === this.data.r ? 1 : 100 / this.data.totalChars,
                        r = this.o.v / e,
                        i = this.s.v / e + r,
                        s = this.e.v / e + r;
                    if (s < i) {
                        var a = i;
                        i = s, s = a
                    }
                    this.finalS = i, this.finalE = s
                }
            }, extendPrototype([DynamicPropertyContainer], i), {
                getTextSelectorProp: function(t, e, r) {
                    return new i(t, e, r)
                }
            }
        }(),
        poolFactory = function(t, e, r) {
            var i = 0,
                s = t,
                a = createSizedArray(s);
            return {
                newElement: function() {
                    return i ? a[i -= 1] : e()
                },
                release: function(t) {
                    i === s && (a = pooling.double(a), s *= 2), r && r(t), a[i] = t, i += 1
                }
            }
        },
        pooling = {
            double: function(t) {
                return t.concat(createSizedArray(t.length))
            }
        },
        pointPool = poolFactory(8, function() {
            return createTypedArray("float32", 2)
        }),
        shapePool = (IB = poolFactory(4, function() {
            return new ShapePath
        }, function(t) {
            var e, r = t._length;
            for (e = 0; e < r; e += 1) pointPool.release(t.v[e]), pointPool.release(t.i[e]), pointPool.release(t.o[e]), t.v[e] = null, t.i[e] = null, t.o[e] = null;
            t._length = 0, t.c = !1
        }), IB.clone = function(t) {
            var e, r = IB.newElement(),
                i = void 0 === t._length ? t.v.length : t._length;
            for (r.setLength(i), r.c = t.c, e = 0; e < i; e += 1) r.setTripleAt(t.v[e][0], t.v[e][1], t.o[e][0], t.o[e][1], t.i[e][0], t.i[e][1], e);
            return r
        }, IB),
        IB, shapeCollectionPool = (QB = {
            newShapeCollection: function() {
                var t;
                t = RB ? TB[RB -= 1] : new ShapeCollection;
                return t
            },
            release: function(t) {
                var e, r = t._length;
                for (e = 0; e < r; e += 1) shapePool.release(t.shapes[e]);
                t._length = 0, RB === SB && (TB = pooling.double(TB), SB *= 2);
                TB[RB] = t, RB += 1
            }
        }, RB = 0, SB = 4, TB = createSizedArray(SB), QB),
        QB, RB, SB, TB, segmentsLengthPool = poolFactory(8, function() {
            return {
                lengths: [],
                totalLength: 0
            }
        }, function(t) {
            var e, r = t.lengths.length;
            for (e = 0; e < r; e += 1) bezierLengthPool.release(t.lengths[e]);
            t.lengths.length = 0
        }),
        bezierLengthPool = poolFactory(8, function() {
            return {
                addedLength: 0,
                percents: createTypedArray("float32", defaultCurveSegments),
                lengths: createTypedArray("float32", defaultCurveSegments)
            }
        }),
        markerParser = function() {
            function a(t) {
                for (var e, r = t.split("\r\n"), i = {}, s = 0, a = 0; a < r.length; a += 1) 2 === (e = r[a].split(":")).length && (i[e[0]] = e[1].trim(), s += 1);
                if (0 === s) throw new Error;
                return i
            }
            return function(e) {
                for (var t = [], r = 0; r < e.length; r += 1) {
                    var i = e[r],
                        s = {
                            time: i.tm,
                            duration: i.dr
                        };
                    try {
                        s.payload = JSON.parse(e[r].cm)
                    } catch (t) {
                        try {
                            s.payload = a(e[r].cm)
                        } catch (t) {
                            s.payload = {
                                name: e[r]
                            }
                        }
                    }
                    t.push(s)
                }
                return t
            }
        }();

    function BaseRenderer() {}

    function SVGRenderer(t, e) {
        this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.svgElement = createNS("svg");
        var r = "";
        if (e && e.title) {
            var i = createNS("title"),
                s = createElementID();
            i.setAttribute("id", s), i.textContent = e.title, this.svgElement.appendChild(i), r += s
        }
        if (e && e.description) {
            var a = createNS("desc"),
                n = createElementID();
            a.setAttribute("id", n), a.textContent = e.description, this.svgElement.appendChild(a), r += " " + n
        }
        r && this.svgElement.setAttribute("aria-labelledby", r);
        var o = createNS("defs");
        this.svgElement.appendChild(o);
        var h = createNS("g");
        this.svgElement.appendChild(h), this.layerElement = h, this.renderConfig = {
            preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet",
            imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
            progressiveLoad: e && e.progressiveLoad || !1,
            hideOnTransparent: !(e && !1 === e.hideOnTransparent),
            viewBoxOnly: e && e.viewBoxOnly || !1,
            viewBoxSize: e && e.viewBoxSize || !1,
            className: e && e.className || "",
            id: e && e.id || "",
            focusable: e && e.focusable,
            filterSize: {
                width: e && e.filterSize && e.filterSize.width || "100%",
                height: e && e.filterSize && e.filterSize.height || "100%",
                x: e && e.filterSize && e.filterSize.x || "0%",
                y: e && e.filterSize && e.filterSize.y || "0%"
            }
        }, this.globalData = {
            _mdf: !1,
            frameNum: -1,
            defs: o,
            renderConfig: this.renderConfig
        }, this.elements = [], this.pendingElements = [], this.destroyed = !1, this.rendererType = "svg"
    }

    function CanvasRenderer(t, e) {
        this.animationItem = t, this.renderConfig = {
            clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas,
            context: e && e.context || null,
            progressiveLoad: e && e.progressiveLoad || !1,
            preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet",
            imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
            className: e && e.className || "",
            id: e && e.id || ""
        }, this.renderConfig.dpr = e && e.dpr || 1, this.animationItem.wrapper && (this.renderConfig.dpr = e && e.dpr || window.devicePixelRatio || 1), this.renderedFrame = -1, this.globalData = {
            frameNum: -1,
            _mdf: !1,
            renderConfig: this.renderConfig,
            currentGlobalAlpha: -1
        }, this.contextData = new CVContextData, this.elements = [], this.pendingElements = [], this.transformMat = new Matrix, this.completeLayers = !1, this.rendererType = "canvas"
    }

    function HybridRenderer(t, e) {
        this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.renderConfig = {
            className: e && e.className || "",
            imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
            hideOnTransparent: !(e && !1 === e.hideOnTransparent),
            filterSize: {
                width: e && e.filterSize && e.filterSize.width || "400%",
                height: e && e.filterSize && e.filterSize.height || "400%",
                x: e && e.filterSize && e.filterSize.x || "-100%",
                y: e && e.filterSize && e.filterSize.y || "-100%"
            }
        }, this.globalData = {
            _mdf: !1,
            frameNum: -1,
            renderConfig: this.renderConfig
        }, this.pendingElements = [], this.elements = [], this.threeDElements = [], this.destroyed = !1, this.camera = null, this.supports3d = !0, this.rendererType = "html"
    }

    function MaskElement(t, e, r) {
        this.data = t, this.element = e, this.globalData = r, this.storedData = [], this.masksProperties = this.data.masksProperties || [], this.maskElement = null;
        var i, s, a = this.globalData.defs,
            n = this.masksProperties ? this.masksProperties.length : 0;
        this.viewData = createSizedArray(n), this.solidPath = "";
        var o, h, l, p, m, f, c = this.masksProperties,
            d = 0,
            u = [],
            y = createElementID(),
            g = "clipPath",
            v = "clip-path";
        for (i = 0; i < n; i += 1)
            if (("a" !== c[i].mode && "n" !== c[i].mode || c[i].inv || 100 !== c[i].o.k || c[i].o.x) && (v = g = "mask"), "s" !== c[i].mode && "i" !== c[i].mode || 0 !== d ? l = null : ((l = createNS("rect")).setAttribute("fill", "#ffffff"), l.setAttribute("width", this.element.comp.data.w || 0), l.setAttribute("height", this.element.comp.data.h || 0), u.push(l)), s = createNS("path"), "n" === c[i].mode) this.viewData[i] = {
                op: PropertyFactory.getProp(this.element, c[i].o, 0, .01, this.element),
                prop: ShapePropertyFactory.getShapeProp(this.element, c[i], 3),
                elem: s,
                lastPath: ""
            }, a.appendChild(s);
            else {
                var b;
                if (d += 1, s.setAttribute("fill", "s" === c[i].mode ? "#000000" : "#ffffff"), s.setAttribute("clip-rule", "nonzero"), 0 !== c[i].x.k ? (v = g = "mask", f = PropertyFactory.getProp(this.element, c[i].x, 0, null, this.element), b = createElementID(), (p = createNS("filter")).setAttribute("id", b), (m = createNS("feMorphology")).setAttribute("operator", "erode"), m.setAttribute("in", "SourceGraphic"), m.setAttribute("radius", "0"), p.appendChild(m), a.appendChild(p), s.setAttribute("stroke", "s" === c[i].mode ? "#000000" : "#ffffff")) : f = m = null, this.storedData[i] = {
                        elem: s,
                        x: f,
                        expan: m,
                        lastPath: "",
                        lastOperator: "",
                        filterId: b,
                        lastRadius: 0
                    }, "i" === c[i].mode) {
                    h = u.length;
                    var P = createNS("g");
                    for (o = 0; o < h; o += 1) P.appendChild(u[o]);
                    var E = createNS("mask");
                    E.setAttribute("mask-type", "alpha"), E.setAttribute("id", y + "_" + d), E.appendChild(s), a.appendChild(E), P.setAttribute("mask", "url(" + locationHref + "#" + y + "_" + d + ")"), u.length = 0, u.push(P)
                } else u.push(s);
                c[i].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()), this.viewData[i] = {
                    elem: s,
                    lastPath: "",
                    op: PropertyFactory.getProp(this.element, c[i].o, 0, .01, this.element),
                    prop: ShapePropertyFactory.getShapeProp(this.element, c[i], 3),
                    invRect: l
                }, this.viewData[i].prop.k || this.drawPath(c[i], this.viewData[i].prop.v, this.viewData[i])
            }
        for (this.maskElement = createNS(g), n = u.length, i = 0; i < n; i += 1) this.maskElement.appendChild(u[i]);
        0 < d && (this.maskElement.setAttribute("id", y), this.element.maskedElement.setAttribute(v, "url(" + locationHref + "#" + y + ")"), a.appendChild(this.maskElement)), this.viewData.length && this.element.addRenderableComponent(this)
    }

    function HierarchyElement() {}

    function FrameElement() {}

    function TransformElement() {}

    function RenderableElement() {}

    function RenderableDOMElement() {}

    function ProcessedElement(t, e) {
        this.elem = t, this.pos = e
    }

    function SVGStyleData(t, e) {
        this.data = t, this.type = t.ty, this.d = "", this.lvl = e, this._mdf = !1, this.closed = !0 === t.hd, this.pElem = createNS("path"), this.msElem = null
    }

    function SVGShapeData(t, e, r) {
        this.caches = [], this.styles = [], this.transformers = t, this.lStr = "", this.sh = r, this.lvl = e, this._isAnimated = !!r.k;
        for (var i = 0, s = t.length; i < s;) {
            if (t[i].mProps.dynamicProperties.length) {
                this._isAnimated = !0;
                break
            }
            i += 1
        }
    }

    function SVGTransformData(t, e, r) {
        this.transform = {
            mProps: t,
            op: e,
            container: r
        }, this.elements = [], this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length
    }

    function SVGStrokeStyleData(t, e, r) {
        this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.o = PropertyFactory.getProp(t, e.o, 0, .01, this), this.w = PropertyFactory.getProp(t, e.w, 0, null, this), this.d = new DashProperty(t, e.d || {}, "svg", this), this.c = PropertyFactory.getProp(t, e.c, 1, 255, this), this.style = r, this._isAnimated = !!this._isAnimated
    }

    function SVGFillStyleData(t, e, r) {
        this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.o = PropertyFactory.getProp(t, e.o, 0, .01, this), this.c = PropertyFactory.getProp(t, e.c, 1, 255, this), this.style = r
    }

    function SVGGradientFillStyleData(t, e, r) {
        this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.initGradientData(t, e, r)
    }

    function SVGGradientStrokeStyleData(t, e, r) {
        this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.w = PropertyFactory.getProp(t, e.w, 0, null, this), this.d = new DashProperty(t, e.d || {}, "svg", this), this.initGradientData(t, e, r), this._isAnimated = !!this._isAnimated
    }

    function ShapeGroupData() {
        this.it = [], this.prevViewData = [], this.gr = createNS("g")
    }
    BaseRenderer.prototype.checkLayers = function(t) {
        var e, r, i = this.layers.length;
        for (this.completeLayers = !0, e = i - 1; 0 <= e; e -= 1) this.elements[e] || (r = this.layers[e]).ip - r.st <= t - this.layers[e].st && r.op - r.st > t - this.layers[e].st && this.buildItem(e), this.completeLayers = !!this.elements[e] && this.completeLayers;
        this.checkPendingElements()
    }, BaseRenderer.prototype.createItem = function(t) {
        switch (t.ty) {
            case 2:
                return this.createImage(t);
            case 0:
                return this.createComp(t);
            case 1:
                return this.createSolid(t);
            case 3:
                return this.createNull(t);
            case 4:
                return this.createShape(t);
            case 5:
                return this.createText(t);
            case 6:
                return this.createAudio(t);
            case 13:
                return this.createCamera(t);
            case 15:
                return this.createFootage(t);
            default:
                return this.createNull(t)
        }
    }, BaseRenderer.prototype.createCamera = function() {
        throw new Error("You're using a 3d camera. Try the html renderer.")
    }, BaseRenderer.prototype.createAudio = function(t) {
        return new AudioElement(t, this.globalData, this)
    }, BaseRenderer.prototype.createFootage = function(t) {
        return new FootageElement(t, this.globalData, this)
    }, BaseRenderer.prototype.buildAllItems = function() {
        var t, e = this.layers.length;
        for (t = 0; t < e; t += 1) this.buildItem(t);
        this.checkPendingElements()
    }, BaseRenderer.prototype.includeLayers = function(t) {
        var e;
        this.completeLayers = !1;
        var r, i = t.length,
            s = this.layers.length;
        for (e = 0; e < i; e += 1)
            for (r = 0; r < s;) {
                if (this.layers[r].id === t[e].id) {
                    this.layers[r] = t[e];
                    break
                }
                r += 1
            }
    }, BaseRenderer.prototype.setProjectInterface = function(t) {
        this.globalData.projectInterface = t
    }, BaseRenderer.prototype.initItems = function() {
        this.globalData.progressiveLoad || this.buildAllItems()
    }, BaseRenderer.prototype.buildElementParenting = function(t, e, r) {
        for (var i = this.elements, s = this.layers, a = 0, n = s.length; a < n;) s[a].ind == e && (i[a] && !0 !== i[a] ? (r.push(i[a]), i[a].setAsParent(), void 0 !== s[a].parent ? this.buildElementParenting(t, s[a].parent, r) : t.setHierarchy(r)) : (this.buildItem(a), this.addPendingElement(t))), a += 1
    }, BaseRenderer.prototype.addPendingElement = function(t) {
        this.pendingElements.push(t)
    }, BaseRenderer.prototype.searchExtraCompositions = function(t) {
        var e, r = t.length;
        for (e = 0; e < r; e += 1)
            if (t[e].xt) {
                var i = this.createComp(t[e]);
                i.initExpressions(), this.globalData.projectInterface.registerComposition(i)
            }
    }, BaseRenderer.prototype.setupGlobalData = function(t, e) {
        this.globalData.fontManager = new FontManager, this.globalData.fontManager.addChars(t.chars), this.globalData.fontManager.addFonts(t.fonts, e), this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem), this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem), this.globalData.imageLoader = this.animationItem.imagePreloader, this.globalData.audioController = this.animationItem.audioController, this.globalData.frameId = 0, this.globalData.frameRate = t.fr, this.globalData.nm = t.nm, this.globalData.compSize = {
            w: t.w,
            h: t.h
        }
    }, extendPrototype([BaseRenderer], SVGRenderer), SVGRenderer.prototype.createNull = function(t) {
        return new NullElement(t, this.globalData, this)
    }, SVGRenderer.prototype.createShape = function(t) {
        return new SVGShapeElement(t, this.globalData, this)
    }, SVGRenderer.prototype.createText = function(t) {
        return new SVGTextLottieElement(t, this.globalData, this)
    }, SVGRenderer.prototype.createImage = function(t) {
        return new IImageElement(t, this.globalData, this)
    }, SVGRenderer.prototype.createComp = function(t) {
        return new SVGCompElement(t, this.globalData, this)
    }, SVGRenderer.prototype.createSolid = function(t) {
        return new ISolidElement(t, this.globalData, this)
    }, SVGRenderer.prototype.configAnimation = function(t) {
        this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"), this.renderConfig.viewBoxSize ? this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute("viewBox", "0 0 " + t.w + " " + t.h), this.renderConfig.viewBoxOnly || (this.svgElement.setAttribute("width", t.w), this.svgElement.setAttribute("height", t.h), this.svgElement.style.width = "100%", this.svgElement.style.height = "100%", this.svgElement.style.transform = "translate3d(0,0,0)"), this.renderConfig.className && this.svgElement.setAttribute("class", this.renderConfig.className), this.renderConfig.id && this.svgElement.setAttribute("id", this.renderConfig.id), void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute("focusable", this.renderConfig.focusable), this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio), this.animationItem.wrapper.appendChild(this.svgElement);
        var e = this.globalData.defs;
        this.setupGlobalData(t, e), this.globalData.progressiveLoad = this.renderConfig.progressiveLoad, this.data = t;
        var r = createNS("clipPath"),
            i = createNS("rect");
        i.setAttribute("width", t.w), i.setAttribute("height", t.h), i.setAttribute("x", 0), i.setAttribute("y", 0);
        var s = createElementID();
        r.setAttribute("id", s), r.appendChild(i), this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + s + ")"), e.appendChild(r), this.layers = t.layers, this.elements = createSizedArray(t.layers.length)
    }, SVGRenderer.prototype.destroy = function() {
        var t;
        this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), this.layerElement = null, this.globalData.defs = null;
        var e = this.layers ? this.layers.length : 0;
        for (t = 0; t < e; t += 1) this.elements[t] && this.elements[t].destroy();
        this.elements.length = 0, this.destroyed = !0, this.animationItem = null
    }, SVGRenderer.prototype.updateContainerSize = function() {}, SVGRenderer.prototype.buildItem = function(t) {
        var e = this.elements;
        if (!e[t] && 99 !== this.layers[t].ty) {
            e[t] = !0;
            var r = this.createItem(this.layers[t]);
            e[t] = r, expressionsPlugin && (0 === this.layers[t].ty && this.globalData.projectInterface.registerComposition(r), r.initExpressions()), this.appendElementInPos(r, t), this.layers[t].tt && (this.elements[t - 1] && !0 !== this.elements[t - 1] ? r.setMatte(e[t - 1].layerId) : (this.buildItem(t - 1), this.addPendingElement(r)))
        }
    }, SVGRenderer.prototype.checkPendingElements = function() {
        for (; this.pendingElements.length;) {
            var t = this.pendingElements.pop();
            if (t.checkParenting(), t.data.tt)
                for (var e = 0, r = this.elements.length; e < r;) {
                    if (this.elements[e] === t) {
                        t.setMatte(this.elements[e - 1].layerId);
                        break
                    }
                    e += 1
                }
        }
    }, SVGRenderer.prototype.renderFrame = function(t) {
        if (this.renderedFrame !== t && !this.destroyed) {
            var e;
            null === t ? t = this.renderedFrame : this.renderedFrame = t, this.globalData.frameNum = t, this.globalData.frameId += 1, this.globalData.projectInterface.currentFrame = t, this.globalData._mdf = !1;
            var r = this.layers.length;
            for (this.completeLayers || this.checkLayers(t), e = r - 1; 0 <= e; e -= 1)(this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);
            if (this.globalData._mdf)
                for (e = 0; e < r; e += 1)(this.completeLayers || this.elements[e]) && this.elements[e].renderFrame()
        }
    }, SVGRenderer.prototype.appendElementInPos = function(t, e) {
        var r = t.getBaseElement();
        if (r) {
            for (var i, s = 0; s < e;) this.elements[s] && !0 !== this.elements[s] && this.elements[s].getBaseElement() && (i = this.elements[s].getBaseElement()), s += 1;
            i ? this.layerElement.insertBefore(r, i) : this.layerElement.appendChild(r)
        }
    }, SVGRenderer.prototype.hide = function() {
        this.layerElement.style.display = "none"
    }, SVGRenderer.prototype.show = function() {
        this.layerElement.style.display = "block"
    }, extendPrototype([BaseRenderer], CanvasRenderer), CanvasRenderer.prototype.createShape = function(t) {
        return new CVShapeElement(t, this.globalData, this)
    }, CanvasRenderer.prototype.createText = function(t) {
        return new CVTextElement(t, this.globalData, this)
    }, CanvasRenderer.prototype.createImage = function(t) {
        return new CVImageElement(t, this.globalData, this)
    }, CanvasRenderer.prototype.createComp = function(t) {
        return new CVCompElement(t, this.globalData, this)
    }, CanvasRenderer.prototype.createSolid = function(t) {
        return new CVSolidElement(t, this.globalData, this)
    }, CanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull, CanvasRenderer.prototype.ctxTransform = function(t) {
        if (1 !== t[0] || 0 !== t[1] || 0 !== t[4] || 1 !== t[5] || 0 !== t[12] || 0 !== t[13])
            if (this.renderConfig.clearCanvas) {
                this.transformMat.cloneFromProps(t);
                var e = this.contextData.cTr.props;
                this.transformMat.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]), this.contextData.cTr.cloneFromProps(this.transformMat.props);
                var r = this.contextData.cTr.props;
                this.canvasContext.setTransform(r[0], r[1], r[4], r[5], r[12], r[13])
            } else this.canvasContext.transform(t[0], t[1], t[4], t[5], t[12], t[13])
    }, CanvasRenderer.prototype.ctxOpacity = function(t) {
        if (!this.renderConfig.clearCanvas) return this.canvasContext.globalAlpha *= t < 0 ? 0 : t, void(this.globalData.currentGlobalAlpha = this.contextData.cO);
        this.contextData.cO *= t < 0 ? 0 : t, this.globalData.currentGlobalAlpha !== this.contextData.cO && (this.canvasContext.globalAlpha = this.contextData.cO, this.globalData.currentGlobalAlpha = this.contextData.cO)
    }, CanvasRenderer.prototype.reset = function() {
        this.renderConfig.clearCanvas ? this.contextData.reset() : this.canvasContext.restore()
    }, CanvasRenderer.prototype.save = function(t) {
        if (this.renderConfig.clearCanvas) {
            t && this.canvasContext.save();
            var e, r = this.contextData.cTr.props;
            this.contextData._length <= this.contextData.cArrPos && this.contextData.duplicate();
            var i = this.contextData.saved[this.contextData.cArrPos];
            for (e = 0; e < 16; e += 1) i[e] = r[e];
            this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO, this.contextData.cArrPos += 1
        } else this.canvasContext.save()
    }, CanvasRenderer.prototype.restore = function(t) {
        if (this.renderConfig.clearCanvas) {
            t && (this.canvasContext.restore(), this.globalData.blendMode = "source-over"), this.contextData.cArrPos -= 1;
            var e, r = this.contextData.saved[this.contextData.cArrPos],
                i = this.contextData.cTr.props;
            for (e = 0; e < 16; e += 1) i[e] = r[e];
            this.canvasContext.setTransform(r[0], r[1], r[4], r[5], r[12], r[13]), r = this.contextData.savedOp[this.contextData.cArrPos], this.contextData.cO = r, this.globalData.currentGlobalAlpha !== r && (this.canvasContext.globalAlpha = r, this.globalData.currentGlobalAlpha = r)
        } else this.canvasContext.restore()
    }, CanvasRenderer.prototype.configAnimation = function(t) {
        if (this.animationItem.wrapper) {
            this.animationItem.container = createTag("canvas");
            var e = this.animationItem.container.style;
            e.width = "100%", e.height = "100%";
            var r = "0px 0px 0px";
            e.transformOrigin = r, e.mozTransformOrigin = r, e.webkitTransformOrigin = r, e["-webkit-transform"] = r, this.animationItem.wrapper.appendChild(this.animationItem.container), this.canvasContext = this.animationItem.container.getContext("2d"), this.renderConfig.className && this.animationItem.container.setAttribute("class", this.renderConfig.className), this.renderConfig.id && this.animationItem.container.setAttribute("id", this.renderConfig.id)
        } else this.canvasContext = this.renderConfig.context;
        this.data = t, this.layers = t.layers, this.transformCanvas = {
            w: t.w,
            h: t.h,
            sx: 0,
            sy: 0,
            tx: 0,
            ty: 0
        }, this.setupGlobalData(t, document.body), this.globalData.canvasContext = this.canvasContext, (this.globalData.renderer = this).globalData.isDashed = !1, this.globalData.progressiveLoad = this.renderConfig.progressiveLoad, this.globalData.transformCanvas = this.transformCanvas, this.elements = createSizedArray(t.layers.length), this.updateContainerSize()
    }, CanvasRenderer.prototype.updateContainerSize = function() {
        var t, e, r, i;
        if (this.reset(), this.animationItem.wrapper && this.animationItem.container ? (t = this.animationItem.wrapper.offsetWidth, e = this.animationItem.wrapper.offsetHeight, this.animationItem.container.setAttribute("width", t * this.renderConfig.dpr), this.animationItem.container.setAttribute("height", e * this.renderConfig.dpr)) : (t = this.canvasContext.canvas.width * this.renderConfig.dpr, e = this.canvasContext.canvas.height * this.renderConfig.dpr), -1 !== this.renderConfig.preserveAspectRatio.indexOf("meet") || -1 !== this.renderConfig.preserveAspectRatio.indexOf("slice")) {
            var s = this.renderConfig.preserveAspectRatio.split(" "),
                a = s[1] || "meet",
                n = s[0] || "xMidYMid",
                o = n.substr(0, 4),
                h = n.substr(4);
            r = t / e, i = this.transformCanvas.w / this.transformCanvas.h, this.transformCanvas.sy = r < i && "meet" === a || i < r && "slice" === a ? (this.transformCanvas.sx = t / (this.transformCanvas.w / this.renderConfig.dpr), t / (this.transformCanvas.w / this.renderConfig.dpr)) : (this.transformCanvas.sx = e / (this.transformCanvas.h / this.renderConfig.dpr), e / (this.transformCanvas.h / this.renderConfig.dpr)), this.transformCanvas.tx = "xMid" === o && (i < r && "meet" === a || r < i && "slice" === a) ? (t - this.transformCanvas.w * (e / this.transformCanvas.h)) / 2 * this.renderConfig.dpr : "xMax" === o && (i < r && "meet" === a || r < i && "slice" === a) ? (t - this.transformCanvas.w * (e / this.transformCanvas.h)) * this.renderConfig.dpr : 0, this.transformCanvas.ty = "YMid" === h && (r < i && "meet" === a || i < r && "slice" === a) ? (e - this.transformCanvas.h * (t / this.transformCanvas.w)) / 2 * this.renderConfig.dpr : "YMax" === h && (r < i && "meet" === a || i < r && "slice" === a) ? (e - this.transformCanvas.h * (t / this.transformCanvas.w)) * this.renderConfig.dpr : 0
        } else "none" === this.renderConfig.preserveAspectRatio ? (this.transformCanvas.sx = t / (this.transformCanvas.w / this.renderConfig.dpr), this.transformCanvas.sy = e / (this.transformCanvas.h / this.renderConfig.dpr)) : (this.transformCanvas.sx = this.renderConfig.dpr, this.transformCanvas.sy = this.renderConfig.dpr), this.transformCanvas.tx = 0, this.transformCanvas.ty = 0;
        this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1], this.ctxTransform(this.transformCanvas.props), this.canvasContext.beginPath(), this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h), this.canvasContext.closePath(), this.canvasContext.clip(), this.renderFrame(this.renderedFrame, !0)
    }, CanvasRenderer.prototype.destroy = function() {
        var t;
        for (this.renderConfig.clearCanvas && this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), t = (this.layers ? this.layers.length : 0) - 1; 0 <= t; t -= 1) this.elements[t] && this.elements[t].destroy();
        this.elements.length = 0, this.globalData.canvasContext = null, this.animationItem.container = null, this.destroyed = !0
    }, CanvasRenderer.prototype.renderFrame = function(t, e) {
        if ((this.renderedFrame !== t || !0 !== this.renderConfig.clearCanvas || e) && !this.destroyed && -1 !== t) {
            var r;
            this.renderedFrame = t, this.globalData.frameNum = t - this.animationItem._isFirstFrame, this.globalData.frameId += 1, this.globalData._mdf = !this.renderConfig.clearCanvas || e, this.globalData.projectInterface.currentFrame = t;
            var i = this.layers.length;
            for (this.completeLayers || this.checkLayers(t), r = 0; r < i; r += 1)(this.completeLayers || this.elements[r]) && this.elements[r].prepareFrame(t - this.layers[r].st);
            if (this.globalData._mdf) {
                for (!0 === this.renderConfig.clearCanvas ? this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h) : this.save(), r = i - 1; 0 <= r; r -= 1)(this.completeLayers || this.elements[r]) && this.elements[r].renderFrame();
                !0 !== this.renderConfig.clearCanvas && this.restore()
            }
        }
    }, CanvasRenderer.prototype.buildItem = function(t) {
        var e = this.elements;
        if (!e[t] && 99 !== this.layers[t].ty) {
            var r = this.createItem(this.layers[t], this, this.globalData);
            (e[t] = r).initExpressions()
        }
    }, CanvasRenderer.prototype.checkPendingElements = function() {
        for (; this.pendingElements.length;) {
            this.pendingElements.pop().checkParenting()
        }
    }, CanvasRenderer.prototype.hide = function() {
        this.animationItem.container.style.display = "none"
    }, CanvasRenderer.prototype.show = function() {
        this.animationItem.container.style.display = "block"
    }, extendPrototype([BaseRenderer], HybridRenderer), HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem, HybridRenderer.prototype.checkPendingElements = function() {
        for (; this.pendingElements.length;) {
            this.pendingElements.pop().checkParenting()
        }
    }, HybridRenderer.prototype.appendElementInPos = function(t, e) {
        var r = t.getBaseElement();
        if (r) {
            var i = this.layers[e];
            if (i.ddd && this.supports3d) this.addTo3dContainer(r, e);
            else if (this.threeDElements) this.addTo3dContainer(r, e);
            else {
                for (var s, a, n = 0; n < e;) this.elements[n] && !0 !== this.elements[n] && this.elements[n].getBaseElement && (a = this.elements[n], s = (this.layers[n].ddd ? this.getThreeDContainerByPos(n) : a.getBaseElement()) || s), n += 1;
                s ? i.ddd && this.supports3d || this.layerElement.insertBefore(r, s) : i.ddd && this.supports3d || this.layerElement.appendChild(r)
            }
        }
    }, HybridRenderer.prototype.createShape = function(t) {
        return this.supports3d ? new HShapeElement(t, this.globalData, this) : new SVGShapeElement(t, this.globalData, this)
    }, HybridRenderer.prototype.createText = function(t) {
        return this.supports3d ? new HTextElement(t, this.globalData, this) : new SVGTextLottieElement(t, this.globalData, this)
    }, HybridRenderer.prototype.createCamera = function(t) {
        return this.camera = new HCameraElement(t, this.globalData, this), this.camera
    }, HybridRenderer.prototype.createImage = function(t) {
        return this.supports3d ? new HImageElement(t, this.globalData, this) : new IImageElement(t, this.globalData, this)
    }, HybridRenderer.prototype.createComp = function(t) {
        return this.supports3d ? new HCompElement(t, this.globalData, this) : new SVGCompElement(t, this.globalData, this)
    }, HybridRenderer.prototype.createSolid = function(t) {
        return this.supports3d ? new HSolidElement(t, this.globalData, this) : new ISolidElement(t, this.globalData, this)
    }, HybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull, HybridRenderer.prototype.getThreeDContainerByPos = function(t) {
        for (var e = 0, r = this.threeDElements.length; e < r;) {
            if (this.threeDElements[e].startPos <= t && this.threeDElements[e].endPos >= t) return this.threeDElements[e].perspectiveElem;
            e += 1
        }
        return null
    }, HybridRenderer.prototype.createThreeDContainer = function(t, e) {
        var r, i, s = createTag("div");
        styleDiv(s);
        var a = createTag("div");
        if (styleDiv(a), "3d" === e) {
            (r = s.style).width = this.globalData.compSize.w + "px", r.height = this.globalData.compSize.h + "px";
            var n = "50% 50%";
            r.webkitTransformOrigin = n, r.mozTransformOrigin = n, r.transformOrigin = n;
            var o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
            (i = a.style).transform = o, i.webkitTransform = o
        }
        s.appendChild(a);
        var h = {
            container: a,
            perspectiveElem: s,
            startPos: t,
            endPos: t,
            type: e
        };
        return this.threeDElements.push(h), h
    }, HybridRenderer.prototype.build3dContainers = function() {
        var t, e, r = this.layers.length,
            i = "";
        for (t = 0; t < r; t += 1) this.layers[t].ddd && 3 !== this.layers[t].ty ? "3d" !== i && (i = "3d", e = this.createThreeDContainer(t, "3d")) : "2d" !== i && (i = "2d", e = this.createThreeDContainer(t, "2d")), e.endPos = Math.max(e.endPos, t);
        for (t = (r = this.threeDElements.length) - 1; 0 <= t; t -= 1) this.resizerElem.appendChild(this.threeDElements[t].perspectiveElem)
    }, HybridRenderer.prototype.addTo3dContainer = function(t, e) {
        for (var r = 0, i = this.threeDElements.length; r < i;) {
            if (e <= this.threeDElements[r].endPos) {
                for (var s, a = this.threeDElements[r].startPos; a < e;) this.elements[a] && this.elements[a].getBaseElement && (s = this.elements[a].getBaseElement()), a += 1;
                s ? this.threeDElements[r].container.insertBefore(t, s) : this.threeDElements[r].container.appendChild(t);
                break
            }
            r += 1
        }
    }, HybridRenderer.prototype.configAnimation = function(t) {
        var e = createTag("div"),
            r = this.animationItem.wrapper,
            i = e.style;
        i.width = t.w + "px", i.height = t.h + "px", styleDiv(this.resizerElem = e), i.transformStyle = "flat", i.mozTransformStyle = "flat", i.webkitTransformStyle = "flat", this.renderConfig.className && e.setAttribute("class", this.renderConfig.className), r.appendChild(e), i.overflow = "hidden";
        var s = createNS("svg");
        s.setAttribute("width", "1"), s.setAttribute("height", "1"), styleDiv(s), this.resizerElem.appendChild(s);
        var a = createNS("defs");
        s.appendChild(a), this.data = t, this.setupGlobalData(t, s), this.globalData.defs = a, this.layers = t.layers, this.layerElement = this.resizerElem, this.build3dContainers(), this.updateContainerSize()
    }, HybridRenderer.prototype.destroy = function() {
        var t;
        this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), this.animationItem.container = null, this.globalData.defs = null;
        var e = this.layers ? this.layers.length : 0;
        for (t = 0; t < e; t += 1) this.elements[t].destroy();
        this.elements.length = 0, this.destroyed = !0, this.animationItem = null
    }, HybridRenderer.prototype.updateContainerSize = function() {
        var t, e, r, i, s = this.animationItem.wrapper.offsetWidth,
            a = this.animationItem.wrapper.offsetHeight;
        i = s / a < this.globalData.compSize.w / this.globalData.compSize.h ? (t = s / this.globalData.compSize.w, e = s / this.globalData.compSize.w, r = 0, (a - this.globalData.compSize.h * (s / this.globalData.compSize.w)) / 2) : (t = a / this.globalData.compSize.h, e = a / this.globalData.compSize.h, r = (s - this.globalData.compSize.w * (a / this.globalData.compSize.h)) / 2, 0);
        var n = this.resizerElem.style;
        n.webkitTransform = "matrix3d(" + t + ",0,0,0,0," + e + ",0,0,0,0,1,0," + r + "," + i + ",0,1)", n.transform = n.webkitTransform
    }, HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame, HybridRenderer.prototype.hide = function() {
        this.resizerElem.style.display = "none"
    }, HybridRenderer.prototype.show = function() {
        this.resizerElem.style.display = "block"
    }, HybridRenderer.prototype.initItems = function() {
        if (this.buildAllItems(), this.camera) this.camera.setup();
        else {
            var t, e = this.globalData.compSize.w,
                r = this.globalData.compSize.h,
                i = this.threeDElements.length;
            for (t = 0; t < i; t += 1) {
                var s = this.threeDElements[t].perspectiveElem.style;
                s.webkitPerspective = Math.sqrt(Math.pow(e, 2) + Math.pow(r, 2)) + "px", s.perspective = s.webkitPerspective
            }
        }
    }, HybridRenderer.prototype.searchExtraCompositions = function(t) {
        var e, r = t.length,
            i = createTag("div");
        for (e = 0; e < r; e += 1)
            if (t[e].xt) {
                var s = this.createComp(t[e], i, this.globalData.comp, null);
                s.initExpressions(), this.globalData.projectInterface.registerComposition(s)
            }
    }, MaskElement.prototype.getMaskProperty = function(t) {
        return this.viewData[t].prop
    }, MaskElement.prototype.renderFrame = function(t) {
        var e, r = this.element.finalTransform.mat,
            i = this.masksProperties.length;
        for (e = 0; e < i; e += 1)
            if ((this.viewData[e].prop._mdf || t) && this.drawPath(this.masksProperties[e], this.viewData[e].prop.v, this.viewData[e]), (this.viewData[e].op._mdf || t) && this.viewData[e].elem.setAttribute("fill-opacity", this.viewData[e].op.v), "n" !== this.masksProperties[e].mode && (this.viewData[e].invRect && (this.element.finalTransform.mProp._mdf || t) && this.viewData[e].invRect.setAttribute("transform", r.getInverseMatrix().to2dCSS()), this.storedData[e].x && (this.storedData[e].x._mdf || t))) {
                var s = this.storedData[e].expan;
                this.storedData[e].x.v < 0 ? ("erode" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "erode", this.storedData[e].elem.setAttribute("filter", "url(" + locationHref + "#" + this.storedData[e].filterId + ")")), s.setAttribute("radius", -this.storedData[e].x.v)) : ("dilate" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "dilate", this.storedData[e].elem.setAttribute("filter", null)), this.storedData[e].elem.setAttribute("stroke-width", 2 * this.storedData[e].x.v))
            }
    }, MaskElement.prototype.getMaskelement = function() {
        return this.maskElement
    }, MaskElement.prototype.createLayerSolidPath = function() {
        var t = "M0,0 ";
        return t += " h" + this.globalData.compSize.w, t += " v" + this.globalData.compSize.h, t += " h-" + this.globalData.compSize.w, t += " v-" + this.globalData.compSize.h + " "
    }, MaskElement.prototype.drawPath = function(t, e, r) {
        var i, s, a = " M" + e.v[0][0] + "," + e.v[0][1];
        for (s = e._length, i = 1; i < s; i += 1) a += " C" + e.o[i - 1][0] + "," + e.o[i - 1][1] + " " + e.i[i][0] + "," + e.i[i][1] + " " + e.v[i][0] + "," + e.v[i][1];
        if (e.c && 1 < s && (a += " C" + e.o[i - 1][0] + "," + e.o[i - 1][1] + " " + e.i[0][0] + "," + e.i[0][1] + " " + e.v[0][0] + "," + e.v[0][1]), r.lastPath !== a) {
            var n = "";
            r.elem && (e.c && (n = t.inv ? this.solidPath + a : a), r.elem.setAttribute("d", n)), r.lastPath = a
        }
    }, MaskElement.prototype.destroy = function() {
        this.element = null, this.globalData = null, this.maskElement = null, this.data = null, this.masksProperties = null
    }, HierarchyElement.prototype = {
        initHierarchy: function() {
            this.hierarchy = [], this._isParent = !1, this.checkParenting()
        },
        setHierarchy: function(t) {
            this.hierarchy = t
        },
        setAsParent: function() {
            this._isParent = !0
        },
        checkParenting: function() {
            void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, [])
        }
    }, FrameElement.prototype = {
        initFrame: function() {
            this._isFirstFrame = !1, this.dynamicProperties = [], this._mdf = !1
        },
        prepareProperties: function(t, e) {
            var r, i = this.dynamicProperties.length;
            for (r = 0; r < i; r += 1)(e || this._isParent && "transform" === this.dynamicProperties[r].propType) && (this.dynamicProperties[r].getValue(), this.dynamicProperties[r]._mdf && (this.globalData._mdf = !0, this._mdf = !0))
        },
        addDynamicProperty: function(t) {
            -1 === this.dynamicProperties.indexOf(t) && this.dynamicProperties.push(t)
        }
    }, TransformElement.prototype = {
        initTransform: function() {
            this.finalTransform = {
                mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {
                    o: 0
                },
                _matMdf: !1,
                _opMdf: !1,
                mat: new Matrix
            }, this.data.ao && (this.finalTransform.mProp.autoOriented = !0), this.data.ty
        },
        renderTransform: function() {
            if (this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame, this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame, this.hierarchy) {
                var t, e = this.finalTransform.mat,
                    r = 0,
                    i = this.hierarchy.length;
                if (!this.finalTransform._matMdf)
                    for (; r < i;) {
                        if (this.hierarchy[r].finalTransform.mProp._mdf) {
                            this.finalTransform._matMdf = !0;
                            break
                        }
                        r += 1
                    }
                if (this.finalTransform._matMdf)
                    for (t = this.finalTransform.mProp.v.props, e.cloneFromProps(t), r = 0; r < i; r += 1) t = this.hierarchy[r].finalTransform.mProp.v.props, e.transform(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15])
            }
        },
        globalToLocal: function(t) {
            var e = [];
            e.push(this.finalTransform);
            for (var r, i = !0, s = this.comp; i;) s.finalTransform ? (s.data.hasMask && e.splice(0, 0, s.finalTransform), s = s.comp) : i = !1;
            var a, n = e.length;
            for (r = 0; r < n; r += 1) a = e[r].mat.applyToPointArray(0, 0, 0), t = [t[0] - a[0], t[1] - a[1], 0];
            return t
        },
        mHelper: new Matrix
    }, RenderableElement.prototype = {
        initRenderable: function() {
            this.isInRange = !1, this.hidden = !1, this.isTransparent = !1, this.renderableComponents = []
        },
        addRenderableComponent: function(t) {
            -1 === this.renderableComponents.indexOf(t) && this.renderableComponents.push(t)
        },
        removeRenderableComponent: function(t) {
            -1 !== this.renderableComponents.indexOf(t) && this.renderableComponents.splice(this.renderableComponents.indexOf(t), 1)
        },
        prepareRenderableFrame: function(t) {
            this.checkLayerLimits(t)
        },
        checkTransparency: function() {
            this.finalTransform.mProp.o.v <= 0 ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && (this.isTransparent = !0, this.hide()) : this.isTransparent && (this.isTransparent = !1, this.show())
        },
        checkLayerLimits: function(t) {
            this.data.ip - this.data.st <= t && this.data.op - this.data.st > t ? !0 !== this.isInRange && (this.globalData._mdf = !0, this._mdf = !0, this.isInRange = !0, this.show()) : !1 !== this.isInRange && (this.globalData._mdf = !0, this.isInRange = !1, this.hide())
        },
        renderRenderable: function() {
            var t, e = this.renderableComponents.length;
            for (t = 0; t < e; t += 1) this.renderableComponents[t].renderFrame(this._isFirstFrame)
        },
        sourceRectAtTime: function() {
            return {
                top: 0,
                left: 0,
                width: 100,
                height: 100
            }
        },
        getLayerSize: function() {
            return 5 === this.data.ty ? {
                w: this.data.textData.width,
                h: this.data.textData.height
            } : {
                w: this.data.width,
                h: this.data.height
            }
        }
    }, extendPrototype([RenderableElement, createProxyFunction({
        initElement: function(t, e, r) {
            this.initFrame(), this.initBaseData(t, e, r), this.initTransform(t, e, r), this.initHierarchy(), this.initRenderable(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), this.createContent(), this.hide()
        },
        hide: function() {
            this.hidden || this.isInRange && !this.isTransparent || ((this.baseElement || this.layerElement).style.display = "none", this.hidden = !0)
        },
        show: function() {
            this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = "block"), this.hidden = !1, this._isFirstFrame = !0)
        },
        renderFrame: function() {
            this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = !1))
        },
        renderInnerContent: function() {},
        prepareFrame: function(t) {
            this._mdf = !1, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.checkTransparency()
        },
        destroy: function() {
            this.innerElem = null, this.destroyBaseElement()
        }
    })], RenderableDOMElement), SVGStyleData.prototype.reset = function() {
        this.d = "", this._mdf = !1
    }, SVGShapeData.prototype.setAsAnimated = function() {
        this._isAnimated = !0
    }, extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData), extendPrototype([DynamicPropertyContainer], SVGFillStyleData), SVGGradientFillStyleData.prototype.initGradientData = function(t, e, r) {
        this.o = PropertyFactory.getProp(t, e.o, 0, .01, this), this.s = PropertyFactory.getProp(t, e.s, 1, null, this), this.e = PropertyFactory.getProp(t, e.e, 1, null, this), this.h = PropertyFactory.getProp(t, e.h || {
            k: 0
        }, 0, .01, this), this.a = PropertyFactory.getProp(t, e.a || {
            k: 0
        }, 0, degToRads, this), this.g = new GradientProperty(t, e.g, this), this.style = r, this.stops = [], this.setGradientData(r.pElem, e), this.setGradientOpacity(e, r), this._isAnimated = !!this._isAnimated
    }, SVGGradientFillStyleData.prototype.setGradientData = function(t, e) {
        var r = createElementID(),
            i = createNS(1 === e.t ? "linearGradient" : "radialGradient");
        i.setAttribute("id", r), i.setAttribute("spreadMethod", "pad"), i.setAttribute("gradientUnits", "userSpaceOnUse");
        var s, a, n, o = [];
        for (n = 4 * e.g.p, a = 0; a < n; a += 4) s = createNS("stop"), i.appendChild(s), o.push(s);
        t.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(" + locationHref + "#" + r + ")"), this.gf = i, this.cst = o
    }, SVGGradientFillStyleData.prototype.setGradientOpacity = function(t, e) {
        if (this.g._hasOpacity && !this.g._collapsable) {
            var r, i, s, a = createNS("mask"),
                n = createNS("path");
            a.appendChild(n);
            var o = createElementID(),
                h = createElementID();
            a.setAttribute("id", h);
            var l = createNS(1 === t.t ? "linearGradient" : "radialGradient");
            l.setAttribute("id", o), l.setAttribute("spreadMethod", "pad"), l.setAttribute("gradientUnits", "userSpaceOnUse"), s = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length;
            var p = this.stops;
            for (i = 4 * t.g.p; i < s; i += 2)(r = createNS("stop")).setAttribute("stop-color", "rgb(255,255,255)"), l.appendChild(r), p.push(r);
            n.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(" + locationHref + "#" + o + ")"), "gs" === t.ty && (n.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]), n.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]), 1 === t.lj && n.setAttribute("stroke-miterlimit", t.ml)), this.of = l, this.ms = a, this.ost = p, this.maskId = h, e.msElem = n
        }
    }, extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData), extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
    var SVGElementsRenderer = function() {
        var y = new Matrix,
            g = new Matrix;

        function e(t, e, r) {
            (r || e.transform.op._mdf) && e.transform.container.setAttribute("opacity", e.transform.op.v), (r || e.transform.mProps._mdf) && e.transform.container.setAttribute("transform", e.transform.mProps.v.to2dCSS())
        }

        function r(t, e, r) {
            var i, s, a, n, o, h, l, p, m, f, c, d = e.styles.length,
                u = e.lvl;
            for (h = 0; h < d; h += 1) {
                if (n = e.sh._mdf || r, e.styles[h].lvl < u) {
                    for (p = g.reset(), f = u - e.styles[h].lvl, c = e.transformers.length - 1; !n && 0 < f;) n = e.transformers[c].mProps._mdf || n, f -= 1, c -= 1;
                    if (n)
                        for (f = u - e.styles[h].lvl, c = e.transformers.length - 1; 0 < f;) m = e.transformers[c].mProps.v.props, p.transform(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]), f -= 1, c -= 1
                } else p = y;
                if (s = (l = e.sh.paths)._length, n) {
                    for (a = "", i = 0; i < s; i += 1)(o = l.shapes[i]) && o._length && (a += buildShapeString(o, o._length, o.c, p));
                    e.caches[h] = a
                } else a = e.caches[h];
                e.styles[h].d += !0 === t.hd ? "" : a, e.styles[h]._mdf = n || e.styles[h]._mdf
            }
        }

        function i(t, e, r) {
            var i = e.style;
            (e.c._mdf || r) && i.pElem.setAttribute("fill", "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"), (e.o._mdf || r) && i.pElem.setAttribute("fill-opacity", e.o.v)
        }

        function s(t, e, r) {
            a(t, e, r), n(t, e, r)
        }

        function a(t, e, r) {
            var i, s, a, n, o, h = e.gf,
                l = e.g._hasOpacity,
                p = e.s.v,
                m = e.e.v;
            if (e.o._mdf || r) {
                var f = "gf" === t.ty ? "fill-opacity" : "stroke-opacity";
                e.style.pElem.setAttribute(f, e.o.v)
            }
            if (e.s._mdf || r) {
                var c = 1 === t.t ? "x1" : "cx",
                    d = "x1" === c ? "y1" : "cy";
                h.setAttribute(c, p[0]), h.setAttribute(d, p[1]), l && !e.g._collapsable && (e.of.setAttribute(c, p[0]), e.of.setAttribute(d, p[1]))
            }
            if (e.g._cmdf || r) {
                i = e.cst;
                var u = e.g.c;
                for (a = i.length, s = 0; s < a; s += 1)(n = i[s]).setAttribute("offset", u[4 * s] + "%"), n.setAttribute("stop-color", "rgb(" + u[4 * s + 1] + "," + u[4 * s + 2] + "," + u[4 * s + 3] + ")")
            }
            if (l && (e.g._omdf || r)) {
                var y = e.g.o;
                for (a = (i = e.g._collapsable ? e.cst : e.ost).length, s = 0; s < a; s += 1) n = i[s], e.g._collapsable || n.setAttribute("offset", y[2 * s] + "%"), n.setAttribute("stop-opacity", y[2 * s + 1])
            }
            if (1 === t.t)(e.e._mdf || r) && (h.setAttribute("x2", m[0]), h.setAttribute("y2", m[1]), l && !e.g._collapsable && (e.of.setAttribute("x2", m[0]), e.of.setAttribute("y2", m[1])));
            else if ((e.s._mdf || e.e._mdf || r) && (o = Math.sqrt(Math.pow(p[0] - m[0], 2) + Math.pow(p[1] - m[1], 2)), h.setAttribute("r", o), l && !e.g._collapsable && e.of.setAttribute("r", o)), e.e._mdf || e.h._mdf || e.a._mdf || r) {
                o || (o = Math.sqrt(Math.pow(p[0] - m[0], 2) + Math.pow(p[1] - m[1], 2)));
                var g = Math.atan2(m[1] - p[1], m[0] - p[0]),
                    v = e.h.v;
                1 <= v ? v = .99 : v <= -1 && (v = -.99);
                var b = o * v,
                    P = Math.cos(g + e.a.v) * b + p[0],
                    E = Math.sin(g + e.a.v) * b + p[1];
                h.setAttribute("fx", P), h.setAttribute("fy", E), l && !e.g._collapsable && (e.of.setAttribute("fx", P), e.of.setAttribute("fy", E))
            }
        }

        function n(t, e, r) {
            var i = e.style,
                s = e.d;
            s && (s._mdf || r) && s.dashStr && (i.pElem.setAttribute("stroke-dasharray", s.dashStr), i.pElem.setAttribute("stroke-dashoffset", s.dashoffset[0])), e.c && (e.c._mdf || r) && i.pElem.setAttribute("stroke", "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"), (e.o._mdf || r) && i.pElem.setAttribute("stroke-opacity", e.o.v), (e.w._mdf || r) && (i.pElem.setAttribute("stroke-width", e.w.v), i.msElem && i.msElem.setAttribute("stroke-width", e.w.v))
        }
        return {
            createRenderFunction: function(t) {
                switch (t.ty) {
                    case "fl":
                        return i;
                    case "gf":
                        return a;
                    case "gs":
                        return s;
                    case "st":
                        return n;
                    case "sh":
                    case "el":
                    case "rc":
                    case "sr":
                        return r;
                    case "tr":
                        return e;
                    default:
                        return null
                }
            }
        }
    }();

    function ShapeTransformManager() {
        this.sequences = {}, this.sequenceList = [], this.transform_key_count = 0
    }

    function CVShapeData(t, e, r, i) {
        this.styledShapes = [], this.tr = [0, 0, 0, 0, 0, 0];
        var s, a = 4;
        "rc" === e.ty ? a = 5 : "el" === e.ty ? a = 6 : "sr" === e.ty && (a = 7), this.sh = ShapePropertyFactory.getShapeProp(t, e, a, t);
        var n, o = r.length;
        for (s = 0; s < o; s += 1) r[s].closed || (n = {
            transforms: i.addTransformSequence(r[s].transforms),
            trNodes: []
        }, this.styledShapes.push(n), r[s].elements.push(n))
    }

    function BaseElement() {}

    function NullElement(t, e, r) {
        this.initFrame(), this.initBaseData(t, e, r), this.initFrame(), this.initTransform(t, e, r), this.initHierarchy()
    }

    function SVGBaseElement() {}

    function IShapeElement() {}

    function ITextElement() {}

    function ICompElement() {}

    function IImageElement(t, e, r) {
        this.assetData = e.getAssetData(t.refId), this.initElement(t, e, r), this.sourceRect = {
            top: 0,
            left: 0,
            width: this.assetData.w,
            height: this.assetData.h
        }
    }

    function ISolidElement(t, e, r) {
        this.initElement(t, e, r)
    }

    function AudioElement(t, e, r) {
        this.initFrame(), this.initRenderable(), this.assetData = e.getAssetData(t.refId), this.initBaseData(t, e, r), this._isPlaying = !1, this._canPlay = !1;
        var i = this.globalData.getAssetsPath(this.assetData);
        this.audio = this.globalData.audioController.createAudio(i), this._currentTime = 0, this.globalData.audioController.addAudio(this), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
            _placeholder: !0
        }
    }

    function FootageElement(t, e, r) {
        this.initFrame(), this.initRenderable(), this.assetData = e.getAssetData(t.refId), this.footageData = e.imageLoader.getAsset(this.assetData), this.initBaseData(t, e, r)
    }

    function SVGCompElement(t, e, r) {
        this.layers = t.layers, this.supports3d = !0, this.completeLayers = !1, this.pendingElements = [], this.elements = this.layers ? createSizedArray(this.layers.length) : [], this.initElement(t, e, r), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
            _placeholder: !0
        }
    }

    function SVGTextLottieElement(t, e, r) {
        this.textSpans = [], this.renderType = "svg", this.initElement(t, e, r)
    }

    function SVGShapeElement(t, e, r) {
        this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.shapeModifiers = [], this.itemsData = [], this.processedElements = [], this.animatedContents = [], this.initElement(t, e, r), this.prevViewData = []
    }

    function SVGTintFilter(t, e) {
        this.filterManager = e;
        var r = createNS("feColorMatrix");
        if (r.setAttribute("type", "matrix"), r.setAttribute("color-interpolation-filters", "linearRGB"), r.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"), r.setAttribute("result", "f1"), t.appendChild(r), (r = createNS("feColorMatrix")).setAttribute("type", "matrix"), r.setAttribute("color-interpolation-filters", "sRGB"), r.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"), r.setAttribute("result", "f2"), t.appendChild(r), this.matrixFilter = r, 100 !== e.effectElements[2].p.v || e.effectElements[2].p.k) {
            var i, s = createNS("feMerge");
            t.appendChild(s), (i = createNS("feMergeNode")).setAttribute("in", "SourceGraphic"), s.appendChild(i), (i = createNS("feMergeNode")).setAttribute("in", "f2"), s.appendChild(i)
        }
    }

    function SVGFillFilter(t, e) {
        this.filterManager = e;
        var r = createNS("feColorMatrix");
        r.setAttribute("type", "matrix"), r.setAttribute("color-interpolation-filters", "sRGB"), r.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"), t.appendChild(r), this.matrixFilter = r
    }

    function SVGGaussianBlurEffect(t, e) {
        t.setAttribute("x", "-100%"), t.setAttribute("y", "-100%"), t.setAttribute("width", "300%"), t.setAttribute("height", "300%"), this.filterManager = e;
        var r = createNS("feGaussianBlur");
        t.appendChild(r), this.feGaussianBlur = r
    }

    function SVGStrokeEffect(t, e) {
        this.initialized = !1, this.filterManager = e, this.elem = t, this.paths = []
    }

    function SVGTritoneFilter(t, e) {
        this.filterManager = e;
        var r = createNS("feColorMatrix");
        r.setAttribute("type", "matrix"), r.setAttribute("color-interpolation-filters", "linearRGB"), r.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"), r.setAttribute("result", "f1"), t.appendChild(r);
        var i = createNS("feComponentTransfer");
        i.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(i), this.matrixFilter = i;
        var s = createNS("feFuncR");
        s.setAttribute("type", "table"), i.appendChild(s), this.feFuncR = s;
        var a = createNS("feFuncG");
        a.setAttribute("type", "table"), i.appendChild(a), this.feFuncG = a;
        var n = createNS("feFuncB");
        n.setAttribute("type", "table"), i.appendChild(n), this.feFuncB = n
    }

    function SVGProLevelsFilter(t, e) {
        this.filterManager = e;
        var r = this.filterManager.effectElements,
            i = createNS("feComponentTransfer");
        (r[10].p.k || 0 !== r[10].p.v || r[11].p.k || 1 !== r[11].p.v || r[12].p.k || 1 !== r[12].p.v || r[13].p.k || 0 !== r[13].p.v || r[14].p.k || 1 !== r[14].p.v) && (this.feFuncR = this.createFeFunc("feFuncR", i)), (r[17].p.k || 0 !== r[17].p.v || r[18].p.k || 1 !== r[18].p.v || r[19].p.k || 1 !== r[19].p.v || r[20].p.k || 0 !== r[20].p.v || r[21].p.k || 1 !== r[21].p.v) && (this.feFuncG = this.createFeFunc("feFuncG", i)), (r[24].p.k || 0 !== r[24].p.v || r[25].p.k || 1 !== r[25].p.v || r[26].p.k || 1 !== r[26].p.v || r[27].p.k || 0 !== r[27].p.v || r[28].p.k || 1 !== r[28].p.v) && (this.feFuncB = this.createFeFunc("feFuncB", i)), (r[31].p.k || 0 !== r[31].p.v || r[32].p.k || 1 !== r[32].p.v || r[33].p.k || 1 !== r[33].p.v || r[34].p.k || 0 !== r[34].p.v || r[35].p.k || 1 !== r[35].p.v) && (this.feFuncA = this.createFeFunc("feFuncA", i)), (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (i.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(i), i = createNS("feComponentTransfer")), (r[3].p.k || 0 !== r[3].p.v || r[4].p.k || 1 !== r[4].p.v || r[5].p.k || 1 !== r[5].p.v || r[6].p.k || 0 !== r[6].p.v || r[7].p.k || 1 !== r[7].p.v) && (i.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(i), this.feFuncRComposed = this.createFeFunc("feFuncR", i), this.feFuncGComposed = this.createFeFunc("feFuncG", i), this.feFuncBComposed = this.createFeFunc("feFuncB", i))
    }

    function SVGDropShadowEffect(t, e) {
        var r = e.container.globalData.renderConfig.filterSize;
        t.setAttribute("x", r.x), t.setAttribute("y", r.y), t.setAttribute("width", r.width), t.setAttribute("height", r.height), this.filterManager = e;
        var i = createNS("feGaussianBlur");
        i.setAttribute("in", "SourceAlpha"), i.setAttribute("result", "drop_shadow_1"), i.setAttribute("stdDeviation", "0"), this.feGaussianBlur = i, t.appendChild(i);
        var s = createNS("feOffset");
        s.setAttribute("dx", "25"), s.setAttribute("dy", "0"), s.setAttribute("in", "drop_shadow_1"), s.setAttribute("result", "drop_shadow_2"), this.feOffset = s, t.appendChild(s);
        var a = createNS("feFlood");
        a.setAttribute("flood-color", "#00ff00"), a.setAttribute("flood-opacity", "1"), a.setAttribute("result", "drop_shadow_3"), this.feFlood = a, t.appendChild(a);
        var n = createNS("feComposite");
        n.setAttribute("in", "drop_shadow_3"), n.setAttribute("in2", "drop_shadow_2"), n.setAttribute("operator", "in"), n.setAttribute("result", "drop_shadow_4"), t.appendChild(n);
        var o, h = createNS("feMerge");
        t.appendChild(h), o = createNS("feMergeNode"), h.appendChild(o), (o = createNS("feMergeNode")).setAttribute("in", "SourceGraphic"), this.feMergeNode = o, this.feMerge = h, this.originalNodeAdded = !1, h.appendChild(o)
    }
    ShapeTransformManager.prototype = {
        addTransformSequence: function(t) {
            var e, r = t.length,
                i = "_";
            for (e = 0; e < r; e += 1) i += t[e].transform.key + "_";
            var s = this.sequences[i];
            return s || (s = {
                transforms: [].concat(t),
                finalTransform: new Matrix,
                _mdf: !1
            }, this.sequences[i] = s, this.sequenceList.push(s)), s
        },
        processSequence: function(t, e) {
            for (var r, i = 0, s = t.transforms.length, a = e; i < s && !e;) {
                if (t.transforms[i].transform.mProps._mdf) {
                    a = !0;
                    break
                }
                i += 1
            }
            if (a)
                for (t.finalTransform.reset(), i = s - 1; 0 <= i; i -= 1) r = t.transforms[i].transform.mProps.v.props, t.finalTransform.transform(r[0], r[1], r[2], r[3], r[4], r[5], r[6], r[7], r[8], r[9], r[10], r[11], r[12], r[13], r[14], r[15]);
            t._mdf = a
        },
        processSequences: function(t) {
            var e, r = this.sequenceList.length;
            for (e = 0; e < r; e += 1) this.processSequence(this.sequenceList[e], t)
        },
        getNewKey: function() {
            return this.transform_key_count += 1, "_" + this.transform_key_count
        }
    }, CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated, BaseElement.prototype = {
        checkMasks: function() {
            if (!this.data.hasMask) return !1;
            for (var t = 0, e = this.data.masksProperties.length; t < e;) {
                if ("n" !== this.data.masksProperties[t].mode && !1 !== this.data.masksProperties[t].cl) return !0;
                t += 1
            }
            return !1
        },
        initExpressions: function() {
            this.layerInterface = LayerExpressionInterface(this), this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);
            var t = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);
            this.layerInterface.registerEffectsInterface(t), 0 === this.data.ty || this.data.xt ? this.compInterface = CompExpressionInterface(this) : 4 === this.data.ty ? (this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface), this.layerInterface.content = this.layerInterface.shapeInterface) : 5 === this.data.ty && (this.layerInterface.textInterface = TextExpressionInterface(this), this.layerInterface.text = this.layerInterface.textInterface)
        },
        setBlendMode: function() {
            var t = getBlendMode(this.data.bm);
            (this.baseElement || this.layerElement).style["mix-blend-mode"] = t
        },
        initBaseData: function(t, e, r) {
            this.globalData = e, this.comp = r, this.data = t, this.layerId = createElementID(), this.data.sr || (this.data.sr = 1), this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties)
        },
        getType: function() {
            return this.type
        },
        sourceRectAtTime: function() {}
    }, NullElement.prototype.prepareFrame = function(t) {
        this.prepareProperties(t, !0)
    }, NullElement.prototype.renderFrame = function() {}, NullElement.prototype.getBaseElement = function() {
        return null
    }, NullElement.prototype.destroy = function() {}, NullElement.prototype.sourceRectAtTime = function() {}, NullElement.prototype.hide = function() {}, extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement), SVGBaseElement.prototype = {
        initRendererElement: function() {
            this.layerElement = createNS("g")
        },
        createContainerElements: function() {
            this.matteElement = createNS("g"), this.transformedElement = this.layerElement, this.maskedElement = this.layerElement, this._sizeChanged = !1;
            var t, e, r, i = null;
            if (this.data.td) {
                if (3 == this.data.td || 1 == this.data.td) {
                    var s = createNS("mask");
                    s.setAttribute("id", this.layerId), s.setAttribute("mask-type", 3 == this.data.td ? "luminance" : "alpha"), s.appendChild(this.layerElement), i = s, this.globalData.defs.appendChild(s), featureSupport.maskType || 1 != this.data.td || (s.setAttribute("mask-type", "luminance"), t = createElementID(), e = filtersFactory.createFilter(t), this.globalData.defs.appendChild(e), e.appendChild(filtersFactory.createAlphaToLuminanceFilter()), (r = createNS("g")).appendChild(this.layerElement), i = r, s.appendChild(r), r.setAttribute("filter", "url(" + locationHref + "#" + t + ")"))
                } else if (2 == this.data.td) {
                    var a = createNS("mask");
                    a.setAttribute("id", this.layerId), a.setAttribute("mask-type", "alpha");
                    var n = createNS("g");
                    a.appendChild(n), t = createElementID(), e = filtersFactory.createFilter(t);
                    var o = createNS("feComponentTransfer");
                    o.setAttribute("in", "SourceGraphic"), e.appendChild(o);
                    var h = createNS("feFuncA");
                    h.setAttribute("type", "table"), h.setAttribute("tableValues", "1.0 0.0"), o.appendChild(h), this.globalData.defs.appendChild(e);
                    var l = createNS("rect");
                    l.setAttribute("width", this.comp.data.w), l.setAttribute("height", this.comp.data.h), l.setAttribute("x", "0"), l.setAttribute("y", "0"), l.setAttribute("fill", "#ffffff"), l.setAttribute("opacity", "0"), n.setAttribute("filter", "url(" + locationHref + "#" + t + ")"), n.appendChild(l), n.appendChild(this.layerElement), i = n, featureSupport.maskType || (a.setAttribute("mask-type", "luminance"), e.appendChild(filtersFactory.createAlphaToLuminanceFilter()), r = createNS("g"), n.appendChild(l), r.appendChild(this.layerElement), i = r, n.appendChild(r)), this.globalData.defs.appendChild(a)
                }
            } else this.data.tt ? (this.matteElement.appendChild(this.layerElement), i = this.matteElement, this.baseElement = this.matteElement) : this.baseElement = this.layerElement;
            if (this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), 0 === this.data.ty && !this.data.hd) {
                var p = createNS("clipPath"),
                    m = createNS("path");
                m.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
                var f = createElementID();
                if (p.setAttribute("id", f), p.appendChild(m), this.globalData.defs.appendChild(p), this.checkMasks()) {
                    var c = createNS("g");
                    c.setAttribute("clip-path", "url(" + locationHref + "#" + f + ")"), c.appendChild(this.layerElement), this.transformedElement = c, i ? i.appendChild(this.transformedElement) : this.baseElement = this.transformedElement
                } else this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + f + ")")
            }
            0 !== this.data.bm && this.setBlendMode()
        },
        renderElement: function() {
            this.finalTransform._matMdf && this.transformedElement.setAttribute("transform", this.finalTransform.mat.to2dCSS()), this.finalTransform._opMdf && this.transformedElement.setAttribute("opacity", this.finalTransform.mProp.o.v)
        },
        destroyBaseElement: function() {
            this.layerElement = null, this.matteElement = null, this.maskManager.destroy()
        },
        getBaseElement: function() {
            return this.data.hd ? null : this.baseElement
        },
        createRenderableComponents: function() {
            this.maskManager = new MaskElement(this.data, this, this.globalData), this.renderableEffectsManager = new SVGEffects(this)
        },
        setMatte: function(t) {
            this.matteElement && this.matteElement.setAttribute("mask", "url(" + locationHref + "#" + t + ")")
        }
    }, IShapeElement.prototype = {
        addShapeToModifiers: function(t) {
            var e, r = this.shapeModifiers.length;
            for (e = 0; e < r; e += 1) this.shapeModifiers[e].addShape(t)
        },
        isShapeInAnimatedModifiers: function(t) {
            for (var e = this.shapeModifiers.length; 0 < e;)
                if (this.shapeModifiers[0].isAnimatedWithShape(t)) return !0;
            return !1
        },
        renderModifiers: function() {
            if (this.shapeModifiers.length) {
                var t, e = this.shapes.length;
                for (t = 0; t < e; t += 1) this.shapes[t].sh.reset();
                for (t = (e = this.shapeModifiers.length) - 1; 0 <= t && !this.shapeModifiers[t].processShapes(this._isFirstFrame); t -= 1);
            }
        },
        searchProcessedElement: function(t) {
            for (var e = this.processedElements, r = 0, i = e.length; r < i;) {
                if (e[r].elem === t) return e[r].pos;
                r += 1
            }
            return 0
        },
        addProcessedElement: function(t, e) {
            for (var r = this.processedElements, i = r.length; i;)
                if (r[i -= 1].elem === t) return void(r[i].pos = e);
            r.push(new ProcessedElement(t, e))
        },
        prepareFrame: function(t) {
            this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange)
        }
    }, ITextElement.prototype.initElement = function(t, e, r) {
        this.lettersChangedFlag = !0, this.initFrame(), this.initBaseData(t, e, r), this.textProperty = new TextProperty(this, t.t, this.dynamicProperties), this.textAnimator = new TextAnimatorProperty(t.t, this.renderType, this), this.initTransform(t, e, r), this.initHierarchy(), this.initRenderable(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), this.createContent(), this.hide(), this.textAnimator.searchProperties(this.dynamicProperties)
    }, ITextElement.prototype.prepareFrame = function(t) {
        this._mdf = !1, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(), this.textProperty._isFirstFrame = !1, this.textProperty._mdf = !1)
    }, ITextElement.prototype.createPathShape = function(t, e) {
        var r, i, s = e.length,
            a = "";
        for (r = 0; r < s; r += 1) i = e[r].ks.k, a += buildShapeString(i, i.i.length, !0, t);
        return a
    }, ITextElement.prototype.updateDocumentData = function(t, e) {
        this.textProperty.updateDocumentData(t, e)
    }, ITextElement.prototype.canResizeFont = function(t) {
        this.textProperty.canResizeFont(t)
    }, ITextElement.prototype.setMinimumFontSize = function(t) {
        this.textProperty.setMinimumFontSize(t)
    }, ITextElement.prototype.applyTextPropertiesToMatrix = function(t, e, r, i, s) {
        switch (t.ps && e.translate(t.ps[0], t.ps[1] + t.ascent, 0), e.translate(0, -t.ls, 0), t.j) {
            case 1:
                e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[r]), 0, 0);
                break;
            case 2:
                e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[r]) / 2, 0, 0)
        }
        e.translate(i, s, 0)
    }, ITextElement.prototype.buildColor = function(t) {
        return "rgb(" + Math.round(255 * t[0]) + "," + Math.round(255 * t[1]) + "," + Math.round(255 * t[2]) + ")"
    }, ITextElement.prototype.emptyProp = new LetterProps, ITextElement.prototype.destroy = function() {}, extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement), ICompElement.prototype.initElement = function(t, e, r) {
        this.initFrame(), this.initBaseData(t, e, r), this.initTransform(t, e, r), this.initRenderable(), this.initHierarchy(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), !this.data.xt && e.progressiveLoad || this.buildAllItems(), this.hide()
    }, ICompElement.prototype.prepareFrame = function(t) {
        if (this._mdf = !1, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.isInRange || this.data.xt) {
            if (this.tm._placeholder) this.renderedFrame = t / this.data.sr;
            else {
                var e = this.tm.v;
                e === this.data.op && (e = this.data.op - 1), this.renderedFrame = e
            }
            var r, i = this.elements.length;
            for (this.completeLayers || this.checkLayers(this.renderedFrame), r = i - 1; 0 <= r; r -= 1)(this.completeLayers || this.elements[r]) && (this.elements[r].prepareFrame(this.renderedFrame - this.layers[r].st), this.elements[r]._mdf && (this._mdf = !0))
        }
    }, ICompElement.prototype.renderInnerContent = function() {
        var t, e = this.layers.length;
        for (t = 0; t < e; t += 1)(this.completeLayers || this.elements[t]) && this.elements[t].renderFrame()
    }, ICompElement.prototype.setElements = function(t) {
        this.elements = t
    }, ICompElement.prototype.getElements = function() {
        return this.elements
    }, ICompElement.prototype.destroyElements = function() {
        var t, e = this.layers.length;
        for (t = 0; t < e; t += 1) this.elements[t] && this.elements[t].destroy()
    }, ICompElement.prototype.destroy = function() {
        this.destroyElements(), this.destroyBaseElement()
    }, extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement), IImageElement.prototype.createContent = function() {
        var t = this.globalData.getAssetsPath(this.assetData);
        this.innerElem = createNS("image"), this.innerElem.setAttribute("width", this.assetData.w + "px"), this.innerElem.setAttribute("height", this.assetData.h + "px"), this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio), this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t), this.layerElement.appendChild(this.innerElem)
    }, IImageElement.prototype.sourceRectAtTime = function() {
        return this.sourceRect
    }, extendPrototype([IImageElement], ISolidElement), ISolidElement.prototype.createContent = function() {
        var t = createNS("rect");
        t.setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.layerElement.appendChild(t)
    }, AudioElement.prototype.prepareFrame = function(t) {
        if (this.prepareRenderableFrame(t, !0), this.prepareProperties(t, !0), this.tm._placeholder) this._currentTime = t / this.data.sr;
        else {
            var e = this.tm.v;
            this._currentTime = e
        }
    }, extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement), AudioElement.prototype.renderFrame = function() {
        this.isInRange && this._canPlay && (this._isPlaying ? (!this.audio.playing() || .1 < Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek())) && this.audio.seek(this._currentTime / this.globalData.frameRate) : (this.audio.play(), this.audio.seek(this._currentTime / this.globalData.frameRate), this._isPlaying = !0))
    }, AudioElement.prototype.show = function() {}, AudioElement.prototype.hide = function() {
        this.audio.pause(), this._isPlaying = !1
    }, AudioElement.prototype.pause = function() {
        this.audio.pause(), this._isPlaying = !1, this._canPlay = !1
    }, AudioElement.prototype.resume = function() {
        this._canPlay = !0
    }, AudioElement.prototype.setRate = function(t) {
        this.audio.rate(t)
    }, AudioElement.prototype.volume = function(t) {
        this.audio.volume(t)
    }, AudioElement.prototype.getBaseElement = function() {
        return null
    }, AudioElement.prototype.destroy = function() {}, AudioElement.prototype.sourceRectAtTime = function() {}, AudioElement.prototype.initExpressions = function() {}, FootageElement.prototype.prepareFrame = function() {}, extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement), FootageElement.prototype.getBaseElement = function() {
        return null
    }, FootageElement.prototype.renderFrame = function() {}, FootageElement.prototype.destroy = function() {}, FootageElement.prototype.initExpressions = function() {
        this.layerInterface = FootageInterface(this)
    }, FootageElement.prototype.getFootageData = function() {
        return this.footageData
    }, extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement), extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement), SVGTextLottieElement.prototype.createContent = function() {
        this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS("text"))
    }, SVGTextLottieElement.prototype.buildTextContents = function(t) {
        for (var e = 0, r = t.length, i = [], s = ""; e < r;) t[e] === String.fromCharCode(13) || t[e] === String.fromCharCode(3) ? (i.push(s), s = "") : s += t[e], e += 1;
        return i.push(s), i
    }, SVGTextLottieElement.prototype.buildNewText = function() {
        var t, e, r = this.textProperty.currentData;
        this.renderedLetters = createSizedArray(r ? r.l.length : 0), r.fc ? this.layerElement.setAttribute("fill", this.buildColor(r.fc)) : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"), r.sc && (this.layerElement.setAttribute("stroke", this.buildColor(r.sc)), this.layerElement.setAttribute("stroke-width", r.sw)), this.layerElement.setAttribute("font-size", r.finalSize);
        var i = this.globalData.fontManager.getFontByName(r.f);
        if (i.fClass) this.layerElement.setAttribute("class", i.fClass);
        else {
            this.layerElement.setAttribute("font-family", i.fFamily);
            var s = r.fWeight,
                a = r.fStyle;
            this.layerElement.setAttribute("font-style", a), this.layerElement.setAttribute("font-weight", s)
        }
        this.layerElement.setAttribute("aria-label", r.t);
        var n, o = r.l || [],
            h = !!this.globalData.fontManager.chars;
        e = o.length;
        var l, p = this.mHelper,
            m = "",
            f = this.data.singleShape,
            c = 0,
            d = 0,
            u = !0,
            y = .001 * r.tr * r.finalSize;
        if (!f || h || r.sz) {
            var g, v, b = this.textSpans.length;
            for (t = 0; t < e; t += 1) h && f && 0 !== t || (n = t < b ? this.textSpans[t] : createNS(h ? "path" : "text"), b <= t && (n.setAttribute("stroke-linecap", "butt"), n.setAttribute("stroke-linejoin", "round"), n.setAttribute("stroke-miterlimit", "4"), this.textSpans[t] = n, this.layerElement.appendChild(n)), n.style.display = "inherit"), p.reset(), p.scale(r.finalSize / 100, r.finalSize / 100), f && (o[t].n && (c = -y, d += r.yOffset, d += u ? 1 : 0, u = !1), this.applyTextPropertiesToMatrix(r, p, o[t].line, c, d), c += o[t].l || 0, c += y), h ? (l = (g = (v = this.globalData.fontManager.getCharData(r.finalText[t], i.fStyle, this.globalData.fontManager.getFontByName(r.f).fFamily)) && v.data || {}).shapes ? g.shapes[0].it : [], f ? m += this.createPathShape(p, l) : n.setAttribute("d", this.createPathShape(p, l))) : (f && n.setAttribute("transform", "translate(" + p.props[12] + "," + p.props[13] + ")"), n.textContent = o[t].val, n.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"));
            f && n && n.setAttribute("d", m)
        } else {
            var P = this.textContainer,
                E = "start";
            switch (r.j) {
                case 1:
                    E = "end";
                    break;
                case 2:
                    E = "middle";
                    break;
                default:
                    E = "start"
            }
            P.setAttribute("text-anchor", E), P.setAttribute("letter-spacing", y);
            var x = this.buildTextContents(r.finalText);
            for (e = x.length, d = r.ps ? r.ps[1] + r.ascent : 0, t = 0; t < e; t += 1)(n = this.textSpans[t] || createNS("tspan")).textContent = x[t], n.setAttribute("x", 0), n.setAttribute("y", d), n.style.display = "inherit", P.appendChild(n), this.textSpans[t] = n, d += r.finalLineHeight;
            this.layerElement.appendChild(P)
        }
        for (; t < this.textSpans.length;) this.textSpans[t].style.display = "none", t += 1;
        this._sizeChanged = !0
    }, SVGTextLottieElement.prototype.sourceRectAtTime = function() {
        if (this.prepareFrame(this.comp.renderedFrame - this.data.st), this.renderInnerContent(), this._sizeChanged) {
            this._sizeChanged = !1;
            var t = this.layerElement.getBBox();
            this.bbox = {
                top: t.y,
                left: t.x,
                width: t.width,
                height: t.height
            }
        }
        return this.bbox
    }, SVGTextLottieElement.prototype.renderInnerContent = function() {
        if (!this.data.singleShape && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
            var t, e;
            this._sizeChanged = !0;
            var r, i, s = this.textAnimator.renderedLetters,
                a = this.textProperty.currentData.l;
            for (e = a.length, t = 0; t < e; t += 1) a[t].n || (r = s[t], i = this.textSpans[t], r._mdf.m && i.setAttribute("transform", r.m), r._mdf.o && i.setAttribute("opacity", r.o), r._mdf.sw && i.setAttribute("stroke-width", r.sw), r._mdf.sc && i.setAttribute("stroke", r.sc), r._mdf.fc && i.setAttribute("fill", r.fc))
        }
    }, extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement), SVGShapeElement.prototype.initSecondaryElement = function() {}, SVGShapeElement.prototype.identityMatrix = new Matrix, SVGShapeElement.prototype.buildExpressionInterface = function() {}, SVGShapeElement.prototype.createContent = function() {
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0), this.filterUniqueShapes()
    }, SVGShapeElement.prototype.filterUniqueShapes = function() {
        var t, e, r, i, s = this.shapes.length,
            a = this.stylesList.length,
            n = [],
            o = !1;
        for (r = 0; r < a; r += 1) {
            for (i = this.stylesList[r], o = !1, t = n.length = 0; t < s; t += 1) - 1 !== (e = this.shapes[t]).styles.indexOf(i) && (n.push(e), o = e._isAnimated || o);
            1 < n.length && o && this.setShapesAsAnimated(n)
        }
    }, SVGShapeElement.prototype.setShapesAsAnimated = function(t) {
        var e, r = t.length;
        for (e = 0; e < r; e += 1) t[e].setAsAnimated()
    }, SVGShapeElement.prototype.createStyleElement = function(t, e) {
        var r, i = new SVGStyleData(t, e),
            s = i.pElem;
        if ("st" === t.ty) r = new SVGStrokeStyleData(this, t, i);
        else if ("fl" === t.ty) r = new SVGFillStyleData(this, t, i);
        else if ("gf" === t.ty || "gs" === t.ty) {
            r = new("gf" === t.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this, t, i), this.globalData.defs.appendChild(r.gf), r.maskId && (this.globalData.defs.appendChild(r.ms), this.globalData.defs.appendChild(r.of), s.setAttribute("mask", "url(" + locationHref + "#" + r.maskId + ")"))
        }
        return "st" !== t.ty && "gs" !== t.ty || (s.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]), s.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]), s.setAttribute("fill-opacity", "0"), 1 === t.lj && s.setAttribute("stroke-miterlimit", t.ml)), 2 === t.r && s.setAttribute("fill-rule", "evenodd"), t.ln && s.setAttribute("id", t.ln), t.cl && s.setAttribute("class", t.cl), t.bm && (s.style["mix-blend-mode"] = getBlendMode(t.bm)), this.stylesList.push(i), this.addToAnimatedContents(t, r), r
    }, SVGShapeElement.prototype.createGroupElement = function(t) {
        var e = new ShapeGroupData;
        return t.ln && e.gr.setAttribute("id", t.ln), t.cl && e.gr.setAttribute("class", t.cl), t.bm && (e.gr.style["mix-blend-mode"] = getBlendMode(t.bm)), e
    }, SVGShapeElement.prototype.createTransformElement = function(t, e) {
        var r = TransformPropertyFactory.getTransformProperty(this, t, this),
            i = new SVGTransformData(r, r.o, e);
        return this.addToAnimatedContents(t, i), i
    }, SVGShapeElement.prototype.createShapeElement = function(t, e, r) {
        var i = 4;
        "rc" === t.ty ? i = 5 : "el" === t.ty ? i = 6 : "sr" === t.ty && (i = 7);
        var s = new SVGShapeData(e, r, ShapePropertyFactory.getShapeProp(this, t, i, this));
        return this.shapes.push(s), this.addShapeToModifiers(s), this.addToAnimatedContents(t, s), s
    }, SVGShapeElement.prototype.addToAnimatedContents = function(t, e) {
        for (var r = 0, i = this.animatedContents.length; r < i;) {
            if (this.animatedContents[r].element === e) return;
            r += 1
        }
        this.animatedContents.push({
            fn: SVGElementsRenderer.createRenderFunction(t),
            element: e,
            data: t
        })
    }, SVGShapeElement.prototype.setElementStyles = function(t) {
        var e, r = t.styles,
            i = this.stylesList.length;
        for (e = 0; e < i; e += 1) this.stylesList[e].closed || r.push(this.stylesList[e])
    }, SVGShapeElement.prototype.reloadShapes = function() {
        var t;
        this._isFirstFrame = !0;
        var e = this.itemsData.length;
        for (t = 0; t < e; t += 1) this.prevViewData[t] = this.itemsData[t];
        for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0), this.filterUniqueShapes(), e = this.dynamicProperties.length, t = 0; t < e; t += 1) this.dynamicProperties[t].getValue();
        this.renderModifiers()
    }, SVGShapeElement.prototype.searchShapes = function(t, e, r, i, s, a, n) {
        var o, h, l, p, m, f, c = [].concat(a),
            d = t.length - 1,
            u = [],
            y = [];
        for (o = d; 0 <= o; o -= 1) {
            if ((f = this.searchProcessedElement(t[o])) ? e[o] = r[f - 1] : t[o]._render = n, "fl" === t[o].ty || "st" === t[o].ty || "gf" === t[o].ty || "gs" === t[o].ty) f ? e[o].style.closed = !1 : e[o] = this.createStyleElement(t[o], s), t[o]._render && i.appendChild(e[o].style.pElem), u.push(e[o].style);
            else if ("gr" === t[o].ty) {
                if (f)
                    for (l = e[o].it.length, h = 0; h < l; h += 1) e[o].prevViewData[h] = e[o].it[h];
                else e[o] = this.createGroupElement(t[o]);
                this.searchShapes(t[o].it, e[o].it, e[o].prevViewData, e[o].gr, s + 1, c, n), t[o]._render && i.appendChild(e[o].gr)
            } else "tr" === t[o].ty ? (f || (e[o] = this.createTransformElement(t[o], i)), p = e[o].transform, c.push(p)) : "sh" === t[o].ty || "rc" === t[o].ty || "el" === t[o].ty || "sr" === t[o].ty ? (f || (e[o] = this.createShapeElement(t[o], c, s)), this.setElementStyles(e[o])) : "tm" === t[o].ty || "rd" === t[o].ty || "ms" === t[o].ty || "pb" === t[o].ty ? (f ? (m = e[o]).closed = !1 : ((m = ShapeModifiers.getModifier(t[o].ty)).init(this, t[o]), e[o] = m, this.shapeModifiers.push(m)), y.push(m)) : "rp" === t[o].ty && (f ? (m = e[o]).closed = !0 : (m = ShapeModifiers.getModifier(t[o].ty), (e[o] = m).init(this, t, o, e), this.shapeModifiers.push(m), n = !1), y.push(m));
            this.addProcessedElement(t[o], o + 1)
        }
        for (d = u.length, o = 0; o < d; o += 1) u[o].closed = !0;
        for (d = y.length, o = 0; o < d; o += 1) y[o].closed = !0
    }, SVGShapeElement.prototype.renderInnerContent = function() {
        var t;
        this.renderModifiers();
        var e = this.stylesList.length;
        for (t = 0; t < e; t += 1) this.stylesList[t].reset();
        for (this.renderShape(), t = 0; t < e; t += 1)(this.stylesList[t]._mdf || this._isFirstFrame) && (this.stylesList[t].msElem && (this.stylesList[t].msElem.setAttribute("d", this.stylesList[t].d), this.stylesList[t].d = "M0 0" + this.stylesList[t].d), this.stylesList[t].pElem.setAttribute("d", this.stylesList[t].d || "M0 0"))
    }, SVGShapeElement.prototype.renderShape = function() {
        var t, e, r = this.animatedContents.length;
        for (t = 0; t < r; t += 1) e = this.animatedContents[t], (this._isFirstFrame || e.element._isAnimated) && !0 !== e.data && e.fn(e.data, e.element, this._isFirstFrame)
    }, SVGShapeElement.prototype.destroy = function() {
        this.destroyBaseElement(), this.shapesData = null, this.itemsData = null
    }, SVGTintFilter.prototype.renderFrame = function(t) {
        if (t || this.filterManager._mdf) {
            var e = this.filterManager.effectElements[0].p.v,
                r = this.filterManager.effectElements[1].p.v,
                i = this.filterManager.effectElements[2].p.v / 100;
            this.matrixFilter.setAttribute("values", r[0] - e[0] + " 0 0 0 " + e[0] + " " + (r[1] - e[1]) + " 0 0 0 " + e[1] + " " + (r[2] - e[2]) + " 0 0 0 " + e[2] + " 0 0 0 " + i + " 0")
        }
    }, SVGFillFilter.prototype.renderFrame = function(t) {
        if (t || this.filterManager._mdf) {
            var e = this.filterManager.effectElements[2].p.v,
                r = this.filterManager.effectElements[6].p.v;
            this.matrixFilter.setAttribute("values", "0 0 0 0 " + e[0] + " 0 0 0 0 " + e[1] + " 0 0 0 0 " + e[2] + " 0 0 0 " + r + " 0")
        }
    }, SVGGaussianBlurEffect.prototype.renderFrame = function(t) {
        if (t || this.filterManager._mdf) {
            var e = .3 * this.filterManager.effectElements[0].p.v,
                r = this.filterManager.effectElements[1].p.v,
                i = 3 == r ? 0 : e,
                s = 2 == r ? 0 : e;
            this.feGaussianBlur.setAttribute("stdDeviation", i + " " + s);
            var a = 1 == this.filterManager.effectElements[2].p.v ? "wrap" : "duplicate";
            this.feGaussianBlur.setAttribute("edgeMode", a)
        }
    }, SVGStrokeEffect.prototype.initialize = function() {
        var t, e, r, i, s = this.elem.layerElement.children || this.elem.layerElement.childNodes;
        for (1 === this.filterManager.effectElements[1].p.v ? (i = this.elem.maskManager.masksProperties.length, r = 0) : i = (r = this.filterManager.effectElements[0].p.v - 1) + 1, (e = createNS("g")).setAttribute("fill", "none"), e.setAttribute("stroke-linecap", "round"), e.setAttribute("stroke-dashoffset", 1); r < i; r += 1) t = createNS("path"), e.appendChild(t), this.paths.push({
            p: t,
            m: r
        });
        if (3 === this.filterManager.effectElements[10].p.v) {
            var a = createNS("mask"),
                n = createElementID();
            a.setAttribute("id", n), a.setAttribute("mask-type", "alpha"), a.appendChild(e), this.elem.globalData.defs.appendChild(a);
            var o = createNS("g");
            for (o.setAttribute("mask", "url(" + locationHref + "#" + n + ")"); s[0];) o.appendChild(s[0]);
            this.elem.layerElement.appendChild(o), this.masker = a, e.setAttribute("stroke", "#fff")
        } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {
            if (2 === this.filterManager.effectElements[10].p.v)
                for (s = this.elem.layerElement.children || this.elem.layerElement.childNodes; s.length;) this.elem.layerElement.removeChild(s[0]);
            this.elem.layerElement.appendChild(e), this.elem.layerElement.removeAttribute("mask"), e.setAttribute("stroke", "#fff")
        }
        this.initialized = !0, this.pathMasker = e
    }, SVGStrokeEffect.prototype.renderFrame = function(t) {
        var e;
        this.initialized || this.initialize();
        var r, i, s = this.paths.length;
        for (e = 0; e < s; e += 1)
            if (-1 !== this.paths[e].m && (r = this.elem.maskManager.viewData[this.paths[e].m], i = this.paths[e].p, (t || this.filterManager._mdf || r.prop._mdf) && i.setAttribute("d", r.lastPath), t || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || r.prop._mdf)) {
                var a;
                if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {
                    var n = .01 * Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v),
                        o = .01 * Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v),
                        h = i.getTotalLength();
                    a = "0 0 0 " + h * n + " ";
                    var l, p = h * (o - n),
                        m = 1 + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01,
                        f = Math.floor(p / m);
                    for (l = 0; l < f; l += 1) a += "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01 + " ";
                    a += "0 " + 10 * h + " 0 0"
                } else a = "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01;
                i.setAttribute("stroke-dasharray", a)
            }
        if ((t || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute("stroke-width", 2 * this.filterManager.effectElements[4].p.v), (t || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v), (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (t || this.filterManager.effectElements[3].p._mdf)) {
            var c = this.filterManager.effectElements[3].p.v;
            this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(255 * c[0]) + "," + bmFloor(255 * c[1]) + "," + bmFloor(255 * c[2]) + ")")
        }
    }, SVGTritoneFilter.prototype.renderFrame = function(t) {
        if (t || this.filterManager._mdf) {
            var e = this.filterManager.effectElements[0].p.v,
                r = this.filterManager.effectElements[1].p.v,
                i = this.filterManager.effectElements[2].p.v,
                s = i[0] + " " + r[0] + " " + e[0],
                a = i[1] + " " + r[1] + " " + e[1],
                n = i[2] + " " + r[2] + " " + e[2];
            this.feFuncR.setAttribute("tableValues", s), this.feFuncG.setAttribute("tableValues", a), this.feFuncB.setAttribute("tableValues", n)
        }
    }, SVGProLevelsFilter.prototype.createFeFunc = function(t, e) {
        var r = createNS(t);
        return r.setAttribute("type", "table"), e.appendChild(r), r
    }, SVGProLevelsFilter.prototype.getTableValue = function(t, e, r, i, s) {
        for (var a, n, o = 0, h = Math.min(t, e), l = Math.max(t, e), p = Array.call(null, {
                length: 256
            }), m = 0, f = s - i, c = e - t; o <= 256;) n = (a = o / 256) <= h ? c < 0 ? s : i : l <= a ? c < 0 ? i : s : i + f * Math.pow((a - t) / c, 1 / r), p[m] = n, m += 1, o += 256 / 255;
        return p.join(" ")
    }, SVGProLevelsFilter.prototype.renderFrame = function(t) {
        if (t || this.filterManager._mdf) {
            var e, r = this.filterManager.effectElements;
            this.feFuncRComposed && (t || r[3].p._mdf || r[4].p._mdf || r[5].p._mdf || r[6].p._mdf || r[7].p._mdf) && (e = this.getTableValue(r[3].p.v, r[4].p.v, r[5].p.v, r[6].p.v, r[7].p.v), this.feFuncRComposed.setAttribute("tableValues", e), this.feFuncGComposed.setAttribute("tableValues", e), this.feFuncBComposed.setAttribute("tableValues", e)), this.feFuncR && (t || r[10].p._mdf || r[11].p._mdf || r[12].p._mdf || r[13].p._mdf || r[14].p._mdf) && (e = this.getTableValue(r[10].p.v, r[11].p.v, r[12].p.v, r[13].p.v, r[14].p.v), this.feFuncR.setAttribute("tableValues", e)), this.feFuncG && (t || r[17].p._mdf || r[18].p._mdf || r[19].p._mdf || r[20].p._mdf || r[21].p._mdf) && (e = this.getTableValue(r[17].p.v, r[18].p.v, r[19].p.v, r[20].p.v, r[21].p.v), this.feFuncG.setAttribute("tableValues", e)), this.feFuncB && (t || r[24].p._mdf || r[25].p._mdf || r[26].p._mdf || r[27].p._mdf || r[28].p._mdf) && (e = this.getTableValue(r[24].p.v, r[25].p.v, r[26].p.v, r[27].p.v, r[28].p.v), this.feFuncB.setAttribute("tableValues", e)), this.feFuncA && (t || r[31].p._mdf || r[32].p._mdf || r[33].p._mdf || r[34].p._mdf || r[35].p._mdf) && (e = this.getTableValue(r[31].p.v, r[32].p.v, r[33].p.v, r[34].p.v, r[35].p.v), this.feFuncA.setAttribute("tableValues", e))
        }
    }, SVGDropShadowEffect.prototype.renderFrame = function(t) {
        if (t || this.filterManager._mdf) {
            if ((t || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4), t || this.filterManager.effectElements[0].p._mdf) {
                var e = this.filterManager.effectElements[0].p.v;
                this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(255 * e[0]), Math.round(255 * e[1]), Math.round(255 * e[2])))
            }
            if ((t || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255), t || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
                var r = this.filterManager.effectElements[3].p.v,
                    i = (this.filterManager.effectElements[2].p.v - 90) * degToRads,
                    s = r * Math.cos(i),
                    a = r * Math.sin(i);
                this.feOffset.setAttribute("dx", s), this.feOffset.setAttribute("dy", a)
            }
        }
    };
    var _svgMatteSymbols = [];

    function SVGMatte3Effect(t, e, r) {
        this.initialized = !1, this.filterManager = e, this.filterElem = t, (this.elem = r).matteElement = createNS("g"), r.matteElement.appendChild(r.layerElement), r.matteElement.appendChild(r.transformedElement), r.baseElement = r.matteElement
    }

    function SVGEffects(t) {
        var e, r, i = t.data.ef ? t.data.ef.length : 0,
            s = createElementID(),
            a = filtersFactory.createFilter(s, !0),
            n = 0;
        for (this.filters = [], e = 0; e < i; e += 1) r = null, 20 === t.data.ef[e].ty ? (n += 1, r = new SVGTintFilter(a, t.effectsManager.effectElements[e])) : 21 === t.data.ef[e].ty ? (n += 1, r = new SVGFillFilter(a, t.effectsManager.effectElements[e])) : 22 === t.data.ef[e].ty ? r = new SVGStrokeEffect(t, t.effectsManager.effectElements[e]) : 23 === t.data.ef[e].ty ? (n += 1, r = new SVGTritoneFilter(a, t.effectsManager.effectElements[e])) : 24 === t.data.ef[e].ty ? (n += 1, r = new SVGProLevelsFilter(a, t.effectsManager.effectElements[e])) : 25 === t.data.ef[e].ty ? (n += 1, r = new SVGDropShadowEffect(a, t.effectsManager.effectElements[e])) : 28 === t.data.ef[e].ty ? r = new SVGMatte3Effect(a, t.effectsManager.effectElements[e], t) : 29 === t.data.ef[e].ty && (n += 1, r = new SVGGaussianBlurEffect(a, t.effectsManager.effectElements[e])), r && this.filters.push(r);
        n && (t.globalData.defs.appendChild(a), t.layerElement.setAttribute("filter", "url(" + locationHref + "#" + s + ")")), this.filters.length && t.addRenderableComponent(this)
    }

    function CVContextData() {
        var t;
        this.saved = [], this.cArrPos = 0, this.cTr = new Matrix, this.cO = 1;
        for (this.savedOp = createTypedArray("float32", 15), t = 0; t < 15; t += 1) this.saved[t] = createTypedArray("float32", 16);
        this._length = 15
    }

    function CVBaseElement() {}

    function CVImageElement(t, e, r) {
        this.assetData = e.getAssetData(t.refId), this.img = e.imageLoader.getAsset(this.assetData), this.initElement(t, e, r)
    }

    function CVCompElement(t, e, r) {
        this.completeLayers = !1, this.layers = t.layers, this.pendingElements = [], this.elements = createSizedArray(this.layers.length), this.initElement(t, e, r), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
            _placeholder: !0
        }
    }

    function CVMaskElement(t, e) {
        var r;
        this.data = t, this.element = e, this.masksProperties = this.data.masksProperties || [], this.viewData = createSizedArray(this.masksProperties.length);
        var i = this.masksProperties.length,
            s = !1;
        for (r = 0; r < i; r += 1) "n" !== this.masksProperties[r].mode && (s = !0), this.viewData[r] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[r], 3);
        (this.hasMasks = s) && this.element.addRenderableComponent(this)
    }

    function CVShapeElement(t, e, r) {
        this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.itemsData = [], this.prevViewData = [], this.shapeModifiers = [], this.processedElements = [], this.transformsManager = new ShapeTransformManager, this.initElement(t, e, r)
    }

    function CVSolidElement(t, e, r) {
        this.initElement(t, e, r)
    }

    function CVTextElement(t, e, r) {
        this.textSpans = [], this.yOffset = 0, this.fillColorAnim = !1, this.strokeColorAnim = !1, this.strokeWidthAnim = !1, this.stroke = !1, this.fill = !1, this.justifyOffset = 0, this.currentRender = null, this.renderType = "canvas", this.values = {
            fill: "rgba(0,0,0,0)",
            stroke: "rgba(0,0,0,0)",
            sWidth: 0,
            fValue: ""
        }, this.initElement(t, e, r)
    }

    function CVEffects() {}

    function HBaseElement() {}

    function HSolidElement(t, e, r) {
        this.initElement(t, e, r)
    }

    function HCompElement(t, e, r) {
        this.layers = t.layers, this.supports3d = !t.hasMask, this.completeLayers = !1, this.pendingElements = [], this.elements = this.layers ? createSizedArray(this.layers.length) : [], this.initElement(t, e, r), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
            _placeholder: !0
        }
    }

    function HShapeElement(t, e, r) {
        this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.shapeModifiers = [], this.itemsData = [], this.processedElements = [], this.animatedContents = [], this.shapesContainer = createNS("g"), this.initElement(t, e, r), this.prevViewData = [], this.currentBBox = {
            x: 999999,
            y: -999999,
            h: 0,
            w: 0
        }
    }

    function HTextElement(t, e, r) {
        this.textSpans = [], this.textPaths = [], this.currentBBox = {
            x: 999999,
            y: -999999,
            h: 0,
            w: 0
        }, this.renderType = "svg", this.isMasked = !1, this.initElement(t, e, r)
    }

    function HImageElement(t, e, r) {
        this.assetData = e.getAssetData(t.refId), this.initElement(t, e, r)
    }

    function HCameraElement(t, e, r) {
        this.initFrame(), this.initBaseData(t, e, r), this.initHierarchy();
        var i = PropertyFactory.getProp;
        if (this.pe = i(this, t.pe, 0, 0, this), t.ks.p.s ? (this.px = i(this, t.ks.p.x, 1, 0, this), this.py = i(this, t.ks.p.y, 1, 0, this), this.pz = i(this, t.ks.p.z, 1, 0, this)) : this.p = i(this, t.ks.p, 1, 0, this), t.ks.a && (this.a = i(this, t.ks.a, 1, 0, this)), t.ks.or.k.length && t.ks.or.k[0].to) {
            var s, a = t.ks.or.k.length;
            for (s = 0; s < a; s += 1) t.ks.or.k[s].to = null, t.ks.or.k[s].ti = null
        }
        this.or = i(this, t.ks.or, 1, degToRads, this), this.or.sh = !0, this.rx = i(this, t.ks.rx, 0, degToRads, this), this.ry = i(this, t.ks.ry, 0, degToRads, this), this.rz = i(this, t.ks.rz, 0, degToRads, this), this.mat = new Matrix, this._prevMat = new Matrix, this._isFirstFrame = !0, this.finalTransform = {
            mProp: this
        }
    }

    function HEffects() {}
    SVGMatte3Effect.prototype.findSymbol = function(t) {
        for (var e = 0, r = _svgMatteSymbols.length; e < r;) {
            if (_svgMatteSymbols[e] === t) return _svgMatteSymbols[e];
            e += 1
        }
        return null
    }, SVGMatte3Effect.prototype.replaceInParent = function(t, e) {
        var r = t.layerElement.parentNode;
        if (r) {
            for (var i, s = r.children, a = 0, n = s.length; a < n && s[a] !== t.layerElement;) a += 1;
            a <= n - 2 && (i = s[a + 1]);
            var o = createNS("use");
            o.setAttribute("href", "#" + e), i ? r.insertBefore(o, i) : r.appendChild(o)
        }
    }, SVGMatte3Effect.prototype.setElementAsMask = function(t, e) {
        if (!this.findSymbol(e)) {
            var r = createElementID(),
                i = createNS("mask");
            i.setAttribute("id", e.layerId), i.setAttribute("mask-type", "alpha"), _svgMatteSymbols.push(e);
            var s = t.globalData.defs;
            s.appendChild(i);
            var a = createNS("symbol");
            a.setAttribute("id", r), this.replaceInParent(e, r), a.appendChild(e.layerElement), s.appendChild(a);
            var n = createNS("use");
            n.setAttribute("href", "#" + r), i.appendChild(n), e.data.hd = !1, e.show()
        }
        t.setMatte(e.layerId)
    }, SVGMatte3Effect.prototype.initialize = function() {
        for (var t = this.filterManager.effectElements[0].p.v, e = this.elem.comp.elements, r = 0, i = e.length; r < i;) e[r] && e[r].data.ind === t && this.setElementAsMask(this.elem, e[r]), r += 1;
        this.initialized = !0
    }, SVGMatte3Effect.prototype.renderFrame = function() {
        this.initialized || this.initialize()
    }, SVGEffects.prototype.renderFrame = function(t) {
        var e, r = this.filters.length;
        for (e = 0; e < r; e += 1) this.filters[e].renderFrame(t)
    }, CVContextData.prototype.duplicate = function() {
        var t = 2 * this._length,
            e = this.savedOp;
        this.savedOp = createTypedArray("float32", t), this.savedOp.set(e);
        var r = 0;
        for (r = this._length; r < t; r += 1) this.saved[r] = createTypedArray("float32", 16);
        this._length = t
    }, CVContextData.prototype.reset = function() {
        this.cArrPos = 0, this.cTr.reset(), this.cO = 1
    }, CVBaseElement.prototype = {
        createElements: function() {},
        initRendererElement: function() {},
        createContainerElements: function() {
            this.canvasContext = this.globalData.canvasContext, this.renderableEffectsManager = new CVEffects(this)
        },
        createContent: function() {},
        setBlendMode: function() {
            var t = this.globalData;
            if (t.blendMode !== this.data.bm) {
                t.blendMode = this.data.bm;
                var e = getBlendMode(this.data.bm);
                t.canvasContext.globalCompositeOperation = e
            }
        },
        createRenderableComponents: function() {
            this.maskManager = new CVMaskElement(this.data, this)
        },
        hideElement: function() {
            this.hidden || this.isInRange && !this.isTransparent || (this.hidden = !0)
        },
        showElement: function() {
            this.isInRange && !this.isTransparent && (this.hidden = !1, this._isFirstFrame = !0, this.maskManager._isFirstFrame = !0)
        },
        renderFrame: function() {
            if (!this.hidden && !this.data.hd) {
                this.renderTransform(), this.renderRenderable(), this.setBlendMode();
                var t = 0 === this.data.ty;
                this.globalData.renderer.save(t), this.globalData.renderer.ctxTransform(this.finalTransform.mat.props), this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v), this.renderInnerContent(), this.globalData.renderer.restore(t), this.maskManager.hasMasks && this.globalData.renderer.restore(!0), this._isFirstFrame && (this._isFirstFrame = !1)
            }
        },
        destroy: function() {
            this.canvasContext = null, this.data = null, this.globalData = null, this.maskManager.destroy()
        },
        mHelper: new Matrix
    }, CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement, CVBaseElement.prototype.show = CVBaseElement.prototype.showElement, extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement), CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement, CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame, CVImageElement.prototype.createContent = function() {
        if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
            var t = createTag("canvas");
            t.width = this.assetData.w, t.height = this.assetData.h;
            var e, r, i = t.getContext("2d"),
                s = this.img.width,
                a = this.img.height,
                n = s / a,
                o = this.assetData.w / this.assetData.h,
                h = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
            o < n && "xMidYMid slice" === h || n < o && "xMidYMid slice" !== h ? e = (r = a) * o : r = (e = s) / o, i.drawImage(this.img, (s - e) / 2, (a - r) / 2, e, r, 0, 0, this.assetData.w, this.assetData.h), this.img = t
        }
    }, CVImageElement.prototype.renderInnerContent = function() {
        this.canvasContext.drawImage(this.img, 0, 0)
    }, CVImageElement.prototype.destroy = function() {
        this.img = null
    }, extendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement), CVCompElement.prototype.renderInnerContent = function() {
        var t, e = this.canvasContext;
        for (e.beginPath(), e.moveTo(0, 0), e.lineTo(this.data.w, 0), e.lineTo(this.data.w, this.data.h), e.lineTo(0, this.data.h), e.lineTo(0, 0), e.clip(), t = this.layers.length - 1; 0 <= t; t -= 1)(this.completeLayers || this.elements[t]) && this.elements[t].renderFrame()
    }, CVCompElement.prototype.destroy = function() {
        var t;
        for (t = this.layers.length - 1; 0 <= t; t -= 1) this.elements[t] && this.elements[t].destroy();
        this.layers = null, this.elements = null
    }, CVMaskElement.prototype.renderFrame = function() {
        if (this.hasMasks) {
            var t, e, r, i, s = this.element.finalTransform.mat,
                a = this.element.canvasContext,
                n = this.masksProperties.length;
            for (a.beginPath(), t = 0; t < n; t += 1)
                if ("n" !== this.masksProperties[t].mode) {
                    var o;
                    this.masksProperties[t].inv && (a.moveTo(0, 0), a.lineTo(this.element.globalData.compSize.w, 0), a.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h), a.lineTo(0, this.element.globalData.compSize.h), a.lineTo(0, 0)), i = this.viewData[t].v, e = s.applyToPointArray(i.v[0][0], i.v[0][1], 0), a.moveTo(e[0], e[1]);
                    var h = i._length;
                    for (o = 1; o < h; o += 1) r = s.applyToTriplePoints(i.o[o - 1], i.i[o], i.v[o]), a.bezierCurveTo(r[0], r[1], r[2], r[3], r[4], r[5]);
                    r = s.applyToTriplePoints(i.o[o - 1], i.i[0], i.v[0]), a.bezierCurveTo(r[0], r[1], r[2], r[3], r[4], r[5])
                }
            this.element.globalData.renderer.save(!0), a.clip()
        }
    }, CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty, CVMaskElement.prototype.destroy = function() {
        this.element = null
    }, extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement), CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement, CVShapeElement.prototype.transformHelper = {
        opacity: 1,
        _opMdf: !1
    }, CVShapeElement.prototype.dashResetter = [], CVShapeElement.prototype.createContent = function() {
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, [])
    }, CVShapeElement.prototype.createStyleElement = function(t, e) {
        var r = {
                data: t,
                type: t.ty,
                preTransforms: this.transformsManager.addTransformSequence(e),
                transforms: [],
                elements: [],
                closed: !0 === t.hd
            },
            i = {};
        if ("fl" === t.ty || "st" === t.ty ? (i.c = PropertyFactory.getProp(this, t.c, 1, 255, this), i.c.k || (r.co = "rgb(" + bmFloor(i.c.v[0]) + "," + bmFloor(i.c.v[1]) + "," + bmFloor(i.c.v[2]) + ")")) : "gf" !== t.ty && "gs" !== t.ty || (i.s = PropertyFactory.getProp(this, t.s, 1, null, this), i.e = PropertyFactory.getProp(this, t.e, 1, null, this), i.h = PropertyFactory.getProp(this, t.h || {
                k: 0
            }, 0, .01, this), i.a = PropertyFactory.getProp(this, t.a || {
                k: 0
            }, 0, degToRads, this), i.g = new GradientProperty(this, t.g, this)), i.o = PropertyFactory.getProp(this, t.o, 0, .01, this), "st" === t.ty || "gs" === t.ty) {
            if (r.lc = lineCapEnum[t.lc || 2], r.lj = lineJoinEnum[t.lj || 2], 1 == t.lj && (r.ml = t.ml), i.w = PropertyFactory.getProp(this, t.w, 0, null, this), i.w.k || (r.wi = i.w.v), t.d) {
                var s = new DashProperty(this, t.d, "canvas", this);
                i.d = s, i.d.k || (r.da = i.d.dashArray, r.do = i.d.dashoffset[0])
            }
        } else r.r = 2 === t.r ? "evenodd" : "nonzero";
        return this.stylesList.push(r), i.style = r, i
    }, CVShapeElement.prototype.createGroupElement = function() {
        return {
            it: [],
            prevViewData: []
        }
    }, CVShapeElement.prototype.createTransformElement = function(t) {
        return {
            transform: {
                opacity: 1,
                _opMdf: !1,
                key: this.transformsManager.getNewKey(),
                op: PropertyFactory.getProp(this, t.o, 0, .01, this),
                mProps: TransformPropertyFactory.getTransformProperty(this, t, this)
            }
        }
    }, CVShapeElement.prototype.createShapeElement = function(t) {
        var e = new CVShapeData(this, t, this.stylesList, this.transformsManager);
        return this.shapes.push(e), this.addShapeToModifiers(e), e
    }, CVShapeElement.prototype.reloadShapes = function() {
        var t;
        this._isFirstFrame = !0;
        var e = this.itemsData.length;
        for (t = 0; t < e; t += 1) this.prevViewData[t] = this.itemsData[t];
        for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []), e = this.dynamicProperties.length, t = 0; t < e; t += 1) this.dynamicProperties[t].getValue();
        this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame)
    }, CVShapeElement.prototype.addTransformToStyleList = function(t) {
        var e, r = this.stylesList.length;
        for (e = 0; e < r; e += 1) this.stylesList[e].closed || this.stylesList[e].transforms.push(t)
    }, CVShapeElement.prototype.removeTransformFromStyleList = function() {
        var t, e = this.stylesList.length;
        for (t = 0; t < e; t += 1) this.stylesList[t].closed || this.stylesList[t].transforms.pop()
    }, CVShapeElement.prototype.closeStyles = function(t) {
        var e, r = t.length;
        for (e = 0; e < r; e += 1) t[e].closed = !0
    }, CVShapeElement.prototype.searchShapes = function(t, e, r, i, s) {
        var a, n, o, h, l, p, m = t.length - 1,
            f = [],
            c = [],
            d = [].concat(s);
        for (a = m; 0 <= a; a -= 1) {
            if ((h = this.searchProcessedElement(t[a])) ? e[a] = r[h - 1] : t[a]._shouldRender = i, "fl" === t[a].ty || "st" === t[a].ty || "gf" === t[a].ty || "gs" === t[a].ty) h ? e[a].style.closed = !1 : e[a] = this.createStyleElement(t[a], d), f.push(e[a].style);
            else if ("gr" === t[a].ty) {
                if (h)
                    for (o = e[a].it.length, n = 0; n < o; n += 1) e[a].prevViewData[n] = e[a].it[n];
                else e[a] = this.createGroupElement(t[a]);
                this.searchShapes(t[a].it, e[a].it, e[a].prevViewData, i, d)
            } else "tr" === t[a].ty ? (h || (p = this.createTransformElement(t[a]), e[a] = p), d.push(e[a]), this.addTransformToStyleList(e[a])) : "sh" === t[a].ty || "rc" === t[a].ty || "el" === t[a].ty || "sr" === t[a].ty ? h || (e[a] = this.createShapeElement(t[a])) : "tm" === t[a].ty || "rd" === t[a].ty || "pb" === t[a].ty ? (h ? (l = e[a]).closed = !1 : ((l = ShapeModifiers.getModifier(t[a].ty)).init(this, t[a]), e[a] = l, this.shapeModifiers.push(l)), c.push(l)) : "rp" === t[a].ty && (h ? (l = e[a]).closed = !0 : (l = ShapeModifiers.getModifier(t[a].ty), (e[a] = l).init(this, t, a, e), this.shapeModifiers.push(l), i = !1), c.push(l));
            this.addProcessedElement(t[a], a + 1)
        }
        for (this.removeTransformFromStyleList(), this.closeStyles(f), m = c.length, a = 0; a < m; a += 1) c[a].closed = !0
    }, CVShapeElement.prototype.renderInnerContent = function() {
        this.transformHelper.opacity = 1, this.transformHelper._opMdf = !1, this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame), this.renderShape(this.transformHelper, this.shapesData, this.itemsData, !0)
    }, CVShapeElement.prototype.renderShapeTransform = function(t, e) {
        (t._opMdf || e.op._mdf || this._isFirstFrame) && (e.opacity = t.opacity, e.opacity *= e.op.v, e._opMdf = !0)
    }, CVShapeElement.prototype.drawLayer = function() {
        var t, e, r, i, s, a, n, o, h, l = this.stylesList.length,
            p = this.globalData.renderer,
            m = this.globalData.canvasContext;
        for (t = 0; t < l; t += 1)
            if (("st" !== (o = (h = this.stylesList[t]).type) && "gs" !== o || 0 !== h.wi) && h.data._shouldRender && 0 !== h.coOp && 0 !== this.globalData.currentGlobalAlpha) {
                for (p.save(), a = h.elements, "st" === o || "gs" === o ? (m.strokeStyle = "st" === o ? h.co : h.grd, m.lineWidth = h.wi, m.lineCap = h.lc, m.lineJoin = h.lj, m.miterLimit = h.ml || 0) : m.fillStyle = "fl" === o ? h.co : h.grd, p.ctxOpacity(h.coOp), "st" !== o && "gs" !== o && m.beginPath(), p.ctxTransform(h.preTransforms.finalTransform.props), r = a.length, e = 0; e < r; e += 1) {
                    for ("st" !== o && "gs" !== o || (m.beginPath(), h.da && (m.setLineDash(h.da), m.lineDashOffset = h.do)), s = (n = a[e].trNodes).length, i = 0; i < s; i += 1) "m" === n[i].t ? m.moveTo(n[i].p[0], n[i].p[1]) : "c" === n[i].t ? m.bezierCurveTo(n[i].pts[0], n[i].pts[1], n[i].pts[2], n[i].pts[3], n[i].pts[4], n[i].pts[5]) : m.closePath();
                    "st" !== o && "gs" !== o || (m.stroke(), h.da && m.setLineDash(this.dashResetter))
                }
                "st" !== o && "gs" !== o && m.fill(h.r), p.restore()
            }
    }, CVShapeElement.prototype.renderShape = function(t, e, r, i) {
        var s, a;
        for (a = t, s = e.length - 1; 0 <= s; s -= 1) "tr" === e[s].ty ? (a = r[s].transform, this.renderShapeTransform(t, a)) : "sh" === e[s].ty || "el" === e[s].ty || "rc" === e[s].ty || "sr" === e[s].ty ? this.renderPath(e[s], r[s]) : "fl" === e[s].ty ? this.renderFill(e[s], r[s], a) : "st" === e[s].ty ? this.renderStroke(e[s], r[s], a) : "gf" === e[s].ty || "gs" === e[s].ty ? this.renderGradientFill(e[s], r[s], a) : "gr" === e[s].ty ? this.renderShape(a, e[s].it, r[s].it) : e[s].ty;
        i && this.drawLayer()
    }, CVShapeElement.prototype.renderStyledShape = function(t, e) {
        if (this._isFirstFrame || e._mdf || t.transforms._mdf) {
            var r, i, s, a = t.trNodes,
                n = e.paths,
                o = n._length;
            a.length = 0;
            var h = t.transforms.finalTransform;
            for (s = 0; s < o; s += 1) {
                var l = n.shapes[s];
                if (l && l.v) {
                    for (i = l._length, r = 1; r < i; r += 1) 1 === r && a.push({
                        t: "m",
                        p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0)
                    }), a.push({
                        t: "c",
                        pts: h.applyToTriplePoints(l.o[r - 1], l.i[r], l.v[r])
                    });
                    1 === i && a.push({
                        t: "m",
                        p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0)
                    }), l.c && i && (a.push({
                        t: "c",
                        pts: h.applyToTriplePoints(l.o[r - 1], l.i[0], l.v[0])
                    }), a.push({
                        t: "z"
                    }))
                }
            }
            t.trNodes = a
        }
    }, CVShapeElement.prototype.renderPath = function(t, e) {
        if (!0 !== t.hd && t._shouldRender) {
            var r, i = e.styledShapes.length;
            for (r = 0; r < i; r += 1) this.renderStyledShape(e.styledShapes[r], e.sh)
        }
    }, CVShapeElement.prototype.renderFill = function(t, e, r) {
        var i = e.style;
        (e.c._mdf || this._isFirstFrame) && (i.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"), (e.o._mdf || r._opMdf || this._isFirstFrame) && (i.coOp = e.o.v * r.opacity)
    }, CVShapeElement.prototype.renderGradientFill = function(t, e, r) {
        var i, s = e.style;
        if (!s.grd || e.g._mdf || e.s._mdf || e.e._mdf || 1 !== t.t && (e.h._mdf || e.a._mdf)) {
            var a, n = this.globalData.canvasContext,
                o = e.s.v,
                h = e.e.v;
            if (1 === t.t) i = n.createLinearGradient(o[0], o[1], h[0], h[1]);
            else {
                var l = Math.sqrt(Math.pow(o[0] - h[0], 2) + Math.pow(o[1] - h[1], 2)),
                    p = Math.atan2(h[1] - o[1], h[0] - o[0]),
                    m = e.h.v;
                1 <= m ? m = .99 : m <= -1 && (m = -.99);
                var f = l * m,
                    c = Math.cos(p + e.a.v) * f + o[0],
                    d = Math.sin(p + e.a.v) * f + o[1];
                i = n.createRadialGradient(c, d, 0, o[0], o[1], l)
            }
            var u = t.g.p,
                y = e.g.c,
                g = 1;
            for (a = 0; a < u; a += 1) e.g._hasOpacity && e.g._collapsable && (g = e.g.o[2 * a + 1]), i.addColorStop(y[4 * a] / 100, "rgba(" + y[4 * a + 1] + "," + y[4 * a + 2] + "," + y[4 * a + 3] + "," + g + ")");
            s.grd = i
        }
        s.coOp = e.o.v * r.opacity
    }, CVShapeElement.prototype.renderStroke = function(t, e, r) {
        var i = e.style,
            s = e.d;
        s && (s._mdf || this._isFirstFrame) && (i.da = s.dashArray, i.do = s.dashoffset[0]), (e.c._mdf || this._isFirstFrame) && (i.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"), (e.o._mdf || r._opMdf || this._isFirstFrame) && (i.coOp = e.o.v * r.opacity), (e.w._mdf || this._isFirstFrame) && (i.wi = e.w.v)
    }, CVShapeElement.prototype.destroy = function() {
        this.shapesData = null, this.globalData = null, this.canvasContext = null, this.stylesList.length = 0, this.itemsData.length = 0
    }, extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement), CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement, CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame, CVSolidElement.prototype.renderInnerContent = function() {
        var t = this.canvasContext;
        t.fillStyle = this.data.sc, t.fillRect(0, 0, this.data.sw, this.data.sh)
    }, extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement), CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d"), CVTextElement.prototype.buildNewText = function() {
        var t = this.textProperty.currentData;
        this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
        var e = !1;
        t.fc ? (e = !0, this.values.fill = this.buildColor(t.fc)) : this.values.fill = "rgba(0,0,0,0)", this.fill = e;
        var r = !1;
        t.sc && (r = !0, this.values.stroke = this.buildColor(t.sc), this.values.sWidth = t.sw);
        var i, s, a, n, o, h, l, p, m, f, c, d, u = this.globalData.fontManager.getFontByName(t.f),
            y = t.l,
            g = this.mHelper;
        this.stroke = r, this.values.fValue = t.finalSize + "px " + this.globalData.fontManager.getFontByName(t.f).fFamily, s = t.finalText.length;
        var v = this.data.singleShape,
            b = .001 * t.tr * t.finalSize,
            P = 0,
            E = 0,
            x = !0,
            S = 0;
        for (i = 0; i < s; i += 1) {
            for (n = (a = this.globalData.fontManager.getCharData(t.finalText[i], u.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily)) && a.data || {}, g.reset(), v && y[i].n && (P = -b, E += t.yOffset, E += x ? 1 : 0, x = !1), m = (l = n.shapes ? n.shapes[0].it : []).length, g.scale(t.finalSize / 100, t.finalSize / 100), v && this.applyTextPropertiesToMatrix(t, g, y[i].line, P, E), c = createSizedArray(m), p = 0; p < m; p += 1) {
                for (h = l[p].ks.k.i.length, f = l[p].ks.k, d = [], o = 1; o < h; o += 1) 1 === o && d.push(g.applyToX(f.v[0][0], f.v[0][1], 0), g.applyToY(f.v[0][0], f.v[0][1], 0)), d.push(g.applyToX(f.o[o - 1][0], f.o[o - 1][1], 0), g.applyToY(f.o[o - 1][0], f.o[o - 1][1], 0), g.applyToX(f.i[o][0], f.i[o][1], 0), g.applyToY(f.i[o][0], f.i[o][1], 0), g.applyToX(f.v[o][0], f.v[o][1], 0), g.applyToY(f.v[o][0], f.v[o][1], 0));
                d.push(g.applyToX(f.o[o - 1][0], f.o[o - 1][1], 0), g.applyToY(f.o[o - 1][0], f.o[o - 1][1], 0), g.applyToX(f.i[0][0], f.i[0][1], 0), g.applyToY(f.i[0][0], f.i[0][1], 0), g.applyToX(f.v[0][0], f.v[0][1], 0), g.applyToY(f.v[0][0], f.v[0][1], 0)), c[p] = d
            }
            v && (P += y[i].l, P += b), this.textSpans[S] ? this.textSpans[S].elem = c : this.textSpans[S] = {
                elem: c
            }, S += 1
        }
    }, CVTextElement.prototype.renderInnerContent = function() {
        var t, e, r, i, s, a, n = this.canvasContext;
        n.font = this.values.fValue, n.lineCap = "butt", n.lineJoin = "miter", n.miterLimit = 4, this.data.singleShape || this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
        var o, h = this.textAnimator.renderedLetters,
            l = this.textProperty.currentData.l;
        e = l.length;
        var p, m, f = null,
            c = null,
            d = null;
        for (t = 0; t < e; t += 1)
            if (!l[t].n) {
                if ((o = h[t]) && (this.globalData.renderer.save(), this.globalData.renderer.ctxTransform(o.p), this.globalData.renderer.ctxOpacity(o.o)), this.fill) {
                    for (o && o.fc ? f !== o.fc && (f = o.fc, n.fillStyle = o.fc) : f !== this.values.fill && (f = this.values.fill, n.fillStyle = this.values.fill), i = (p = this.textSpans[t].elem).length, this.globalData.canvasContext.beginPath(), r = 0; r < i; r += 1)
                        for (a = (m = p[r]).length, this.globalData.canvasContext.moveTo(m[0], m[1]), s = 2; s < a; s += 6) this.globalData.canvasContext.bezierCurveTo(m[s], m[s + 1], m[s + 2], m[s + 3], m[s + 4], m[s + 5]);
                    this.globalData.canvasContext.closePath(), this.globalData.canvasContext.fill()
                }
                if (this.stroke) {
                    for (o && o.sw ? d !== o.sw && (d = o.sw, n.lineWidth = o.sw) : d !== this.values.sWidth && (d = this.values.sWidth, n.lineWidth = this.values.sWidth), o && o.sc ? c !== o.sc && (c = o.sc, n.strokeStyle = o.sc) : c !== this.values.stroke && (c = this.values.stroke, n.strokeStyle = this.values.stroke), i = (p = this.textSpans[t].elem).length, this.globalData.canvasContext.beginPath(), r = 0; r < i; r += 1)
                        for (a = (m = p[r]).length, this.globalData.canvasContext.moveTo(m[0], m[1]), s = 2; s < a; s += 6) this.globalData.canvasContext.bezierCurveTo(m[s], m[s + 1], m[s + 2], m[s + 3], m[s + 4], m[s + 5]);
                    this.globalData.canvasContext.closePath(), this.globalData.canvasContext.stroke()
                }
                o && this.globalData.renderer.restore()
            }
    }, CVEffects.prototype.renderFrame = function() {}, HBaseElement.prototype = {
        checkBlendMode: function() {},
        initRendererElement: function() {
            this.baseElement = createTag(this.data.tg || "div"), this.data.hasMask ? (this.svgElement = createNS("svg"), this.layerElement = createNS("g"), this.maskedElement = this.layerElement, this.svgElement.appendChild(this.layerElement), this.baseElement.appendChild(this.svgElement)) : this.layerElement = this.baseElement, styleDiv(this.baseElement)
        },
        createContainerElements: function() {
            this.renderableEffectsManager = new CVEffects(this), this.transformedElement = this.baseElement, this.maskedElement = this.layerElement, this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), 0 !== this.data.bm && this.setBlendMode()
        },
        renderElement: function() {
            var t = this.transformedElement ? this.transformedElement.style : {};
            if (this.finalTransform._matMdf) {
                var e = this.finalTransform.mat.toCSS();
                t.transform = e, t.webkitTransform = e
            }
            this.finalTransform._opMdf && (t.opacity = this.finalTransform.mProp.o.v)
        },
        renderFrame: function() {
            this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = !1))
        },
        destroy: function() {
            this.layerElement = null, this.transformedElement = null, this.matteElement && (this.matteElement = null), this.maskManager && (this.maskManager.destroy(), this.maskManager = null)
        },
        createRenderableComponents: function() {
            this.maskManager = new MaskElement(this.data, this, this.globalData)
        },
        addEffects: function() {},
        setMatte: function() {}
    }, HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement, HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy, HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting, extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement), HSolidElement.prototype.createContent = function() {
        var t;
        this.data.hasMask ? ((t = createNS("rect")).setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.svgElement.setAttribute("width", this.data.sw), this.svgElement.setAttribute("height", this.data.sh)) : ((t = createTag("div")).style.width = this.data.sw + "px", t.style.height = this.data.sh + "px", t.style.backgroundColor = this.data.sc), this.layerElement.appendChild(t)
    }, extendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement), HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements, HCompElement.prototype.createContainerElements = function() {
        this._createBaseContainerElements(), this.data.hasMask ? (this.svgElement.setAttribute("width", this.data.w), this.svgElement.setAttribute("height", this.data.h), this.transformedElement = this.baseElement) : this.transformedElement = this.layerElement
    }, HCompElement.prototype.addTo3dContainer = function(t, e) {
        for (var r, i = 0; i < e;) this.elements[i] && this.elements[i].getBaseElement && (r = this.elements[i].getBaseElement()), i += 1;
        r ? this.layerElement.insertBefore(t, r) : this.layerElement.appendChild(t)
    }, extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement), HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent, HShapeElement.prototype.createContent = function() {
        var t;
        if (this.baseElement.style.fontSize = 0, this.data.hasMask) this.layerElement.appendChild(this.shapesContainer), t = this.svgElement;
        else {
            t = createNS("svg");
            var e = this.comp.data ? this.comp.data : this.globalData.compSize;
            t.setAttribute("width", e.w), t.setAttribute("height", e.h), t.appendChild(this.shapesContainer), this.layerElement.appendChild(t)
        }
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], !0), this.filterUniqueShapes(), this.shapeCont = t
    }, HShapeElement.prototype.getTransformedPoint = function(t, e) {
        var r, i = t.length;
        for (r = 0; r < i; r += 1) e = t[r].mProps.v.applyToPointArray(e[0], e[1], 0);
        return e
    }, HShapeElement.prototype.calculateShapeBoundingBox = function(t, e) {
        var r, i, s, a, n, o = t.sh.v,
            h = t.transformers,
            l = o._length;
        if (!(l <= 1)) {
            for (r = 0; r < l - 1; r += 1) i = this.getTransformedPoint(h, o.v[r]), s = this.getTransformedPoint(h, o.o[r]), a = this.getTransformedPoint(h, o.i[r + 1]), n = this.getTransformedPoint(h, o.v[r + 1]), this.checkBounds(i, s, a, n, e);
            o.c && (i = this.getTransformedPoint(h, o.v[r]), s = this.getTransformedPoint(h, o.o[r]), a = this.getTransformedPoint(h, o.i[0]), n = this.getTransformedPoint(h, o.v[0]), this.checkBounds(i, s, a, n, e))
        }
    }, HShapeElement.prototype.checkBounds = function(t, e, r, i, s) {
        this.getBoundsOfCurve(t, e, r, i);
        var a = this.shapeBoundingBox;
        s.x = bmMin(a.left, s.x), s.xMax = bmMax(a.right, s.xMax), s.y = bmMin(a.top, s.y), s.yMax = bmMax(a.bottom, s.yMax)
    }, HShapeElement.prototype.shapeBoundingBox = {
        left: 0,
        right: 0,
        top: 0,
        bottom: 0
    }, HShapeElement.prototype.tempBoundingBox = {
        x: 0,
        xMax: 0,
        y: 0,
        yMax: 0,
        width: 0,
        height: 0
    }, HShapeElement.prototype.getBoundsOfCurve = function(t, e, r, i) {
        for (var s, a, n, o, h, l, p, m = [
                [t[0], i[0]],
                [t[1], i[1]]
            ], f = 0; f < 2; ++f) a = 6 * t[f] - 12 * e[f] + 6 * r[f], s = -3 * t[f] + 9 * e[f] - 9 * r[f] + 3 * i[f], n = 3 * e[f] - 3 * t[f], a |= 0, n |= 0, 0 === (s |= 0) && 0 === a || (0 === s ? 0 < (o = -n / a) && o < 1 && m[f].push(this.calculateF(o, t, e, r, i, f)) : 0 <= (h = a * a - 4 * n * s) && (0 < (l = (-a + bmSqrt(h)) / (2 * s)) && l < 1 && m[f].push(this.calculateF(l, t, e, r, i, f)), 0 < (p = (-a - bmSqrt(h)) / (2 * s)) && p < 1 && m[f].push(this.calculateF(p, t, e, r, i, f))));
        this.shapeBoundingBox.left = bmMin.apply(null, m[0]), this.shapeBoundingBox.top = bmMin.apply(null, m[1]), this.shapeBoundingBox.right = bmMax.apply(null, m[0]), this.shapeBoundingBox.bottom = bmMax.apply(null, m[1])
    }, HShapeElement.prototype.calculateF = function(t, e, r, i, s, a) {
        return bmPow(1 - t, 3) * e[a] + 3 * bmPow(1 - t, 2) * t * r[a] + 3 * (1 - t) * bmPow(t, 2) * i[a] + bmPow(t, 3) * s[a]
    }, HShapeElement.prototype.calculateBoundingBox = function(t, e) {
        var r, i = t.length;
        for (r = 0; r < i; r += 1) t[r] && t[r].sh ? this.calculateShapeBoundingBox(t[r], e) : t[r] && t[r].it && this.calculateBoundingBox(t[r].it, e)
    }, HShapeElement.prototype.currentBoxContains = function(t) {
        return this.currentBBox.x <= t.x && this.currentBBox.y <= t.y && this.currentBBox.width + this.currentBBox.x >= t.x + t.width && this.currentBBox.height + this.currentBBox.y >= t.y + t.height
    }, HShapeElement.prototype.renderInnerContent = function() {
        if (this._renderShapeFrame(), !this.hidden && (this._isFirstFrame || this._mdf)) {
            var t = this.tempBoundingBox,
                e = 999999;
            if (t.x = e, t.xMax = -e, t.y = e, t.yMax = -e, this.calculateBoundingBox(this.itemsData, t), t.width = t.xMax < t.x ? 0 : t.xMax - t.x, t.height = t.yMax < t.y ? 0 : t.yMax - t.y, this.currentBoxContains(t)) return;
            var r = !1;
            if (this.currentBBox.w !== t.width && (this.currentBBox.w = t.width, this.shapeCont.setAttribute("width", t.width), r = !0), this.currentBBox.h !== t.height && (this.currentBBox.h = t.height, this.shapeCont.setAttribute("height", t.height), r = !0), r || this.currentBBox.x !== t.x || this.currentBBox.y !== t.y) {
                this.currentBBox.w = t.width, this.currentBBox.h = t.height, this.currentBBox.x = t.x, this.currentBBox.y = t.y, this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
                var i = this.shapeCont.style,
                    s = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                i.transform = s, i.webkitTransform = s
            }
        }
    }, extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement), HTextElement.prototype.createContent = function() {
        if (this.isMasked = this.checkMasks(), this.isMasked) {
            this.renderType = "svg", this.compW = this.comp.data.w, this.compH = this.comp.data.h, this.svgElement.setAttribute("width", this.compW), this.svgElement.setAttribute("height", this.compH);
            var t = createNS("g");
            this.maskedElement.appendChild(t), this.innerElem = t
        } else this.renderType = "html", this.innerElem = this.layerElement;
        this.checkParenting()
    }, HTextElement.prototype.buildNewText = function() {
        var t = this.textProperty.currentData;
        this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
        var e = this.innerElem.style,
            r = t.fc ? this.buildColor(t.fc) : "rgba(0,0,0,0)";
        e.fill = r, e.color = r, t.sc && (e.stroke = this.buildColor(t.sc), e.strokeWidth = t.sw + "px");
        var i, s, a = this.globalData.fontManager.getFontByName(t.f);
        if (!this.globalData.fontManager.chars)
            if (e.fontSize = t.finalSize + "px", e.lineHeight = t.finalSize + "px", a.fClass) this.innerElem.className = a.fClass;
            else {
                e.fontFamily = a.fFamily;
                var n = t.fWeight,
                    o = t.fStyle;
                e.fontStyle = o, e.fontWeight = n
            }
        var h, l, p, m = t.l;
        s = m.length;
        var f, c = this.mHelper,
            d = "",
            u = 0;
        for (i = 0; i < s; i += 1) {
            if (this.globalData.fontManager.chars ? (this.textPaths[u] ? h = this.textPaths[u] : ((h = createNS("path")).setAttribute("stroke-linecap", lineCapEnum[1]), h.setAttribute("stroke-linejoin", lineJoinEnum[2]), h.setAttribute("stroke-miterlimit", "4")), this.isMasked || (this.textSpans[u] ? p = (l = this.textSpans[u]).children[0] : ((l = createTag("div")).style.lineHeight = 0, (p = createNS("svg")).appendChild(h), styleDiv(l)))) : this.isMasked ? h = this.textPaths[u] ? this.textPaths[u] : createNS("text") : this.textSpans[u] ? (l = this.textSpans[u], h = this.textPaths[u]) : (styleDiv(l = createTag("span")), styleDiv(h = createTag("span")), l.appendChild(h)), this.globalData.fontManager.chars) {
                var y, g = this.globalData.fontManager.getCharData(t.finalText[i], a.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);
                if (y = g ? g.data : null, c.reset(), y && y.shapes && (f = y.shapes[0].it, c.scale(t.finalSize / 100, t.finalSize / 100), d = this.createPathShape(c, f), h.setAttribute("d", d)), this.isMasked) this.innerElem.appendChild(h);
                else {
                    if (this.innerElem.appendChild(l), y && y.shapes) {
                        document.body.appendChild(p);
                        var v = p.getBBox();
                        p.setAttribute("width", v.width + 2), p.setAttribute("height", v.height + 2), p.setAttribute("viewBox", v.x - 1 + " " + (v.y - 1) + " " + (v.width + 2) + " " + (v.height + 2));
                        var b = p.style,
                            P = "translate(" + (v.x - 1) + "px," + (v.y - 1) + "px)";
                        b.transform = P, b.webkitTransform = P, m[i].yOffset = v.y - 1
                    } else p.setAttribute("width", 1), p.setAttribute("height", 1);
                    l.appendChild(p)
                }
            } else if (h.textContent = m[i].val, h.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"), this.isMasked) this.innerElem.appendChild(h);
            else {
                this.innerElem.appendChild(l);
                var E = h.style,
                    x = "translate3d(0," + -t.finalSize / 1.2 + "px,0)";
                E.transform = x, E.webkitTransform = x
            }
            this.isMasked ? this.textSpans[u] = h : this.textSpans[u] = l, this.textSpans[u].style.display = "block", this.textPaths[u] = h, u += 1
        }
        for (; u < this.textSpans.length;) this.textSpans[u].style.display = "none", u += 1
    }, HTextElement.prototype.renderInnerContent = function() {
        var t;
        if (this.data.singleShape) {
            if (!this._isFirstFrame && !this.lettersChangedFlag) return;
            if (this.isMasked && this.finalTransform._matMdf) {
                this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH), t = this.svgElement.style;
                var e = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)";
                t.transform = e, t.webkitTransform = e
            }
        }
        if (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
            var r, i, s, a, n, o = 0,
                h = this.textAnimator.renderedLetters,
                l = this.textProperty.currentData.l;
            for (i = l.length, r = 0; r < i; r += 1) l[r].n ? o += 1 : (a = this.textSpans[r], n = this.textPaths[r], s = h[o], o += 1, s._mdf.m && (this.isMasked ? a.setAttribute("transform", s.m) : (a.style.webkitTransform = s.m, a.style.transform = s.m)), a.style.opacity = s.o, s.sw && s._mdf.sw && n.setAttribute("stroke-width", s.sw), s.sc && s._mdf.sc && n.setAttribute("stroke", s.sc), s.fc && s._mdf.fc && (n.setAttribute("fill", s.fc), n.style.color = s.fc));
            if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
                var p = this.innerElem.getBBox();
                this.currentBBox.w !== p.width && (this.currentBBox.w = p.width, this.svgElement.setAttribute("width", p.width)), this.currentBBox.h !== p.height && (this.currentBBox.h = p.height, this.svgElement.setAttribute("height", p.height));
                if (this.currentBBox.w !== p.width + 2 || this.currentBBox.h !== p.height + 2 || this.currentBBox.x !== p.x - 1 || this.currentBBox.y !== p.y - 1) {
                    this.currentBBox.w = p.width + 2, this.currentBBox.h = p.height + 2, this.currentBBox.x = p.x - 1, this.currentBBox.y = p.y - 1, this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h), t = this.svgElement.style;
                    var m = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                    t.transform = m, t.webkitTransform = m
                }
            }
        }
    }, extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement), HImageElement.prototype.createContent = function() {
        var t = this.globalData.getAssetsPath(this.assetData),
            e = new Image;
        this.data.hasMask ? (this.imageElem = createNS("image"), this.imageElem.setAttribute("width", this.assetData.w + "px"), this.imageElem.setAttribute("height", this.assetData.h + "px"), this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t), this.layerElement.appendChild(this.imageElem), this.baseElement.setAttribute("width", this.assetData.w), this.baseElement.setAttribute("height", this.assetData.h)) : this.layerElement.appendChild(e), e.crossOrigin = "anonymous", e.src = t, this.data.ln && this.baseElement.setAttribute("id", this.data.ln)
    }, extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement), HCameraElement.prototype.setup = function() {
        var t, e, r, i, s = this.comp.threeDElements.length;
        for (t = 0; t < s; t += 1)
            if ("3d" === (e = this.comp.threeDElements[t]).type) {
                r = e.perspectiveElem.style, i = e.container.style;
                var a = this.pe.v + "px",
                    n = "0px 0px 0px",
                    o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                r.perspective = a, r.webkitPerspective = a, i.transformOrigin = n, i.mozTransformOrigin = n, i.webkitTransformOrigin = n, r.transform = o, r.webkitTransform = o
            }
    }, HCameraElement.prototype.createElements = function() {}, HCameraElement.prototype.hide = function() {}, HCameraElement.prototype.renderFrame = function() {
        var t, e, r = this._isFirstFrame;
        if (this.hierarchy)
            for (e = this.hierarchy.length, t = 0; t < e; t += 1) r = this.hierarchy[t].finalTransform.mProp._mdf || r;
        if (r || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
            if (this.mat.reset(), this.hierarchy)
                for (t = e = this.hierarchy.length - 1; 0 <= t; t -= 1) {
                    var i = this.hierarchy[t].finalTransform.mProp;
                    this.mat.translate(-i.p.v[0], -i.p.v[1], i.p.v[2]), this.mat.rotateX(-i.or.v[0]).rotateY(-i.or.v[1]).rotateZ(i.or.v[2]), this.mat.rotateX(-i.rx.v).rotateY(-i.ry.v).rotateZ(i.rz.v), this.mat.scale(1 / i.s.v[0], 1 / i.s.v[1], 1 / i.s.v[2]), this.mat.translate(i.a.v[0], i.a.v[1], i.a.v[2])
                }
            if (this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v), this.a) {
                var s;
                s = this.p ? [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]] : [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
                var a = Math.sqrt(Math.pow(s[0], 2) + Math.pow(s[1], 2) + Math.pow(s[2], 2)),
                    n = [s[0] / a, s[1] / a, s[2] / a],
                    o = Math.sqrt(n[2] * n[2] + n[0] * n[0]),
                    h = Math.atan2(n[1], o),
                    l = Math.atan2(n[0], -n[2]);
                this.mat.rotateY(l).rotateX(-h)
            }
            this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v), this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]), this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0), this.mat.translate(0, 0, this.pe.v);
            var p = !this._prevMat.equals(this.mat);
            if ((p || this.pe._mdf) && this.comp.threeDElements) {
                var m, f, c;
                for (e = this.comp.threeDElements.length, t = 0; t < e; t += 1)
                    if ("3d" === (m = this.comp.threeDElements[t]).type) {
                        if (p) {
                            var d = this.mat.toCSS();
                            (c = m.container.style).transform = d, c.webkitTransform = d
                        }
                        this.pe._mdf && ((f = m.perspectiveElem.style).perspective = this.pe.v + "px", f.webkitPerspective = this.pe.v + "px")
                    }
                this.mat.clone(this._prevMat)
            }
        }
        this._isFirstFrame = !1
    }, HCameraElement.prototype.prepareFrame = function(t) {
        this.prepareProperties(t, !0)
    }, HCameraElement.prototype.destroy = function() {}, HCameraElement.prototype.getBaseElement = function() {
        return null
    }, HEffects.prototype.renderFrame = function() {};
    var animationManager = function() {
            var t = {},
                s = [],
                i = 0,
                a = 0,
                n = 0,
                o = !0,
                h = !1;

            function r(t) {
                for (var e = 0, r = t.target; e < a;) s[e].animation === r && (s.splice(e, 1), e -= 1, a -= 1, r.isPaused || m()), e += 1
            }

            function l(t, e) {
                if (!t) return null;
                for (var r = 0; r < a;) {
                    if (s[r].elem === t && null !== s[r].elem) return s[r].animation;
                    r += 1
                }
                var i = new AnimationItem;
                return f(i, t), i.setData(t, e), i
            }

            function p() {
                n += 1, d()
            }

            function m() {
                n -= 1
            }

            function f(t, e) {
                t.addEventListener("destroy", r), t.addEventListener("_active", p), t.addEventListener("_idle", m), s.push({
                    elem: e,
                    animation: t
                }), a += 1
            }

            function c(t) {
                var e, r = t - i;
                for (e = 0; e < a; e += 1) s[e].animation.advanceTime(r);
                i = t, n && !h ? window.requestAnimationFrame(c) : o = !0
            }

            function e(t) {
                i = t, window.requestAnimationFrame(c)
            }

            function d() {
                !h && n && o && (window.requestAnimationFrame(e), o = !1)
            }
            return t.registerAnimation = l, t.loadAnimation = function(t) {
                var e = new AnimationItem;
                return f(e, null), e.setParams(t), e
            }, t.setSpeed = function(t, e) {
                var r;
                for (r = 0; r < a; r += 1) s[r].animation.setSpeed(t, e)
            }, t.setDirection = function(t, e) {
                var r;
                for (r = 0; r < a; r += 1) s[r].animation.setDirection(t, e)
            }, t.play = function(t) {
                var e;
                for (e = 0; e < a; e += 1) s[e].animation.play(t)
            }, t.pause = function(t) {
                var e;
                for (e = 0; e < a; e += 1) s[e].animation.pause(t)
            }, t.stop = function(t) {
                var e;
                for (e = 0; e < a; e += 1) s[e].animation.stop(t)
            }, t.togglePause = function(t) {
                var e;
                for (e = 0; e < a; e += 1) s[e].animation.togglePause(t)
            }, t.searchAnimations = function(t, e, r) {
                var i, s = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin"))),
                    a = s.length;
                for (i = 0; i < a; i += 1) r && s[i].setAttribute("data-bm-type", r), l(s[i], t);
                if (e && 0 === a) {
                    r || (r = "svg");
                    var n = document.getElementsByTagName("body")[0];
                    n.innerText = "";
                    var o = createTag("div");
                    o.style.width = "100%", o.style.height = "100%", o.setAttribute("data-bm-type", r), n.appendChild(o), l(o, t)
                }
            }, t.resize = function() {
                var t;
                for (t = 0; t < a; t += 1) s[t].animation.resize()
            }, t.goToAndStop = function(t, e, r) {
                var i;
                for (i = 0; i < a; i += 1) s[i].animation.goToAndStop(t, e, r)
            }, t.destroy = function(t) {
                var e;
                for (e = a - 1; 0 <= e; e -= 1) s[e].animation.destroy(t)
            }, t.freeze = function() {
                h = !0
            }, t.unfreeze = function() {
                h = !1, d()
            }, t.setVolume = function(t, e) {
                var r;
                for (r = 0; r < a; r += 1) s[r].animation.setVolume(t, e)
            }, t.mute = function(t) {
                var e;
                for (e = 0; e < a; e += 1) s[e].animation.mute(t)
            }, t.unmute = function(t) {
                var e;
                for (e = 0; e < a; e += 1) s[e].animation.unmute(t)
            }, t.getRegisteredAnimations = function() {
                var t, e = s.length,
                    r = [];
                for (t = 0; t < e; t += 1) r.push(s[t].animation);
                return r
            }, t
        }(),
        AnimationItem = function() {
            this._cbs = [], this.name = "", this.path = "", this.isLoaded = !1, this.currentFrame = 0, this.currentRawFrame = 0, this.firstFrame = 0, this.totalFrames = 0, this.frameRate = 0, this.frameMult = 0, this.playSpeed = 1, this.playDirection = 1, this.playCount = 0, this.animationData = {}, this.assets = [], this.isPaused = !0, this.autoplay = !1, this.loop = !0, this.renderer = null, this.animationID = createElementID(), this.assetsPath = "", this.timeCompleted = 0, this.segmentPos = 0, this.isSubframeEnabled = subframeEnabled, this.segments = [], this._idle = !0, this._completedLoop = !1, this.projectInterface = ProjectInterface(), this.imagePreloader = new ImagePreloader, this.audioController = audioControllerFactory(), this.markers = []
        };
    extendPrototype([BaseEvent], AnimationItem), AnimationItem.prototype.setParams = function(t) {
        (t.wrapper || t.container) && (this.wrapper = t.wrapper || t.container);
        var e = "svg";
        switch (t.animType ? e = t.animType : t.renderer && (e = t.renderer), e) {
            case "canvas":
                this.renderer = new CanvasRenderer(this, t.rendererSettings);
                break;
            case "svg":
                this.renderer = new SVGRenderer(this, t.rendererSettings);
                break;
            default:
                this.renderer = new HybridRenderer(this, t.rendererSettings)
        }
        this.imagePreloader.setCacheType(e, this.renderer.globalData.defs), this.renderer.setProjectInterface(this.projectInterface), this.animType = e, "" === t.loop || null === t.loop || void 0 === t.loop || !0 === t.loop ? this.loop = !0 : !1 === t.loop ? this.loop = !1 : this.loop = parseInt(t.loop, 10), this.autoplay = !("autoplay" in t) || t.autoplay, this.name = t.name ? t.name : "", this.autoloadSegments = !Object.prototype.hasOwnProperty.call(t, "autoloadSegments") || t.autoloadSegments, this.assetsPath = t.assetsPath, this.initialSegment = t.initialSegment, t.audioFactory && this.audioController.setAudioFactory(t.audioFactory), t.animationData ? this.configAnimation(t.animationData) : t.path && (-1 !== t.path.lastIndexOf("\\") ? this.path = t.path.substr(0, t.path.lastIndexOf("\\") + 1) : this.path = t.path.substr(0, t.path.lastIndexOf("/") + 1), this.fileName = t.path.substr(t.path.lastIndexOf("/") + 1), this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json")), assetLoader.load(t.path, this.configAnimation.bind(this), function() {
            this.trigger("data_failed")
        }.bind(this)))
    }, AnimationItem.prototype.setData = function(t, e) {
        e && "object" != typeof e && (e = JSON.parse(e));
        var r = {
                wrapper: t,
                animationData: e
            },
            i = t.attributes;
        r.path = i.getNamedItem("data-animation-path") ? i.getNamedItem("data-animation-path").value : i.getNamedItem("data-bm-path") ? i.getNamedItem("data-bm-path").value : i.getNamedItem("bm-path") ? i.getNamedItem("bm-path").value : "", r.animType = i.getNamedItem("data-anim-type") ? i.getNamedItem("data-anim-type").value : i.getNamedItem("data-bm-type") ? i.getNamedItem("data-bm-type").value : i.getNamedItem("bm-type") ? i.getNamedItem("bm-type").value : i.getNamedItem("data-bm-renderer") ? i.getNamedItem("data-bm-renderer").value : i.getNamedItem("bm-renderer") ? i.getNamedItem("bm-renderer").value : "canvas";
        var s = i.getNamedItem("data-anim-loop") ? i.getNamedItem("data-anim-loop").value : i.getNamedItem("data-bm-loop") ? i.getNamedItem("data-bm-loop").value : i.getNamedItem("bm-loop") ? i.getNamedItem("bm-loop").value : "";
        "false" === s ? r.loop = !1 : "true" === s ? r.loop = !0 : "" !== s && (r.loop = parseInt(s, 10));
        var a = i.getNamedItem("data-anim-autoplay") ? i.getNamedItem("data-anim-autoplay").value : i.getNamedItem("data-bm-autoplay") ? i.getNamedItem("data-bm-autoplay").value : !i.getNamedItem("bm-autoplay") || i.getNamedItem("bm-autoplay").value;
        r.autoplay = "false" !== a, r.name = i.getNamedItem("data-name") ? i.getNamedItem("data-name").value : i.getNamedItem("data-bm-name") ? i.getNamedItem("data-bm-name").value : i.getNamedItem("bm-name") ? i.getNamedItem("bm-name").value : "", "false" === (i.getNamedItem("data-anim-prerender") ? i.getNamedItem("data-anim-prerender").value : i.getNamedItem("data-bm-prerender") ? i.getNamedItem("data-bm-prerender").value : i.getNamedItem("bm-prerender") ? i.getNamedItem("bm-prerender").value : "") && (r.prerender = !1), this.setParams(r)
    }, AnimationItem.prototype.includeLayers = function(t) {
        t.op > this.animationData.op && (this.animationData.op = t.op, this.totalFrames = Math.floor(t.op - this.animationData.ip));
        var e, r, i = this.animationData.layers,
            s = i.length,
            a = t.layers,
            n = a.length;
        for (r = 0; r < n; r += 1)
            for (e = 0; e < s;) {
                if (i[e].id === a[r].id) {
                    i[e] = a[r];
                    break
                }
                e += 1
            }
        if ((t.chars || t.fonts) && (this.renderer.globalData.fontManager.addChars(t.chars), this.renderer.globalData.fontManager.addFonts(t.fonts, this.renderer.globalData.defs)), t.assets)
            for (s = t.assets.length, e = 0; e < s; e += 1) this.animationData.assets.push(t.assets[e]);
        this.animationData.__complete = !1, dataManager.completeData(this.animationData, this.renderer.globalData.fontManager), this.renderer.includeLayers(t.layers), expressionsPlugin && expressionsPlugin.initExpressions(this), this.loadNextSegment()
    }, AnimationItem.prototype.loadNextSegment = function() {
        var t = this.animationData.segments;
        if (!t || 0 === t.length || !this.autoloadSegments) return this.trigger("data_ready"), void(this.timeCompleted = this.totalFrames);
        var e = t.shift();
        this.timeCompleted = e.time * this.frameRate;
        var r = this.path + this.fileName + "_" + this.segmentPos + ".json";
        this.segmentPos += 1, assetLoader.load(r, this.includeLayers.bind(this), function() {
            this.trigger("data_failed")
        }.bind(this))
    }, AnimationItem.prototype.loadSegments = function() {
        this.animationData.segments || (this.timeCompleted = this.totalFrames), this.loadNextSegment()
    }, AnimationItem.prototype.imagesLoaded = function() {
        this.trigger("loaded_images"), this.checkLoaded()
    }, AnimationItem.prototype.preloadImages = function() {
        this.imagePreloader.setAssetsPath(this.assetsPath), this.imagePreloader.setPath(this.path), this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this))
    }, AnimationItem.prototype.configAnimation = function(t) {
        if (this.renderer) try {
            this.animationData = t, this.initialSegment ? (this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]), this.firstFrame = Math.round(this.initialSegment[0])) : (this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip), this.firstFrame = Math.round(this.animationData.ip)), this.renderer.configAnimation(t), t.assets || (t.assets = []), this.assets = this.animationData.assets, this.frameRate = this.animationData.fr, this.frameMult = this.animationData.fr / 1e3, this.renderer.searchExtraCompositions(t.assets), this.markers = markerParser(t.markers || []), this.trigger("config_ready"), this.preloadImages(), this.loadSegments(), this.updaFrameModifier(), this.waitForFontsLoaded(), this.isPaused && this.audioController.pause()
        } catch (t) {
            this.triggerConfigError(t)
        }
    }, AnimationItem.prototype.waitForFontsLoaded = function() {
        this.renderer && (this.renderer.globalData.fontManager.isLoaded ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20))
    }, AnimationItem.prototype.checkLoaded = function() {
        !this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || "canvas" !== this.renderer.rendererType) && this.imagePreloader.loadedFootages() && (this.isLoaded = !0, dataManager.completeData(this.animationData, this.renderer.globalData.fontManager), expressionsPlugin && expressionsPlugin.initExpressions(this), this.renderer.initItems(), setTimeout(function() {
            this.trigger("DOMLoaded")
        }.bind(this), 0), this.gotoFrame(), this.autoplay && this.play())
    }, AnimationItem.prototype.resize = function() {
        this.renderer.updateContainerSize()
    }, AnimationItem.prototype.setSubframe = function(t) {
        this.isSubframeEnabled = !!t
    }, AnimationItem.prototype.gotoFrame = function() {
        this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame, this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted), this.trigger("enterFrame"), this.renderFrame()
    }, AnimationItem.prototype.renderFrame = function() {
        if (!1 !== this.isLoaded && this.renderer) try {
            this.renderer.renderFrame(this.currentFrame + this.firstFrame)
        } catch (t) {
            this.triggerRenderFrameError(t)
        }
    }, AnimationItem.prototype.play = function(t) {
        t && this.name !== t || !0 === this.isPaused && (this.isPaused = !1, this.audioController.resume(), this._idle && (this._idle = !1, this.trigger("_active")))
    }, AnimationItem.prototype.pause = function(t) {
        t && this.name !== t || !1 === this.isPaused && (this.isPaused = !0, this._idle = !0, this.trigger("_idle"), this.audioController.pause())
    }, AnimationItem.prototype.togglePause = function(t) {
        t && this.name !== t || (!0 === this.isPaused ? this.play() : this.pause())
    }, AnimationItem.prototype.stop = function(t) {
        t && this.name !== t || (this.pause(), this.playCount = 0, this._completedLoop = !1, this.setCurrentRawFrameValue(0))
    }, AnimationItem.prototype.getMarkerData = function(t) {
        for (var e, r = 0; r < this.markers.length; r += 1)
            if ((e = this.markers[r]).payload && e.payload.name === t) return e;
        return null
    }, AnimationItem.prototype.goToAndStop = function(t, e, r) {
        if (!r || this.name === r) {
            var i = Number(t);
            if (isNaN(i)) {
                var s = this.getMarkerData(t);
                s && this.goToAndStop(s.time, !0)
            } else e ? this.setCurrentRawFrameValue(t) : this.setCurrentRawFrameValue(t * this.frameModifier);
            this.pause()
        }
    }, AnimationItem.prototype.goToAndPlay = function(t, e, r) {
        if (!r || this.name === r) {
            var i = Number(t);
            if (isNaN(i)) {
                var s = this.getMarkerData(t);
                s && (s.duration ? this.playSegments([s.time, s.time + s.duration], !0) : this.goToAndStop(s.time, !0))
            } else this.goToAndStop(i, e, r);
            this.play()
        }
    }, AnimationItem.prototype.advanceTime = function(t) {
        if (!0 !== this.isPaused && !1 !== this.isLoaded) {
            var e = this.currentRawFrame + t * this.frameModifier,
                r = !1;
            e >= this.totalFrames - 1 && 0 < this.frameModifier ? this.loop && this.playCount !== this.loop ? e >= this.totalFrames ? (this.playCount += 1, this.checkSegments(e % this.totalFrames) || (this.setCurrentRawFrameValue(e % this.totalFrames), this._completedLoop = !0, this.trigger("loopComplete"))) : this.setCurrentRawFrameValue(e) : this.checkSegments(e > this.totalFrames ? e % this.totalFrames : 0) || (r = !0, e = this.totalFrames - 1) : e < 0 ? this.checkSegments(e % this.totalFrames) || (!this.loop || this.playCount-- <= 0 && !0 !== this.loop ? (r = !0, e = 0) : (this.setCurrentRawFrameValue(this.totalFrames + e % this.totalFrames), this._completedLoop ? this.trigger("loopComplete") : this._completedLoop = !0)) : this.setCurrentRawFrameValue(e), r && (this.setCurrentRawFrameValue(e), this.pause(), this.trigger("complete"))
        }
    }, AnimationItem.prototype.adjustSegment = function(t, e) {
        this.playCount = 0, t[1] < t[0] ? (0 < this.frameModifier && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)), this.totalFrames = t[0] - t[1], this.timeCompleted = this.totalFrames, this.firstFrame = t[1], this.setCurrentRawFrameValue(this.totalFrames - .001 - e)) : t[1] > t[0] && (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)), this.totalFrames = t[1] - t[0], this.timeCompleted = this.totalFrames, this.firstFrame = t[0], this.setCurrentRawFrameValue(.001 + e)), this.trigger("segmentStart")
    }, AnimationItem.prototype.setSegment = function(t, e) {
        var r = -1;
        this.isPaused && (this.currentRawFrame + this.firstFrame < t ? r = t : this.currentRawFrame + this.firstFrame > e && (r = e - t)), this.firstFrame = t, this.totalFrames = e - t, this.timeCompleted = this.totalFrames, -1 !== r && this.goToAndStop(r, !0)
    }, AnimationItem.prototype.playSegments = function(t, e) {
        if (e && (this.segments.length = 0), "object" == typeof t[0]) {
            var r, i = t.length;
            for (r = 0; r < i; r += 1) this.segments.push(t[r])
        } else this.segments.push(t);
        this.segments.length && e && this.adjustSegment(this.segments.shift(), 0), this.isPaused && this.play()
    }, AnimationItem.prototype.resetSegments = function(t) {
        this.segments.length = 0, this.segments.push([this.animationData.ip, this.animationData.op]), t && this.checkSegments(0)
    }, AnimationItem.prototype.checkSegments = function(t) {
        return !!this.segments.length && (this.adjustSegment(this.segments.shift(), t), !0)
    }, AnimationItem.prototype.destroy = function(t) {
        t && this.name !== t || !this.renderer || (this.renderer.destroy(), this.imagePreloader.destroy(), this.trigger("destroy"), this._cbs = null, this.onEnterFrame = null, this.onLoopComplete = null, this.onComplete = null, this.onSegmentStart = null, this.onDestroy = null, this.renderer = null, this.renderer = null, this.imagePreloader = null, this.projectInterface = null)
    }, AnimationItem.prototype.setCurrentRawFrameValue = function(t) {
        this.currentRawFrame = t, this.gotoFrame()
    }, AnimationItem.prototype.setSpeed = function(t) {
        this.playSpeed = t, this.updaFrameModifier()
    }, AnimationItem.prototype.setDirection = function(t) {
        this.playDirection = t < 0 ? -1 : 1, this.updaFrameModifier()
    }, AnimationItem.prototype.setVolume = function(t, e) {
        e && this.name !== e || this.audioController.setVolume(t)
    }, AnimationItem.prototype.getVolume = function() {
        return this.audioController.getVolume()
    }, AnimationItem.prototype.mute = function(t) {
        t && this.name !== t || this.audioController.mute()
    }, AnimationItem.prototype.unmute = function(t) {
        t && this.name !== t || this.audioController.unmute()
    }, AnimationItem.prototype.updaFrameModifier = function() {
        this.frameModifier = this.frameMult * this.playSpeed * this.playDirection, this.audioController.setRate(this.playSpeed * this.playDirection)
    }, AnimationItem.prototype.getPath = function() {
        return this.path
    }, AnimationItem.prototype.getAssetsPath = function(t) {
        var e = "";
        if (t.e) e = t.p;
        else if (this.assetsPath) {
            var r = t.p; - 1 !== r.indexOf("images/") && (r = r.split("/")[1]), e = this.assetsPath + r
        } else e = this.path, e += t.u ? t.u : "", e += t.p;
        return e
    }, AnimationItem.prototype.getAssetData = function(t) {
        for (var e = 0, r = this.assets.length; e < r;) {
            if (t === this.assets[e].id) return this.assets[e];
            e += 1
        }
        return null
    }, AnimationItem.prototype.hide = function() {
        this.renderer.hide()
    }, AnimationItem.prototype.show = function() {
        this.renderer.show()
    }, AnimationItem.prototype.getDuration = function(t) {
        return t ? this.totalFrames : this.totalFrames / this.frameRate
    }, AnimationItem.prototype.trigger = function(t) {
        if (this._cbs && this._cbs[t]) switch (t) {
            case "enterFrame":
                this.triggerEvent(t, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameModifier));
                break;
            case "loopComplete":
                this.triggerEvent(t, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult));
                break;
            case "complete":
                this.triggerEvent(t, new BMCompleteEvent(t, this.frameMult));
                break;
            case "segmentStart":
                this.triggerEvent(t, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames));
                break;
            case "destroy":
                this.triggerEvent(t, new BMDestroyEvent(t, this));
                break;
            default:
                this.triggerEvent(t)
        }
        "enterFrame" === t && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameMult)), "loopComplete" === t && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult)), "complete" === t && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(t, this.frameMult)), "segmentStart" === t && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames)), "destroy" === t && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(t, this))
    }, AnimationItem.prototype.triggerRenderFrameError = function(t) {
        var e = new BMRenderFrameErrorEvent(t, this.currentFrame);
        this.triggerEvent("error", e), this.onError && this.onError.call(this, e)
    }, AnimationItem.prototype.triggerConfigError = function(t) {
        var e = new BMConfigErrorEvent(t, this.currentFrame);
        this.triggerEvent("error", e), this.onError && this.onError.call(this, e)
    };
    var Expressions = (EY = {}, EY.initExpressions = function(t) {
            var e = 0,
                r = [];

            function i() {
                var t, e = r.length;
                for (t = 0; t < e; t += 1) r[t].release();
                r.length = 0
            }
            t.renderer.compInterface = CompExpressionInterface(t.renderer), t.renderer.globalData.projectInterface.registerComposition(t.renderer), t.renderer.globalData.pushExpression = function() {
                e += 1
            }, t.renderer.globalData.popExpression = function() {
                0 == (e -= 1) && i()
            }, t.renderer.globalData.registerExpressionProperty = function(t) {
                -1 === r.indexOf(t) && r.push(t)
            }
        }, EY),
        EY;
    expressionsPlugin = Expressions;
    var ExpressionManager = function() {
            var ob = {},
                Math = BMMath,
                window = null,
                document = null,
                XMLHttpRequest = null,
                fetch = null;

            function $bm_isInstanceOfArray(t) {
                return t.constructor === Array || t.constructor === Float32Array
            }

            function isNumerable(t, e) {
                return "number" === t || "boolean" === t || "string" === t || e instanceof Number
            }

            function $bm_neg(t) {
                var e = typeof t;
                if ("number" === e || "boolean" === e || t instanceof Number) return -t;
                if ($bm_isInstanceOfArray(t)) {
                    var r, i = t.length,
                        s = [];
                    for (r = 0; r < i; r += 1) s[r] = -t[r];
                    return s
                }
                return t.propType ? t.v : -t
            }
            var easeInBez = BezierFactory.getBezierEasing(.333, 0, .833, .833, "easeIn").get,
                easeOutBez = BezierFactory.getBezierEasing(.167, .167, .667, 1, "easeOut").get,
                easeInOutBez = BezierFactory.getBezierEasing(.33, 0, .667, 1, "easeInOut").get;

            function sum(t, e) {
                var r = typeof t,
                    i = typeof e;
                if ("string" === r || "string" === i) return t + e;
                if (isNumerable(r, t) && isNumerable(i, e)) return t + e;
                if ($bm_isInstanceOfArray(t) && isNumerable(i, e)) return (t = t.slice(0))[0] += e, t;
                if (isNumerable(r, t) && $bm_isInstanceOfArray(e)) return (e = e.slice(0))[0] = t + e[0], e;
                if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                    for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n;)("number" == typeof t[s] || t[s] instanceof Number) && ("number" == typeof e[s] || e[s] instanceof Number) ? o[s] = t[s] + e[s] : o[s] = void 0 === e[s] ? t[s] : t[s] || e[s], s += 1;
                    return o
                }
                return 0
            }
            var add = sum;

            function sub(t, e) {
                var r = typeof t,
                    i = typeof e;
                if (isNumerable(r, t) && isNumerable(i, e)) return "string" === r && (t = parseInt(t, 10)), "string" === i && (e = parseInt(e, 10)), t - e;
                if ($bm_isInstanceOfArray(t) && isNumerable(i, e)) return (t = t.slice(0))[0] -= e, t;
                if (isNumerable(r, t) && $bm_isInstanceOfArray(e)) return (e = e.slice(0))[0] = t - e[0], e;
                if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                    for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n;)("number" == typeof t[s] || t[s] instanceof Number) && ("number" == typeof e[s] || e[s] instanceof Number) ? o[s] = t[s] - e[s] : o[s] = void 0 === e[s] ? t[s] : t[s] || e[s], s += 1;
                    return o
                }
                return 0
            }

            function mul(t, e) {
                var r, i, s, a = typeof t,
                    n = typeof e;
                if (isNumerable(a, t) && isNumerable(n, e)) return t * e;
                if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
                    for (s = t.length, r = createTypedArray("float32", s), i = 0; i < s; i += 1) r[i] = t[i] * e;
                    return r
                }
                if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
                    for (s = e.length, r = createTypedArray("float32", s), i = 0; i < s; i += 1) r[i] = t * e[i];
                    return r
                }
                return 0
            }

            function div(t, e) {
                var r, i, s, a = typeof t,
                    n = typeof e;
                if (isNumerable(a, t) && isNumerable(n, e)) return t / e;
                if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
                    for (s = t.length, r = createTypedArray("float32", s), i = 0; i < s; i += 1) r[i] = t[i] / e;
                    return r
                }
                if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
                    for (s = e.length, r = createTypedArray("float32", s), i = 0; i < s; i += 1) r[i] = t / e[i];
                    return r
                }
                return 0
            }

            function mod(t, e) {
                return "string" == typeof t && (t = parseInt(t, 10)), "string" == typeof e && (e = parseInt(e, 10)), t % e
            }
            var $bm_sum = sum,
                $bm_sub = sub,
                $bm_mul = mul,
                $bm_div = div,
                $bm_mod = mod;

            function clamp(t, e, r) {
                if (r < e) {
                    var i = r;
                    r = e, e = i
                }
                return Math.min(Math.max(t, e), r)
            }

            function radiansToDegrees(t) {
                return t / degToRads
            }
            var radians_to_degrees = radiansToDegrees;

            function degreesToRadians(t) {
                return t * degToRads
            }
            var degrees_to_radians = radiansToDegrees,
                helperLengthArray = [0, 0, 0, 0, 0, 0];

            function length(t, e) {
                if ("number" == typeof t || t instanceof Number) return e = e || 0, Math.abs(t - e);
                var r;
                e || (e = helperLengthArray);
                var i = Math.min(t.length, e.length),
                    s = 0;
                for (r = 0; r < i; r += 1) s += Math.pow(e[r] - t[r], 2);
                return Math.sqrt(s)
            }

            function normalize(t) {
                return div(t, length(t))
            }

            function rgbToHsl(t) {
                var e, r, i = t[0],
                    s = t[1],
                    a = t[2],
                    n = Math.max(i, s, a),
                    o = Math.min(i, s, a),
                    h = (n + o) / 2;
                if (n === o) r = e = 0;
                else {
                    var l = n - o;
                    switch (r = .5 < h ? l / (2 - n - o) : l / (n + o), n) {
                        case i:
                            e = (s - a) / l + (s < a ? 6 : 0);
                            break;
                        case s:
                            e = (a - i) / l + 2;
                            break;
                        case a:
                            e = (i - s) / l + 4
                    }
                    e /= 6
                }
                return [e, r, h, t[3]]
            }

            function hue2rgb(t, e, r) {
                return r < 0 && (r += 1), 1 < r && (r -= 1), r < 1 / 6 ? t + 6 * (e - t) * r : r < .5 ? e : r < 2 / 3 ? t + (e - t) * (2 / 3 - r) * 6 : t
            }

            function hslToRgb(t) {
                var e, r, i, s = t[0],
                    a = t[1],
                    n = t[2];
                if (0 === a) r = i = e = n;
                else {
                    var o = n < .5 ? n * (1 + a) : n + a - n * a,
                        h = 2 * n - o;
                    e = hue2rgb(h, o, s + 1 / 3), r = hue2rgb(h, o, s), i = hue2rgb(h, o, s - 1 / 3)
                }
                return [e, r, i, t[3]]
            }

            function linear(t, e, r, i, s) {
                if (void 0 !== i && void 0 !== s || (i = e, s = r, e = 0, r = 1), r < e) {
                    var a = r;
                    r = e, e = a
                }
                if (t <= e) return i;
                if (r <= t) return s;
                var n, o = r === e ? 0 : (t - e) / (r - e);
                if (!i.length) return i + (s - i) * o;
                var h = i.length,
                    l = createTypedArray("float32", h);
                for (n = 0; n < h; n += 1) l[n] = i[n] + (s[n] - i[n]) * o;
                return l
            }

            function random(t, e) {
                if (void 0 === e && (void 0 === t ? (t = 0, e = 1) : (e = t, t = void 0)), e.length) {
                    var r, i = e.length;
                    t || (t = createTypedArray("float32", i));
                    var s = createTypedArray("float32", i),
                        a = BMMath.random();
                    for (r = 0; r < i; r += 1) s[r] = t[r] + a * (e[r] - t[r]);
                    return s
                }
                return void 0 === t && (t = 0), t + BMMath.random() * (e - t)
            }

            function createPath(t, e, r, i) {
                var s, a = t.length,
                    n = shapePool.newElement();
                n.setPathData(!!i, a);
                var o, h, l = [0, 0];
                for (s = 0; s < a; s += 1) o = e && e[s] ? e[s] : l, h = r && r[s] ? r[s] : l, n.setTripleAt(t[s][0], t[s][1], h[0] + t[s][0], h[1] + t[s][1], o[0] + t[s][0], o[1] + t[s][1], s, !0);
                return n
            }

            function initiateExpression(elem, data, property) {
                var val = data.x,
                    needsVelocity = /velocity(?![\w\d])/.test(val),
                    _needsRandom = -1 !== val.indexOf("random"),
                    elemType = elem.data.ty,
                    transform, $bm_transform, content, effect, thisProperty = property;
                thisProperty.valueAtTime = thisProperty.getValueAtTime, Object.defineProperty(thisProperty, "value", {
                    get: function() {
                        return thisProperty.v
                    }
                }), elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate, elem.comp.displayStartTime = 0;
                var inPoint = elem.data.ip / elem.comp.globalData.frameRate,
                    outPoint = elem.data.op / elem.comp.globalData.frameRate,
                    width = elem.data.sw ? elem.data.sw : 0,
                    height = elem.data.sh ? elem.data.sh : 0,
                    name = elem.data.nm,
                    loopIn, loop_in, loopOut, loop_out, smooth, toWorld, fromWorld, fromComp, toComp, fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp, mask, valueAtTime, velocityAtTime, scoped_bm_rt, expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0],
                    numKeys = property.kf ? data.k.length : 0,
                    active = !this.data || !0 !== this.data.hd,
                    wiggle = function(t, e) {
                        var r, i, s = this.pv.length ? this.pv.length : 1,
                            a = createTypedArray("float32", s);
                        var n = Math.floor(5 * time);
                        for (i = r = 0; r < n;) {
                            for (i = 0; i < s; i += 1) a[i] += -e + 2 * e * BMMath.random();
                            r += 1
                        }
                        var o = 5 * time,
                            h = o - Math.floor(o),
                            l = createTypedArray("float32", s);
                        if (1 < s) {
                            for (i = 0; i < s; i += 1) l[i] = this.pv[i] + a[i] + (-e + 2 * e * BMMath.random()) * h;
                            return l
                        }
                        return this.pv + a[0] + (-e + 2 * e * BMMath.random()) * h
                    }.bind(this);

                function loopInDuration(t, e) {
                    return loopIn(t, e, !0)
                }

                function loopOutDuration(t, e) {
                    return loopOut(t, e, !0)
                }
                thisProperty.loopIn && (loopIn = thisProperty.loopIn.bind(thisProperty), loop_in = loopIn), thisProperty.loopOut && (loopOut = thisProperty.loopOut.bind(thisProperty), loop_out = loopOut), thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)), this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)), this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));
                var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface),
                    time, velocity, value, text, textIndex, textTotal, selectorValue;

                function lookAt(t, e) {
                    var r = [e[0] - t[0], e[1] - t[1], e[2] - t[2]],
                        i = Math.atan2(r[0], Math.sqrt(r[1] * r[1] + r[2] * r[2])) / degToRads;
                    return [-Math.atan2(r[1], r[2]) / degToRads, i, 0]
                }

                function easeOut(t, e, r, i, s) {
                    return applyEase(easeOutBez, t, e, r, i, s)
                }

                function easeIn(t, e, r, i, s) {
                    return applyEase(easeInBez, t, e, r, i, s)
                }

                function ease(t, e, r, i, s) {
                    return applyEase(easeInOutBez, t, e, r, i, s)
                }

                function applyEase(t, e, r, i, s, a) {
                    void 0 === s ? (s = r, a = i) : e = (e - r) / (i - r), 1 < e ? e = 1 : e < 0 && (e = 0);
                    var n = t(e);
                    if ($bm_isInstanceOfArray(s)) {
                        var o, h = s.length,
                            l = createTypedArray("float32", h);
                        for (o = 0; o < h; o += 1) l[o] = (a[o] - s[o]) * n + s[o];
                        return l
                    }
                    return (a - s) * n + s
                }

                function nearestKey(t) {
                    var e, r, i, s = data.k.length;
                    if (data.k.length && "number" != typeof data.k[0])
                        if (r = -1, (t *= elem.comp.globalData.frameRate) < data.k[0].t) r = 1, i = data.k[0].t;
                        else {
                            for (e = 0; e < s - 1; e += 1) {
                                if (t === data.k[e].t) {
                                    r = e + 1, i = data.k[e].t;
                                    break
                                }
                                if (t > data.k[e].t && t < data.k[e + 1].t) {
                                    i = t - data.k[e].t > data.k[e + 1].t - t ? (r = e + 2, data.k[e + 1].t) : (r = e + 1, data.k[e].t);
                                    break
                                }
                            } - 1 === r && (r = e + 1, i = data.k[e].t)
                        }
                    else i = r = 0;
                    var a = {};
                    return a.index = r, a.time = i / elem.comp.globalData.frameRate, a
                }

                function key(t) {
                    var e, r, i;
                    if (!data.k.length || "number" == typeof data.k[0]) throw new Error("The property has no keyframe at index " + t);
                    t -= 1, e = {
                        time: data.k[t].t / elem.comp.globalData.frameRate,
                        value: []
                    };
                    var s = Object.prototype.hasOwnProperty.call(data.k[t], "s") ? data.k[t].s : data.k[t - 1].e;
                    for (i = s.length, r = 0; r < i; r += 1) e[r] = s[r], e.value[r] = s[r];
                    return e
                }

                function framesToTime(t, e) {
                    return e || (e = elem.comp.globalData.frameRate), t / e
                }

                function timeToFrames(t, e) {
                    return t || 0 === t || (t = time), e || (e = elem.comp.globalData.frameRate), t * e
                }

                function seedRandom(t) {
                    BMMath.seedrandom(randSeed + t)
                }

                function sourceRectAtTime() {
                    return elem.sourceRectAtTime()
                }

                function substring(t, e) {
                    return "string" == typeof value ? void 0 === e ? value.substring(t) : value.substring(t, e) : ""
                }

                function substr(t, e) {
                    return "string" == typeof value ? void 0 === e ? value.substr(t) : value.substr(t, e) : ""
                }

                function posterizeTime(t) {
                    time = 0 === t ? 0 : Math.floor(time * t) / t, value = valueAtTime(time)
                }
                var index = elem.data.ind,
                    hasParent = !(!elem.hierarchy || !elem.hierarchy.length),
                    parent, randSeed = Math.floor(1e6 * Math.random()),
                    globalData = elem.globalData;

                function executeExpression(t) {
                    return value = t, _needsRandom && seedRandom(randSeed), this.frameExpressionId === elem.globalData.frameId && "textSelector" !== this.propType ? value : ("textSelector" === this.propType && (textIndex = this.textIndex, textTotal = this.textTotal, selectorValue = this.selectorValue), thisLayer || (text = elem.layerInterface.text, thisLayer = elem.layerInterface, thisComp = elem.comp.compInterface, toWorld = thisLayer.toWorld.bind(thisLayer), fromWorld = thisLayer.fromWorld.bind(thisLayer), fromComp = thisLayer.fromComp.bind(thisLayer), toComp = thisLayer.toComp.bind(thisLayer), mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null, fromCompToSurface = fromComp), transform || (transform = elem.layerInterface("ADBE Transform Group"), ($bm_transform = transform) && (anchorPoint = transform.anchorPoint)), 4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")), effect || (effect = thisLayer(4)), (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface), time = this.comp.renderedFrame / this.comp.globalData.frameRate, needsVelocity && (velocity = velocityAtTime(time)), expression_function(), this.frameExpressionId = elem.globalData.frameId, "shape" === scoped_bm_rt.propType && (scoped_bm_rt = scoped_bm_rt.v), scoped_bm_rt)
                }
                return executeExpression
            }
            return ob.initiateExpression = initiateExpression, ob
        }(),
        expressionHelpers = {
            searchExpressions: function(t, e, r) {
                e.x && (r.k = !0, r.x = !0, r.initiateExpression = ExpressionManager.initiateExpression, r.effectsSequence.push(r.initiateExpression(t, e, r).bind(r)))
            },
            getSpeedAtTime: function(t) {
                var e = this.getValueAtTime(t),
                    r = this.getValueAtTime(t + -.01),
                    i = 0;
                if (e.length) {
                    var s;
                    for (s = 0; s < e.length; s += 1) i += Math.pow(r[s] - e[s], 2);
                    i = 100 * Math.sqrt(i)
                } else i = 0;
                return i
            },
            getVelocityAtTime: function(t) {
                if (void 0 !== this.vel) return this.vel;
                var e, r, i = this.getValueAtTime(t),
                    s = this.getValueAtTime(t + -.001);
                if (i.length)
                    for (e = createTypedArray("float32", i.length), r = 0; r < i.length; r += 1) e[r] = (s[r] - i[r]) / -.001;
                else e = (s - i) / -.001;
                return e
            },
            getValueAtTime: function(t) {
                return t *= this.elem.globalData.frameRate, (t -= this.offsetTime) !== this._cachingAtTime.lastFrame && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < t ? this._cachingAtTime.lastIndex : 0, this._cachingAtTime.value = this.interpolateValue(t, this._cachingAtTime), this._cachingAtTime.lastFrame = t), this._cachingAtTime.value
            },
            getStaticValueAtTime: function() {
                return this.pv
            },
            setGroupProperty: function(t) {
                this.propertyGroup = t
            }
        };
    ! function() {
        function o(t, e, r) {
            if (!this.k || !this.keyframes) return this.pv;
            t = t ? t.toLowerCase() : "";
            var i, s, a, n, o, h = this.comp.renderedFrame,
                l = this.keyframes,
                p = l[l.length - 1].t;
            if (h <= p) return this.pv;
            if (r ? s = p - (i = e ? Math.abs(p - this.elem.comp.globalData.frameRate * e) : Math.max(0, p - this.elem.data.ip)) : ((!e || e > l.length - 1) && (e = l.length - 1), i = p - (s = l[l.length - 1 - e].t)), "pingpong" === t) {
                if (Math.floor((h - s) / i) % 2 != 0) return this.getValueAtTime((i - (h - s) % i + s) / this.comp.globalData.frameRate, 0)
            } else {
                if ("offset" === t) {
                    var m = this.getValueAtTime(s / this.comp.globalData.frameRate, 0),
                        f = this.getValueAtTime(p / this.comp.globalData.frameRate, 0),
                        c = this.getValueAtTime(((h - s) % i + s) / this.comp.globalData.frameRate, 0),
                        d = Math.floor((h - s) / i);
                    if (this.pv.length) {
                        for (n = (o = new Array(m.length)).length, a = 0; a < n; a += 1) o[a] = (f[a] - m[a]) * d + c[a];
                        return o
                    }
                    return (f - m) * d + c
                }
                if ("continue" === t) {
                    var u = this.getValueAtTime(p / this.comp.globalData.frameRate, 0),
                        y = this.getValueAtTime((p - .001) / this.comp.globalData.frameRate, 0);
                    if (this.pv.length) {
                        for (n = (o = new Array(u.length)).length, a = 0; a < n; a += 1) o[a] = u[a] + (u[a] - y[a]) * ((h - p) / this.comp.globalData.frameRate) / 5e-4;
                        return o
                    }
                    return u + (h - p) / .001 * (u - y)
                }
            }
            return this.getValueAtTime(((h - s) % i + s) / this.comp.globalData.frameRate, 0)
        }

        function h(t, e, r) {
            if (!this.k) return this.pv;
            t = t ? t.toLowerCase() : "";
            var i, s, a, n, o, h = this.comp.renderedFrame,
                l = this.keyframes,
                p = l[0].t;
            if (p <= h) return this.pv;
            if (r ? s = p + (i = e ? Math.abs(this.elem.comp.globalData.frameRate * e) : Math.max(0, this.elem.data.op - p)) : ((!e || e > l.length - 1) && (e = l.length - 1), i = (s = l[e].t) - p), "pingpong" === t) {
                if (Math.floor((p - h) / i) % 2 == 0) return this.getValueAtTime(((p - h) % i + p) / this.comp.globalData.frameRate, 0)
            } else {
                if ("offset" === t) {
                    var m = this.getValueAtTime(p / this.comp.globalData.frameRate, 0),
                        f = this.getValueAtTime(s / this.comp.globalData.frameRate, 0),
                        c = this.getValueAtTime((i - (p - h) % i + p) / this.comp.globalData.frameRate, 0),
                        d = Math.floor((p - h) / i) + 1;
                    if (this.pv.length) {
                        for (n = (o = new Array(m.length)).length, a = 0; a < n; a += 1) o[a] = c[a] - (f[a] - m[a]) * d;
                        return o
                    }
                    return c - (f - m) * d
                }
                if ("continue" === t) {
                    var u = this.getValueAtTime(p / this.comp.globalData.frameRate, 0),
                        y = this.getValueAtTime((p + .001) / this.comp.globalData.frameRate, 0);
                    if (this.pv.length) {
                        for (n = (o = new Array(u.length)).length, a = 0; a < n; a += 1) o[a] = u[a] + (u[a] - y[a]) * (p - h) / .001;
                        return o
                    }
                    return u + (u - y) * (p - h) / .001
                }
            }
            return this.getValueAtTime((i - ((p - h) % i + p)) / this.comp.globalData.frameRate, 0)
        }

        function l(t, e) {
            if (!this.k) return this.pv;
            if (t = .5 * (t || .4), (e = Math.floor(e || 5)) <= 1) return this.pv;
            var r, i, s = this.comp.renderedFrame / this.comp.globalData.frameRate,
                a = s - t,
                n = 1 < e ? (s + t - a) / (e - 1) : 1,
                o = 0,
                h = 0;
            for (r = this.pv.length ? createTypedArray("float32", this.pv.length) : 0; o < e;) {
                if (i = this.getValueAtTime(a + o * n), this.pv.length)
                    for (h = 0; h < this.pv.length; h += 1) r[h] += i[h];
                else r += i;
                o += 1
            }
            if (this.pv.length)
                for (h = 0; h < this.pv.length; h += 1) r[h] /= e;
            else r /= e;
            return r
        }
        var s = TransformPropertyFactory.getTransformProperty;
        TransformPropertyFactory.getTransformProperty = function(t, e, r) {
            var i = s(t, e, r);
            return i.dynamicProperties.length ? i.getValueAtTime = function(t) {
                this._transformCachingAtTime || (this._transformCachingAtTime = {
                    v: new Matrix
                });
                var e = this._transformCachingAtTime.v;
                if (e.cloneFromProps(this.pre.props), this.appliedTransformations < 1) {
                    var r = this.a.getValueAtTime(t);
                    e.translate(-r[0] * this.a.mult, -r[1] * this.a.mult, r[2] * this.a.mult)
                }
                if (this.appliedTransformations < 2) {
                    var i = this.s.getValueAtTime(t);
                    e.scale(i[0] * this.s.mult, i[1] * this.s.mult, i[2] * this.s.mult)
                }
                if (this.sk && this.appliedTransformations < 3) {
                    var s = this.sk.getValueAtTime(t),
                        a = this.sa.getValueAtTime(t);
                    e.skewFromAxis(-s * this.sk.mult, a * this.sa.mult)
                }
                if (this.r && this.appliedTransformations < 4) {
                    var n = this.r.getValueAtTime(t);
                    e.rotate(-n * this.r.mult)
                } else if (!this.r && this.appliedTransformations < 4) {
                    var o = this.rz.getValueAtTime(t),
                        h = this.ry.getValueAtTime(t),
                        l = this.rx.getValueAtTime(t),
                        p = this.or.getValueAtTime(t);
                    e.rotateZ(-o * this.rz.mult).rotateY(h * this.ry.mult).rotateX(l * this.rx.mult).rotateZ(-p[2] * this.or.mult).rotateY(p[1] * this.or.mult).rotateX(p[0] * this.or.mult)
                }
                if (this.data.p && this.data.p.s) {
                    var m = this.px.getValueAtTime(t),
                        f = this.py.getValueAtTime(t);
                    if (this.data.p.z) {
                        var c = this.pz.getValueAtTime(t);
                        e.translate(m * this.px.mult, f * this.py.mult, -c * this.pz.mult)
                    } else e.translate(m * this.px.mult, f * this.py.mult, 0)
                } else {
                    var d = this.p.getValueAtTime(t);
                    e.translate(d[0] * this.p.mult, d[1] * this.p.mult, -d[2] * this.p.mult)
                }
                return e
            }.bind(i) : i.getValueAtTime = function() {
                return this.v.clone(new Matrix)
            }.bind(i), i.setGroupProperty = expressionHelpers.setGroupProperty, i
        };
        var p = PropertyFactory.getProp;
        PropertyFactory.getProp = function(t, e, r, i, s) {
            var a = p(t, e, r, i, s);
            a.kf ? a.getValueAtTime = expressionHelpers.getValueAtTime.bind(a) : a.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(a), a.setGroupProperty = expressionHelpers.setGroupProperty, a.loopOut = o, a.loopIn = h, a.smooth = l, a.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(a), a.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(a), a.numKeys = 1 === e.a ? e.k.length : 0, a.propertyIndex = e.ix;
            var n = 0;
            return 0 !== r && (n = createTypedArray("float32", 1 === e.a ? e.k[0].s.length : e.k.length)), a._cachingAtTime = {
                lastFrame: initialDefaultFrame,
                lastIndex: 0,
                value: n
            }, expressionHelpers.searchExpressions(t, e, a), a.k && s.addDynamicProperty(a), a
        };
        var t = ShapePropertyFactory.getConstructorFunction(),
            e = ShapePropertyFactory.getKeyframedConstructorFunction();

        function r() {}
        r.prototype = {
            vertices: function(t, e) {
                this.k && this.getValue();
                var r, i = this.v;
                void 0 !== e && (i = this.getValueAtTime(e, 0));
                var s = i._length,
                    a = i[t],
                    n = i.v,
                    o = createSizedArray(s);
                for (r = 0; r < s; r += 1) o[r] = "i" === t || "o" === t ? [a[r][0] - n[r][0], a[r][1] - n[r][1]] : [a[r][0], a[r][1]];
                return o
            },
            points: function(t) {
                return this.vertices("v", t)
            },
            inTangents: function(t) {
                return this.vertices("i", t)
            },
            outTangents: function(t) {
                return this.vertices("o", t)
            },
            isClosed: function() {
                return this.v.c
            },
            pointOnPath: function(t, e) {
                var r = this.v;
                void 0 !== e && (r = this.getValueAtTime(e, 0)), this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(r));
                for (var i, s = this._segmentsLength, a = s.lengths, n = s.totalLength * t, o = 0, h = a.length, l = 0; o < h;) {
                    if (l + a[o].addedLength > n) {
                        var p = o,
                            m = r.c && o === h - 1 ? 0 : o + 1,
                            f = (n - l) / a[o].addedLength;
                        i = bez.getPointInSegment(r.v[p], r.v[m], r.o[p], r.i[m], f, a[o]);
                        break
                    }
                    l += a[o].addedLength, o += 1
                }
                return i || (i = r.c ? [r.v[0][0], r.v[0][1]] : [r.v[r._length - 1][0], r.v[r._length - 1][1]]), i
            },
            vectorOnPath: function(t, e, r) {
                1 == t ? t = this.v.c : 0 == t && (t = .999);
                var i = this.pointOnPath(t, e),
                    s = this.pointOnPath(t + .001, e),
                    a = s[0] - i[0],
                    n = s[1] - i[1],
                    o = Math.sqrt(Math.pow(a, 2) + Math.pow(n, 2));
                return 0 === o ? [0, 0] : "tangent" === r ? [a / o, n / o] : [-n / o, a / o]
            },
            tangentOnPath: function(t, e) {
                return this.vectorOnPath(t, e, "tangent")
            },
            normalOnPath: function(t, e) {
                return this.vectorOnPath(t, e, "normal")
            },
            setGroupProperty: expressionHelpers.setGroupProperty,
            getValueAtTime: expressionHelpers.getStaticValueAtTime
        }, extendPrototype([r], t), extendPrototype([r], e), e.prototype.getValueAtTime = function(t) {
            return this._cachingAtTime || (this._cachingAtTime = {
                shapeValue: shapePool.clone(this.pv),
                lastIndex: 0,
                lastTime: initialDefaultFrame
            }), t *= this.elem.globalData.frameRate, (t -= this.offsetTime) !== this._cachingAtTime.lastTime && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < t ? this._caching.lastIndex : 0, this._cachingAtTime.lastTime = t, this.interpolateShape(t, this._cachingAtTime.shapeValue, this._cachingAtTime)), this._cachingAtTime.shapeValue
        }, e.prototype.initiateExpression = ExpressionManager.initiateExpression;
        var n = ShapePropertyFactory.getShapeProp;
        ShapePropertyFactory.getShapeProp = function(t, e, r, i, s) {
            var a = n(t, e, r, i, s);
            return a.propertyIndex = e.ix, a.lock = !1, 3 === r ? expressionHelpers.searchExpressions(t, e.pt, a) : 4 === r && expressionHelpers.searchExpressions(t, e.ks, a), a.k && t.addDynamicProperty(a), a
        }
    }(), TextProperty.prototype.getExpressionValue = function(t, e) {
        var r = this.calculateExpression(e);
        if (t.t === r) return t;
        var i = {};
        return this.copyData(i, t), i.t = r.toString(), i.__complete = !1, i
    }, TextProperty.prototype.searchProperty = function() {
        var t = this.searchKeyframes(),
            e = this.searchExpressions();
        return this.kf = t || e, this.kf
    }, TextProperty.prototype.searchExpressions = function() {
        return this.data.d.x ? (this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this), this.addEffect(this.getExpressionValue.bind(this)), !0) : null
    };
    var ShapePathInterface = function(t, e, r) {
            var i = e.sh;

            function s(t) {
                return "Shape" === t || "shape" === t || "Path" === t || "path" === t || "ADBE Vector Shape" === t || 2 === t ? s.path : null
            }
            var a = propertyGroupFactory(s, r);
            return i.setGroupProperty(PropertyInterface("Path", a)), Object.defineProperties(s, {
                path: {
                    get: function() {
                        return i.k && i.getValue(), i
                    }
                },
                shape: {
                    get: function() {
                        return i.k && i.getValue(), i
                    }
                },
                _name: {
                    value: t.nm
                },
                ix: {
                    value: t.ix
                },
                propertyIndex: {
                    value: t.ix
                },
                mn: {
                    value: t.mn
                },
                propertyGroup: {
                    value: r
                }
            }), s
        },
        propertyGroupFactory = function(e, r) {
            return function(t) {
                return (t = void 0 === t ? 1 : t) <= 0 ? e : r(t - 1)
            }
        },
        PropertyInterface = function(t, e) {
            var r = {
                _name: t
            };
            return function(t) {
                return (t = void 0 === t ? 1 : t) <= 0 ? r : e(t - 1)
            }
        },
        ShapeExpressionInterface = function() {
            function n(t, e, r) {
                var i, s = [],
                    a = t ? t.length : 0;
                for (i = 0; i < a; i += 1) "gr" === t[i].ty ? s.push(o(t[i], e[i], r)) : "fl" === t[i].ty ? s.push(h(t[i], e[i], r)) : "st" === t[i].ty ? s.push(m(t[i], e[i], r)) : "tm" === t[i].ty ? s.push(f(t[i], e[i], r)) : "tr" === t[i].ty || ("el" === t[i].ty ? s.push(d(t[i], e[i], r)) : "sr" === t[i].ty ? s.push(u(t[i], e[i], r)) : "sh" === t[i].ty ? s.push(ShapePathInterface(t[i], e[i], r)) : "rc" === t[i].ty ? s.push(y(t[i], e[i], r)) : "rd" === t[i].ty ? s.push(g(t[i], e[i], r)) : "rp" === t[i].ty ? s.push(v(t[i], e[i], r)) : "gf" === t[i].ty ? s.push(l(t[i], e[i], r)) : s.push(p(t[i], e[i])));
                return s
            }

            function o(t, e, r) {
                var i = function(t) {
                    switch (t) {
                        case "ADBE Vectors Group":
                        case "Contents":
                        case 2:
                            return i.content;
                        default:
                            return i.transform
                    }
                };
                i.propertyGroup = propertyGroupFactory(i, r);
                var s = function(t, e, r) {
                        var i, s = function(t) {
                            for (var e = 0, r = i.length; e < r;) {
                                if (i[e]._name === t || i[e].mn === t || i[e].propertyIndex === t || i[e].ix === t || i[e].ind === t) return i[e];
                                e += 1
                            }
                            return "number" == typeof t ? i[t - 1] : null
                        };
                        s.propertyGroup = propertyGroupFactory(s, r), i = n(t.it, e.it, s.propertyGroup), s.numProperties = i.length;
                        var a = c(t.it[t.it.length - 1], e.it[e.it.length - 1], s.propertyGroup);
                        return s.transform = a, s.propertyIndex = t.cix, s._name = t.nm, s
                    }(t, e, i.propertyGroup),
                    a = c(t.it[t.it.length - 1], e.it[e.it.length - 1], i.propertyGroup);
                return i.content = s, i.transform = a, Object.defineProperty(i, "_name", {
                    get: function() {
                        return t.nm
                    }
                }), i.numProperties = t.np, i.propertyIndex = t.ix, i.nm = t.nm, i.mn = t.mn, i
            }

            function h(t, e, r) {
                function i(t) {
                    return "Color" === t || "color" === t ? i.color : "Opacity" === t || "opacity" === t ? i.opacity : null
                }
                return Object.defineProperties(i, {
                    color: {
                        get: ExpressionPropertyInterface(e.c)
                    },
                    opacity: {
                        get: ExpressionPropertyInterface(e.o)
                    },
                    _name: {
                        value: t.nm
                    },
                    mn: {
                        value: t.mn
                    }
                }), e.c.setGroupProperty(PropertyInterface("Color", r)), e.o.setGroupProperty(PropertyInterface("Opacity", r)), i
            }

            function l(t, e, r) {
                function i(t) {
                    return "Start Point" === t || "start point" === t ? i.startPoint : "End Point" === t || "end point" === t ? i.endPoint : "Opacity" === t || "opacity" === t ? i.opacity : null
                }
                return Object.defineProperties(i, {
                    startPoint: {
                        get: ExpressionPropertyInterface(e.s)
                    },
                    endPoint: {
                        get: ExpressionPropertyInterface(e.e)
                    },
                    opacity: {
                        get: ExpressionPropertyInterface(e.o)
                    },
                    type: {
                        get: function() {
                            return "a"
                        }
                    },
                    _name: {
                        value: t.nm
                    },
                    mn: {
                        value: t.mn
                    }
                }), e.s.setGroupProperty(PropertyInterface("Start Point", r)), e.e.setGroupProperty(PropertyInterface("End Point", r)), e.o.setGroupProperty(PropertyInterface("Opacity", r)), i
            }

            function p() {
                return function() {
                    return null
                }
            }

            function m(t, e, r) {
                var i, s = propertyGroupFactory(l, r),
                    a = propertyGroupFactory(h, s);
                var n, o = t.d ? t.d.length : 0,
                    h = {};
                for (i = 0; i < o; i += 1) n = i, Object.defineProperty(h, t.d[n].nm, {
                    get: ExpressionPropertyInterface(e.d.dataProps[n].p)
                }), e.d.dataProps[i].p.setGroupProperty(a);

                function l(t) {
                    return "Color" === t || "color" === t ? l.color : "Opacity" === t || "opacity" === t ? l.opacity : "Stroke Width" === t || "stroke width" === t ? l.strokeWidth : null
                }
                return Object.defineProperties(l, {
                    color: {
                        get: ExpressionPropertyInterface(e.c)
                    },
                    opacity: {
                        get: ExpressionPropertyInterface(e.o)
                    },
                    strokeWidth: {
                        get: ExpressionPropertyInterface(e.w)
                    },
                    dash: {
                        get: function() {
                            return h
                        }
                    },
                    _name: {
                        value: t.nm
                    },
                    mn: {
                        value: t.mn
                    }
                }), e.c.setGroupProperty(PropertyInterface("Color", s)), e.o.setGroupProperty(PropertyInterface("Opacity", s)), e.w.setGroupProperty(PropertyInterface("Stroke Width", s)), l
            }

            function f(e, t, r) {
                function i(t) {
                    return t === e.e.ix || "End" === t || "end" === t ? i.end : t === e.s.ix ? i.start : t === e.o.ix ? i.offset : null
                }
                var s = propertyGroupFactory(i, r);
                return i.propertyIndex = e.ix, t.s.setGroupProperty(PropertyInterface("Start", s)), t.e.setGroupProperty(PropertyInterface("End", s)), t.o.setGroupProperty(PropertyInterface("Offset", s)), i.propertyIndex = e.ix, i.propertyGroup = r, Object.defineProperties(i, {
                    start: {
                        get: ExpressionPropertyInterface(t.s)
                    },
                    end: {
                        get: ExpressionPropertyInterface(t.e)
                    },
                    offset: {
                        get: ExpressionPropertyInterface(t.o)
                    },
                    _name: {
                        value: e.nm
                    }
                }), i.mn = e.mn, i
            }

            function c(e, t, r) {
                function i(t) {
                    return e.a.ix === t || "Anchor Point" === t ? i.anchorPoint : e.o.ix === t || "Opacity" === t ? i.opacity : e.p.ix === t || "Position" === t ? i.position : e.r.ix === t || "Rotation" === t || "ADBE Vector Rotation" === t ? i.rotation : e.s.ix === t || "Scale" === t ? i.scale : e.sk && e.sk.ix === t || "Skew" === t ? i.skew : e.sa && e.sa.ix === t || "Skew Axis" === t ? i.skewAxis : null
                }
                var s = propertyGroupFactory(i, r);
                return t.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", s)), t.transform.mProps.p.setGroupProperty(PropertyInterface("Position", s)), t.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", s)), t.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", s)), t.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", s)), t.transform.mProps.sk && (t.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", s)), t.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", s))), t.transform.op.setGroupProperty(PropertyInterface("Opacity", s)), Object.defineProperties(i, {
                    opacity: {
                        get: ExpressionPropertyInterface(t.transform.mProps.o)
                    },
                    position: {
                        get: ExpressionPropertyInterface(t.transform.mProps.p)
                    },
                    anchorPoint: {
                        get: ExpressionPropertyInterface(t.transform.mProps.a)
                    },
                    scale: {
                        get: ExpressionPropertyInterface(t.transform.mProps.s)
                    },
                    rotation: {
                        get: ExpressionPropertyInterface(t.transform.mProps.r)
                    },
                    skew: {
                        get: ExpressionPropertyInterface(t.transform.mProps.sk)
                    },
                    skewAxis: {
                        get: ExpressionPropertyInterface(t.transform.mProps.sa)
                    },
                    _name: {
                        value: e.nm
                    }
                }), i.ty = "tr", i.mn = e.mn, i.propertyGroup = r, i
            }

            function d(e, t, r) {
                function i(t) {
                    return e.p.ix === t ? i.position : e.s.ix === t ? i.size : null
                }
                var s = propertyGroupFactory(i, r);
                i.propertyIndex = e.ix;
                var a = "tm" === t.sh.ty ? t.sh.prop : t.sh;
                return a.s.setGroupProperty(PropertyInterface("Size", s)), a.p.setGroupProperty(PropertyInterface("Position", s)), Object.defineProperties(i, {
                    size: {
                        get: ExpressionPropertyInterface(a.s)
                    },
                    position: {
                        get: ExpressionPropertyInterface(a.p)
                    },
                    _name: {
                        value: e.nm
                    }
                }), i.mn = e.mn, i
            }

            function u(e, t, r) {
                function i(t) {
                    return e.p.ix === t ? i.position : e.r.ix === t ? i.rotation : e.pt.ix === t ? i.points : e.or.ix === t || "ADBE Vector Star Outer Radius" === t ? i.outerRadius : e.os.ix === t ? i.outerRoundness : !e.ir || e.ir.ix !== t && "ADBE Vector Star Inner Radius" !== t ? e.is && e.is.ix === t ? i.innerRoundness : null : i.innerRadius
                }
                var s = propertyGroupFactory(i, r),
                    a = "tm" === t.sh.ty ? t.sh.prop : t.sh;
                return i.propertyIndex = e.ix, a.or.setGroupProperty(PropertyInterface("Outer Radius", s)), a.os.setGroupProperty(PropertyInterface("Outer Roundness", s)), a.pt.setGroupProperty(PropertyInterface("Points", s)), a.p.setGroupProperty(PropertyInterface("Position", s)), a.r.setGroupProperty(PropertyInterface("Rotation", s)), e.ir && (a.ir.setGroupProperty(PropertyInterface("Inner Radius", s)), a.is.setGroupProperty(PropertyInterface("Inner Roundness", s))), Object.defineProperties(i, {
                    position: {
                        get: ExpressionPropertyInterface(a.p)
                    },
                    rotation: {
                        get: ExpressionPropertyInterface(a.r)
                    },
                    points: {
                        get: ExpressionPropertyInterface(a.pt)
                    },
                    outerRadius: {
                        get: ExpressionPropertyInterface(a.or)
                    },
                    outerRoundness: {
                        get: ExpressionPropertyInterface(a.os)
                    },
                    innerRadius: {
                        get: ExpressionPropertyInterface(a.ir)
                    },
                    innerRoundness: {
                        get: ExpressionPropertyInterface(a.is)
                    },
                    _name: {
                        value: e.nm
                    }
                }), i.mn = e.mn, i
            }

            function y(e, t, r) {
                function i(t) {
                    return e.p.ix === t ? i.position : e.r.ix === t ? i.roundness : e.s.ix === t || "Size" === t || "ADBE Vector Rect Size" === t ? i.size : null
                }
                var s = propertyGroupFactory(i, r),
                    a = "tm" === t.sh.ty ? t.sh.prop : t.sh;
                return i.propertyIndex = e.ix, a.p.setGroupProperty(PropertyInterface("Position", s)), a.s.setGroupProperty(PropertyInterface("Size", s)), a.r.setGroupProperty(PropertyInterface("Rotation", s)), Object.defineProperties(i, {
                    position: {
                        get: ExpressionPropertyInterface(a.p)
                    },
                    roundness: {
                        get: ExpressionPropertyInterface(a.r)
                    },
                    size: {
                        get: ExpressionPropertyInterface(a.s)
                    },
                    _name: {
                        value: e.nm
                    }
                }), i.mn = e.mn, i
            }

            function g(e, t, r) {
                function i(t) {
                    return e.r.ix === t || "Round Corners 1" === t ? i.radius : null
                }
                var s = propertyGroupFactory(i, r),
                    a = t;
                return i.propertyIndex = e.ix, a.rd.setGroupProperty(PropertyInterface("Radius", s)), Object.defineProperties(i, {
                    radius: {
                        get: ExpressionPropertyInterface(a.rd)
                    },
                    _name: {
                        value: e.nm
                    }
                }), i.mn = e.mn, i
            }

            function v(e, t, r) {
                function i(t) {
                    return e.c.ix === t || "Copies" === t ? i.copies : e.o.ix === t || "Offset" === t ? i.offset : null
                }
                var s = propertyGroupFactory(i, r),
                    a = t;
                return i.propertyIndex = e.ix, a.c.setGroupProperty(PropertyInterface("Copies", s)), a.o.setGroupProperty(PropertyInterface("Offset", s)), Object.defineProperties(i, {
                    copies: {
                        get: ExpressionPropertyInterface(a.c)
                    },
                    offset: {
                        get: ExpressionPropertyInterface(a.o)
                    },
                    _name: {
                        value: e.nm
                    }
                }), i.mn = e.mn, i
            }
            return function(t, e, i) {
                var s;

                function r(t) {
                    if ("number" == typeof t) return 0 === (t = void 0 === t ? 1 : t) ? i : s[t - 1];
                    for (var e = 0, r = s.length; e < r;) {
                        if (s[e]._name === t) return s[e];
                        e += 1
                    }
                    return null
                }
                return r.propertyGroup = propertyGroupFactory(r, function() {
                    return i
                }), s = n(t, e, r.propertyGroup), r.numProperties = s.length, r._name = "Contents", r
            }
        }(),
        TextExpressionInterface = function(e) {
            var r;

            function i(t) {
                switch (t) {
                    case "ADBE Text Document":
                        return i.sourceText;
                    default:
                        return null
                }
            }
            return Object.defineProperty(i, "sourceText", {
                get: function() {
                    e.textProperty.getValue();
                    var t = e.textProperty.currentData.t;
                    return void 0 !== t && (e.textProperty.currentData.t = void 0, (r = new String(t)).value = t || new String(t)), r
                }
            }), i
        },
        LayerExpressionInterface = function() {
            function s(t) {
                var e = new Matrix;
                void 0 !== t ? this._elem.finalTransform.mProp.getValueAtTime(t).clone(e) : this._elem.finalTransform.mProp.applyToMatrix(e);
                return e
            }

            function a(t, e) {
                var r = this.getMatrix(e);
                return r.props[12] = 0, r.props[13] = 0, r.props[14] = 0, this.applyPoint(r, t)
            }

            function n(t, e) {
                var r = this.getMatrix(e);
                return this.applyPoint(r, t)
            }

            function o(t, e) {
                var r = this.getMatrix(e);
                return r.props[12] = 0, r.props[13] = 0, r.props[14] = 0, this.invertPoint(r, t)
            }

            function h(t, e) {
                var r = this.getMatrix(e);
                return this.invertPoint(r, t)
            }

            function l(t, e) {
                if (this._elem.hierarchy && this._elem.hierarchy.length) {
                    var r, i = this._elem.hierarchy.length;
                    for (r = 0; r < i; r += 1) this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(t)
                }
                return t.applyToPointArray(e[0], e[1], e[2] || 0)
            }

            function p(t, e) {
                if (this._elem.hierarchy && this._elem.hierarchy.length) {
                    var r, i = this._elem.hierarchy.length;
                    for (r = 0; r < i; r += 1) this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(t)
                }
                return t.inversePoint(e)
            }

            function m(t) {
                var e = new Matrix;
                if (e.reset(), this._elem.finalTransform.mProp.applyToMatrix(e), this._elem.hierarchy && this._elem.hierarchy.length) {
                    var r, i = this._elem.hierarchy.length;
                    for (r = 0; r < i; r += 1) this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(e);
                    return e.inversePoint(t)
                }
                return e.inversePoint(t)
            }

            function f() {
                return [1, 1, 1, 1]
            }
            return function(e) {
                var r;

                function i(t) {
                    switch (t) {
                        case "ADBE Root Vectors Group":
                        case "Contents":
                        case 2:
                            return i.shapeInterface;
                        case 1:
                        case 6:
                        case "Transform":
                        case "transform":
                        case "ADBE Transform Group":
                            return r;
                        case 4:
                        case "ADBE Effect Parade":
                        case "effects":
                        case "Effects":
                            return i.effect;
                        case "ADBE Text Properties":
                            return i.textInterface;
                        default:
                            return null
                    }
                }
                i.getMatrix = s, i.invertPoint = p, i.applyPoint = l, i.toWorld = n, i.toWorldVec = a, i.fromWorld = h, i.fromWorldVec = o, i.toComp = n, i.fromComp = m, i.sampleImage = f, i.sourceRectAtTime = e.sourceRectAtTime.bind(e);
                var t = getDescriptor(r = TransformExpressionInterface((i._elem = e).finalTransform.mProp), "anchorPoint");
                return Object.defineProperties(i, {
                    hasParent: {
                        get: function() {
                            return e.hierarchy.length
                        }
                    },
                    parent: {
                        get: function() {
                            return e.hierarchy[0].layerInterface
                        }
                    },
                    rotation: getDescriptor(r, "rotation"),
                    scale: getDescriptor(r, "scale"),
                    position: getDescriptor(r, "position"),
                    opacity: getDescriptor(r, "opacity"),
                    anchorPoint: t,
                    anchor_point: t,
                    transform: {
                        get: function() {
                            return r
                        }
                    },
                    active: {
                        get: function() {
                            return e.isInRange
                        }
                    }
                }), i.startTime = e.data.st, i.index = e.data.ind, i.source = e.data.refId, i.height = 0 === e.data.ty ? e.data.h : 100, i.width = 0 === e.data.ty ? e.data.w : 100, i.inPoint = e.data.ip / e.comp.globalData.frameRate, i.outPoint = e.data.op / e.comp.globalData.frameRate, i._name = e.data.nm, i.registerMaskInterface = function(t) {
                    i.mask = new MaskManagerInterface(t, e)
                }, i.registerEffectsInterface = function(t) {
                    i.effect = t
                }, i
            }
        }(),
        FootageInterface = (q6 = function(t) {
            function e(t) {
                return "Outline" === t ? e.outlineInterface() : null
            }
            return e._name = "Outline", e.outlineInterface = function(t) {
                var i = "",
                    s = t.getFootageData();

                function a(t) {
                    if (s[t]) return "object" == typeof(s = s[i = t]) ? a : s;
                    var e = t.indexOf(i);
                    if (-1 === e) return "";
                    var r = parseInt(t.substr(e + i.length), 10);
                    return "object" == typeof(s = s[r]) ? a : s
                }
                return function() {
                    return i = "", s = t.getFootageData(), a
                }
            }(t), e
        }, function(t) {
            function e(t) {
                return "Data" === t ? e.dataInterface : null
            }
            return e._name = "Data", e.dataInterface = q6(t), e
        }),
        q6, CompExpressionInterface = function(i) {
            function t(t) {
                for (var e = 0, r = i.layers.length; e < r;) {
                    if (i.layers[e].nm === t || i.layers[e].ind === t) return i.elements[e].layerInterface;
                    e += 1
                }
                return null
            }
            return Object.defineProperty(t, "_name", {
                value: i.data.nm
            }), (t.layer = t).pixelAspect = 1, t.height = i.data.h || i.globalData.compSize.h, t.width = i.data.w || i.globalData.compSize.w, t.pixelAspect = 1, t.frameDuration = 1 / i.globalData.frameRate, t.displayStartTime = 0, t.numLayers = i.layers.length, t
        },
        TransformExpressionInterface = function(t) {
            function e(t) {
                switch (t) {
                    case "scale":
                    case "Scale":
                    case "ADBE Scale":
                    case 6:
                        return e.scale;
                    case "rotation":
                    case "Rotation":
                    case "ADBE Rotation":
                    case "ADBE Rotate Z":
                    case 10:
                        return e.rotation;
                    case "ADBE Rotate X":
                        return e.xRotation;
                    case "ADBE Rotate Y":
                        return e.yRotation;
                    case "position":
                    case "Position":
                    case "ADBE Position":
                    case 2:
                        return e.position;
                    case "ADBE Position_0":
                        return e.xPosition;
                    case "ADBE Position_1":
                        return e.yPosition;
                    case "ADBE Position_2":
                        return e.zPosition;
                    case "anchorPoint":
                    case "AnchorPoint":
                    case "Anchor Point":
                    case "ADBE AnchorPoint":
                    case 1:
                        return e.anchorPoint;
                    case "opacity":
                    case "Opacity":
                    case 11:
                        return e.opacity;
                    default:
                        return null
                }
            }
            var r, i, s, a;
            return Object.defineProperty(e, "rotation", {
                get: ExpressionPropertyInterface(t.r || t.rz)
            }), Object.defineProperty(e, "zRotation", {
                get: ExpressionPropertyInterface(t.rz || t.r)
            }), Object.defineProperty(e, "xRotation", {
                get: ExpressionPropertyInterface(t.rx)
            }), Object.defineProperty(e, "yRotation", {
                get: ExpressionPropertyInterface(t.ry)
            }), Object.defineProperty(e, "scale", {
                get: ExpressionPropertyInterface(t.s)
            }), t.p ? a = ExpressionPropertyInterface(t.p) : (r = ExpressionPropertyInterface(t.px), i = ExpressionPropertyInterface(t.py), t.pz && (s = ExpressionPropertyInterface(t.pz))), Object.defineProperty(e, "position", {
                get: function() {
                    return t.p ? a() : [r(), i(), s ? s() : 0]
                }
            }), Object.defineProperty(e, "xPosition", {
                get: ExpressionPropertyInterface(t.px)
            }), Object.defineProperty(e, "yPosition", {
                get: ExpressionPropertyInterface(t.py)
            }), Object.defineProperty(e, "zPosition", {
                get: ExpressionPropertyInterface(t.pz)
            }), Object.defineProperty(e, "anchorPoint", {
                get: ExpressionPropertyInterface(t.a)
            }), Object.defineProperty(e, "opacity", {
                get: ExpressionPropertyInterface(t.o)
            }), Object.defineProperty(e, "skew", {
                get: ExpressionPropertyInterface(t.sk)
            }), Object.defineProperty(e, "skewAxis", {
                get: ExpressionPropertyInterface(t.sa)
            }), Object.defineProperty(e, "orientation", {
                get: ExpressionPropertyInterface(t.or)
            }), e
        },
        ProjectInterface = function() {
            function e(t) {
                this.compositions.push(t)
            }
            return function() {
                function t(t) {
                    for (var e = 0, r = this.compositions.length; e < r;) {
                        if (this.compositions[e].data && this.compositions[e].data.nm === t) return this.compositions[e].prepareFrame && this.compositions[e].data.xt && this.compositions[e].prepareFrame(this.currentFrame), this.compositions[e].compInterface;
                        e += 1
                    }
                    return null
                }
                return t.compositions = [], t.currentFrame = 0, t.registerComposition = e, t
            }
        }(),
        EffectsExpressionInterface = function() {
            function l(s, t, e, r) {
                function i(t) {
                    for (var e = s.ef, r = 0, i = e.length; r < i;) {
                        if (t === e[r].nm || t === e[r].mn || t === e[r].ix) return 5 === e[r].ty ? o[r] : o[r]();
                        r += 1
                    }
                    throw new Error
                }
                var a, n = propertyGroupFactory(i, e),
                    o = [],
                    h = s.ef.length;
                for (a = 0; a < h; a += 1) 5 === s.ef[a].ty ? o.push(l(s.ef[a], t.effectElements[a], t.effectElements[a].propertyGroup, r)) : o.push(p(t.effectElements[a], s.ef[a].ty, r, n));
                return "ADBE Color Control" === s.mn && Object.defineProperty(i, "color", {
                    get: function() {
                        return o[0]()
                    }
                }), Object.defineProperties(i, {
                    numProperties: {
                        get: function() {
                            return s.np
                        }
                    },
                    _name: {
                        value: s.nm
                    },
                    propertyGroup: {
                        value: n
                    }
                }), i.enabled = 0 !== s.en, i.active = i.enabled, i
            }

            function p(t, e, r, i) {
                var s = ExpressionPropertyInterface(t.p);
                return t.p.setGroupProperty && t.p.setGroupProperty(PropertyInterface("", i)),
                    function() {
                        return 10 === e ? r.comp.compInterface(t.p.v) : s()
                    }
            }
            return {
                createEffectsInterface: function(t, e) {
                    if (t.effectsManager) {
                        var r, i = [],
                            s = t.data.ef,
                            a = t.effectsManager.effectElements.length;
                        for (r = 0; r < a; r += 1) i.push(l(s[r], t.effectsManager.effectElements[r], e, t));
                        var n = t.data.ef || [],
                            o = function(t) {
                                for (r = 0, a = n.length; r < a;) {
                                    if (t === n[r].nm || t === n[r].mn || t === n[r].ix) return i[r];
                                    r += 1
                                }
                                return null
                            };
                        return Object.defineProperty(o, "numProperties", {
                            get: function() {
                                return n.length
                            }
                        }), o
                    }
                    return null
                }
            }
        }(),
        MaskManagerInterface = function() {
            function t(t, e) {
                this._mask = t, this._data = e
            }
            Object.defineProperty(t.prototype, "maskPath", {
                get: function() {
                    return this._mask.prop.k && this._mask.prop.getValue(), this._mask.prop
                }
            }), Object.defineProperty(t.prototype, "maskOpacity", {
                get: function() {
                    return this._mask.op.k && this._mask.op.getValue(), 100 * this._mask.op.v
                }
            });
            return function(e) {
                var r, i = createSizedArray(e.viewData.length),
                    s = e.viewData.length;
                for (r = 0; r < s; r += 1) i[r] = new t(e.viewData[r], e.masksProperties[r]);
                return function(t) {
                    for (r = 0; r < s;) {
                        if (e.masksProperties[r].nm === t) return i[r];
                        r += 1
                    }
                    return null
                }
            }
        }(),
        ExpressionPropertyInterface = function() {
            var s = {
                    pv: 0,
                    v: 0,
                    mult: 1
                },
                n = {
                    pv: [0, 0, 0],
                    v: [0, 0, 0],
                    mult: 1
                };

            function o(i, s, a) {
                Object.defineProperty(i, "velocity", {
                    get: function() {
                        return s.getVelocityAtTime(s.comp.currentFrame)
                    }
                }), i.numKeys = s.keyframes ? s.keyframes.length : 0, i.key = function(t) {
                    if (!i.numKeys) return 0;
                    var e = "";
                    e = "s" in s.keyframes[t - 1] ? s.keyframes[t - 1].s : "e" in s.keyframes[t - 2] ? s.keyframes[t - 2].e : s.keyframes[t - 2].s;
                    var r = "unidimensional" === a ? new Number(e) : Object.assign({}, e);
                    return r.time = s.keyframes[t - 1].t / s.elem.comp.globalData.frameRate, r.value = "unidimensional" === a ? e[0] : e, r
                }, i.valueAtTime = s.getValueAtTime, i.speedAtTime = s.getSpeedAtTime, i.velocityAtTime = s.getVelocityAtTime, i.propertyGroup = s.propertyGroup
            }

            function e() {
                return s
            }
            return function(t) {
                return t ? "unidimensional" === t.propType ? function(t) {
                    t && "pv" in t || (t = s);
                    var e = 1 / t.mult,
                        r = t.pv * e,
                        i = new Number(r);
                    return i.value = r, o(i, t, "unidimensional"),
                        function() {
                            return t.k && t.getValue(), r = t.v * e, i.value !== r && ((i = new Number(r)).value = r, o(i, t, "unidimensional")), i
                        }
                }(t) : function(e) {
                    e && "pv" in e || (e = n);
                    var r = 1 / e.mult,
                        i = e.data && e.data.l || e.pv.length,
                        s = createTypedArray("float32", i),
                        a = createTypedArray("float32", i);
                    return s.value = a, o(s, e, "multidimensional"),
                        function() {
                            e.k && e.getValue();
                            for (var t = 0; t < i; t += 1) a[t] = e.v[t] * r, s[t] = a[t];
                            return s
                        }
                }(t) : e
            }
        }(),
        TextExpressionSelectorPropFactory = function() {
            function r(t, e) {
                return this.textIndex = t + 1, this.textTotal = e, this.v = this.getValue() * this.mult, this.v
            }
            return function(t, e) {
                this.pv = 1, this.comp = t.comp, this.elem = t, this.mult = .01, this.propType = "textSelector", this.textTotal = e.totalChars, this.selectorValue = 100, this.lastValue = [1, 1, 1], this.k = !0, this.x = !0, this.getValue = ExpressionManager.initiateExpression.bind(this)(t, e, this), this.getMult = r, this.getVelocityAtTime = expressionHelpers.getVelocityAtTime, this.kf ? this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this) : this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this), this.setGroupProperty = expressionHelpers.setGroupProperty
            }
        }(),
        propertyGetTextProp = TextSelectorProp.getTextSelectorProp;

    function SliderEffect(t, e, r) {
        this.p = PropertyFactory.getProp(e, t.v, 0, 0, r)
    }

    function AngleEffect(t, e, r) {
        this.p = PropertyFactory.getProp(e, t.v, 0, 0, r)
    }

    function ColorEffect(t, e, r) {
        this.p = PropertyFactory.getProp(e, t.v, 1, 0, r)
    }

    function PointEffect(t, e, r) {
        this.p = PropertyFactory.getProp(e, t.v, 1, 0, r)
    }

    function LayerIndexEffect(t, e, r) {
        this.p = PropertyFactory.getProp(e, t.v, 0, 0, r)
    }

    function MaskIndexEffect(t, e, r) {
        this.p = PropertyFactory.getProp(e, t.v, 0, 0, r)
    }

    function CheckboxEffect(t, e, r) {
        this.p = PropertyFactory.getProp(e, t.v, 0, 0, r)
    }

    function NoValueEffect() {
        this.p = {}
    }

    function EffectsManager(t, e) {
        var r, i = t.ef || [];
        this.effectElements = [];
        var s, a = i.length;
        for (r = 0; r < a; r += 1) s = new GroupEffect(i[r], e), this.effectElements.push(s)
    }

    function GroupEffect(t, e) {
        this.init(t, e)
    }
    TextSelectorProp.getTextSelectorProp = function(t, e, r) {
        return 1 === e.t ? new TextExpressionSelectorPropFactory(t, e, r) : propertyGetTextProp(t, e, r)
    }, extendPrototype([DynamicPropertyContainer], GroupEffect), GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties, GroupEffect.prototype.init = function(t, e) {
        var r;
        this.data = t, this.effectElements = [], this.initDynamicPropertyContainer(e);
        var i, s = this.data.ef.length,
            a = this.data.ef;
        for (r = 0; r < s; r += 1) {
            switch (i = null, a[r].ty) {
                case 0:
                    i = new SliderEffect(a[r], e, this);
                    break;
                case 1:
                    i = new AngleEffect(a[r], e, this);
                    break;
                case 2:
                    i = new ColorEffect(a[r], e, this);
                    break;
                case 3:
                    i = new PointEffect(a[r], e, this);
                    break;
                case 4:
                case 7:
                    i = new CheckboxEffect(a[r], e, this);
                    break;
                case 10:
                    i = new LayerIndexEffect(a[r], e, this);
                    break;
                case 11:
                    i = new MaskIndexEffect(a[r], e, this);
                    break;
                case 5:
                    i = new EffectsManager(a[r], e, this);
                    break;
                default:
                    i = new NoValueEffect(a[r], e, this)
            }
            i && this.effectElements.push(i)
        }
    };
    var lottie = {};

    function setLocationHref(t) {
        locationHref = t
    }

    function searchAnimations() {
        !0 === standalone ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations()
    }

    function setSubframeRendering(t) {
        subframeEnabled = t
    }

    function setIDPrefix(t) {
        idPrefix = t
    }

    function loadAnimation(t) {
        return !0 === standalone && (t.animationData = JSON.parse(animationData)), animationManager.loadAnimation(t)
    }

    function setQuality(t) {
        if ("string" == typeof t) switch (t) {
            case "high":
                defaultCurveSegments = 200;
                break;
            default:
            case "medium":
                defaultCurveSegments = 50;
                break;
            case "low":
                defaultCurveSegments = 10
        } else !isNaN(t) && 1 < t && (defaultCurveSegments = t);
        roundValues(!(50 <= defaultCurveSegments))
    }

    function inBrowser() {
        return "undefined" != typeof navigator
    }

    function installPlugin(t, e) {
        "expressions" === t && (expressionsPlugin = e)
    }

    function getFactory(t) {
        switch (t) {
            case "propertyFactory":
                return PropertyFactory;
            case "shapePropertyFactory":
                return ShapePropertyFactory;
            case "matrix":
                return Matrix;
            default:
                return null
        }
    }

    function checkReady() {
        "complete" === document.readyState && (clearInterval(readyStateCheckInterval), searchAnimations())
    }

    function getQueryVariable(t) {
        for (var e = queryString.split("&"), r = 0; r < e.length; r += 1) {
            var i = e[r].split("=");
            if (decodeURIComponent(i[0]) == t) return decodeURIComponent(i[1])
        }
        return null
    }
    lottie.play = animationManager.play, lottie.pause = animationManager.pause, lottie.setLocationHref = setLocationHref, lottie.togglePause = animationManager.togglePause, lottie.setSpeed = animationManager.setSpeed, lottie.setDirection = animationManager.setDirection, lottie.stop = animationManager.stop, lottie.searchAnimations = searchAnimations, lottie.registerAnimation = animationManager.registerAnimation, lottie.loadAnimation = loadAnimation, lottie.setSubframeRendering = setSubframeRendering, lottie.resize = animationManager.resize, lottie.goToAndStop = animationManager.goToAndStop, lottie.destroy = animationManager.destroy, lottie.setQuality = setQuality, lottie.inBrowser = inBrowser, lottie.installPlugin = installPlugin, lottie.freeze = animationManager.freeze, lottie.unfreeze = animationManager.unfreeze, lottie.setVolume = animationManager.setVolume, lottie.mute = animationManager.mute, lottie.unmute = animationManager.unmute, lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations, lottie.setIDPrefix = setIDPrefix, lottie.__getFactory = getFactory, lottie.version = "5.7.13";
    var standalone = "__[STANDALONE]__",
        animationData = "__[ANIMATIONDATA]__",
        renderer = "",
        queryString;
    if (standalone) {
        var scripts = document.getElementsByTagName("script"),
            index = scripts.length - 1,
            myScript = scripts[index] || {
                src: ""
            };
        queryString = myScript.src.replace(/^[^\?]+\??/, ""), renderer = getQueryVariable("renderer")
    }
    var readyStateCheckInterval = setInterval(checkReady, 100);
    return lottie
});
var animationData = {
    v: "5.7.4",
    fr: 60,
    ip: 0,
    op: 180,
    w: 320,
    h: 320,
    nm: "loading-parts-assemble",
    ddd: 0,
    assets: [{
        id: "comp_0",
        layers: [{
            ddd: 0,
            ind: 1,
            ty: 4,
            nm: "outline",
            sr: 1,
            ks: {
                o: {
                    a: 0,
                    k: 100,
                    ix: 11
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 10
                },
                p: {
                    a: 0,
                    k: [160, 160, 0],
                    ix: 2,
                    l: 2
                },
                a: {
                    a: 0,
                    k: [160, 160, 0],
                    ix: 1,
                    l: 2
                },
                s: {
                    a: 0,
                    k: [100, 100, 100],
                    ix: 6,
                    l: 2
                }
            },
            ao: 0,
            shapes: [{
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [0, -91.22],
                                [79, -45.61],
                                [79, 45.611],
                                [0, 91.221],
                                [-79, 45.611],
                                [-79, -45.61]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "st",
                    c: {
                        a: 0,
                        k: [1, 1, 1, 1],
                        ix: 3
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 4
                    },
                    w: {
                        a: 0,
                        k: 2,
                        ix: 5
                    },
                    lc: 2,
                    lj: 1,
                    ml: 10,
                    bm: 0,
                    nm: "Stroke 1",
                    mn: "ADBE Vector Graphic - Stroke",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [160, 141.891],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "tm",
                s: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.2],
                            y: [1]
                        },
                        o: {
                            x: [.8],
                            y: [0]
                        },
                        t: 70,
                        s: [0]
                    }, {
                        t: 110,
                        s: [100]
                    }],
                    ix: 1
                },
                e: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.2],
                            y: [1]
                        },
                        o: {
                            x: [.8],
                            y: [0]
                        },
                        t: 60,
                        s: [0]
                    }, {
                        t: 100,
                        s: [100]
                    }],
                    ix: 2
                },
                o: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.2],
                            y: [1]
                        },
                        o: {
                            x: [.8],
                            y: [0]
                        },
                        t: 60,
                        s: [-50]
                    }, {
                        t: 110,
                        s: [0]
                    }],
                    ix: 3
                },
                m: 1,
                ix: 2,
                nm: "Trim Paths 1",
                mn: "ADBE Vector Filter - Trim",
                hd: false
            }],
            ip: 0,
            op: 180,
            st: 0,
            bm: 0
        }, {
            ddd: 0,
            ind: 2,
            ty: 4,
            nm: "assembled",
            sr: 1,
            ks: {
                o: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 59,
                        s: [0]
                    }, {
                        t: 60,
                        s: [100]
                    }],
                    ix: 11
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 10
                },
                p: {
                    a: 0,
                    k: [160, 160, 0],
                    ix: 2,
                    l: 2
                },
                a: {
                    a: 0,
                    k: [160, 160, 0],
                    ix: 1,
                    l: 2
                },
                s: {
                    a: 0,
                    k: [100, 100, 100],
                    ix: 6,
                    l: 2
                }
            },
            ao: 0,
            shapes: [{
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [-80, 0],
                                [0, -46.188],
                                [80, 0],
                                [0, 46.188]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.125490196078, .474509803922, .913725490196, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [160, 49.453],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, -46.25],
                        ix: 1
                    },
                    s: {
                        a: 1,
                        k: [{
                            i: {
                                x: [.833, .833],
                                y: [.833, .833]
                            },
                            o: {
                                x: [.167, .167],
                                y: [.167, .167]
                            },
                            t: 154,
                            s: [100, 100]
                        }, {
                            t: 164,
                            s: [0, 0]
                        }],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 1,
                        k: [{
                            i: {
                                x: .833,
                                y: .833
                            },
                            o: {
                                x: .167,
                                y: .167
                            },
                            t: 144,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [-40, -27.094],
                                    [40, -69.281],
                                    [40, 23.094],
                                    [-40, 69.281]
                                ],
                                c: true
                            }]
                        }, {
                            t: 154,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [-40, -27.094],
                                    [40, -69.281],
                                    [40, -68.906],
                                    [-40, -26.844]
                                ],
                                c: true
                            }]
                        }],
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.01568627451, .380392156863, .823529411765, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [200, 164.984],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 1,
                        k: [{
                            i: {
                                x: [.833, .833],
                                y: [.833, .833]
                            },
                            o: {
                                x: [.167, .167],
                                y: [.167, .167]
                            },
                            t: 153,
                            s: [100, 100]
                        }, {
                            t: 154,
                            s: [0, 0]
                        }],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 2",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 2,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 1,
                        k: [{
                            i: {
                                x: .833,
                                y: .833
                            },
                            o: {
                                x: .167,
                                y: .167
                            },
                            t: 144,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [-42, 23.094],
                                    [-42, -69.281],
                                    [42, -27.094],
                                    [38, 69.282]
                                ],
                                c: true
                            }]
                        }, {
                            t: 154,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [-42, -69.406],
                                    [-42, -69.281],
                                    [42, -27.094],
                                    [39.125, -27.718]
                                ],
                                c: true
                            }]
                        }],
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.011764705882, .403921568627, .894117647059, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [122, 164.985],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 1,
                        k: [{
                            i: {
                                x: [.833, .833],
                                y: [.833, .833]
                            },
                            o: {
                                x: [.167, .167],
                                y: [.167, .167]
                            },
                            t: 153,
                            s: [100, 100]
                        }, {
                            t: 154,
                            s: [0, 0]
                        }],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 3",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 3,
                mn: "ADBE Vector Group",
                hd: false
            }],
            ip: 0,
            op: 1800,
            st: 0,
            bm: 0
        }, {
            ddd: 0,
            ind: 3,
            ty: 4,
            nm: "top-front",
            sr: 1,
            ks: {
                o: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 0,
                        s: [0]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 10,
                        s: [100]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 59,
                        s: [100]
                    }, {
                        t: 60,
                        s: [0]
                    }],
                    ix: 11
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 10
                },
                p: {
                    a: 1,
                    k: [{
                        i: {
                            x: .2,
                            y: 1
                        },
                        o: {
                            x: 0,
                            y: 0
                        },
                        t: 0,
                        s: [120, 164.985, 0],
                        to: [6.667, -3.849, 0],
                        ti: [-6.667, 3.849, 0]
                    }, {
                        t: 30,
                        s: [160, 141.891, 0]
                    }],
                    ix: 2,
                    l: 2
                },
                a: {
                    a: 0,
                    k: [160, 141.891, 0],
                    ix: 1,
                    l: 2
                },
                s: {
                    a: 0,
                    k: [100, 100, 100],
                    ix: 6,
                    l: 2
                }
            },
            ao: 0,
            shapes: [{
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 1,
                        k: [{
                            i: {
                                x: .833,
                                y: .833
                            },
                            o: {
                                x: .167,
                                y: .167
                            },
                            t: 34,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [0, -23.094],
                                    [40, 0],
                                    [0, 23.094],
                                    [-40, 0]
                                ],
                                c: true
                            }]
                        }, {
                            t: 38,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [.25, -25.844],
                                    [40, 0],
                                    [0, 23.094],
                                    [-40, 0]
                                ],
                                c: true
                            }]
                        }],
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.1254902035, .474509805441, .913725495338, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [160, 118.797],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 1,
                        k: [{
                            i: {
                                x: .833,
                                y: .833
                            },
                            o: {
                                x: .167,
                                y: .167
                            },
                            t: 42,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [20, -34.641],
                                    [20, 11.548],
                                    [13.978, 15.024],
                                    [-10.085, 28.916],
                                    [-20, 34.641],
                                    [-20, -11.546],
                                    [-5.999, -26.551]
                                ],
                                c: true
                            }]
                        }, {
                            t: 46,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [20, -34.641],
                                    [20, 11.548],
                                    [19.224, 15.333],
                                    [-18.845, 37.087],
                                    [-20, 34.641],
                                    [-20, -11.546],
                                    [-5.999, -26.551]
                                ],
                                c: true
                            }]
                        }],
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.015686275437, .380392163992, .823529422283, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [180, 153.437],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 2",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 2,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 1,
                        k: [{
                            i: {
                                x: .833,
                                y: .833
                            },
                            o: {
                                x: .167,
                                y: .167
                            },
                            t: 42,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [15.833, -11.547],
                                    [24.167, 12.615],
                                    [15.833, 34.641],
                                    [10.966, 31.831],
                                    [-19.97, 13.97],
                                    [-24.167, 11.547],
                                    [-24.167, -34.641],
                                    [-2.5, -30.219]
                                ],
                                c: true
                            }]
                        }, {
                            t: 46,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [15.833, -11.547],
                                    [24.167, 12.615],
                                    [15.833, 34.641],
                                    [13.951, 36.949],
                                    [-23.155, 14.67],
                                    [-24.167, 11.547],
                                    [-24.167, -34.641],
                                    [-2.5, -30.219]
                                ],
                                c: true
                            }]
                        }],
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.011764705882, .403921568627, .894117647059, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [144.167, 153.438],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 3",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 3,
                mn: "ADBE Vector Group",
                hd: false
            }],
            ip: 0,
            op: 180,
            st: 0,
            bm: 0
        }, {
            ddd: 0,
            ind: 4,
            ty: 4,
            nm: "top-left",
            sr: 1,
            ks: {
                o: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 8,
                        s: [0]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 18,
                        s: [100]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 59,
                        s: [100]
                    }, {
                        t: 60,
                        s: [0]
                    }],
                    ix: 11
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 10
                },
                p: {
                    a: 1,
                    k: [{
                        i: {
                            x: .2,
                            y: 1
                        },
                        o: {
                            x: 0,
                            y: 0
                        },
                        t: 8,
                        s: [80, 95.703, 0],
                        to: [6.667, 3.849, 0],
                        ti: [-6.667, -3.849, 0]
                    }, {
                        t: 38,
                        s: [120, 118.797, 0]
                    }],
                    ix: 2,
                    l: 2
                },
                a: {
                    a: 0,
                    k: [120, 118.797, 0],
                    ix: 1,
                    l: 2
                },
                s: {
                    a: 0,
                    k: [100, 100, 100],
                    ix: 6,
                    l: 2
                }
            },
            ao: 0,
            shapes: [{
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 1,
                        k: [{
                            i: {
                                x: .833,
                                y: .833
                            },
                            o: {
                                x: .167,
                                y: .167
                            },
                            t: 34,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [0, -23.094],
                                    [40, 0],
                                    [26.503, 7.793],
                                    [20.329, 11.357],
                                    [0, 23.094],
                                    [-40, 0]
                                ],
                                c: true
                            }]
                        }, {
                            t: 38,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [0, -23.094],
                                    [40, 0],
                                    [41.723, 3.135],
                                    [7.993, 23.012],
                                    [0, 23.094],
                                    [-40, 0]
                                ],
                                c: true
                            }]
                        }],
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.1254902035, .474509805441, .913725495338, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [120, 95.703],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [20, -34.641],
                                [20, 11.548],
                                [-20, 34.641],
                                [-20, -11.546],
                                [-5.999, -26.551]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.015686275437, .380392163992, .823529422283, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [140, 130.344],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 2",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 2,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 1,
                        k: [{
                            i: {
                                x: .833,
                                y: .833
                            },
                            o: {
                                x: .167,
                                y: .167
                            },
                            t: 49,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [15.833, -11.547],
                                    [24.167, 12.615],
                                    [15.833, 34.641],
                                    [-1.558, 24.601],
                                    [-12.839, 18.087],
                                    [-24.167, 11.547],
                                    [-24.167, -34.641],
                                    [-2.5, -30.219]
                                ],
                                c: true
                            }]
                        }, {
                            t: 53,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [15.833, -11.547],
                                    [24.167, 12.615],
                                    [15.833, 34.641],
                                    [10.67, 36.422],
                                    [-21.859, 17.055],
                                    [-24.167, 11.547],
                                    [-24.167, -34.641],
                                    [-2.5, -30.219]
                                ],
                                c: true
                            }]
                        }],
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.011764706112, .403921574354, .89411765337, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [104.167, 130.344],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 3",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 3,
                mn: "ADBE Vector Group",
                hd: false
            }],
            ip: 8,
            op: 180,
            st: 8,
            bm: 0
        }, {
            ddd: 0,
            ind: 5,
            ty: 4,
            nm: "top-right",
            sr: 1,
            ks: {
                o: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 4,
                        s: [0]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 14,
                        s: [100]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 59,
                        s: [100]
                    }, {
                        t: 60,
                        s: [0]
                    }],
                    ix: 11
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 10
                },
                p: {
                    a: 1,
                    k: [{
                        i: {
                            x: .2,
                            y: 1
                        },
                        o: {
                            x: 0,
                            y: 0
                        },
                        t: 4,
                        s: [240, 141.891, 0],
                        to: [-6.667, -3.849, 0],
                        ti: [6.667, 3.849, 0]
                    }, {
                        t: 34,
                        s: [200, 118.797, 0]
                    }],
                    ix: 2,
                    l: 2
                },
                a: {
                    a: 0,
                    k: [200, 118.797, 0],
                    ix: 1,
                    l: 2
                },
                s: {
                    a: 0,
                    k: [100, 100, 100],
                    ix: 6,
                    l: 2
                }
            },
            ao: 0,
            shapes: [{
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 1,
                        k: [{
                            i: {
                                x: .833,
                                y: .833
                            },
                            o: {
                                x: .167,
                                y: .167
                            },
                            t: 30,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [0, -23.094],
                                    [40, 0],
                                    [0, 23.094],
                                    [-20.296, 11.376],
                                    [-28.115, 6.862],
                                    [-40, 0]
                                ],
                                c: true
                            }]
                        }, {
                            t: 34,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [0, -23.094],
                                    [40, 0],
                                    [0, 23.094],
                                    [-8.546, 25.876],
                                    [-40.974, 3.386],
                                    [-40, 0]
                                ],
                                c: true
                            }]
                        }],
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.1254902035, .474509805441, .913725495338, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [200, 95.703],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 1,
                        k: [{
                            i: {
                                x: .833,
                                y: .833
                            },
                            o: {
                                x: .167,
                                y: .167
                            },
                            t: 46,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [20, -34.641],
                                    [20, 11.548],
                                    [9.4, 17.667],
                                    [-11.575, 29.777],
                                    [-20, 34.641],
                                    [-20, 10.935],
                                    [-20, -11.546],
                                    [-5.999, -26.551]
                                ],
                                c: true
                            }]
                        }, {
                            t: 50,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [20, -34.641],
                                    [20, 11.548],
                                    [18.704, 16.414],
                                    [-17.424, 36.249],
                                    [-20, 34.641],
                                    [-20, 10.935],
                                    [-20, -11.546],
                                    [-5.999, -26.551]
                                ],
                                c: true
                            }]
                        }],
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.015686275437, .380392163992, .823529422283, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [220, 130.344],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 2",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 2,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [15.833, -11.547],
                                [24.167, 12.615],
                                [15.833, 34.641],
                                [-24.167, 11.547],
                                [-24.167, -34.641],
                                [-2.5, -30.219]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.011764706112, .403921574354, .89411765337, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [184.167, 130.344],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 3",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 3,
                mn: "ADBE Vector Group",
                hd: false
            }],
            ip: 4,
            op: 180,
            st: 4,
            bm: 0
        }, {
            ddd: 0,
            ind: 6,
            ty: 4,
            nm: "top-back",
            sr: 1,
            ks: {
                o: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 12,
                        s: [0]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 22,
                        s: [100]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 59,
                        s: [100]
                    }, {
                        t: 60,
                        s: [0]
                    }],
                    ix: 11
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 10
                },
                p: {
                    a: 1,
                    k: [{
                        i: {
                            x: .2,
                            y: 1
                        },
                        o: {
                            x: 0,
                            y: 0
                        },
                        t: 12,
                        s: [160, 49.515, 0],
                        to: [0, 7.698, 0],
                        ti: [0, -7.698, 0]
                    }, {
                        t: 42,
                        s: [160, 95.703, 0]
                    }],
                    ix: 2,
                    l: 2
                },
                a: {
                    a: 0,
                    k: [160, 95.703, 0],
                    ix: 1,
                    l: 2
                },
                s: {
                    a: 0,
                    k: [100, 100, 100],
                    ix: 6,
                    l: 2
                }
            },
            ao: 0,
            shapes: [{
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 1,
                        k: [{
                            i: {
                                x: .833,
                                y: .833
                            },
                            o: {
                                x: .167,
                                y: .167
                            },
                            t: 38,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [0, -23.094],
                                    [40, 0],
                                    [19.343, 11.926],
                                    [12.736, 15.741],
                                    [0, 23.094],
                                    [-13.623, 15.229],
                                    [-18.535, 12.393],
                                    [-40, 0]
                                ],
                                c: true
                            }]
                        }, {
                            t: 42,
                            s: [{
                                i: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                o: [
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0],
                                    [0, 0]
                                ],
                                v: [
                                    [0, -23.094],
                                    [40, 0],
                                    [41.265, 2.866],
                                    [4.442, 24.887],
                                    [0, 23.094],
                                    [-4.817, 24.783],
                                    [-40.306, 3.563],
                                    [-40, 0]
                                ],
                                c: true
                            }]
                        }],
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.1254902035, .474509805441, .913725495338, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [160, 72.61],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [20, -34.641],
                                [20, 11.548],
                                [-20, 34.641],
                                [-20, -11.546],
                                [-5.999, -26.551]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.015686275437, .380392163992, .823529422283, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [180, 107.25],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 2",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 2,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [15.833, -11.547],
                                [24.167, 12.615],
                                [15.833, 34.641],
                                [-24.167, 11.547],
                                [-24.167, -34.641],
                                [-2.5, -30.219]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.011764706112, .403921574354, .89411765337, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [144.167, 107.25],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 3",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 3,
                mn: "ADBE Vector Group",
                hd: false
            }],
            ip: 12,
            op: 180,
            st: 12,
            bm: 0
        }, {
            ddd: 0,
            ind: 7,
            ty: 4,
            nm: "bottom-front",
            sr: 1,
            ks: {
                o: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 16,
                        s: [0]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 26,
                        s: [100]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 59,
                        s: [100]
                    }, {
                        t: 60,
                        s: [0]
                    }],
                    ix: 11
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 10
                },
                p: {
                    a: 1,
                    k: [{
                        i: {
                            x: .2,
                            y: 1
                        },
                        o: {
                            x: 0,
                            y: 0
                        },
                        t: 16,
                        s: [200, 211.172, 0],
                        to: [-6.667, -3.849, 0],
                        ti: [6.667, 3.849, 0]
                    }, {
                        t: 46,
                        s: [160, 188.078, 0]
                    }],
                    ix: 2,
                    l: 2
                },
                a: {
                    a: 0,
                    k: [160, 188.078, 0],
                    ix: 1,
                    l: 2
                },
                s: {
                    a: 0,
                    k: [100, 100, 100],
                    ix: 6,
                    l: 2
                }
            },
            ao: 0,
            shapes: [{
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [0, -23.094],
                                [40, 0],
                                [0, 23.094],
                                [-40, 0]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.1254902035, .474509805441, .913725495338, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [160, 164.985],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [20, -34.641],
                                [20, 11.548],
                                [-20, 34.641],
                                [-20, -11.546],
                                [-5.999, -26.551]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.015686275437, .380392163992, .823529422283, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [180, 199.625],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 2",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 2,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [15.833, -11.547],
                                [24.167, 12.615],
                                [15.833, 34.641],
                                [-24.167, 11.547],
                                [-24.167, -34.641],
                                [-2.5, -30.219]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.011764706112, .403921574354, .89411765337, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [144.167, 199.625],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 3",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 3,
                mn: "ADBE Vector Group",
                hd: false
            }],
            ip: 16,
            op: 180,
            st: 16,
            bm: 0
        }, {
            ddd: 0,
            ind: 8,
            ty: 4,
            nm: "bottom-left",
            sr: 1,
            ks: {
                o: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 24,
                        s: [0]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 34,
                        s: [100]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 59,
                        s: [100]
                    }, {
                        t: 60,
                        s: [0]
                    }],
                    ix: 11
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 10
                },
                p: {
                    a: 1,
                    k: [{
                        i: {
                            x: .2,
                            y: 1
                        },
                        o: {
                            x: 0,
                            y: 0
                        },
                        t: 24,
                        s: [80, 188.079, 0],
                        to: [6.667, -3.849, 0],
                        ti: [-6.667, 3.849, 0]
                    }, {
                        t: 54,
                        s: [120, 164.985, 0]
                    }],
                    ix: 2,
                    l: 2
                },
                a: {
                    a: 0,
                    k: [120, 164.985, 0],
                    ix: 1,
                    l: 2
                },
                s: {
                    a: 0,
                    k: [100, 100, 100],
                    ix: 6,
                    l: 2
                }
            },
            ao: 0,
            shapes: [{
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [0, -23.094],
                                [40, 0],
                                [0, 23.094],
                                [-40, 0]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.1254902035, .474509805441, .913725495338, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [120, 141.891],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [20, -34.641],
                                [20, 11.548],
                                [-20, 34.641],
                                [-20, -11.546],
                                [-5.999, -26.551]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.015686275437, .380392163992, .823529422283, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [140, 176.531],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 2",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 2,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [15.833, -11.547],
                                [24.167, 12.615],
                                [15.833, 34.641],
                                [-24.167, 11.547],
                                [-24.167, -34.641],
                                [-2.5, -30.219]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.011764706112, .403921574354, .89411765337, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [104.167, 176.531],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 3",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 3,
                mn: "ADBE Vector Group",
                hd: false
            }],
            ip: 24,
            op: 180,
            st: 24,
            bm: 0
        }, {
            ddd: 0,
            ind: 9,
            ty: 4,
            nm: "bottom-right",
            sr: 1,
            ks: {
                o: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 20,
                        s: [0]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 30,
                        s: [100]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 59,
                        s: [100]
                    }, {
                        t: 60,
                        s: [0]
                    }],
                    ix: 11
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 10
                },
                p: {
                    a: 1,
                    k: [{
                        i: {
                            x: .2,
                            y: 1
                        },
                        o: {
                            x: 0,
                            y: 0
                        },
                        t: 20,
                        s: [240, 141.891, 0],
                        to: [-6.667, 3.849, 0],
                        ti: [6.667, -3.849, 0]
                    }, {
                        t: 50,
                        s: [200, 164.985, 0]
                    }],
                    ix: 2,
                    l: 2
                },
                a: {
                    a: 0,
                    k: [200, 164.985, 0],
                    ix: 1,
                    l: 2
                },
                s: {
                    a: 0,
                    k: [100, 100, 100],
                    ix: 6,
                    l: 2
                }
            },
            ao: 0,
            shapes: [{
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [0, -23.094],
                                [40, 0],
                                [0, 23.094],
                                [-40, 0]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.1254902035, .474509805441, .913725495338, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [200, 141.891],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [20, -34.641],
                                [20, 11.548],
                                [-20, 34.641],
                                [-20, -11.546],
                                [-5.999, -26.551]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.015686275437, .380392163992, .823529422283, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [220, 176.531],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 2",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 2,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [15.833, -11.547],
                                [24.167, 12.615],
                                [15.833, 34.641],
                                [-24.167, 11.547],
                                [-24.167, -34.641],
                                [-2.5, -30.219]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.011764706112, .403921574354, .89411765337, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [184.167, 176.531],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 3",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 3,
                mn: "ADBE Vector Group",
                hd: false
            }],
            ip: 20,
            op: 180,
            st: 20,
            bm: 0
        }, {
            ddd: 0,
            ind: 10,
            ty: 4,
            nm: "bottom-back",
            sr: 1,
            ks: {
                o: {
                    a: 1,
                    k: [{
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 28,
                        s: [0]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 38,
                        s: [100]
                    }, {
                        i: {
                            x: [.833],
                            y: [.833]
                        },
                        o: {
                            x: [.167],
                            y: [.167]
                        },
                        t: 59,
                        s: [100]
                    }, {
                        t: 60,
                        s: [0]
                    }],
                    ix: 11
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 10
                },
                p: {
                    a: 1,
                    k: [{
                        i: {
                            x: .2,
                            y: 1
                        },
                        o: {
                            x: 0,
                            y: 0
                        },
                        t: 28,
                        s: [120, 118.797, 0],
                        to: [6.667, 3.849, 0],
                        ti: [-6.667, -3.849, 0]
                    }, {
                        t: 58,
                        s: [160, 141.891, 0]
                    }],
                    ix: 2,
                    l: 2
                },
                a: {
                    a: 0,
                    k: [160, 141.891, 0],
                    ix: 1,
                    l: 2
                },
                s: {
                    a: 0,
                    k: [100, 100, 100],
                    ix: 6,
                    l: 2
                }
            },
            ao: 0,
            shapes: [{
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [0, -23.094],
                                [40, 0],
                                [0, 23.094],
                                [-40, 0]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.1254902035, .474509805441, .913725495338, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [160, 118.797],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [20, -34.641],
                                [20, 11.548],
                                [-20, 34.641],
                                [-20, -11.546],
                                [-5.999, -26.551]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.015686275437, .380392163992, .823529422283, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [180, 153.437],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 2",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 2,
                mn: "ADBE Vector Group",
                hd: false
            }, {
                ty: "gr",
                it: [{
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                        a: 0,
                        k: {
                            i: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            o: [
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0],
                                [0, 0]
                            ],
                            v: [
                                [15.833, -11.547],
                                [24.167, 12.615],
                                [15.833, 34.641],
                                [-24.167, 11.547],
                                [-24.167, -34.641],
                                [-2.5, -30.219]
                            ],
                            c: true
                        },
                        ix: 2
                    },
                    nm: "Path 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                }, {
                    ty: "fl",
                    c: {
                        a: 0,
                        k: [.011764706112, .403921574354, .89411765337, 1],
                        ix: 4
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fill 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                }, {
                    ty: "tr",
                    p: {
                        a: 0,
                        k: [144.167, 153.438],
                        ix: 2
                    },
                    a: {
                        a: 0,
                        k: [0, 0],
                        ix: 1
                    },
                    s: {
                        a: 0,
                        k: [100, 100],
                        ix: 3
                    },
                    r: {
                        a: 0,
                        k: 0,
                        ix: 6
                    },
                    o: {
                        a: 0,
                        k: 100,
                        ix: 7
                    },
                    sk: {
                        a: 0,
                        k: 0,
                        ix: 4
                    },
                    sa: {
                        a: 0,
                        k: 0,
                        ix: 5
                    },
                    nm: "Transform"
                }],
                nm: "Group 3",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 3,
                mn: "ADBE Vector Group",
                hd: false
            }],
            ip: 28,
            op: 180,
            st: 28,
            bm: 0
        }]
    }],
    layers: [{
        ddd: 0,
        ind: 1,
        ty: 4,
        nm: "front-flat",
        sr: 1,
        ks: {
            o: {
                a: 0,
                k: 100,
                ix: 11
            },
            r: {
                a: 0,
                k: 0,
                ix: 10
            },
            p: {
                a: 0,
                k: [160, 160, 0],
                ix: 2,
                l: 2
            },
            a: {
                a: 0,
                k: [160, 160, 0],
                ix: 1,
                l: 2
            },
            s: {
                a: 0,
                k: [100, 100, 100],
                ix: 6,
                l: 2
            }
        },
        ao: 0,
        shapes: [{
            ty: "gr",
            it: [{
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                    a: 0,
                    k: {
                        i: [
                            [5.522, -3.188],
                            [0, 0],
                            [7.239, 0],
                            [5.522, 3.189],
                            [0, 0],
                            [0, 4.179],
                            [0, 0],
                            [-5.522, -3.188],
                            [0, 0],
                            [-7.238, 0],
                            [-5.523, 3.189],
                            [0, 0],
                            [0, 4.179],
                            [0, 0]
                        ],
                        o: [
                            [0, 0],
                            [-5.523, 3.19],
                            [-7.238, 0],
                            [0, 0],
                            [-5.522, -3.188],
                            [0, 0],
                            [0, 4.179],
                            [0, 0],
                            [5.522, 3.188],
                            [7.239, 0],
                            [0, 0],
                            [5.522, -3.188],
                            [0, 0],
                            [0, 4.179]
                        ],
                        v: [
                            [140, -42.806],
                            [20, 26.475],
                            [-.003, 31.259],
                            [-20, 26.475],
                            [-140, -42.806],
                            [-148.283, -54.353],
                            [-148.283, -31.258],
                            [-140, -19.712],
                            [-20, 49.569],
                            [-.003, 54.353],
                            [20, 49.569],
                            [140, -19.712],
                            [148.283, -31.258],
                            [148.283, -54.353]
                        ],
                        c: true
                    },
                    ix: 2
                },
                nm: "Path 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
            }, {
                ty: "fl",
                c: {
                    a: 0,
                    k: [.819607853889, .827450990677, .835294127464, 1],
                    ix: 4
                },
                o: {
                    a: 0,
                    k: 100,
                    ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fill 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
            }, {
                ty: "tr",
                p: {
                    a: 0,
                    k: [160, 265.524],
                    ix: 2
                },
                a: {
                    a: 0,
                    k: [0, 0],
                    ix: 1
                },
                s: {
                    a: 0,
                    k: [100, 100],
                    ix: 3
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 6
                },
                o: {
                    a: 0,
                    k: 100,
                    ix: 7
                },
                sk: {
                    a: 0,
                    k: 0,
                    ix: 4
                },
                sa: {
                    a: 0,
                    k: 0,
                    ix: 5
                },
                nm: "Transform"
            }],
            nm: "Group 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
        }, {
            ty: "gr",
            it: [{
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                    a: 0,
                    k: {
                        i: [
                            [0, 0],
                            [-5.522, -3.188],
                            [0, 0],
                            [-7.238, 0],
                            [-5.523, 3.19],
                            [0, 0],
                            [0, 4.179],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0]
                        ],
                        o: [
                            [0, 4.179],
                            [0, 0],
                            [5.523, 3.189],
                            [7.24, 0],
                            [0, 0],
                            [5.523, -3.188],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0]
                        ],
                        v: [
                            [-148.283, -38.391],
                            [-140, -26.844],
                            [-20, 42.437],
                            [-.003, 47.22],
                            [20, 42.437],
                            [140, -26.844],
                            [148.283, -38.391],
                            [148.283, -47.219],
                            [120, -47.219],
                            [0, 22.062],
                            [-120, -47.219],
                            [-148.283, -47.219]
                        ],
                        c: true
                    },
                    ix: 2
                },
                nm: "Path 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
            }, {
                ty: "fl",
                c: {
                    a: 0,
                    k: [.937254905701, .941176474094, .952941179276, 1],
                    ix: 4
                },
                o: {
                    a: 0,
                    k: 100,
                    ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fill 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
            }, {
                ty: "tr",
                p: {
                    a: 0,
                    k: [160, 258.391],
                    ix: 2
                },
                a: {
                    a: 0,
                    k: [0, 0],
                    ix: 1
                },
                s: {
                    a: 0,
                    k: [100, 100],
                    ix: 3
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 6
                },
                o: {
                    a: 0,
                    k: 100,
                    ix: 7
                },
                sk: {
                    a: 0,
                    k: 0,
                    ix: 4
                },
                sa: {
                    a: 0,
                    k: 0,
                    ix: 5
                },
                nm: "Transform"
            }],
            nm: "Group 2",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: false
        }],
        ip: 0,
        op: 180,
        st: 0,
        bm: 0
    }, {
        ddd: 0,
        ind: 2,
        ty: 0,
        nm: "assemble",
        refId: "comp_0",
        sr: 1,
        ks: {
            o: {
                a: 0,
                k: 100,
                ix: 11
            },
            r: {
                a: 0,
                k: 0,
                ix: 10
            },
            p: {
                a: 1,
                k: [{
                    i: {
                        x: .6,
                        y: 1
                    },
                    o: {
                        x: .8,
                        y: 0
                    },
                    t: 110,
                    s: [160, 160, 0],
                    to: [0, 40, 0],
                    ti: [0, -40, 0]
                }, {
                    t: 170,
                    s: [160, 400, 0]
                }],
                ix: 2,
                l: 2
            },
            a: {
                a: 0,
                k: [160, 160, 0],
                ix: 1,
                l: 2
            },
            s: {
                a: 0,
                k: [100, 100, 100],
                ix: 6,
                l: 2
            }
        },
        ao: 0,
        w: 320,
        h: 320,
        ip: 0,
        op: 180,
        st: 0,
        bm: 0
    }, {
        ddd: 0,
        ind: 3,
        ty: 4,
        nm: "back-flat",
        sr: 1,
        ks: {
            o: {
                a: 0,
                k: 100,
                ix: 11
            },
            r: {
                a: 0,
                k: 0,
                ix: 10
            },
            p: {
                a: 0,
                k: [160, 160, 0],
                ix: 2,
                l: 2
            },
            a: {
                a: 0,
                k: [160, 160, 0],
                ix: 1,
                l: 2
            },
            s: {
                a: 0,
                k: [100, 100, 100],
                ix: 6,
                l: 2
            }
        },
        ao: 0,
        shapes: [{
            ty: "gr",
            it: [{
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                    a: 0,
                    k: {
                        i: [
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [5.522, 3.189],
                            [0, 0],
                            [7.239, 0],
                            [5.522, -3.189],
                            [0, 0],
                            [0, -4.18],
                            [0, 0]
                        ],
                        o: [
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, -4.18],
                            [0, 0],
                            [-5.523, -3.189],
                            [-7.238, 0],
                            [0, 0],
                            [-5.522, 3.189],
                            [0, 0],
                            [0, 0]
                        ],
                        v: [
                            [-120, 40.392],
                            [0, -28.889],
                            [120, 40.392],
                            [133, 45.22],
                            [148.283, 40.392],
                            [140, 28.845],
                            [20, -40.436],
                            [-.003, -45.219],
                            [-20, -40.436],
                            [-140, 28.845],
                            [-148.283, 40.392],
                            [-134, 44.22]
                        ],
                        c: true
                    },
                    ix: 2
                },
                nm: "Path 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
            }, {
                ty: "fl",
                c: {
                    a: 0,
                    k: [.937254905701, .941176474094, .952941179276, 1],
                    ix: 4
                },
                o: {
                    a: 0,
                    k: 100,
                    ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fill 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
            }, {
                ty: "tr",
                p: {
                    a: 0,
                    k: [160, 170.78],
                    ix: 2
                },
                a: {
                    a: 0,
                    k: [0, 0],
                    ix: 1
                },
                s: {
                    a: 0,
                    k: [100, 100],
                    ix: 3
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 6
                },
                o: {
                    a: 0,
                    k: 100,
                    ix: 7
                },
                sk: {
                    a: 0,
                    k: 0,
                    ix: 4
                },
                sa: {
                    a: 0,
                    k: 0,
                    ix: 5
                },
                nm: "Transform"
            }],
            nm: "Group 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
        }, {
            ty: "gr",
            it: [{
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                    a: 0,
                    k: {
                        i: [
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0]
                        ],
                        o: [
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0]
                        ],
                        v: [
                            [-60, 0],
                            [-7, -41.172],
                            [60, -69.281],
                            [60, 69.281],
                            [-13, 41.828]
                        ],
                        c: true
                    },
                    ix: 2
                },
                nm: "Path 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
            }, {
                ty: "fl",
                c: {
                    a: 0,
                    k: [.86274510622, .870588243008, .882352948189, 1],
                    ix: 4
                },
                o: {
                    a: 0,
                    k: 100,
                    ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fill 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
            }, {
                ty: "tr",
                p: {
                    a: 0,
                    k: [100, 211.172],
                    ix: 2
                },
                a: {
                    a: 0,
                    k: [0, 0],
                    ix: 1
                },
                s: {
                    a: 0,
                    k: [100, 100],
                    ix: 3
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 6
                },
                o: {
                    a: 0,
                    k: 100,
                    ix: 7
                },
                sk: {
                    a: 0,
                    k: 0,
                    ix: 4
                },
                sa: {
                    a: 0,
                    k: 0,
                    ix: 5
                },
                nm: "Transform"
            }],
            nm: "Group 2",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: false
        }, {
            ty: "gr",
            it: [{
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                    a: 0,
                    k: {
                        i: [
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0]
                        ],
                        o: [
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                            [0, 0]
                        ],
                        v: [
                            [-55.5, -69.281],
                            [8.5, -43.172],
                            [64.5, 0],
                            [15.5, 42.828],
                            [-55.5, 69.281],
                            [-64.5, -5.172]
                        ],
                        c: true
                    },
                    ix: 2
                },
                nm: "Path 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
            }, {
                ty: "fl",
                c: {
                    a: 0,
                    k: [.819607853889, .827450990677, .835294127464, 1],
                    ix: 4
                },
                o: {
                    a: 0,
                    k: 100,
                    ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fill 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
            }, {
                ty: "tr",
                p: {
                    a: 0,
                    k: [215.5, 211.172],
                    ix: 2
                },
                a: {
                    a: 0,
                    k: [0, 0],
                    ix: 1
                },
                s: {
                    a: 0,
                    k: [100, 100],
                    ix: 3
                },
                r: {
                    a: 0,
                    k: 0,
                    ix: 6
                },
                o: {
                    a: 0,
                    k: 100,
                    ix: 7
                },
                sk: {
                    a: 0,
                    k: 0,
                    ix: 4
                },
                sa: {
                    a: 0,
                    k: 0,
                    ix: 5
                },
                nm: "Transform"
            }],
            nm: "Group 3",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 3,
            mn: "ADBE Vector Group",
            hd: false
        }],
        ip: 0,
        op: 180,
        st: 0,
        bm: 0
    }],
    markers: []
};
var params = {
    container: document.getElementById("lottie-main-animation"),
    renderer: "svg",
    loop: true,
    autoplay: true,
    animationData: animationData,
    rendererSettings: {
        progressiveLoad: true
    }
};
var anim;
anim = lottie.loadAnimation(params);
! function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).Swiper = t()
}(this, function() {
    "use strict";

    function e(e, t) {
        for (var a = 0; a < t.length; a++) {
            var i = t[a];
            i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
        }
    }

    function t() {
        return (t = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var a = arguments[t];
                for (var i in a) Object.prototype.hasOwnProperty.call(a, i) && (e[i] = a[i])
            }
            return e
        }).apply(this, arguments)
    }

    function a(e) {
        return null !== e && "object" == typeof e && "constructor" in e && e.constructor === Object
    }

    function i(e, t) {
        void 0 === e && (e = {}), void 0 === t && (t = {}), Object.keys(t).forEach(function(s) {
            void 0 === e[s] ? e[s] = t[s] : a(t[s]) && a(e[s]) && Object.keys(t[s]).length > 0 && i(e[s], t[s])
        })
    }
    var s = {
        body: {},
        addEventListener: function() {},
        removeEventListener: function() {},
        activeElement: {
            blur: function() {},
            nodeName: ""
        },
        querySelector: function() {
            return null
        },
        querySelectorAll: function() {
            return []
        },
        getElementById: function() {
            return null
        },
        createEvent: function() {
            return {
                initEvent: function() {}
            }
        },
        createElement: function() {
            return {
                children: [],
                childNodes: [],
                style: {},
                setAttribute: function() {},
                getElementsByTagName: function() {
                    return []
                }
            }
        },
        createElementNS: function() {
            return {}
        },
        importNode: function() {
            return null
        },
        location: {
            hash: "",
            host: "",
            hostname: "",
            href: "",
            origin: "",
            pathname: "",
            protocol: "",
            search: ""
        }
    };

    function r() {
        var e = "undefined" != typeof document ? document : {};
        return i(e, s), e
    }
    var n = {
        document: s,
        navigator: {
            userAgent: ""
        },
        location: {
            hash: "",
            host: "",
            hostname: "",
            href: "",
            origin: "",
            pathname: "",
            protocol: "",
            search: ""
        },
        history: {
            replaceState: function() {},
            pushState: function() {},
            go: function() {},
            back: function() {}
        },
        CustomEvent: function() {
            return this
        },
        addEventListener: function() {},
        removeEventListener: function() {},
        getComputedStyle: function() {
            return {
                getPropertyValue: function() {
                    return ""
                }
            }
        },
        Image: function() {},
        Date: function() {},
        screen: {},
        setTimeout: function() {},
        clearTimeout: function() {},
        matchMedia: function() {
            return {}
        },
        requestAnimationFrame: function(e) {
            return "undefined" == typeof setTimeout ? (e(), null) : setTimeout(e, 0)
        },
        cancelAnimationFrame: function(e) {
            "undefined" != typeof setTimeout && clearTimeout(e)
        }
    };

    function l() {
        var e = "undefined" != typeof window ? window : {};
        return i(e, n), e
    }

    function o(e) {
        return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e)
        })(e)
    }

    function d(e, t) {
        return (d = Object.setPrototypeOf || function(e, t) {
            return e.__proto__ = t, e
        })(e, t)
    }

    function p() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
            return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0
        } catch (e) {
            return !1
        }
    }

    function u(e, t, a) {
        return (u = p() ? Reflect.construct : function(e, t, a) {
            var i = [null];
            i.push.apply(i, t);
            var s = new(Function.bind.apply(e, i));
            return a && d(s, a.prototype), s
        }).apply(null, arguments)
    }

    function c(e) {
        var t = "function" == typeof Map ? new Map : void 0;
        return (c = function(e) {
            if (null === e || (a = e, -1 === Function.toString.call(a).indexOf("[native code]"))) return e;
            var a;
            if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== t) {
                if (t.has(e)) return t.get(e);
                t.set(e, i)
            }

            function i() {
                return u(e, arguments, o(this).constructor)
            }
            return i.prototype = Object.create(e.prototype, {
                constructor: {
                    value: i,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), d(i, e)
        })(e)
    }
    var h = function(e) {
        var t, a;

        function i(t) {
            var a, i, s;
            return a = e.call.apply(e, [this].concat(t)) || this, i = function(e) {
                if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }(a), s = i.__proto__, Object.defineProperty(i, "__proto__", {
                get: function() {
                    return s
                },
                set: function(e) {
                    s.__proto__ = e
                }
            }), a
        }
        return a = e, (t = i).prototype = Object.create(a.prototype), t.prototype.constructor = t, t.__proto__ = a, i
    }(c(Array));

    function v(e) {
        void 0 === e && (e = []);
        var t = [];
        return e.forEach(function(e) {
            Array.isArray(e) ? t.push.apply(t, v(e)) : t.push(e)
        }), t
    }

    function f(e, t) {
        return Array.prototype.filter.call(e, t)
    }

    function m(e, t) {
        var a = l(),
            i = r(),
            s = [];
        if (!t && e instanceof h) return e;
        if (!e) return new h(s);
        if ("string" == typeof e) {
            var n = e.trim();
            if (n.indexOf("<") >= 0 && n.indexOf(">") >= 0) {
                var o = "div";
                0 === n.indexOf("<li") && (o = "ul"), 0 === n.indexOf("<tr") && (o = "tbody"), 0 !== n.indexOf("<td") && 0 !== n.indexOf("<th") || (o = "tr"), 0 === n.indexOf("<tbody") && (o = "table"), 0 === n.indexOf("<option") && (o = "select");
                var d = i.createElement(o);
                d.innerHTML = n;
                for (var p = 0; p < d.childNodes.length; p += 1) s.push(d.childNodes[p])
            } else s = function(e, t) {
                if ("string" != typeof e) return [e];
                for (var a = [], i = t.querySelectorAll(e), s = 0; s < i.length; s += 1) a.push(i[s]);
                return a
            }(e.trim(), t || i)
        } else if (e.nodeType || e === a || e === i) s.push(e);
        else if (Array.isArray(e)) {
            if (e instanceof h) return e;
            s = e
        }
        return new h(function(e) {
            for (var t = [], a = 0; a < e.length; a += 1) - 1 === t.indexOf(e[a]) && t.push(e[a]);
            return t
        }(s))
    }
    m.fn = h.prototype;
    var g, b, w, y = {
        addClass: function() {
            for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++) t[a] = arguments[a];
            var i = v(t.map(function(e) {
                return e.split(" ")
            }));
            return this.forEach(function(e) {
                var t;
                (t = e.classList).add.apply(t, i)
            }), this
        },
        removeClass: function() {
            for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++) t[a] = arguments[a];
            var i = v(t.map(function(e) {
                return e.split(" ")
            }));
            return this.forEach(function(e) {
                var t;
                (t = e.classList).remove.apply(t, i)
            }), this
        },
        hasClass: function() {
            for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++) t[a] = arguments[a];
            var i = v(t.map(function(e) {
                return e.split(" ")
            }));
            return f(this, function(e) {
                return i.filter(function(t) {
                    return e.classList.contains(t)
                }).length > 0
            }).length > 0
        },
        toggleClass: function() {
            for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++) t[a] = arguments[a];
            var i = v(t.map(function(e) {
                return e.split(" ")
            }));
            this.forEach(function(e) {
                i.forEach(function(t) {
                    e.classList.toggle(t)
                })
            })
        },
        attr: function(e, t) {
            if (1 === arguments.length && "string" == typeof e) return this[0] ? this[0].getAttribute(e) : void 0;
            for (var a = 0; a < this.length; a += 1)
                if (2 === arguments.length) this[a].setAttribute(e, t);
                else
                    for (var i in e) this[a][i] = e[i], this[a].setAttribute(i, e[i]);
            return this
        },
        removeAttr: function(e) {
            for (var t = 0; t < this.length; t += 1) this[t].removeAttribute(e);
            return this
        },
        transform: function(e) {
            for (var t = 0; t < this.length; t += 1) this[t].style.transform = e;
            return this
        },
        transition: function(e) {
            for (var t = 0; t < this.length; t += 1) this[t].style.transitionDuration = "string" != typeof e ? e + "ms" : e;
            return this
        },
        on: function() {
            for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++) t[a] = arguments[a];
            var i = t[0],
                s = t[1],
                r = t[2],
                n = t[3];

            function l(e) {
                var t = e.target;
                if (t) {
                    var a = e.target.dom7EventData || [];
                    if (a.indexOf(e) < 0 && a.unshift(e), m(t).is(s)) r.apply(t, a);
                    else
                        for (var i = m(t).parents(), n = 0; n < i.length; n += 1) m(i[n]).is(s) && r.apply(i[n], a)
                }
            }

            function o(e) {
                var t = e && e.target && e.target.dom7EventData || [];
                t.indexOf(e) < 0 && t.unshift(e), r.apply(this, t)
            }
            "function" == typeof t[1] && (i = t[0], r = t[1], n = t[2], s = void 0), n || (n = !1);
            for (var d, p = i.split(" "), u = 0; u < this.length; u += 1) {
                var c = this[u];
                if (s)
                    for (d = 0; d < p.length; d += 1) {
                        var h = p[d];
                        c.dom7LiveListeners || (c.dom7LiveListeners = {}), c.dom7LiveListeners[h] || (c.dom7LiveListeners[h] = []), c.dom7LiveListeners[h].push({
                            listener: r,
                            proxyListener: l
                        }), c.addEventListener(h, l, n)
                    } else
                        for (d = 0; d < p.length; d += 1) {
                            var v = p[d];
                            c.dom7Listeners || (c.dom7Listeners = {}), c.dom7Listeners[v] || (c.dom7Listeners[v] = []), c.dom7Listeners[v].push({
                                listener: r,
                                proxyListener: o
                            }), c.addEventListener(v, o, n)
                        }
            }
            return this
        },
        off: function() {
            for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++) t[a] = arguments[a];
            var i = t[0],
                s = t[1],
                r = t[2],
                n = t[3];
            "function" == typeof t[1] && (i = t[0], r = t[1], n = t[2], s = void 0), n || (n = !1);
            for (var l = i.split(" "), o = 0; o < l.length; o += 1)
                for (var d = l[o], p = 0; p < this.length; p += 1) {
                    var u = this[p],
                        c = void 0;
                    if (!s && u.dom7Listeners ? c = u.dom7Listeners[d] : s && u.dom7LiveListeners && (c = u.dom7LiveListeners[d]), c && c.length)
                        for (var h = c.length - 1; h >= 0; h -= 1) {
                            var v = c[h];
                            r && v.listener === r || r && v.listener && v.listener.dom7proxy && v.listener.dom7proxy === r ? (u.removeEventListener(d, v.proxyListener, n), c.splice(h, 1)) : r || (u.removeEventListener(d, v.proxyListener, n), c.splice(h, 1))
                        }
                }
            return this
        },
        trigger: function() {
            for (var e = l(), t = arguments.length, a = new Array(t), i = 0; i < t; i++) a[i] = arguments[i];
            for (var s = a[0].split(" "), r = a[1], n = 0; n < s.length; n += 1)
                for (var o = s[n], d = 0; d < this.length; d += 1) {
                    var p = this[d];
                    if (e.CustomEvent) {
                        var u = new e.CustomEvent(o, {
                            detail: r,
                            bubbles: !0,
                            cancelable: !0
                        });
                        p.dom7EventData = a.filter(function(e, t) {
                            return t > 0
                        }), p.dispatchEvent(u), p.dom7EventData = [], delete p.dom7EventData
                    }
                }
            return this
        },
        transitionEnd: function(e) {
            var t = this;
            return e && t.on("transitionend", function a(i) {
                i.target === this && (e.call(this, i), t.off("transitionend", a))
            }), this
        },
        outerWidth: function(e) {
            if (this.length > 0) {
                if (e) {
                    var t = this.styles();
                    return this[0].offsetWidth + parseFloat(t.getPropertyValue("margin-right")) + parseFloat(t.getPropertyValue("margin-left"))
                }
                return this[0].offsetWidth
            }
            return null
        },
        outerHeight: function(e) {
            if (this.length > 0) {
                if (e) {
                    var t = this.styles();
                    return this[0].offsetHeight + parseFloat(t.getPropertyValue("margin-top")) + parseFloat(t.getPropertyValue("margin-bottom"))
                }
                return this[0].offsetHeight
            }
            return null
        },
        styles: function() {
            var e = l();
            return this[0] ? e.getComputedStyle(this[0], null) : {}
        },
        offset: function() {
            if (this.length > 0) {
                var e = l(),
                    t = r(),
                    a = this[0],
                    i = a.getBoundingClientRect(),
                    s = t.body,
                    n = a.clientTop || s.clientTop || 0,
                    o = a.clientLeft || s.clientLeft || 0,
                    d = a === e ? e.scrollY : a.scrollTop,
                    p = a === e ? e.scrollX : a.scrollLeft;
                return {
                    top: i.top + d - n,
                    left: i.left + p - o
                }
            }
            return null
        },
        css: function(e, t) {
            var a, i = l();
            if (1 === arguments.length) {
                if ("string" != typeof e) {
                    for (a = 0; a < this.length; a += 1)
                        for (var s in e) this[a].style[s] = e[s];
                    return this
                }
                if (this[0]) return i.getComputedStyle(this[0], null).getPropertyValue(e)
            }
            if (2 === arguments.length && "string" == typeof e) {
                for (a = 0; a < this.length; a += 1) this[a].style[e] = t;
                return this
            }
            return this
        },
        each: function(e) {
            return e ? (this.forEach(function(t, a) {
                e.apply(t, [t, a])
            }), this) : this
        },
        html: function(e) {
            if (void 0 === e) return this[0] ? this[0].innerHTML : null;
            for (var t = 0; t < this.length; t += 1) this[t].innerHTML = e;
            return this
        },
        text: function(e) {
            if (void 0 === e) return this[0] ? this[0].textContent.trim() : null;
            for (var t = 0; t < this.length; t += 1) this[t].textContent = e;
            return this
        },
        is: function(e) {
            var t, a, i = l(),
                s = r(),
                n = this[0];
            if (!n || void 0 === e) return !1;
            if ("string" == typeof e) {
                if (n.matches) return n.matches(e);
                if (n.webkitMatchesSelector) return n.webkitMatchesSelector(e);
                if (n.msMatchesSelector) return n.msMatchesSelector(e);
                for (t = m(e), a = 0; a < t.length; a += 1)
                    if (t[a] === n) return !0;
                return !1
            }
            if (e === s) return n === s;
            if (e === i) return n === i;
            if (e.nodeType || e instanceof h) {
                for (t = e.nodeType ? [e] : e, a = 0; a < t.length; a += 1)
                    if (t[a] === n) return !0;
                return !1
            }
            return !1
        },
        index: function() {
            var e, t = this[0];
            if (t) {
                for (e = 0; null !== (t = t.previousSibling);) 1 === t.nodeType && (e += 1);
                return e
            }
        },
        eq: function(e) {
            if (void 0 === e) return this;
            var t = this.length;
            if (e > t - 1) return m([]);
            if (e < 0) {
                var a = t + e;
                return m(a < 0 ? [] : [this[a]])
            }
            return m([this[e]])
        },
        append: function() {
            for (var e, t = r(), a = 0; a < arguments.length; a += 1) {
                e = a < 0 || arguments.length <= a ? void 0 : arguments[a];
                for (var i = 0; i < this.length; i += 1)
                    if ("string" == typeof e) {
                        var s = t.createElement("div");
                        for (s.innerHTML = e; s.firstChild;) this[i].appendChild(s.firstChild)
                    } else if (e instanceof h)
                    for (var n = 0; n < e.length; n += 1) this[i].appendChild(e[n]);
                else this[i].appendChild(e)
            }
            return this
        },
        prepend: function(e) {
            var t, a, i = r();
            for (t = 0; t < this.length; t += 1)
                if ("string" == typeof e) {
                    var s = i.createElement("div");
                    for (s.innerHTML = e, a = s.childNodes.length - 1; a >= 0; a -= 1) this[t].insertBefore(s.childNodes[a], this[t].childNodes[0])
                } else if (e instanceof h)
                for (a = 0; a < e.length; a += 1) this[t].insertBefore(e[a], this[t].childNodes[0]);
            else this[t].insertBefore(e, this[t].childNodes[0]);
            return this
        },
        next: function(e) {
            return this.length > 0 ? e ? this[0].nextElementSibling && m(this[0].nextElementSibling).is(e) ? m([this[0].nextElementSibling]) : m([]) : this[0].nextElementSibling ? m([this[0].nextElementSibling]) : m([]) : m([])
        },
        nextAll: function(e) {
            var t = [],
                a = this[0];
            if (!a) return m([]);
            for (; a.nextElementSibling;) {
                var i = a.nextElementSibling;
                e ? m(i).is(e) && t.push(i) : t.push(i), a = i
            }
            return m(t)
        },
        prev: function(e) {
            if (this.length > 0) {
                var t = this[0];
                return e ? t.previousElementSibling && m(t.previousElementSibling).is(e) ? m([t.previousElementSibling]) : m([]) : t.previousElementSibling ? m([t.previousElementSibling]) : m([])
            }
            return m([])
        },
        prevAll: function(e) {
            var t = [],
                a = this[0];
            if (!a) return m([]);
            for (; a.previousElementSibling;) {
                var i = a.previousElementSibling;
                e ? m(i).is(e) && t.push(i) : t.push(i), a = i
            }
            return m(t)
        },
        parent: function(e) {
            for (var t = [], a = 0; a < this.length; a += 1) null !== this[a].parentNode && (e ? m(this[a].parentNode).is(e) && t.push(this[a].parentNode) : t.push(this[a].parentNode));
            return m(t)
        },
        parents: function(e) {
            for (var t = [], a = 0; a < this.length; a += 1)
                for (var i = this[a].parentNode; i;) e ? m(i).is(e) && t.push(i) : t.push(i), i = i.parentNode;
            return m(t)
        },
        closest: function(e) {
            var t = this;
            return void 0 === e ? m([]) : (t.is(e) || (t = t.parents(e).eq(0)), t)
        },
        find: function(e) {
            for (var t = [], a = 0; a < this.length; a += 1) {
                try {
                    var i = this[a].querySelectorAll(e)
                } catch (t) {
                    console.log(e)
                }
                for (var s = 0; s < i.length; s += 1) t.push(i[s])
            }
            return m(t)
        },
        children: function(e) {
            for (var t = [], a = 0; a < this.length; a += 1)
                for (var i = this[a].children, s = 0; s < i.length; s += 1) e && !m(i[s]).is(e) || t.push(i[s]);
            return m(t)
        },
        filter: function(e) {
            return m(f(this, e))
        },
        remove: function() {
            for (var e = 0; e < this.length; e += 1) this[e].parentNode && this[e].parentNode.removeChild(this[e]);
            return this
        }
    };

    function E(e, t) {
        return void 0 === t && (t = 0), setTimeout(e, t)
    }

    function x() {
        return Date.now()
    }

    function T(e, t) {
        void 0 === t && (t = "x");
        var a, i, s, r = l(),
            n = function(e) {
                var t, a = l();
                return a.getComputedStyle && (t = a.getComputedStyle(e, null)), !t && e.currentStyle && (t = e.currentStyle), t || (t = e.style), t
            }(e);
        return r.WebKitCSSMatrix ? ((i = n.transform || n.webkitTransform).split(",").length > 6 && (i = i.split(", ").map(function(e) {
            return e.replace(",", ".")
        }).join(", ")), s = new r.WebKitCSSMatrix("none" === i ? "" : i)) : a = (s = n.MozTransform || n.OTransform || n.MsTransform || n.msTransform || n.transform || n.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,")).toString().split(","), "x" === t && (i = r.WebKitCSSMatrix ? s.m41 : 16 === a.length ? parseFloat(a[12]) : parseFloat(a[4])), "y" === t && (i = r.WebKitCSSMatrix ? s.m42 : 16 === a.length ? parseFloat(a[13]) : parseFloat(a[5])), i || 0
    }

    function C(e) {
        return "object" == typeof e && null !== e && e.constructor && "Object" === Object.prototype.toString.call(e).slice(8, -1)
    }

    function S(e) {
        return "undefined" != typeof window && void 0 !== window.HTMLElement ? e instanceof HTMLElement : e && (1 === e.nodeType || 11 === e.nodeType)
    }

    function M() {
        for (var e = Object(arguments.length <= 0 ? void 0 : arguments[0]), t = ["__proto__", "constructor", "prototype"], a = 1; a < arguments.length; a += 1) {
            var i = a < 0 || arguments.length <= a ? void 0 : arguments[a];
            if (null != i && !S(i))
                for (var s = Object.keys(Object(i)).filter(function(e) {
                        return t.indexOf(e) < 0
                    }), r = 0, n = s.length; r < n; r += 1) {
                    var l = s[r],
                        o = Object.getOwnPropertyDescriptor(i, l);
                    void 0 !== o && o.enumerable && (C(e[l]) && C(i[l]) ? i[l].__swiper__ ? e[l] = i[l] : M(e[l], i[l]) : !C(e[l]) && C(i[l]) ? (e[l] = {}, i[l].__swiper__ ? e[l] = i[l] : M(e[l], i[l])) : e[l] = i[l])
                }
        }
        return e
    }

    function z(e, t) {
        Object.keys(t).forEach(function(a) {
            C(t[a]) && Object.keys(t[a]).forEach(function(i) {
                "function" == typeof t[a][i] && (t[a][i] = t[a][i].bind(e))
            }), e[a] = t[a]
        })
    }

    function P(e) {
        return void 0 === e && (e = ""), "." + e.trim().replace(/([\.:\/])/g, "\\$1").replace(/ /g, ".")
    }

    function k(e, t, a, i) {
        var s = r();
        return a && Object.keys(i).forEach(function(a) {
            if (!t[a] && !0 === t.auto) {
                var r = s.createElement("div");
                r.className = i[a], e.append(r), t[a] = r
            }
        }), t
    }

    function $() {
        return g || (g = function() {
            var e = l(),
                t = r();
            return {
                touch: !!("ontouchstart" in e || e.DocumentTouch && t instanceof e.DocumentTouch),
                pointerEvents: !!e.PointerEvent && "maxTouchPoints" in e.navigator && e.navigator.maxTouchPoints >= 0,
                observer: "MutationObserver" in e || "WebkitMutationObserver" in e,
                passiveListener: function() {
                    var t = !1;
                    try {
                        var a = Object.defineProperty({}, "passive", {
                            get: function() {
                                t = !0
                            }
                        });
                        e.addEventListener("testPassiveListener", null, a)
                    } catch (e) {}
                    return t
                }(),
                gestures: "ongesturestart" in e
            }
        }()), g
    }

    function L(e) {
        return void 0 === e && (e = {}), b || (b = function(e) {
            var t = (void 0 === e ? {} : e).userAgent,
                a = $(),
                i = l(),
                s = i.navigator.platform,
                r = t || i.navigator.userAgent,
                n = {
                    ios: !1,
                    android: !1
                },
                o = i.screen.width,
                d = i.screen.height,
                p = r.match(/(Android);?[\s\/]+([\d.]+)?/),
                u = r.match(/(iPad).*OS\s([\d_]+)/),
                c = r.match(/(iPod)(.*OS\s([\d_]+))?/),
                h = !u && r.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
                v = "Win32" === s,
                f = "MacIntel" === s;
            return !u && f && a.touch && ["1024x1366", "1366x1024", "834x1194", "1194x834", "834x1112", "1112x834", "768x1024", "1024x768", "820x1180", "1180x820", "810x1080", "1080x810"].indexOf(o + "x" + d) >= 0 && ((u = r.match(/(Version)\/([\d.]+)/)) || (u = [0, 1, "13_0_0"]), f = !1), p && !v && (n.os = "android", n.android = !0), (u || h || c) && (n.os = "ios", n.ios = !0), n
        }(e)), b
    }

    function I() {
        return w || (w = function() {
            var e, t = l();
            return {
                isEdge: !!t.navigator.userAgent.match(/Edge/g),
                isSafari: (e = t.navigator.userAgent.toLowerCase(), e.indexOf("safari") >= 0 && e.indexOf("chrome") < 0 && e.indexOf("android") < 0),
                isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(t.navigator.userAgent)
            }
        }()), w
    }
    Object.keys(y).forEach(function(e) {
        Object.defineProperty(m.fn, e, {
            value: y[e],
            writable: !0
        })
    });
    var O = {
            name: "resize",
            create: function() {
                var e = this;
                M(e, {
                    resize: {
                        observer: null,
                        createObserver: function() {
                            e && !e.destroyed && e.initialized && (e.resize.observer = new ResizeObserver(function(t) {
                                var a = e.width,
                                    i = e.height,
                                    s = a,
                                    r = i;
                                t.forEach(function(t) {
                                    var a = t.contentBoxSize,
                                        i = t.contentRect,
                                        n = t.target;
                                    n && n !== e.el || (s = i ? i.width : (a[0] || a).inlineSize, r = i ? i.height : (a[0] || a).blockSize)
                                }), s === a && r === i || e.resize.resizeHandler()
                            }), e.resize.observer.observe(e.el))
                        },
                        removeObserver: function() {
                            e.resize.observer && e.resize.observer.unobserve && e.el && (e.resize.observer.unobserve(e.el), e.resize.observer = null)
                        },
                        resizeHandler: function() {
                            e && !e.destroyed && e.initialized && (e.emit("beforeResize"), e.emit("resize"))
                        },
                        orientationChangeHandler: function() {
                            e && !e.destroyed && e.initialized && e.emit("orientationchange")
                        }
                    }
                })
            },
            on: {
                init: function(e) {
                    var t = l();
                    e.params.resizeObserver && void 0 !== l().ResizeObserver ? e.resize.createObserver() : (t.addEventListener("resize", e.resize.resizeHandler), t.addEventListener("orientationchange", e.resize.orientationChangeHandler))
                },
                destroy: function(e) {
                    var t = l();
                    e.resize.removeObserver(), t.removeEventListener("resize", e.resize.resizeHandler), t.removeEventListener("orientationchange", e.resize.orientationChangeHandler)
                }
            }
        },
        A = {
            attach: function(e, t) {
                void 0 === t && (t = {});
                var a = l(),
                    i = this,
                    s = new(a.MutationObserver || a.WebkitMutationObserver)(function(e) {
                        if (1 !== e.length) {
                            var t = function() {
                                i.emit("observerUpdate", e[0])
                            };
                            a.requestAnimationFrame ? a.requestAnimationFrame(t) : a.setTimeout(t, 0)
                        } else i.emit("observerUpdate", e[0])
                    });
                s.observe(e, {
                    attributes: void 0 === t.attributes || t.attributes,
                    childList: void 0 === t.childList || t.childList,
                    characterData: void 0 === t.characterData || t.characterData
                }), i.observer.observers.push(s)
            },
            init: function() {
                var e = this;
                if (e.support.observer && e.params.observer) {
                    if (e.params.observeParents)
                        for (var t = e.$el.parents(), a = 0; a < t.length; a += 1) e.observer.attach(t[a]);
                    e.observer.attach(e.$el[0], {
                        childList: e.params.observeSlideChildren
                    }), e.observer.attach(e.$wrapperEl[0], {
                        attributes: !1
                    })
                }
            },
            destroy: function() {
                this.observer.observers.forEach(function(e) {
                    e.disconnect()
                }), this.observer.observers = []
            }
        },
        D = {
            name: "observer",
            params: {
                observer: !1,
                observeParents: !1,
                observeSlideChildren: !1
            },
            create: function() {
                z(this, {
                    observer: t({}, A, {
                        observers: []
                    })
                })
            },
            on: {
                init: function(e) {
                    e.observer.init()
                },
                destroy: function(e) {
                    e.observer.destroy()
                }
            }
        };

    function N(e) {
        var t = this,
            a = r(),
            i = l(),
            s = t.touchEventsData,
            n = t.params,
            o = t.touches;
        if (t.enabled && (!t.animating || !n.preventInteractionOnTransition)) {
            var d = e;
            d.originalEvent && (d = d.originalEvent);
            var p = m(d.target);
            if (("wrapper" !== n.touchEventsTarget || p.closest(t.wrapperEl).length) && (s.isTouchEvent = "touchstart" === d.type, (s.isTouchEvent || !("which" in d) || 3 !== d.which) && !(!s.isTouchEvent && "button" in d && d.button > 0 || s.isTouched && s.isMoved))) {
                !!n.noSwipingClass && "" !== n.noSwipingClass && d.target && d.target.shadowRoot && e.path && e.path[0] && (p = m(e.path[0]));
                var u = n.noSwipingSelector ? n.noSwipingSelector : "." + n.noSwipingClass,
                    c = !(!d.target || !d.target.shadowRoot);
                if (n.noSwiping && (c ? function(e, t) {
                        return void 0 === t && (t = this),
                            function t(a) {
                                return a && a !== r() && a !== l() ? (a.assignedSlot && (a = a.assignedSlot), a.closest(e) || t(a.getRootNode().host)) : null
                            }(t)
                    }(u, d.target) : p.closest(u)[0])) t.allowClick = !0;
                else if (!n.swipeHandler || p.closest(n.swipeHandler)[0]) {
                    o.currentX = "touchstart" === d.type ? d.targetTouches[0].pageX : d.pageX, o.currentY = "touchstart" === d.type ? d.targetTouches[0].pageY : d.pageY;
                    var h = o.currentX,
                        v = o.currentY,
                        f = n.edgeSwipeDetection || n.iOSEdgeSwipeDetection,
                        g = n.edgeSwipeThreshold || n.iOSEdgeSwipeThreshold;
                    if (f && (h <= g || h >= i.innerWidth - g)) {
                        if ("prevent" !== f) return;
                        e.preventDefault()
                    }
                    if (M(s, {
                            isTouched: !0,
                            isMoved: !1,
                            allowTouchCallbacks: !0,
                            isScrolling: void 0,
                            startMoving: void 0
                        }), o.startX = h, o.startY = v, s.touchStartTime = x(), t.allowClick = !0, t.updateSize(), t.swipeDirection = void 0, n.threshold > 0 && (s.allowThresholdMove = !1), "touchstart" !== d.type) {
                        var b = !0;
                        p.is(s.focusableElements) && (b = !1), a.activeElement && m(a.activeElement).is(s.focusableElements) && a.activeElement !== p[0] && a.activeElement.blur();
                        var w = b && t.allowTouchMove && n.touchStartPreventDefault;
                        !n.touchStartForcePreventDefault && !w || p[0].isContentEditable || d.preventDefault()
                    }
                    t.emit("touchStart", d)
                }
            }
        }
    }

    function G(e) {
        var t = r(),
            a = this,
            i = a.touchEventsData,
            s = a.params,
            n = a.touches,
            l = a.rtlTranslate;
        if (a.enabled) {
            var o = e;
            if (o.originalEvent && (o = o.originalEvent), i.isTouched) {
                if (!i.isTouchEvent || "touchmove" === o.type) {
                    var d = "touchmove" === o.type && o.targetTouches && (o.targetTouches[0] || o.changedTouches[0]),
                        p = "touchmove" === o.type ? d.pageX : o.pageX,
                        u = "touchmove" === o.type ? d.pageY : o.pageY;
                    if (o.preventedByNestedSwiper) return n.startX = p, void(n.startY = u);
                    if (!a.allowTouchMove) return a.allowClick = !1, void(i.isTouched && (M(n, {
                        startX: p,
                        startY: u,
                        currentX: p,
                        currentY: u
                    }), i.touchStartTime = x()));
                    if (i.isTouchEvent && s.touchReleaseOnEdges && !s.loop)
                        if (a.isVertical()) {
                            if (u < n.startY && a.translate <= a.maxTranslate() || u > n.startY && a.translate >= a.minTranslate()) return i.isTouched = !1, void(i.isMoved = !1)
                        } else if (p < n.startX && a.translate <= a.maxTranslate() || p > n.startX && a.translate >= a.minTranslate()) return;
                    if (i.isTouchEvent && t.activeElement && o.target === t.activeElement && m(o.target).is(i.focusableElements)) return i.isMoved = !0, void(a.allowClick = !1);
                    if (i.allowTouchCallbacks && a.emit("touchMove", o), !(o.targetTouches && o.targetTouches.length > 1)) {
                        n.currentX = p, n.currentY = u;
                        var c = n.currentX - n.startX,
                            h = n.currentY - n.startY;
                        if (!(a.params.threshold && Math.sqrt(Math.pow(c, 2) + Math.pow(h, 2)) < a.params.threshold)) {
                            var v;
                            if (void 0 === i.isScrolling) a.isHorizontal() && n.currentY === n.startY || a.isVertical() && n.currentX === n.startX ? i.isScrolling = !1 : c * c + h * h >= 25 && (v = 180 * Math.atan2(Math.abs(h), Math.abs(c)) / Math.PI, i.isScrolling = a.isHorizontal() ? v > s.touchAngle : 90 - v > s.touchAngle);
                            if (i.isScrolling && a.emit("touchMoveOpposite", o), void 0 === i.startMoving && (n.currentX === n.startX && n.currentY === n.startY || (i.startMoving = !0)), i.isScrolling) i.isTouched = !1;
                            else if (i.startMoving) {
                                a.allowClick = !1, !s.cssMode && o.cancelable && o.preventDefault(), s.touchMoveStopPropagation && !s.nested && o.stopPropagation(), i.isMoved || (s.loop && a.loopFix(), i.startTranslate = a.getTranslate(), a.setTransition(0), a.animating && a.$wrapperEl.trigger("webkitTransitionEnd transitionend"), i.allowMomentumBounce = !1, !s.grabCursor || !0 !== a.allowSlideNext && !0 !== a.allowSlidePrev || a.setGrabCursor(!0), a.emit("sliderFirstMove", o)), a.emit("sliderMove", o), i.isMoved = !0;
                                var f = a.isHorizontal() ? c : h;
                                n.diff = f, f *= s.touchRatio, l && (f = -f), a.swipeDirection = f > 0 ? "prev" : "next", i.currentTranslate = f + i.startTranslate;
                                var g = !0,
                                    b = s.resistanceRatio;
                                if (s.touchReleaseOnEdges && (b = 0), f > 0 && i.currentTranslate > a.minTranslate() ? (g = !1, s.resistance && (i.currentTranslate = a.minTranslate() - 1 + Math.pow(-a.minTranslate() + i.startTranslate + f, b))) : f < 0 && i.currentTranslate < a.maxTranslate() && (g = !1, s.resistance && (i.currentTranslate = a.maxTranslate() + 1 - Math.pow(a.maxTranslate() - i.startTranslate - f, b))), g && (o.preventedByNestedSwiper = !0), !a.allowSlideNext && "next" === a.swipeDirection && i.currentTranslate < i.startTranslate && (i.currentTranslate = i.startTranslate), !a.allowSlidePrev && "prev" === a.swipeDirection && i.currentTranslate > i.startTranslate && (i.currentTranslate = i.startTranslate), a.allowSlidePrev || a.allowSlideNext || (i.currentTranslate = i.startTranslate), s.threshold > 0) {
                                    if (!(Math.abs(f) > s.threshold || i.allowThresholdMove)) return void(i.currentTranslate = i.startTranslate);
                                    if (!i.allowThresholdMove) return i.allowThresholdMove = !0, n.startX = n.currentX, n.startY = n.currentY, i.currentTranslate = i.startTranslate, void(n.diff = a.isHorizontal() ? n.currentX - n.startX : n.currentY - n.startY)
                                }
                                s.followFinger && !s.cssMode && ((s.freeMode || s.watchSlidesProgress || s.watchSlidesVisibility) && (a.updateActiveIndex(), a.updateSlidesClasses()), s.freeMode && (0 === i.velocities.length && i.velocities.push({
                                    position: n[a.isHorizontal() ? "startX" : "startY"],
                                    time: i.touchStartTime
                                }), i.velocities.push({
                                    position: n[a.isHorizontal() ? "currentX" : "currentY"],
                                    time: x()
                                })), a.updateProgress(i.currentTranslate), a.setTranslate(i.currentTranslate))
                            }
                        }
                    }
                }
            } else i.startMoving && i.isScrolling && a.emit("touchMoveOpposite", o)
        }
    }

    function B(e) {
        var t = this,
            a = t.touchEventsData,
            i = t.params,
            s = t.touches,
            r = t.rtlTranslate,
            n = t.$wrapperEl,
            l = t.slidesGrid,
            o = t.snapGrid;
        if (t.enabled) {
            var d = e;
            if (d.originalEvent && (d = d.originalEvent), a.allowTouchCallbacks && t.emit("touchEnd", d), a.allowTouchCallbacks = !1, !a.isTouched) return a.isMoved && i.grabCursor && t.setGrabCursor(!1), a.isMoved = !1, void(a.startMoving = !1);
            i.grabCursor && a.isMoved && a.isTouched && (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) && t.setGrabCursor(!1);
            var p, u = x(),
                c = u - a.touchStartTime;
            if (t.allowClick && (t.updateClickedSlide(d), t.emit("tap click", d), c < 300 && u - a.lastClickTime < 300 && t.emit("doubleTap doubleClick", d)), a.lastClickTime = x(), E(function() {
                    t.destroyed || (t.allowClick = !0)
                }), !a.isTouched || !a.isMoved || !t.swipeDirection || 0 === s.diff || a.currentTranslate === a.startTranslate) return a.isTouched = !1, a.isMoved = !1, void(a.startMoving = !1);
            if (a.isTouched = !1, a.isMoved = !1, a.startMoving = !1, p = i.followFinger ? r ? t.translate : -t.translate : -a.currentTranslate, !i.cssMode)
                if (i.freeMode) {
                    if (p < -t.minTranslate()) return void t.slideTo(t.activeIndex);
                    if (p > -t.maxTranslate()) return void(t.slides.length < o.length ? t.slideTo(o.length - 1) : t.slideTo(t.slides.length - 1));
                    if (i.freeModeMomentum) {
                        if (a.velocities.length > 1) {
                            var h = a.velocities.pop(),
                                v = a.velocities.pop(),
                                f = h.position - v.position,
                                m = h.time - v.time;
                            t.velocity = f / m, t.velocity /= 2, Math.abs(t.velocity) < i.freeModeMinimumVelocity && (t.velocity = 0), (m > 150 || x() - h.time > 300) && (t.velocity = 0)
                        } else t.velocity = 0;
                        t.velocity *= i.freeModeMomentumVelocityRatio, a.velocities.length = 0;
                        var g = 1e3 * i.freeModeMomentumRatio,
                            b = t.velocity * g,
                            w = t.translate + b;
                        r && (w = -w);
                        var y, T, C = !1,
                            S = 20 * Math.abs(t.velocity) * i.freeModeMomentumBounceRatio;
                        if (w < t.maxTranslate()) i.freeModeMomentumBounce ? (w + t.maxTranslate() < -S && (w = t.maxTranslate() - S), y = t.maxTranslate(), C = !0, a.allowMomentumBounce = !0) : w = t.maxTranslate(), i.loop && i.centeredSlides && (T = !0);
                        else if (w > t.minTranslate()) i.freeModeMomentumBounce ? (w - t.minTranslate() > S && (w = t.minTranslate() + S), y = t.minTranslate(), C = !0, a.allowMomentumBounce = !0) : w = t.minTranslate(), i.loop && i.centeredSlides && (T = !0);
                        else if (i.freeModeSticky) {
                            for (var M, z = 0; z < o.length; z += 1)
                                if (o[z] > -w) {
                                    M = z;
                                    break
                                }
                            w = -(w = Math.abs(o[M] - w) < Math.abs(o[M - 1] - w) || "next" === t.swipeDirection ? o[M] : o[M - 1])
                        }
                        if (T && t.once("transitionEnd", function() {
                                t.loopFix()
                            }), 0 !== t.velocity) {
                            if (g = r ? Math.abs((-w - t.translate) / t.velocity) : Math.abs((w - t.translate) / t.velocity), i.freeModeSticky) {
                                var P = Math.abs((r ? -w : w) - t.translate),
                                    k = t.slidesSizesGrid[t.activeIndex];
                                g = P < k ? i.speed : P < 2 * k ? 1.5 * i.speed : 2.5 * i.speed
                            }
                        } else if (i.freeModeSticky) return void t.slideToClosest();
                        i.freeModeMomentumBounce && C ? (t.updateProgress(y), t.setTransition(g), t.setTranslate(w), t.transitionStart(!0, t.swipeDirection), t.animating = !0, n.transitionEnd(function() {
                            t && !t.destroyed && a.allowMomentumBounce && (t.emit("momentumBounce"), t.setTransition(i.speed), setTimeout(function() {
                                t.setTranslate(y), n.transitionEnd(function() {
                                    t && !t.destroyed && t.transitionEnd()
                                })
                            }, 0))
                        })) : t.velocity ? (t.updateProgress(w), t.setTransition(g), t.setTranslate(w), t.transitionStart(!0, t.swipeDirection), t.animating || (t.animating = !0, n.transitionEnd(function() {
                            t && !t.destroyed && t.transitionEnd()
                        }))) : (t.emit("_freeModeNoMomentumRelease"), t.updateProgress(w)), t.updateActiveIndex(), t.updateSlidesClasses()
                    } else {
                        if (i.freeModeSticky) return void t.slideToClosest();
                        i.freeMode && t.emit("_freeModeNoMomentumRelease")
                    }(!i.freeModeMomentum || c >= i.longSwipesMs) && (t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses())
                } else {
                    for (var $ = 0, L = t.slidesSizesGrid[0], I = 0; I < l.length; I += I < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup) {
                        var O = I < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
                        void 0 !== l[I + O] ? p >= l[I] && p < l[I + O] && ($ = I, L = l[I + O] - l[I]) : p >= l[I] && ($ = I, L = l[l.length - 1] - l[l.length - 2])
                    }
                    var A = (p - l[$]) / L,
                        D = $ < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
                    if (c > i.longSwipesMs) {
                        if (!i.longSwipes) return void t.slideTo(t.activeIndex);
                        "next" === t.swipeDirection && (A >= i.longSwipesRatio ? t.slideTo($ + D) : t.slideTo($)), "prev" === t.swipeDirection && (A > 1 - i.longSwipesRatio ? t.slideTo($ + D) : t.slideTo($))
                    } else {
                        if (!i.shortSwipes) return void t.slideTo(t.activeIndex);
                        t.navigation && (d.target === t.navigation.nextEl || d.target === t.navigation.prevEl) ? d.target === t.navigation.nextEl ? t.slideTo($ + D) : t.slideTo($) : ("next" === t.swipeDirection && t.slideTo($ + D), "prev" === t.swipeDirection && t.slideTo($))
                    }
                }
        }
    }

    function H() {
        var e = this,
            t = e.params,
            a = e.el;
        if (!a || 0 !== a.offsetWidth) {
            t.breakpoints && e.setBreakpoint();
            var i = e.allowSlideNext,
                s = e.allowSlidePrev,
                r = e.snapGrid;
            e.allowSlideNext = !0, e.allowSlidePrev = !0, e.updateSize(), e.updateSlides(), e.updateSlidesClasses(), ("auto" === t.slidesPerView || t.slidesPerView > 1) && e.isEnd && !e.isBeginning && !e.params.centeredSlides ? e.slideTo(e.slides.length - 1, 0, !1, !0) : e.slideTo(e.activeIndex, 0, !1, !0), e.autoplay && e.autoplay.running && e.autoplay.paused && e.autoplay.run(), e.allowSlidePrev = s, e.allowSlideNext = i, e.params.watchOverflow && r !== e.snapGrid && e.checkOverflow()
        }
    }

    function R(e) {
        var t = this;
        t.enabled && (t.allowClick || (t.params.preventClicks && e.preventDefault(), t.params.preventClicksPropagation && t.animating && (e.stopPropagation(), e.stopImmediatePropagation())))
    }

    function X() {
        var e = this,
            t = e.wrapperEl,
            a = e.rtlTranslate;
        if (e.enabled) {
            e.previousTranslate = e.translate, e.isHorizontal() ? e.translate = a ? t.scrollWidth - t.offsetWidth - t.scrollLeft : -t.scrollLeft : e.translate = -t.scrollTop, -0 === e.translate && (e.translate = 0), e.updateActiveIndex(), e.updateSlidesClasses();
            var i = e.maxTranslate() - e.minTranslate();
            (0 === i ? 0 : (e.translate - e.minTranslate()) / i) !== e.progress && e.updateProgress(a ? -e.translate : e.translate), e.emit("setTranslate", e.translate, !1)
        }
    }
    var Y = !1;

    function V() {}
    var W = {
            init: !0,
            direction: "horizontal",
            touchEventsTarget: "container",
            initialSlide: 0,
            speed: 300,
            cssMode: !1,
            updateOnWindowResize: !0,
            resizeObserver: !1,
            nested: !1,
            createElements: !1,
            enabled: !0,
            focusableElements: "input, select, option, textarea, button, video, label",
            width: null,
            height: null,
            preventInteractionOnTransition: !1,
            userAgent: null,
            url: null,
            edgeSwipeDetection: !1,
            edgeSwipeThreshold: 20,
            freeMode: !1,
            freeModeMomentum: !0,
            freeModeMomentumRatio: 1,
            freeModeMomentumBounce: !0,
            freeModeMomentumBounceRatio: 1,
            freeModeMomentumVelocityRatio: 1,
            freeModeSticky: !1,
            freeModeMinimumVelocity: .02,
            autoHeight: !1,
            setWrapperSize: !1,
            virtualTranslate: !1,
            effect: "slide",
            breakpoints: void 0,
            breakpointsBase: "window",
            spaceBetween: 0,
            slidesPerView: 1,
            slidesPerColumn: 1,
            slidesPerColumnFill: "column",
            slidesPerGroup: 1,
            slidesPerGroupSkip: 0,
            centeredSlides: !1,
            centeredSlidesBounds: !1,
            slidesOffsetBefore: 0,
            slidesOffsetAfter: 0,
            normalizeSlideIndex: !0,
            centerInsufficientSlides: !1,
            watchOverflow: !1,
            roundLengths: !1,
            touchRatio: 1,
            touchAngle: 45,
            simulateTouch: !0,
            shortSwipes: !0,
            longSwipes: !0,
            longSwipesRatio: .5,
            longSwipesMs: 300,
            followFinger: !0,
            allowTouchMove: !0,
            threshold: 0,
            touchMoveStopPropagation: !1,
            touchStartPreventDefault: !0,
            touchStartForcePreventDefault: !1,
            touchReleaseOnEdges: !1,
            uniqueNavElements: !0,
            resistance: !0,
            resistanceRatio: .85,
            watchSlidesProgress: !1,
            watchSlidesVisibility: !1,
            grabCursor: !1,
            preventClicks: !0,
            preventClicksPropagation: !0,
            slideToClickedSlide: !1,
            preloadImages: !0,
            updateOnImagesReady: !0,
            loop: !1,
            loopAdditionalSlides: 0,
            loopedSlides: null,
            loopFillGroupWithBlank: !1,
            loopPreventsSlide: !0,
            allowSlidePrev: !0,
            allowSlideNext: !0,
            swipeHandler: null,
            noSwiping: !0,
            noSwipingClass: "swiper-no-swiping",
            noSwipingSelector: null,
            passiveListeners: !0,
            containerModifierClass: "swiper-container-",
            slideClass: "swiper-slide",
            slideBlankClass: "swiper-slide-invisible-blank",
            slideActiveClass: "swiper-slide-active",
            slideDuplicateActiveClass: "swiper-slide-duplicate-active",
            slideVisibleClass: "swiper-slide-visible",
            slideDuplicateClass: "swiper-slide-duplicate",
            slideNextClass: "swiper-slide-next",
            slideDuplicateNextClass: "swiper-slide-duplicate-next",
            slidePrevClass: "swiper-slide-prev",
            slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
            wrapperClass: "swiper-wrapper",
            runCallbacksOnInit: !0,
            _emitClasses: !1
        },
        F = {
            modular: {
                useParams: function(e) {
                    var t = this;
                    t.modules && Object.keys(t.modules).forEach(function(a) {
                        var i = t.modules[a];
                        i.params && M(e, i.params)
                    })
                },
                useModules: function(e) {
                    void 0 === e && (e = {});
                    var t = this;
                    t.modules && Object.keys(t.modules).forEach(function(a) {
                        var i = t.modules[a],
                            s = e[a] || {};
                        i.on && t.on && Object.keys(i.on).forEach(function(e) {
                            t.on(e, i.on[e])
                        }), i.create && i.create.bind(t)(s)
                    })
                }
            },
            eventsEmitter: {
                on: function(e, t, a) {
                    var i = this;
                    if ("function" != typeof t) return i;
                    var s = a ? "unshift" : "push";
                    return e.split(" ").forEach(function(e) {
                        i.eventsListeners[e] || (i.eventsListeners[e] = []), i.eventsListeners[e][s](t)
                    }), i
                },
                once: function(e, t, a) {
                    var i = this;
                    if ("function" != typeof t) return i;

                    function s() {
                        i.off(e, s), s.__emitterProxy && delete s.__emitterProxy;
                        for (var a = arguments.length, r = new Array(a), n = 0; n < a; n++) r[n] = arguments[n];
                        t.apply(i, r)
                    }
                    return s.__emitterProxy = t, i.on(e, s, a)
                },
                onAny: function(e, t) {
                    var a = this;
                    if ("function" != typeof e) return a;
                    var i = t ? "unshift" : "push";
                    return a.eventsAnyListeners.indexOf(e) < 0 && a.eventsAnyListeners[i](e), a
                },
                offAny: function(e) {
                    var t = this;
                    if (!t.eventsAnyListeners) return t;
                    var a = t.eventsAnyListeners.indexOf(e);
                    return a >= 0 && t.eventsAnyListeners.splice(a, 1), t
                },
                off: function(e, t) {
                    var a = this;
                    return a.eventsListeners ? (e.split(" ").forEach(function(e) {
                        void 0 === t ? a.eventsListeners[e] = [] : a.eventsListeners[e] && a.eventsListeners[e].forEach(function(i, s) {
                            (i === t || i.__emitterProxy && i.__emitterProxy === t) && a.eventsListeners[e].splice(s, 1)
                        })
                    }), a) : a
                },
                emit: function() {
                    var e, t, a, i = this;
                    if (!i.eventsListeners) return i;
                    for (var s = arguments.length, r = new Array(s), n = 0; n < s; n++) r[n] = arguments[n];
                    "string" == typeof r[0] || Array.isArray(r[0]) ? (e = r[0], t = r.slice(1, r.length), a = i) : (e = r[0].events, t = r[0].data, a = r[0].context || i), t.unshift(a);
                    var l = Array.isArray(e) ? e : e.split(" ");
                    return l.forEach(function(e) {
                        i.eventsAnyListeners && i.eventsAnyListeners.length && i.eventsAnyListeners.forEach(function(i) {
                            i.apply(a, [e].concat(t))
                        }), i.eventsListeners && i.eventsListeners[e] && i.eventsListeners[e].forEach(function(e) {
                            e.apply(a, t)
                        })
                    }), i
                }
            },
            update: {
                updateSize: function() {
                    var e, t, a = this,
                        i = a.$el;
                    e = void 0 !== a.params.width && null !== a.params.width ? a.params.width : i[0].clientWidth, t = void 0 !== a.params.height && null !== a.params.height ? a.params.height : i[0].clientHeight, 0 === e && a.isHorizontal() || 0 === t && a.isVertical() || (e = e - parseInt(i.css("padding-left") || 0, 10) - parseInt(i.css("padding-right") || 0, 10), t = t - parseInt(i.css("padding-top") || 0, 10) - parseInt(i.css("padding-bottom") || 0, 10), Number.isNaN(e) && (e = 0), Number.isNaN(t) && (t = 0), M(a, {
                        width: e,
                        height: t,
                        size: a.isHorizontal() ? e : t
                    }))
                },
                updateSlides: function() {
                    var e = this;

                    function t(t) {
                        return e.isHorizontal() ? t : {
                            width: "height",
                            "margin-top": "margin-left",
                            "margin-bottom ": "margin-right",
                            "margin-left": "margin-top",
                            "margin-right": "margin-bottom",
                            "padding-left": "padding-top",
                            "padding-right": "padding-bottom",
                            marginRight: "marginBottom"
                        }[t]
                    }

                    function a(e, a) {
                        return parseFloat(e.getPropertyValue(t(a)) || 0)
                    }
                    var i = e.params,
                        s = e.$wrapperEl,
                        r = e.size,
                        n = e.rtlTranslate,
                        l = e.wrongRTL,
                        o = e.virtual && i.virtual.enabled,
                        d = o ? e.virtual.slides.length : e.slides.length,
                        p = s.children("." + e.params.slideClass),
                        u = o ? e.virtual.slides.length : p.length,
                        c = [],
                        h = [],
                        v = [],
                        f = i.slidesOffsetBefore;
                    "function" == typeof f && (f = i.slidesOffsetBefore.call(e));
                    var m = i.slidesOffsetAfter;
                    "function" == typeof m && (m = i.slidesOffsetAfter.call(e));
                    var g = e.snapGrid.length,
                        b = e.slidesGrid.length,
                        w = i.spaceBetween,
                        y = -f,
                        E = 0,
                        x = 0;
                    if (void 0 !== r) {
                        var T, C;
                        "string" == typeof w && w.indexOf("%") >= 0 && (w = parseFloat(w.replace("%", "")) / 100 * r), e.virtualSize = -w, n ? p.css({
                            marginLeft: "",
                            marginBottom: "",
                            marginTop: ""
                        }) : p.css({
                            marginRight: "",
                            marginBottom: "",
                            marginTop: ""
                        }), i.slidesPerColumn > 1 && (T = Math.floor(u / i.slidesPerColumn) === u / e.params.slidesPerColumn ? u : Math.ceil(u / i.slidesPerColumn) * i.slidesPerColumn, "auto" !== i.slidesPerView && "row" === i.slidesPerColumnFill && (T = Math.max(T, i.slidesPerView * i.slidesPerColumn)));
                        for (var S, z, P, k = i.slidesPerColumn, $ = T / k, L = Math.floor(u / i.slidesPerColumn), I = 0; I < u; I += 1) {
                            C = 0;
                            var O = p.eq(I);
                            if (i.slidesPerColumn > 1) {
                                var A = void 0,
                                    D = void 0,
                                    N = void 0;
                                if ("row" === i.slidesPerColumnFill && i.slidesPerGroup > 1) {
                                    var G = Math.floor(I / (i.slidesPerGroup * i.slidesPerColumn)),
                                        B = I - i.slidesPerColumn * i.slidesPerGroup * G,
                                        H = 0 === G ? i.slidesPerGroup : Math.min(Math.ceil((u - G * k * i.slidesPerGroup) / k), i.slidesPerGroup);
                                    A = (D = B - (N = Math.floor(B / H)) * H + G * i.slidesPerGroup) + N * T / k, O.css({
                                        "-webkit-box-ordinal-group": A,
                                        "-moz-box-ordinal-group": A,
                                        "-ms-flex-order": A,
                                        "-webkit-order": A,
                                        order: A
                                    })
                                } else "column" === i.slidesPerColumnFill ? (N = I - (D = Math.floor(I / k)) * k, (D > L || D === L && N === k - 1) && (N += 1) >= k && (N = 0, D += 1)) : D = I - (N = Math.floor(I / $)) * $;
                                O.css(t("margin-top"), 0 !== N ? i.spaceBetween && i.spaceBetween + "px" : "")
                            }
                            if ("none" !== O.css("display")) {
                                if ("auto" === i.slidesPerView) {
                                    var R = getComputedStyle(O[0]),
                                        X = O[0].style.transform,
                                        Y = O[0].style.webkitTransform;
                                    if (X && (O[0].style.transform = "none"), Y && (O[0].style.webkitTransform = "none"), i.roundLengths) C = e.isHorizontal() ? O.outerWidth(!0) : O.outerHeight(!0);
                                    else {
                                        var V = a(R, "width"),
                                            W = a(R, "padding-left"),
                                            F = a(R, "padding-right"),
                                            _ = a(R, "margin-left"),
                                            q = a(R, "margin-right"),
                                            j = R.getPropertyValue("box-sizing");
                                        if (j && "border-box" === j) C = V + _ + q;
                                        else {
                                            var U = O[0],
                                                K = U.clientWidth;
                                            C = V + W + F + _ + q + (U.offsetWidth - K)
                                        }
                                    }
                                    X && (O[0].style.transform = X), Y && (O[0].style.webkitTransform = Y), i.roundLengths && (C = Math.floor(C))
                                } else C = (r - (i.slidesPerView - 1) * w) / i.slidesPerView, i.roundLengths && (C = Math.floor(C)), p[I] && (p[I].style[t("width")] = C + "px");
                                p[I] && (p[I].swiperSlideSize = C), v.push(C), i.centeredSlides ? (y = y + C / 2 + E / 2 + w, 0 === E && 0 !== I && (y = y - r / 2 - w), 0 === I && (y = y - r / 2 - w), Math.abs(y) < .001 && (y = 0), i.roundLengths && (y = Math.floor(y)), x % i.slidesPerGroup == 0 && c.push(y), h.push(y)) : (i.roundLengths && (y = Math.floor(y)), (x - Math.min(e.params.slidesPerGroupSkip, x)) % e.params.slidesPerGroup == 0 && c.push(y), h.push(y), y = y + C + w), e.virtualSize += C + w, E = C, x += 1
                            }
                        }
                        if (e.virtualSize = Math.max(e.virtualSize, r) + m, n && l && ("slide" === i.effect || "coverflow" === i.effect) && s.css({
                                width: e.virtualSize + i.spaceBetween + "px"
                            }), i.setWrapperSize) s.css(((z = {})[t("width")] = e.virtualSize + i.spaceBetween + "px", z));
                        if (i.slidesPerColumn > 1)
                            if (e.virtualSize = (C + i.spaceBetween) * T, e.virtualSize = Math.ceil(e.virtualSize / i.slidesPerColumn) - i.spaceBetween, s.css(((P = {})[t("width")] = e.virtualSize + i.spaceBetween + "px", P)), i.centeredSlides) {
                                S = [];
                                for (var Z = 0; Z < c.length; Z += 1) {
                                    var J = c[Z];
                                    i.roundLengths && (J = Math.floor(J)), c[Z] < e.virtualSize + c[0] && S.push(J)
                                }
                                c = S
                            }
                        if (!i.centeredSlides) {
                            S = [];
                            for (var Q = 0; Q < c.length; Q += 1) {
                                var ee = c[Q];
                                i.roundLengths && (ee = Math.floor(ee)), c[Q] <= e.virtualSize - r && S.push(ee)
                            }
                            c = S, Math.floor(e.virtualSize - r) - Math.floor(c[c.length - 1]) > 1 && c.push(e.virtualSize - r)
                        }
                        if (0 === c.length && (c = [0]), 0 !== i.spaceBetween) {
                            var te, ae = e.isHorizontal() && n ? "marginLeft" : t("marginRight");
                            p.filter(function(e, t) {
                                return !i.cssMode || t !== p.length - 1
                            }).css(((te = {})[ae] = w + "px", te))
                        }
                        if (i.centeredSlides && i.centeredSlidesBounds) {
                            var ie = 0;
                            v.forEach(function(e) {
                                ie += e + (i.spaceBetween ? i.spaceBetween : 0)
                            });
                            var se = (ie -= i.spaceBetween) - r;
                            c = c.map(function(e) {
                                return e < 0 ? -f : e > se ? se + m : e
                            })
                        }
                        if (i.centerInsufficientSlides) {
                            var re = 0;
                            if (v.forEach(function(e) {
                                    re += e + (i.spaceBetween ? i.spaceBetween : 0)
                                }), (re -= i.spaceBetween) < r) {
                                var ne = (r - re) / 2;
                                c.forEach(function(e, t) {
                                    c[t] = e - ne
                                }), h.forEach(function(e, t) {
                                    h[t] = e + ne
                                })
                            }
                        }
                        M(e, {
                            slides: p,
                            snapGrid: c,
                            slidesGrid: h,
                            slidesSizesGrid: v
                        }), u !== d && e.emit("slidesLengthChange"), c.length !== g && (e.params.watchOverflow && e.checkOverflow(), e.emit("snapGridLengthChange")), h.length !== b && e.emit("slidesGridLengthChange"), (i.watchSlidesProgress || i.watchSlidesVisibility) && e.updateSlidesOffset()
                    }
                },
                updateAutoHeight: function(e) {
                    var t, a = this,
                        i = [],
                        s = a.virtual && a.params.virtual.enabled,
                        r = 0;
                    "number" == typeof e ? a.setTransition(e) : !0 === e && a.setTransition(a.params.speed);
                    var n = function(e) {
                        return s ? a.slides.filter(function(t) {
                            return parseInt(t.getAttribute("data-swiper-slide-index"), 10) === e
                        })[0] : a.slides.eq(e)[0]
                    };
                    if ("auto" !== a.params.slidesPerView && a.params.slidesPerView > 1)
                        if (a.params.centeredSlides) a.visibleSlides.each(function(e) {
                            i.push(e)
                        });
                        else
                            for (t = 0; t < Math.ceil(a.params.slidesPerView); t += 1) {
                                var l = a.activeIndex + t;
                                if (l > a.slides.length && !s) break;
                                i.push(n(l))
                            } else i.push(n(a.activeIndex));
                    for (t = 0; t < i.length; t += 1)
                        if (void 0 !== i[t]) {
                            var o = i[t].offsetHeight;
                            r = o > r ? o : r
                        }
                    r && a.$wrapperEl.css("height", r + "px")
                },
                updateSlidesOffset: function() {
                    for (var e = this.slides, t = 0; t < e.length; t += 1) e[t].swiperSlideOffset = this.isHorizontal() ? e[t].offsetLeft : e[t].offsetTop
                },
                updateSlidesProgress: function(e) {
                    void 0 === e && (e = this && this.translate || 0);
                    var t = this,
                        a = t.params,
                        i = t.slides,
                        s = t.rtlTranslate;
                    if (0 !== i.length) {
                        void 0 === i[0].swiperSlideOffset && t.updateSlidesOffset();
                        var r = -e;
                        s && (r = e), i.removeClass(a.slideVisibleClass), t.visibleSlidesIndexes = [], t.visibleSlides = [];
                        for (var n = 0; n < i.length; n += 1) {
                            var l = i[n],
                                o = (r + (a.centeredSlides ? t.minTranslate() : 0) - l.swiperSlideOffset) / (l.swiperSlideSize + a.spaceBetween);
                            if (a.watchSlidesVisibility || a.centeredSlides && a.autoHeight) {
                                var d = -(r - l.swiperSlideOffset),
                                    p = d + t.slidesSizesGrid[n];
                                (d >= 0 && d < t.size - 1 || p > 1 && p <= t.size || d <= 0 && p >= t.size) && (t.visibleSlides.push(l), t.visibleSlidesIndexes.push(n), i.eq(n).addClass(a.slideVisibleClass))
                            }
                            l.progress = s ? -o : o
                        }
                        t.visibleSlides = m(t.visibleSlides)
                    }
                },
                updateProgress: function(e) {
                    var t = this;
                    if (void 0 === e) {
                        var a = t.rtlTranslate ? -1 : 1;
                        e = t && t.translate && t.translate * a || 0
                    }
                    var i = t.params,
                        s = t.maxTranslate() - t.minTranslate(),
                        r = t.progress,
                        n = t.isBeginning,
                        l = t.isEnd,
                        o = n,
                        d = l;
                    0 === s ? (r = 0, n = !0, l = !0) : (n = (r = (e - t.minTranslate()) / s) <= 0, l = r >= 1), M(t, {
                        progress: r,
                        isBeginning: n,
                        isEnd: l
                    }), (i.watchSlidesProgress || i.watchSlidesVisibility || i.centeredSlides && i.autoHeight) && t.updateSlidesProgress(e), n && !o && t.emit("reachBeginning toEdge"), l && !d && t.emit("reachEnd toEdge"), (o && !n || d && !l) && t.emit("fromEdge"), t.emit("progress", r)
                },
                updateSlidesClasses: function() {
                    var e, t = this,
                        a = t.slides,
                        i = t.params,
                        s = t.$wrapperEl,
                        r = t.activeIndex,
                        n = t.realIndex,
                        l = t.virtual && i.virtual.enabled;
                    a.removeClass(i.slideActiveClass + " " + i.slideNextClass + " " + i.slidePrevClass + " " + i.slideDuplicateActiveClass + " " + i.slideDuplicateNextClass + " " + i.slideDuplicatePrevClass), (e = l ? t.$wrapperEl.find("." + i.slideClass + '[data-swiper-slide-index="' + r + '"]') : a.eq(r)).addClass(i.slideActiveClass), i.loop && (e.hasClass(i.slideDuplicateClass) ? s.children("." + i.slideClass + ":not(." + i.slideDuplicateClass + ')[data-swiper-slide-index="' + n + '"]').addClass(i.slideDuplicateActiveClass) : s.children("." + i.slideClass + "." + i.slideDuplicateClass + '[data-swiper-slide-index="' + n + '"]').addClass(i.slideDuplicateActiveClass));
                    var o = e.nextAll("." + i.slideClass).eq(0).addClass(i.slideNextClass);
                    i.loop && 0 === o.length && (o = a.eq(0)).addClass(i.slideNextClass);
                    var d = e.prevAll("." + i.slideClass).eq(0).addClass(i.slidePrevClass);
                    i.loop && 0 === d.length && (d = a.eq(-1)).addClass(i.slidePrevClass), i.loop && (o.hasClass(i.slideDuplicateClass) ? s.children("." + i.slideClass + ":not(." + i.slideDuplicateClass + ')[data-swiper-slide-index="' + o.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicateNextClass) : s.children("." + i.slideClass + "." + i.slideDuplicateClass + '[data-swiper-slide-index="' + o.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicateNextClass), d.hasClass(i.slideDuplicateClass) ? s.children("." + i.slideClass + ":not(." + i.slideDuplicateClass + ')[data-swiper-slide-index="' + d.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicatePrevClass) : s.children("." + i.slideClass + "." + i.slideDuplicateClass + '[data-swiper-slide-index="' + d.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicatePrevClass)), t.emitSlidesClasses()
                },
                updateActiveIndex: function(e) {
                    var t, a = this,
                        i = a.rtlTranslate ? a.translate : -a.translate,
                        s = a.slidesGrid,
                        r = a.snapGrid,
                        n = a.params,
                        l = a.activeIndex,
                        o = a.realIndex,
                        d = a.snapIndex,
                        p = e;
                    if (void 0 === p) {
                        for (var u = 0; u < s.length; u += 1) void 0 !== s[u + 1] ? i >= s[u] && i < s[u + 1] - (s[u + 1] - s[u]) / 2 ? p = u : i >= s[u] && i < s[u + 1] && (p = u + 1) : i >= s[u] && (p = u);
                        n.normalizeSlideIndex && (p < 0 || void 0 === p) && (p = 0)
                    }
                    if (r.indexOf(i) >= 0) t = r.indexOf(i);
                    else {
                        var c = Math.min(n.slidesPerGroupSkip, p);
                        t = c + Math.floor((p - c) / n.slidesPerGroup)
                    }
                    if (t >= r.length && (t = r.length - 1), p !== l) {
                        var h = parseInt(a.slides.eq(p).attr("data-swiper-slide-index") || p, 10);
                        M(a, {
                            snapIndex: t,
                            realIndex: h,
                            previousIndex: l,
                            activeIndex: p
                        }), a.emit("activeIndexChange"), a.emit("snapIndexChange"), o !== h && a.emit("realIndexChange"), (a.initialized || a.params.runCallbacksOnInit) && a.emit("slideChange")
                    } else t !== d && (a.snapIndex = t, a.emit("snapIndexChange"))
                },
                updateClickedSlide: function(e) {
                    var t, a = this,
                        i = a.params,
                        s = m(e.target).closest("." + i.slideClass)[0],
                        r = !1;
                    if (s)
                        for (var n = 0; n < a.slides.length; n += 1)
                            if (a.slides[n] === s) {
                                r = !0, t = n;
                                break
                            }
                    if (!s || !r) return a.clickedSlide = void 0, void(a.clickedIndex = void 0);
                    a.clickedSlide = s, a.virtual && a.params.virtual.enabled ? a.clickedIndex = parseInt(m(s).attr("data-swiper-slide-index"), 10) : a.clickedIndex = t, i.slideToClickedSlide && void 0 !== a.clickedIndex && a.clickedIndex !== a.activeIndex && a.slideToClickedSlide()
                }
            },
            translate: {
                getTranslate: function(e) {
                    void 0 === e && (e = this.isHorizontal() ? "x" : "y");
                    var t = this,
                        a = t.params,
                        i = t.rtlTranslate,
                        s = t.translate,
                        r = t.$wrapperEl;
                    if (a.virtualTranslate) return i ? -s : s;
                    if (a.cssMode) return s;
                    var n = T(r[0], e);
                    return i && (n = -n), n || 0
                },
                setTranslate: function(e, t) {
                    var a = this,
                        i = a.rtlTranslate,
                        s = a.params,
                        r = a.$wrapperEl,
                        n = a.wrapperEl,
                        l = a.progress,
                        o = 0,
                        d = 0;
                    a.isHorizontal() ? o = i ? -e : e : d = e, s.roundLengths && (o = Math.floor(o), d = Math.floor(d)), s.cssMode ? n[a.isHorizontal() ? "scrollLeft" : "scrollTop"] = a.isHorizontal() ? -o : -d : s.virtualTranslate || r.transform("translate3d(" + o + "px, " + d + "px, 0px)"), a.previousTranslate = a.translate, a.translate = a.isHorizontal() ? o : d;
                    var p = a.maxTranslate() - a.minTranslate();
                    (0 === p ? 0 : (e - a.minTranslate()) / p) !== l && a.updateProgress(e), a.emit("setTranslate", a.translate, t)
                },
                minTranslate: function() {
                    return -this.snapGrid[0]
                },
                maxTranslate: function() {
                    return -this.snapGrid[this.snapGrid.length - 1]
                },
                translateTo: function(e, t, a, i, s) {
                    void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === a && (a = !0), void 0 === i && (i = !0);
                    var r = this,
                        n = r.params,
                        l = r.wrapperEl;
                    if (r.animating && n.preventInteractionOnTransition) return !1;
                    var o, d = r.minTranslate(),
                        p = r.maxTranslate();
                    if (o = i && e > d ? d : i && e < p ? p : e, r.updateProgress(o), n.cssMode) {
                        var u, c = r.isHorizontal();
                        if (0 === t) l[c ? "scrollLeft" : "scrollTop"] = -o;
                        else if (l.scrollTo) l.scrollTo(((u = {})[c ? "left" : "top"] = -o, u.behavior = "smooth", u));
                        else l[c ? "scrollLeft" : "scrollTop"] = -o;
                        return !0
                    }
                    return 0 === t ? (r.setTransition(0), r.setTranslate(o), a && (r.emit("beforeTransitionStart", t, s), r.emit("transitionEnd"))) : (r.setTransition(t), r.setTranslate(o), a && (r.emit("beforeTransitionStart", t, s), r.emit("transitionStart")), r.animating || (r.animating = !0, r.onTranslateToWrapperTransitionEnd || (r.onTranslateToWrapperTransitionEnd = function(e) {
                        r && !r.destroyed && e.target === this && (r.$wrapperEl[0].removeEventListener("transitionend", r.onTranslateToWrapperTransitionEnd), r.$wrapperEl[0].removeEventListener("webkitTransitionEnd", r.onTranslateToWrapperTransitionEnd), r.onTranslateToWrapperTransitionEnd = null, delete r.onTranslateToWrapperTransitionEnd, a && r.emit("transitionEnd"))
                    }), r.$wrapperEl[0].addEventListener("transitionend", r.onTranslateToWrapperTransitionEnd), r.$wrapperEl[0].addEventListener("webkitTransitionEnd", r.onTranslateToWrapperTransitionEnd))), !0
                }
            },
            transition: {
                setTransition: function(e, t) {
                    var a = this;
                    a.params.cssMode || a.$wrapperEl.transition(e), a.emit("setTransition", e, t)
                },
                transitionStart: function(e, t) {
                    void 0 === e && (e = !0);
                    var a = this,
                        i = a.activeIndex,
                        s = a.params,
                        r = a.previousIndex;
                    if (!s.cssMode) {
                        s.autoHeight && a.updateAutoHeight();
                        var n = t;
                        if (n || (n = i > r ? "next" : i < r ? "prev" : "reset"), a.emit("transitionStart"), e && i !== r) {
                            if ("reset" === n) return void a.emit("slideResetTransitionStart");
                            a.emit("slideChangeTransitionStart"), "next" === n ? a.emit("slideNextTransitionStart") : a.emit("slidePrevTransitionStart")
                        }
                    }
                },
                transitionEnd: function(e, t) {
                    void 0 === e && (e = !0);
                    var a = this,
                        i = a.activeIndex,
                        s = a.previousIndex,
                        r = a.params;
                    if (a.animating = !1, !r.cssMode) {
                        a.setTransition(0);
                        var n = t;
                        if (n || (n = i > s ? "next" : i < s ? "prev" : "reset"), a.emit("transitionEnd"), e && i !== s) {
                            if ("reset" === n) return void a.emit("slideResetTransitionEnd");
                            a.emit("slideChangeTransitionEnd"), "next" === n ? a.emit("slideNextTransitionEnd") : a.emit("slidePrevTransitionEnd")
                        }
                    }
                }
            },
            slide: {
                slideTo: function(e, t, a, i, s) {
                    if (void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === a && (a = !0), "number" != typeof e && "string" != typeof e) throw new Error("The 'index' argument cannot have type other than 'number' or 'string'. [" + typeof e + "] given.");
                    if ("string" == typeof e) {
                        var r = parseInt(e, 10);
                        if (!isFinite(r)) throw new Error("The passed-in 'index' (string) couldn't be converted to 'number'. [" + e + "] given.");
                        e = r
                    }
                    var n = this,
                        l = e;
                    l < 0 && (l = 0);
                    var o = n.params,
                        d = n.snapGrid,
                        p = n.slidesGrid,
                        u = n.previousIndex,
                        c = n.activeIndex,
                        h = n.rtlTranslate,
                        v = n.wrapperEl,
                        f = n.enabled;
                    if (n.animating && o.preventInteractionOnTransition || !f && !i && !s) return !1;
                    var m = Math.min(n.params.slidesPerGroupSkip, l),
                        g = m + Math.floor((l - m) / n.params.slidesPerGroup);
                    g >= d.length && (g = d.length - 1), (c || o.initialSlide || 0) === (u || 0) && a && n.emit("beforeSlideChangeStart");
                    var b, w = -d[g];
                    if (n.updateProgress(w), o.normalizeSlideIndex)
                        for (var y = 0; y < p.length; y += 1) {
                            var E = -Math.floor(100 * w),
                                x = Math.floor(100 * p[y]),
                                T = Math.floor(100 * p[y + 1]);
                            void 0 !== p[y + 1] ? E >= x && E < T - (T - x) / 2 ? l = y : E >= x && E < T && (l = y + 1) : E >= x && (l = y)
                        }
                    if (n.initialized && l !== c) {
                        if (!n.allowSlideNext && w < n.translate && w < n.minTranslate()) return !1;
                        if (!n.allowSlidePrev && w > n.translate && w > n.maxTranslate() && (c || 0) !== l) return !1
                    }
                    if (b = l > c ? "next" : l < c ? "prev" : "reset", h && -w === n.translate || !h && w === n.translate) return n.updateActiveIndex(l), o.autoHeight && n.updateAutoHeight(), n.updateSlidesClasses(), "slide" !== o.effect && n.setTranslate(w), "reset" !== b && (n.transitionStart(a, b), n.transitionEnd(a, b)), !1;
                    if (o.cssMode) {
                        var C, S = n.isHorizontal(),
                            M = -w;
                        if (h && (M = v.scrollWidth - v.offsetWidth - M), 0 === t) v[S ? "scrollLeft" : "scrollTop"] = M;
                        else if (v.scrollTo) v.scrollTo(((C = {})[S ? "left" : "top"] = M, C.behavior = "smooth", C));
                        else v[S ? "scrollLeft" : "scrollTop"] = M;
                        return !0
                    }
                    return 0 === t ? (n.setTransition(0), n.setTranslate(w), n.updateActiveIndex(l), n.updateSlidesClasses(), n.emit("beforeTransitionStart", t, i), n.transitionStart(a, b), n.transitionEnd(a, b)) : (n.setTransition(t), n.setTranslate(w), n.updateActiveIndex(l), n.updateSlidesClasses(), n.emit("beforeTransitionStart", t, i), n.transitionStart(a, b), n.animating || (n.animating = !0, n.onSlideToWrapperTransitionEnd || (n.onSlideToWrapperTransitionEnd = function(e) {
                        n && !n.destroyed && e.target === this && (n.$wrapperEl[0].removeEventListener("transitionend", n.onSlideToWrapperTransitionEnd), n.$wrapperEl[0].removeEventListener("webkitTransitionEnd", n.onSlideToWrapperTransitionEnd), n.onSlideToWrapperTransitionEnd = null, delete n.onSlideToWrapperTransitionEnd, n.transitionEnd(a, b))
                    }), n.$wrapperEl[0].addEventListener("transitionend", n.onSlideToWrapperTransitionEnd), n.$wrapperEl[0].addEventListener("webkitTransitionEnd", n.onSlideToWrapperTransitionEnd))), !0
                },
                slideToLoop: function(e, t, a, i) {
                    void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === a && (a = !0);
                    var s = this,
                        r = e;
                    return s.params.loop && (r += s.loopedSlides), s.slideTo(r, t, a, i)
                },
                slideNext: function(e, t, a) {
                    void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
                    var i = this,
                        s = i.params,
                        r = i.animating;
                    if (!i.enabled) return i;
                    var n = i.activeIndex < s.slidesPerGroupSkip ? 1 : s.slidesPerGroup;
                    if (s.loop) {
                        if (r && s.loopPreventsSlide) return !1;
                        i.loopFix(), i._clientLeft = i.$wrapperEl[0].clientLeft
                    }
                    return i.slideTo(i.activeIndex + n, e, t, a)
                },
                slidePrev: function(e, t, a) {
                    void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
                    var i = this,
                        s = i.params,
                        r = i.animating,
                        n = i.snapGrid,
                        l = i.slidesGrid,
                        o = i.rtlTranslate;
                    if (!i.enabled) return i;
                    if (s.loop) {
                        if (r && s.loopPreventsSlide) return !1;
                        i.loopFix(), i._clientLeft = i.$wrapperEl[0].clientLeft
                    }

                    function d(e) {
                        return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e)
                    }
                    var p, u = d(o ? i.translate : -i.translate),
                        c = n.map(function(e) {
                            return d(e)
                        }),
                        h = n[c.indexOf(u) - 1];
                    return void 0 === h && s.cssMode && n.forEach(function(e) {
                        !h && u >= e && (h = e)
                    }), void 0 !== h && (p = l.indexOf(h)) < 0 && (p = i.activeIndex - 1), i.slideTo(p, e, t, a)
                },
                slideReset: function(e, t, a) {
                    return void 0 === e && (e = this.params.speed), void 0 === t && (t = !0), this.slideTo(this.activeIndex, e, t, a)
                },
                slideToClosest: function(e, t, a, i) {
                    void 0 === e && (e = this.params.speed), void 0 === t && (t = !0), void 0 === i && (i = .5);
                    var s = this,
                        r = s.activeIndex,
                        n = Math.min(s.params.slidesPerGroupSkip, r),
                        l = n + Math.floor((r - n) / s.params.slidesPerGroup),
                        o = s.rtlTranslate ? s.translate : -s.translate;
                    if (o >= s.snapGrid[l]) {
                        var d = s.snapGrid[l];
                        o - d > (s.snapGrid[l + 1] - d) * i && (r += s.params.slidesPerGroup)
                    } else {
                        var p = s.snapGrid[l - 1];
                        o - p <= (s.snapGrid[l] - p) * i && (r -= s.params.slidesPerGroup)
                    }
                    return r = Math.max(r, 0), r = Math.min(r, s.slidesGrid.length - 1), s.slideTo(r, e, t, a)
                },
                slideToClickedSlide: function() {
                    var e, t = this,
                        a = t.params,
                        i = t.$wrapperEl,
                        s = "auto" === a.slidesPerView ? t.slidesPerViewDynamic() : a.slidesPerView,
                        r = t.clickedIndex;
                    if (a.loop) {
                        if (t.animating) return;
                        e = parseInt(m(t.clickedSlide).attr("data-swiper-slide-index"), 10), a.centeredSlides ? r < t.loopedSlides - s / 2 || r > t.slides.length - t.loopedSlides + s / 2 ? (t.loopFix(), r = i.children("." + a.slideClass + '[data-swiper-slide-index="' + e + '"]:not(.' + a.slideDuplicateClass + ")").eq(0).index(), E(function() {
                            t.slideTo(r)
                        })) : t.slideTo(r) : r > t.slides.length - s ? (t.loopFix(), r = i.children("." + a.slideClass + '[data-swiper-slide-index="' + e + '"]:not(.' + a.slideDuplicateClass + ")").eq(0).index(), E(function() {
                            t.slideTo(r)
                        })) : t.slideTo(r)
                    } else t.slideTo(r)
                }
            },
            loop: {
                loopCreate: function() {
                    var e = this,
                        t = r(),
                        a = e.params,
                        i = e.$wrapperEl;
                    i.children("." + a.slideClass + "." + a.slideDuplicateClass).remove();
                    var s = i.children("." + a.slideClass);
                    if (a.loopFillGroupWithBlank) {
                        var n = a.slidesPerGroup - s.length % a.slidesPerGroup;
                        if (n !== a.slidesPerGroup) {
                            for (var l = 0; l < n; l += 1) {
                                var o = m(t.createElement("div")).addClass(a.slideClass + " " + a.slideBlankClass);
                                i.append(o)
                            }
                            s = i.children("." + a.slideClass)
                        }
                    }
                    "auto" !== a.slidesPerView || a.loopedSlides || (a.loopedSlides = s.length), e.loopedSlides = Math.ceil(parseFloat(a.loopedSlides || a.slidesPerView, 10)), e.loopedSlides += a.loopAdditionalSlides, e.loopedSlides > s.length && (e.loopedSlides = s.length);
                    var d = [],
                        p = [];
                    s.each(function(t, a) {
                        var i = m(t);
                        a < e.loopedSlides && p.push(t), a < s.length && a >= s.length - e.loopedSlides && d.push(t), i.attr("data-swiper-slide-index", a)
                    });
                    for (var u = 0; u < p.length; u += 1) i.append(m(p[u].cloneNode(!0)).addClass(a.slideDuplicateClass));
                    for (var c = d.length - 1; c >= 0; c -= 1) i.prepend(m(d[c].cloneNode(!0)).addClass(a.slideDuplicateClass))
                },
                loopFix: function() {
                    var e = this;
                    e.emit("beforeLoopFix");
                    var t, a = e.activeIndex,
                        i = e.slides,
                        s = e.loopedSlides,
                        r = e.allowSlidePrev,
                        n = e.allowSlideNext,
                        l = e.snapGrid,
                        o = e.rtlTranslate;
                    e.allowSlidePrev = !0, e.allowSlideNext = !0;
                    var d = -l[a] - e.getTranslate();
                    if (a < s) t = i.length - 3 * s + a, t += s, e.slideTo(t, 0, !1, !0) && 0 !== d && e.setTranslate((o ? -e.translate : e.translate) - d);
                    else if (a >= i.length - s) {
                        t = -i.length + a + s, t += s, e.slideTo(t, 0, !1, !0) && 0 !== d && e.setTranslate((o ? -e.translate : e.translate) - d)
                    }
                    e.allowSlidePrev = r, e.allowSlideNext = n, e.emit("loopFix")
                },
                loopDestroy: function() {
                    var e = this,
                        t = e.$wrapperEl,
                        a = e.params,
                        i = e.slides;
                    t.children("." + a.slideClass + "." + a.slideDuplicateClass + ",." + a.slideClass + "." + a.slideBlankClass).remove(), i.removeAttr("data-swiper-slide-index")
                }
            },
            grabCursor: {
                setGrabCursor: function(e) {
                    var t = this;
                    if (!(t.support.touch || !t.params.simulateTouch || t.params.watchOverflow && t.isLocked || t.params.cssMode)) {
                        var a = t.el;
                        a.style.cursor = "move", a.style.cursor = e ? "-webkit-grabbing" : "-webkit-grab", a.style.cursor = e ? "-moz-grabbin" : "-moz-grab", a.style.cursor = e ? "grabbing" : "grab"
                    }
                },
                unsetGrabCursor: function() {
                    var e = this;
                    e.support.touch || e.params.watchOverflow && e.isLocked || e.params.cssMode || (e.el.style.cursor = "")
                }
            },
            manipulation: {
                appendSlide: function(e) {
                    var t = this,
                        a = t.$wrapperEl,
                        i = t.params;
                    if (i.loop && t.loopDestroy(), "object" == typeof e && "length" in e)
                        for (var s = 0; s < e.length; s += 1) e[s] && a.append(e[s]);
                    else a.append(e);
                    i.loop && t.loopCreate(), i.observer && t.support.observer || t.update()
                },
                prependSlide: function(e) {
                    var t = this,
                        a = t.params,
                        i = t.$wrapperEl,
                        s = t.activeIndex;
                    a.loop && t.loopDestroy();
                    var r = s + 1;
                    if ("object" == typeof e && "length" in e) {
                        for (var n = 0; n < e.length; n += 1) e[n] && i.prepend(e[n]);
                        r = s + e.length
                    } else i.prepend(e);
                    a.loop && t.loopCreate(), a.observer && t.support.observer || t.update(), t.slideTo(r, 0, !1)
                },
                addSlide: function(e, t) {
                    var a = this,
                        i = a.$wrapperEl,
                        s = a.params,
                        r = a.activeIndex;
                    s.loop && (r -= a.loopedSlides, a.loopDestroy(), a.slides = i.children("." + s.slideClass));
                    var n = a.slides.length;
                    if (e <= 0) a.prependSlide(t);
                    else if (e >= n) a.appendSlide(t);
                    else {
                        for (var l = r > e ? r + 1 : r, o = [], d = n - 1; d >= e; d -= 1) {
                            var p = a.slides.eq(d);
                            p.remove(), o.unshift(p)
                        }
                        if ("object" == typeof t && "length" in t) {
                            for (var u = 0; u < t.length; u += 1) t[u] && i.append(t[u]);
                            l = r > e ? r + t.length : r
                        } else i.append(t);
                        for (var c = 0; c < o.length; c += 1) i.append(o[c]);
                        s.loop && a.loopCreate(), s.observer && a.support.observer || a.update(), s.loop ? a.slideTo(l + a.loopedSlides, 0, !1) : a.slideTo(l, 0, !1)
                    }
                },
                removeSlide: function(e) {
                    var t = this,
                        a = t.params,
                        i = t.$wrapperEl,
                        s = t.activeIndex;
                    a.loop && (s -= t.loopedSlides, t.loopDestroy(), t.slides = i.children("." + a.slideClass));
                    var r, n = s;
                    if ("object" == typeof e && "length" in e) {
                        for (var l = 0; l < e.length; l += 1) r = e[l], t.slides[r] && t.slides.eq(r).remove(), r < n && (n -= 1);
                        n = Math.max(n, 0)
                    } else r = e, t.slides[r] && t.slides.eq(r).remove(), r < n && (n -= 1), n = Math.max(n, 0);
                    a.loop && t.loopCreate(), a.observer && t.support.observer || t.update(), a.loop ? t.slideTo(n + t.loopedSlides, 0, !1) : t.slideTo(n, 0, !1)
                },
                removeAllSlides: function() {
                    for (var e = [], t = 0; t < this.slides.length; t += 1) e.push(t);
                    this.removeSlide(e)
                }
            },
            events: {
                attachEvents: function() {
                    var e = this,
                        t = r(),
                        a = e.params,
                        i = e.touchEvents,
                        s = e.el,
                        n = e.wrapperEl,
                        l = e.device,
                        o = e.support;
                    e.onTouchStart = N.bind(e), e.onTouchMove = G.bind(e), e.onTouchEnd = B.bind(e), a.cssMode && (e.onScroll = X.bind(e)), e.onClick = R.bind(e);
                    var d = !!a.nested;
                    if (!o.touch && o.pointerEvents) s.addEventListener(i.start, e.onTouchStart, !1), t.addEventListener(i.move, e.onTouchMove, d), t.addEventListener(i.end, e.onTouchEnd, !1);
                    else {
                        if (o.touch) {
                            var p = !("touchstart" !== i.start || !o.passiveListener || !a.passiveListeners) && {
                                passive: !0,
                                capture: !1
                            };
                            s.addEventListener(i.start, e.onTouchStart, p), s.addEventListener(i.move, e.onTouchMove, o.passiveListener ? {
                                passive: !1,
                                capture: d
                            } : d), s.addEventListener(i.end, e.onTouchEnd, p), i.cancel && s.addEventListener(i.cancel, e.onTouchEnd, p), Y || (t.addEventListener("touchstart", V), Y = !0)
                        }(a.simulateTouch && !l.ios && !l.android || a.simulateTouch && !o.touch && l.ios) && (s.addEventListener("mousedown", e.onTouchStart, !1), t.addEventListener("mousemove", e.onTouchMove, d), t.addEventListener("mouseup", e.onTouchEnd, !1))
                    }(a.preventClicks || a.preventClicksPropagation) && s.addEventListener("click", e.onClick, !0), a.cssMode && n.addEventListener("scroll", e.onScroll), a.updateOnWindowResize ? e.on(l.ios || l.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", H, !0) : e.on("observerUpdate", H, !0)
                },
                detachEvents: function() {
                    var e = this,
                        t = r(),
                        a = e.params,
                        i = e.touchEvents,
                        s = e.el,
                        n = e.wrapperEl,
                        l = e.device,
                        o = e.support,
                        d = !!a.nested;
                    if (!o.touch && o.pointerEvents) s.removeEventListener(i.start, e.onTouchStart, !1), t.removeEventListener(i.move, e.onTouchMove, d), t.removeEventListener(i.end, e.onTouchEnd, !1);
                    else {
                        if (o.touch) {
                            var p = !("onTouchStart" !== i.start || !o.passiveListener || !a.passiveListeners) && {
                                passive: !0,
                                capture: !1
                            };
                            s.removeEventListener(i.start, e.onTouchStart, p), s.removeEventListener(i.move, e.onTouchMove, d), s.removeEventListener(i.end, e.onTouchEnd, p), i.cancel && s.removeEventListener(i.cancel, e.onTouchEnd, p)
                        }(a.simulateTouch && !l.ios && !l.android || a.simulateTouch && !o.touch && l.ios) && (s.removeEventListener("mousedown", e.onTouchStart, !1), t.removeEventListener("mousemove", e.onTouchMove, d), t.removeEventListener("mouseup", e.onTouchEnd, !1))
                    }(a.preventClicks || a.preventClicksPropagation) && s.removeEventListener("click", e.onClick, !0), a.cssMode && n.removeEventListener("scroll", e.onScroll), e.off(l.ios || l.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", H)
                }
            },
            breakpoints: {
                setBreakpoint: function() {
                    var e = this,
                        t = e.activeIndex,
                        a = e.initialized,
                        i = e.loopedSlides,
                        s = void 0 === i ? 0 : i,
                        r = e.params,
                        n = e.$el,
                        l = r.breakpoints;
                    if (l && (!l || 0 !== Object.keys(l).length)) {
                        var o = e.getBreakpoint(l, e.params.breakpointsBase, e.el);
                        if (o && e.currentBreakpoint !== o) {
                            var d = o in l ? l[o] : void 0;
                            d && ["slidesPerView", "spaceBetween", "slidesPerGroup", "slidesPerGroupSkip", "slidesPerColumn"].forEach(function(e) {
                                var t = d[e];
                                void 0 !== t && (d[e] = "slidesPerView" !== e || "AUTO" !== t && "auto" !== t ? "slidesPerView" === e ? parseFloat(t) : parseInt(t, 10) : "auto")
                            });
                            var p = d || e.originalParams,
                                u = r.slidesPerColumn > 1,
                                c = p.slidesPerColumn > 1,
                                h = r.enabled;
                            u && !c ? (n.removeClass(r.containerModifierClass + "multirow " + r.containerModifierClass + "multirow-column"), e.emitContainerClasses()) : !u && c && (n.addClass(r.containerModifierClass + "multirow"), (p.slidesPerColumnFill && "column" === p.slidesPerColumnFill || !p.slidesPerColumnFill && "column" === r.slidesPerColumnFill) && n.addClass(r.containerModifierClass + "multirow-column"), e.emitContainerClasses());
                            var v = p.direction && p.direction !== r.direction,
                                f = r.loop && (p.slidesPerView !== r.slidesPerView || v);
                            v && a && e.changeDirection(), M(e.params, p);
                            var m = e.params.enabled;
                            M(e, {
                                allowTouchMove: e.params.allowTouchMove,
                                allowSlideNext: e.params.allowSlideNext,
                                allowSlidePrev: e.params.allowSlidePrev
                            }), h && !m ? e.disable() : !h && m && e.enable(), e.currentBreakpoint = o, e.emit("_beforeBreakpoint", p), f && a && (e.loopDestroy(), e.loopCreate(), e.updateSlides(), e.slideTo(t - s + e.loopedSlides, 0, !1)), e.emit("breakpoint", p)
                        }
                    }
                },
                getBreakpoint: function(e, t, a) {
                    if (void 0 === t && (t = "window"), e && ("container" !== t || a)) {
                        var i = !1,
                            s = l(),
                            r = "window" === t ? s.innerHeight : a.clientHeight,
                            n = Object.keys(e).map(function(e) {
                                if ("string" == typeof e && 0 === e.indexOf("@")) {
                                    var t = parseFloat(e.substr(1));
                                    return {
                                        value: r * t,
                                        point: e
                                    }
                                }
                                return {
                                    value: e,
                                    point: e
                                }
                            });
                        n.sort(function(e, t) {
                            return parseInt(e.value, 10) - parseInt(t.value, 10)
                        });
                        for (var o = 0; o < n.length; o += 1) {
                            var d = n[o],
                                p = d.point,
                                u = d.value;
                            "window" === t ? s.matchMedia("(min-width: " + u + "px)").matches && (i = p) : u <= a.clientWidth && (i = p)
                        }
                        return i || "max"
                    }
                }
            },
            checkOverflow: {
                checkOverflow: function() {
                    var e = this,
                        t = e.params,
                        a = e.isLocked,
                        i = e.slides.length > 0 && t.slidesOffsetBefore + t.spaceBetween * (e.slides.length - 1) + e.slides[0].offsetWidth * e.slides.length;
                    t.slidesOffsetBefore && t.slidesOffsetAfter && i ? e.isLocked = i <= e.size : e.isLocked = 1 === e.snapGrid.length, e.allowSlideNext = !e.isLocked, e.allowSlidePrev = !e.isLocked, a !== e.isLocked && e.emit(e.isLocked ? "lock" : "unlock"), a && a !== e.isLocked && (e.isEnd = !1, e.navigation && e.navigation.update())
                }
            },
            classes: {
                addClasses: function() {
                    var e, t, a, i = this,
                        s = i.classNames,
                        r = i.params,
                        n = i.rtl,
                        l = i.$el,
                        o = i.device,
                        d = i.support,
                        p = (e = ["initialized", r.direction, {
                            "pointer-events": d.pointerEvents && !d.touch
                        }, {
                            "free-mode": r.freeMode
                        }, {
                            autoheight: r.autoHeight
                        }, {
                            rtl: n
                        }, {
                            multirow: r.slidesPerColumn > 1
                        }, {
                            "multirow-column": r.slidesPerColumn > 1 && "column" === r.slidesPerColumnFill
                        }, {
                            android: o.android
                        }, {
                            ios: o.ios
                        }, {
                            "css-mode": r.cssMode
                        }], t = r.containerModifierClass, a = [], e.forEach(function(e) {
                            "object" == typeof e ? Object.keys(e).forEach(function(i) {
                                e[i] && a.push(t + i)
                            }) : "string" == typeof e && a.push(t + e)
                        }), a);
                    s.push.apply(s, p), l.addClass([].concat(s).join(" ")), i.emitContainerClasses()
                },
                removeClasses: function() {
                    var e = this,
                        t = e.$el,
                        a = e.classNames;
                    t.removeClass(a.join(" ")), e.emitContainerClasses()
                }
            },
            images: {
                loadImage: function(e, t, a, i, s, r) {
                    var n, o = l();

                    function d() {
                        r && r()
                    }
                    m(e).parent("picture")[0] || e.complete && s ? d() : t ? ((n = new o.Image).onload = d, n.onerror = d, i && (n.sizes = i), a && (n.srcset = a), t && (n.src = t)) : d()
                },
                preloadImages: function() {
                    var e = this;

                    function t() {
                        null != e && e && !e.destroyed && (void 0 !== e.imagesLoaded && (e.imagesLoaded += 1), e.imagesLoaded === e.imagesToLoad.length && (e.params.updateOnImagesReady && e.update(), e.emit("imagesReady")))
                    }
                    e.imagesToLoad = e.$el.find("img");
                    for (var a = 0; a < e.imagesToLoad.length; a += 1) {
                        var i = e.imagesToLoad[a];
                        e.loadImage(i, i.currentSrc || i.getAttribute("src"), i.srcset || i.getAttribute("srcset"), i.sizes || i.getAttribute("sizes"), !0, t)
                    }
                }
            }
        },
        _ = {},
        q = function() {
            function t() {
                for (var e, a, i = arguments.length, s = new Array(i), r = 0; r < i; r++) s[r] = arguments[r];
                if (1 === s.length && s[0].constructor && "Object" === Object.prototype.toString.call(s[0]).slice(8, -1) ? a = s[0] : (e = s[0], a = s[1]), a || (a = {}), a = M({}, a), e && !a.el && (a.el = e), a.el && m(a.el).length > 1) {
                    var n = [];
                    return m(a.el).each(function(e) {
                        var i = M({}, a, {
                            el: e
                        });
                        n.push(new t(i))
                    }), n
                }
                var l = this;
                l.__swiper__ = !0, l.support = $(), l.device = L({
                    userAgent: a.userAgent
                }), l.browser = I(), l.eventsListeners = {}, l.eventsAnyListeners = [], void 0 === l.modules && (l.modules = {}), Object.keys(l.modules).forEach(function(e) {
                    var t = l.modules[e];
                    if (t.params) {
                        var i = Object.keys(t.params)[0],
                            s = t.params[i];
                        if ("object" != typeof s || null === s) return;
                        if (["navigation", "pagination", "scrollbar"].indexOf(i) >= 0 && !0 === a[i] && (a[i] = {
                                auto: !0
                            }), !(i in a) || !("enabled" in s)) return;
                        !0 === a[i] && (a[i] = {
                            enabled: !0
                        }), "object" != typeof a[i] || "enabled" in a[i] || (a[i].enabled = !0), a[i] || (a[i] = {
                            enabled: !1
                        })
                    }
                });
                var o, d, p = M({}, W);
                return l.useParams(p), l.params = M({}, p, _, a), l.originalParams = M({}, l.params), l.passedParams = M({}, a), l.params && l.params.on && Object.keys(l.params.on).forEach(function(e) {
                    l.on(e, l.params.on[e])
                }), l.params && l.params.onAny && l.onAny(l.params.onAny), l.$ = m, M(l, {
                    enabled: l.params.enabled,
                    el: e,
                    classNames: [],
                    slides: m(),
                    slidesGrid: [],
                    snapGrid: [],
                    slidesSizesGrid: [],
                    isHorizontal: function() {
                        return "horizontal" === l.params.direction
                    },
                    isVertical: function() {
                        return "vertical" === l.params.direction
                    },
                    activeIndex: 0,
                    realIndex: 0,
                    isBeginning: !0,
                    isEnd: !1,
                    translate: 0,
                    previousTranslate: 0,
                    progress: 0,
                    velocity: 0,
                    animating: !1,
                    allowSlideNext: l.params.allowSlideNext,
                    allowSlidePrev: l.params.allowSlidePrev,
                    touchEvents: (o = ["touchstart", "touchmove", "touchend", "touchcancel"], d = ["mousedown", "mousemove", "mouseup"], l.support.pointerEvents && (d = ["pointerdown", "pointermove", "pointerup"]), l.touchEventsTouch = {
                        start: o[0],
                        move: o[1],
                        end: o[2],
                        cancel: o[3]
                    }, l.touchEventsDesktop = {
                        start: d[0],
                        move: d[1],
                        end: d[2]
                    }, l.support.touch || !l.params.simulateTouch ? l.touchEventsTouch : l.touchEventsDesktop),
                    touchEventsData: {
                        isTouched: void 0,
                        isMoved: void 0,
                        allowTouchCallbacks: void 0,
                        touchStartTime: void 0,
                        isScrolling: void 0,
                        currentTranslate: void 0,
                        startTranslate: void 0,
                        allowThresholdMove: void 0,
                        focusableElements: l.params.focusableElements,
                        lastClickTime: x(),
                        clickTimeout: void 0,
                        velocities: [],
                        allowMomentumBounce: void 0,
                        isTouchEvent: void 0,
                        startMoving: void 0
                    },
                    allowClick: !0,
                    allowTouchMove: l.params.allowTouchMove,
                    touches: {
                        startX: 0,
                        startY: 0,
                        currentX: 0,
                        currentY: 0,
                        diff: 0
                    },
                    imagesToLoad: [],
                    imagesLoaded: 0
                }), l.useModules(), l.emit("_swiper"), l.params.init && l.init(), l
            }
            var a, i, s, n = t.prototype;
            return n.enable = function() {
                var e = this;
                e.enabled || (e.enabled = !0, e.params.grabCursor && e.setGrabCursor(), e.emit("enable"))
            }, n.disable = function() {
                var e = this;
                e.enabled && (e.enabled = !1, e.params.grabCursor && e.unsetGrabCursor(), e.emit("disable"))
            }, n.setProgress = function(e, t) {
                var a = this;
                e = Math.min(Math.max(e, 0), 1);
                var i = a.minTranslate(),
                    s = (a.maxTranslate() - i) * e + i;
                a.translateTo(s, void 0 === t ? 0 : t), a.updateActiveIndex(), a.updateSlidesClasses()
            }, n.emitContainerClasses = function() {
                var e = this;
                if (e.params._emitClasses && e.el) {
                    var t = e.el.className.split(" ").filter(function(t) {
                        return 0 === t.indexOf("swiper-container") || 0 === t.indexOf(e.params.containerModifierClass)
                    });
                    e.emit("_containerClasses", t.join(" "))
                }
            }, n.getSlideClasses = function(e) {
                var t = this;
                return e.className.split(" ").filter(function(e) {
                    return 0 === e.indexOf("swiper-slide") || 0 === e.indexOf(t.params.slideClass)
                }).join(" ")
            }, n.emitSlidesClasses = function() {
                var e = this;
                if (e.params._emitClasses && e.el) {
                    var t = [];
                    e.slides.each(function(a) {
                        var i = e.getSlideClasses(a);
                        t.push({
                            slideEl: a,
                            classNames: i
                        }), e.emit("_slideClass", a, i)
                    }), e.emit("_slideClasses", t)
                }
            }, n.slidesPerViewDynamic = function() {
                var e = this,
                    t = e.params,
                    a = e.slides,
                    i = e.slidesGrid,
                    s = e.size,
                    r = e.activeIndex,
                    n = 1;
                if (t.centeredSlides) {
                    for (var l, o = a[r].swiperSlideSize, d = r + 1; d < a.length; d += 1) a[d] && !l && (n += 1, (o += a[d].swiperSlideSize) > s && (l = !0));
                    for (var p = r - 1; p >= 0; p -= 1) a[p] && !l && (n += 1, (o += a[p].swiperSlideSize) > s && (l = !0))
                } else
                    for (var u = r + 1; u < a.length; u += 1) i[u] - i[r] < s && (n += 1);
                return n
            }, n.update = function() {
                var e = this;
                if (e && !e.destroyed) {
                    var t = e.snapGrid,
                        a = e.params;
                    a.breakpoints && e.setBreakpoint(), e.updateSize(), e.updateSlides(), e.updateProgress(), e.updateSlidesClasses(), e.params.freeMode ? (i(), e.params.autoHeight && e.updateAutoHeight()) : (("auto" === e.params.slidesPerView || e.params.slidesPerView > 1) && e.isEnd && !e.params.centeredSlides ? e.slideTo(e.slides.length - 1, 0, !1, !0) : e.slideTo(e.activeIndex, 0, !1, !0)) || i(), a.watchOverflow && t !== e.snapGrid && e.checkOverflow(), e.emit("update")
                }

                function i() {
                    var t = e.rtlTranslate ? -1 * e.translate : e.translate,
                        a = Math.min(Math.max(t, e.maxTranslate()), e.minTranslate());
                    e.setTranslate(a), e.updateActiveIndex(), e.updateSlidesClasses()
                }
            }, n.changeDirection = function(e, t) {
                void 0 === t && (t = !0);
                var a = this,
                    i = a.params.direction;
                return e || (e = "horizontal" === i ? "vertical" : "horizontal"), e === i || "horizontal" !== e && "vertical" !== e || (a.$el.removeClass("" + a.params.containerModifierClass + i).addClass("" + a.params.containerModifierClass + e), a.emitContainerClasses(), a.params.direction = e, a.slides.each(function(t) {
                    "vertical" === e ? t.style.width = "" : t.style.height = ""
                }), a.emit("changeDirection"), t && a.update()), a
            }, n.mount = function(e) {
                var t = this;
                if (t.mounted) return !0;
                var a = m(e || t.params.el);
                if (!(e = a[0])) return !1;
                e.swiper = t;
                var i = function() {
                        return "." + (t.params.wrapperClass || "").trim().split(" ").join(".")
                    },
                    s = function() {
                        if (e && e.shadowRoot && e.shadowRoot.querySelector) {
                            var t = m(e.shadowRoot.querySelector(i()));
                            return t.children = function(e) {
                                return a.children(e)
                            }, t
                        }
                        return a.children(i())
                    }();
                if (0 === s.length && t.params.createElements) {
                    var n = r().createElement("div");
                    s = m(n), n.className = t.params.wrapperClass, a.append(n), a.children("." + t.params.slideClass).each(function(e) {
                        s.append(e)
                    })
                }
                return M(t, {
                    $el: a,
                    el: e,
                    $wrapperEl: s,
                    wrapperEl: s[0],
                    mounted: !0,
                    rtl: "rtl" === e.dir.toLowerCase() || "rtl" === a.css("direction"),
                    rtlTranslate: "horizontal" === t.params.direction && ("rtl" === e.dir.toLowerCase() || "rtl" === a.css("direction")),
                    wrongRTL: "-webkit-box" === s.css("display")
                }), !0
            }, n.init = function(e) {
                var t = this;
                return t.initialized || !1 === t.mount(e) || (t.emit("beforeInit"), t.params.breakpoints && t.setBreakpoint(), t.addClasses(), t.params.loop && t.loopCreate(), t.updateSize(), t.updateSlides(), t.params.watchOverflow && t.checkOverflow(), t.params.grabCursor && t.enabled && t.setGrabCursor(), t.params.preloadImages && t.preloadImages(), t.params.loop ? t.slideTo(t.params.initialSlide + t.loopedSlides, 0, t.params.runCallbacksOnInit, !1, !0) : t.slideTo(t.params.initialSlide, 0, t.params.runCallbacksOnInit, !1, !0), t.attachEvents(), t.initialized = !0, t.emit("init"), t.emit("afterInit")), t
            }, n.destroy = function(e, t) {
                void 0 === e && (e = !0), void 0 === t && (t = !0);
                var a, i = this,
                    s = i.params,
                    r = i.$el,
                    n = i.$wrapperEl,
                    l = i.slides;
                return void 0 === i.params || i.destroyed || (i.emit("beforeDestroy"), i.initialized = !1, i.detachEvents(), s.loop && i.loopDestroy(), t && (i.removeClasses(), r.removeAttr("style"), n.removeAttr("style"), l && l.length && l.removeClass([s.slideVisibleClass, s.slideActiveClass, s.slideNextClass, s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")), i.emit("destroy"), Object.keys(i.eventsListeners).forEach(function(e) {
                    i.off(e)
                }), !1 !== e && (i.$el[0].swiper = null, a = i, Object.keys(a).forEach(function(e) {
                    try {
                        a[e] = null
                    } catch (e) {}
                    try {
                        delete a[e]
                    } catch (e) {}
                })), i.destroyed = !0), null
            }, t.extendDefaults = function(e) {
                M(_, e)
            }, t.installModule = function(e) {
                t.prototype.modules || (t.prototype.modules = {});
                var a = e.name || Object.keys(t.prototype.modules).length + "_" + x();
                t.prototype.modules[a] = e
            }, t.use = function(e) {
                return Array.isArray(e) ? (e.forEach(function(e) {
                    return t.installModule(e)
                }), t) : (t.installModule(e), t)
            }, a = t, s = [{
                key: "extendedDefaults",
                get: function() {
                    return _
                }
            }, {
                key: "defaults",
                get: function() {
                    return W
                }
            }], (i = null) && e(a.prototype, i), s && e(a, s), t
        }();
    Object.keys(F).forEach(function(e) {
        Object.keys(F[e]).forEach(function(t) {
            q.prototype[t] = F[e][t]
        })
    }), q.use([O, D]);
    var j = {
            update: function(e) {
                var t = this,
                    a = t.params,
                    i = a.slidesPerView,
                    s = a.slidesPerGroup,
                    r = a.centeredSlides,
                    n = t.params.virtual,
                    l = n.addSlidesBefore,
                    o = n.addSlidesAfter,
                    d = t.virtual,
                    p = d.from,
                    u = d.to,
                    c = d.slides,
                    h = d.slidesGrid,
                    v = d.renderSlide,
                    f = d.offset;
                t.updateActiveIndex();
                var m, g, b, w = t.activeIndex || 0;
                m = t.rtlTranslate ? "right" : t.isHorizontal() ? "left" : "top", r ? (g = Math.floor(i / 2) + s + o, b = Math.floor(i / 2) + s + l) : (g = i + (s - 1) + o, b = s + l);
                var y = Math.max((w || 0) - b, 0),
                    E = Math.min((w || 0) + g, c.length - 1),
                    x = (t.slidesGrid[y] || 0) - (t.slidesGrid[0] || 0);

                function T() {
                    t.updateSlides(), t.updateProgress(), t.updateSlidesClasses(), t.lazy && t.params.lazy.enabled && t.lazy.load()
                }
                if (M(t.virtual, {
                        from: y,
                        to: E,
                        offset: x,
                        slidesGrid: t.slidesGrid
                    }), p === y && u === E && !e) return t.slidesGrid !== h && x !== f && t.slides.css(m, x + "px"), void t.updateProgress();
                if (t.params.virtual.renderExternal) return t.params.virtual.renderExternal.call(t, {
                    offset: x,
                    from: y,
                    to: E,
                    slides: function() {
                        for (var e = [], t = y; t <= E; t += 1) e.push(c[t]);
                        return e
                    }()
                }), void(t.params.virtual.renderExternalUpdate && T());
                var C = [],
                    S = [];
                if (e) t.$wrapperEl.find("." + t.params.slideClass).remove();
                else
                    for (var z = p; z <= u; z += 1)(z < y || z > E) && t.$wrapperEl.find("." + t.params.slideClass + '[data-swiper-slide-index="' + z + '"]').remove();
                for (var P = 0; P < c.length; P += 1) P >= y && P <= E && (void 0 === u || e ? S.push(P) : (P > u && S.push(P), P < p && C.push(P)));
                S.forEach(function(e) {
                    t.$wrapperEl.append(v(c[e], e))
                }), C.sort(function(e, t) {
                    return t - e
                }).forEach(function(e) {
                    t.$wrapperEl.prepend(v(c[e], e))
                }), t.$wrapperEl.children(".swiper-slide").css(m, x + "px"), T()
            },
            renderSlide: function(e, t) {
                var a = this,
                    i = a.params.virtual;
                if (i.cache && a.virtual.cache[t]) return a.virtual.cache[t];
                var s = i.renderSlide ? m(i.renderSlide.call(a, e, t)) : m('<div class="' + a.params.slideClass + '" data-swiper-slide-index="' + t + '">' + e + "</div>");
                return s.attr("data-swiper-slide-index") || s.attr("data-swiper-slide-index", t), i.cache && (a.virtual.cache[t] = s), s
            },
            appendSlide: function(e) {
                var t = this;
                if ("object" == typeof e && "length" in e)
                    for (var a = 0; a < e.length; a += 1) e[a] && t.virtual.slides.push(e[a]);
                else t.virtual.slides.push(e);
                t.virtual.update(!0)
            },
            prependSlide: function(e) {
                var t = this,
                    a = t.activeIndex,
                    i = a + 1,
                    s = 1;
                if (Array.isArray(e)) {
                    for (var r = 0; r < e.length; r += 1) e[r] && t.virtual.slides.unshift(e[r]);
                    i = a + e.length, s = e.length
                } else t.virtual.slides.unshift(e);
                if (t.params.virtual.cache) {
                    var n = t.virtual.cache,
                        l = {};
                    Object.keys(n).forEach(function(e) {
                        var t = n[e],
                            a = t.attr("data-swiper-slide-index");
                        a && t.attr("data-swiper-slide-index", parseInt(a, 10) + 1), l[parseInt(e, 10) + s] = t
                    }), t.virtual.cache = l
                }
                t.virtual.update(!0), t.slideTo(i, 0)
            },
            removeSlide: function(e) {
                var t = this;
                if (null != e) {
                    var a = t.activeIndex;
                    if (Array.isArray(e))
                        for (var i = e.length - 1; i >= 0; i -= 1) t.virtual.slides.splice(e[i], 1), t.params.virtual.cache && delete t.virtual.cache[e[i]], e[i] < a && (a -= 1), a = Math.max(a, 0);
                    else t.virtual.slides.splice(e, 1), t.params.virtual.cache && delete t.virtual.cache[e], e < a && (a -= 1), a = Math.max(a, 0);
                    t.virtual.update(!0), t.slideTo(a, 0)
                }
            },
            removeAllSlides: function() {
                var e = this;
                e.virtual.slides = [], e.params.virtual.cache && (e.virtual.cache = {}), e.virtual.update(!0), e.slideTo(0, 0)
            }
        },
        U = {
            name: "virtual",
            params: {
                virtual: {
                    enabled: !1,
                    slides: [],
                    cache: !0,
                    renderSlide: null,
                    renderExternal: null,
                    renderExternalUpdate: !0,
                    addSlidesBefore: 0,
                    addSlidesAfter: 0
                }
            },
            create: function() {
                z(this, {
                    virtual: t({}, j, {
                        slides: this.params.virtual.slides,
                        cache: {}
                    })
                })
            },
            on: {
                beforeInit: function(e) {
                    if (e.params.virtual.enabled) {
                        e.classNames.push(e.params.containerModifierClass + "virtual");
                        var t = {
                            watchSlidesProgress: !0
                        };
                        M(e.params, t), M(e.originalParams, t), e.params.initialSlide || e.virtual.update()
                    }
                },
                setTranslate: function(e) {
                    e.params.virtual.enabled && e.virtual.update()
                }
            }
        },
        K = {
            handle: function(e) {
                var t = this;
                if (t.enabled) {
                    var a = l(),
                        i = r(),
                        s = t.rtlTranslate,
                        n = e;
                    n.originalEvent && (n = n.originalEvent);
                    var o = n.keyCode || n.charCode,
                        d = t.params.keyboard.pageUpDown,
                        p = d && 33 === o,
                        u = d && 34 === o,
                        c = 37 === o,
                        h = 39 === o,
                        v = 38 === o,
                        f = 40 === o;
                    if (!t.allowSlideNext && (t.isHorizontal() && h || t.isVertical() && f || u)) return !1;
                    if (!t.allowSlidePrev && (t.isHorizontal() && c || t.isVertical() && v || p)) return !1;
                    if (!(n.shiftKey || n.altKey || n.ctrlKey || n.metaKey || i.activeElement && i.activeElement.nodeName && ("input" === i.activeElement.nodeName.toLowerCase() || "textarea" === i.activeElement.nodeName.toLowerCase()))) {
                        if (t.params.keyboard.onlyInViewport && (p || u || c || h || v || f)) {
                            var m = !1;
                            if (t.$el.parents("." + t.params.slideClass).length > 0 && 0 === t.$el.parents("." + t.params.slideActiveClass).length) return;
                            var g = t.$el,
                                b = g[0].clientWidth,
                                w = g[0].clientHeight,
                                y = a.innerWidth,
                                E = a.innerHeight,
                                x = t.$el.offset();
                            s && (x.left -= t.$el[0].scrollLeft);
                            for (var T = [
                                    [x.left, x.top],
                                    [x.left + b, x.top],
                                    [x.left, x.top + w],
                                    [x.left + b, x.top + w]
                                ], C = 0; C < T.length; C += 1) {
                                var S = T[C];
                                if (S[0] >= 0 && S[0] <= y && S[1] >= 0 && S[1] <= E) {
                                    if (0 === S[0] && 0 === S[1]) continue;
                                    m = !0
                                }
                            }
                            if (!m) return
                        }
                        t.isHorizontal() ? ((p || u || c || h) && (n.preventDefault ? n.preventDefault() : n.returnValue = !1), ((u || h) && !s || (p || c) && s) && t.slideNext(), ((p || c) && !s || (u || h) && s) && t.slidePrev()) : ((p || u || v || f) && (n.preventDefault ? n.preventDefault() : n.returnValue = !1), (u || f) && t.slideNext(), (p || v) && t.slidePrev()), t.emit("keyPress", o)
                    }
                }
            },
            enable: function() {
                var e = this,
                    t = r();
                e.keyboard.enabled || (m(t).on("keydown", e.keyboard.handle), e.keyboard.enabled = !0)
            },
            disable: function() {
                var e = this,
                    t = r();
                e.keyboard.enabled && (m(t).off("keydown", e.keyboard.handle), e.keyboard.enabled = !1)
            }
        },
        Z = {
            name: "keyboard",
            params: {
                keyboard: {
                    enabled: !1,
                    onlyInViewport: !0,
                    pageUpDown: !0
                }
            },
            create: function() {
                z(this, {
                    keyboard: t({
                        enabled: !1
                    }, K)
                })
            },
            on: {
                init: function(e) {
                    e.params.keyboard.enabled && e.keyboard.enable()
                },
                destroy: function(e) {
                    e.keyboard.enabled && e.keyboard.disable()
                }
            }
        };
    var J = {
            lastScrollTime: x(),
            lastEventBeforeSnap: void 0,
            recentWheelEvents: [],
            event: function() {
                return l().navigator.userAgent.indexOf("firefox") > -1 ? "DOMMouseScroll" : function() {
                    var e = r(),
                        t = "onwheel",
                        a = t in e;
                    if (!a) {
                        var i = e.createElement("div");
                        i.setAttribute(t, "return;"), a = "function" == typeof i.onwheel
                    }
                    return !a && e.implementation && e.implementation.hasFeature && !0 !== e.implementation.hasFeature("", "") && (a = e.implementation.hasFeature("Events.wheel", "3.0")), a
                }() ? "wheel" : "mousewheel"
            },
            normalize: function(e) {
                var t = 0,
                    a = 0,
                    i = 0,
                    s = 0;
                return "detail" in e && (a = e.detail), "wheelDelta" in e && (a = -e.wheelDelta / 120), "wheelDeltaY" in e && (a = -e.wheelDeltaY / 120), "wheelDeltaX" in e && (t = -e.wheelDeltaX / 120), "axis" in e && e.axis === e.HORIZONTAL_AXIS && (t = a, a = 0), i = 10 * t, s = 10 * a, "deltaY" in e && (s = e.deltaY), "deltaX" in e && (i = e.deltaX), e.shiftKey && !i && (i = s, s = 0), (i || s) && e.deltaMode && (1 === e.deltaMode ? (i *= 40, s *= 40) : (i *= 800, s *= 800)), i && !t && (t = i < 1 ? -1 : 1), s && !a && (a = s < 1 ? -1 : 1), {
                    spinX: t,
                    spinY: a,
                    pixelX: i,
                    pixelY: s
                }
            },
            handleMouseEnter: function() {
                this.enabled && (this.mouseEntered = !0)
            },
            handleMouseLeave: function() {
                this.enabled && (this.mouseEntered = !1)
            },
            handle: function(e) {
                var t = e,
                    a = this;
                if (a.enabled) {
                    var i = a.params.mousewheel;
                    a.params.cssMode && t.preventDefault();
                    var s = a.$el;
                    if ("container" !== a.params.mousewheel.eventsTarget && (s = m(a.params.mousewheel.eventsTarget)), !a.mouseEntered && !s[0].contains(t.target) && !i.releaseOnEdges) return !0;
                    t.originalEvent && (t = t.originalEvent);
                    var r = 0,
                        n = a.rtlTranslate ? -1 : 1,
                        l = J.normalize(t);
                    if (i.forceToAxis)
                        if (a.isHorizontal()) {
                            if (!(Math.abs(l.pixelX) > Math.abs(l.pixelY))) return !0;
                            r = -l.pixelX * n
                        } else {
                            if (!(Math.abs(l.pixelY) > Math.abs(l.pixelX))) return !0;
                            r = -l.pixelY
                        }
                    else r = Math.abs(l.pixelX) > Math.abs(l.pixelY) ? -l.pixelX * n : -l.pixelY;
                    if (0 === r) return !0;
                    i.invert && (r = -r);
                    var o = a.getTranslate() + r * i.sensitivity;
                    if (o >= a.minTranslate() && (o = a.minTranslate()), o <= a.maxTranslate() && (o = a.maxTranslate()), (!!a.params.loop || !(o === a.minTranslate() || o === a.maxTranslate())) && a.params.nested && t.stopPropagation(), a.params.freeMode) {
                        var d = {
                                time: x(),
                                delta: Math.abs(r),
                                direction: Math.sign(r)
                            },
                            p = a.mousewheel.lastEventBeforeSnap,
                            u = p && d.time < p.time + 500 && d.delta <= p.delta && d.direction === p.direction;
                        if (!u) {
                            a.mousewheel.lastEventBeforeSnap = void 0, a.params.loop && a.loopFix();
                            var c = a.getTranslate() + r * i.sensitivity,
                                h = a.isBeginning,
                                v = a.isEnd;
                            if (c >= a.minTranslate() && (c = a.minTranslate()), c <= a.maxTranslate() && (c = a.maxTranslate()), a.setTransition(0), a.setTranslate(c), a.updateProgress(), a.updateActiveIndex(), a.updateSlidesClasses(), (!h && a.isBeginning || !v && a.isEnd) && a.updateSlidesClasses(), a.params.freeModeSticky) {
                                clearTimeout(a.mousewheel.timeout), a.mousewheel.timeout = void 0;
                                var f = a.mousewheel.recentWheelEvents;
                                f.length >= 15 && f.shift();
                                var g = f.length ? f[f.length - 1] : void 0,
                                    b = f[0];
                                if (f.push(d), g && (d.delta > g.delta || d.direction !== g.direction)) f.splice(0);
                                else if (f.length >= 15 && d.time - b.time < 500 && b.delta - d.delta >= 1 && d.delta <= 6) {
                                    var w = r > 0 ? .8 : .2;
                                    a.mousewheel.lastEventBeforeSnap = d, f.splice(0), a.mousewheel.timeout = E(function() {
                                        a.slideToClosest(a.params.speed, !0, void 0, w)
                                    }, 0)
                                }
                                a.mousewheel.timeout || (a.mousewheel.timeout = E(function() {
                                    a.mousewheel.lastEventBeforeSnap = d, f.splice(0), a.slideToClosest(a.params.speed, !0, void 0, .5)
                                }, 500))
                            }
                            if (u || a.emit("scroll", t), a.params.autoplay && a.params.autoplayDisableOnInteraction && a.autoplay.stop(), c === a.minTranslate() || c === a.maxTranslate()) return !0
                        }
                    } else {
                        var y = {
                                time: x(),
                                delta: Math.abs(r),
                                direction: Math.sign(r),
                                raw: e
                            },
                            T = a.mousewheel.recentWheelEvents;
                        T.length >= 2 && T.shift();
                        var C = T.length ? T[T.length - 1] : void 0;
                        if (T.push(y), C ? (y.direction !== C.direction || y.delta > C.delta || y.time > C.time + 150) && a.mousewheel.animateSlider(y) : a.mousewheel.animateSlider(y), a.mousewheel.releaseScroll(y)) return !0
                    }
                    return t.preventDefault ? t.preventDefault() : t.returnValue = !1, !1
                }
            },
            animateSlider: function(e) {
                var t = this,
                    a = l();
                return !(this.params.mousewheel.thresholdDelta && e.delta < this.params.mousewheel.thresholdDelta) && (!(this.params.mousewheel.thresholdTime && x() - t.mousewheel.lastScrollTime < this.params.mousewheel.thresholdTime) && (e.delta >= 6 && x() - t.mousewheel.lastScrollTime < 60 || (e.direction < 0 ? t.isEnd && !t.params.loop || t.animating || (t.slideNext(), t.emit("scroll", e.raw)) : t.isBeginning && !t.params.loop || t.animating || (t.slidePrev(), t.emit("scroll", e.raw)), t.mousewheel.lastScrollTime = (new a.Date).getTime(), !1)))
            },
            releaseScroll: function(e) {
                var t = this,
                    a = t.params.mousewheel;
                if (e.direction < 0) {
                    if (t.isEnd && !t.params.loop && a.releaseOnEdges) return !0
                } else if (t.isBeginning && !t.params.loop && a.releaseOnEdges) return !0;
                return !1
            },
            enable: function() {
                var e = this,
                    t = J.event();
                if (e.params.cssMode) return e.wrapperEl.removeEventListener(t, e.mousewheel.handle), !0;
                if (!t) return !1;
                if (e.mousewheel.enabled) return !1;
                var a = e.$el;
                return "container" !== e.params.mousewheel.eventsTarget && (a = m(e.params.mousewheel.eventsTarget)), a.on("mouseenter", e.mousewheel.handleMouseEnter), a.on("mouseleave", e.mousewheel.handleMouseLeave), a.on(t, e.mousewheel.handle), e.mousewheel.enabled = !0, !0
            },
            disable: function() {
                var e = this,
                    t = J.event();
                if (e.params.cssMode) return e.wrapperEl.addEventListener(t, e.mousewheel.handle), !0;
                if (!t) return !1;
                if (!e.mousewheel.enabled) return !1;
                var a = e.$el;
                return "container" !== e.params.mousewheel.eventsTarget && (a = m(e.params.mousewheel.eventsTarget)), a.off(t, e.mousewheel.handle), e.mousewheel.enabled = !1, !0
            }
        },
        Q = {
            toggleEl: function(e, t) {
                e[t ? "addClass" : "removeClass"](this.params.navigation.disabledClass), e[0] && "BUTTON" === e[0].tagName && (e[0].disabled = t)
            },
            update: function() {
                var e = this,
                    t = e.params.navigation,
                    a = e.navigation.toggleEl;
                if (!e.params.loop) {
                    var i = e.navigation,
                        s = i.$nextEl,
                        r = i.$prevEl;
                    r && r.length > 0 && (e.isBeginning ? a(r, !0) : a(r, !1), e.params.watchOverflow && e.enabled && r[e.isLocked ? "addClass" : "removeClass"](t.lockClass)), s && s.length > 0 && (e.isEnd ? a(s, !0) : a(s, !1), e.params.watchOverflow && e.enabled && s[e.isLocked ? "addClass" : "removeClass"](t.lockClass))
                }
            },
            onPrevClick: function(e) {
                var t = this;
                e.preventDefault(), t.isBeginning && !t.params.loop || t.slidePrev()
            },
            onNextClick: function(e) {
                var t = this;
                e.preventDefault(), t.isEnd && !t.params.loop || t.slideNext()
            },
            init: function() {
                var e, t, a = this,
                    i = a.params.navigation;
                (a.params.navigation = k(a.$el, a.params.navigation, a.params.createElements, {
                    nextEl: "swiper-button-next",
                    prevEl: "swiper-button-prev"
                }), i.nextEl || i.prevEl) && (i.nextEl && (e = m(i.nextEl), a.params.uniqueNavElements && "string" == typeof i.nextEl && e.length > 1 && 1 === a.$el.find(i.nextEl).length && (e = a.$el.find(i.nextEl))), i.prevEl && (t = m(i.prevEl), a.params.uniqueNavElements && "string" == typeof i.prevEl && t.length > 1 && 1 === a.$el.find(i.prevEl).length && (t = a.$el.find(i.prevEl))), e && e.length > 0 && e.on("click", a.navigation.onNextClick), t && t.length > 0 && t.on("click", a.navigation.onPrevClick), M(a.navigation, {
                    $nextEl: e,
                    nextEl: e && e[0],
                    $prevEl: t,
                    prevEl: t && t[0]
                }), a.enabled || (e && e.addClass(i.lockClass), t && t.addClass(i.lockClass)))
            },
            destroy: function() {
                var e = this,
                    t = e.navigation,
                    a = t.$nextEl,
                    i = t.$prevEl;
                a && a.length && (a.off("click", e.navigation.onNextClick), a.removeClass(e.params.navigation.disabledClass)), i && i.length && (i.off("click", e.navigation.onPrevClick), i.removeClass(e.params.navigation.disabledClass))
            }
        },
        ee = {
            update: function() {
                var e = this,
                    t = e.rtl,
                    a = e.params.pagination;
                if (a.el && e.pagination.el && e.pagination.$el && 0 !== e.pagination.$el.length) {
                    var i, s = e.virtual && e.params.virtual.enabled ? e.virtual.slides.length : e.slides.length,
                        r = e.pagination.$el,
                        n = e.params.loop ? Math.ceil((s - 2 * e.loopedSlides) / e.params.slidesPerGroup) : e.snapGrid.length;
                    if (e.params.loop ? ((i = Math.ceil((e.activeIndex - e.loopedSlides) / e.params.slidesPerGroup)) > s - 1 - 2 * e.loopedSlides && (i -= s - 2 * e.loopedSlides), i > n - 1 && (i -= n), i < 0 && "bullets" !== e.params.paginationType && (i = n + i)) : i = void 0 !== e.snapIndex ? e.snapIndex : e.activeIndex || 0, "bullets" === a.type && e.pagination.bullets && e.pagination.bullets.length > 0) {
                        var l, o, d, p = e.pagination.bullets;
                        if (a.dynamicBullets && (e.pagination.bulletSize = p.eq(0)[e.isHorizontal() ? "outerWidth" : "outerHeight"](!0), r.css(e.isHorizontal() ? "width" : "height", e.pagination.bulletSize * (a.dynamicMainBullets + 4) + "px"), a.dynamicMainBullets > 1 && void 0 !== e.previousIndex && (e.pagination.dynamicBulletIndex += i - e.previousIndex, e.pagination.dynamicBulletIndex > a.dynamicMainBullets - 1 ? e.pagination.dynamicBulletIndex = a.dynamicMainBullets - 1 : e.pagination.dynamicBulletIndex < 0 && (e.pagination.dynamicBulletIndex = 0)), l = i - e.pagination.dynamicBulletIndex, d = ((o = l + (Math.min(p.length, a.dynamicMainBullets) - 1)) + l) / 2), p.removeClass(a.bulletActiveClass + " " + a.bulletActiveClass + "-next " + a.bulletActiveClass + "-next-next " + a.bulletActiveClass + "-prev " + a.bulletActiveClass + "-prev-prev " + a.bulletActiveClass + "-main"), r.length > 1) p.each(function(e) {
                            var t = m(e),
                                s = t.index();
                            s === i && t.addClass(a.bulletActiveClass), a.dynamicBullets && (s >= l && s <= o && t.addClass(a.bulletActiveClass + "-main"), s === l && t.prev().addClass(a.bulletActiveClass + "-prev").prev().addClass(a.bulletActiveClass + "-prev-prev"), s === o && t.next().addClass(a.bulletActiveClass + "-next").next().addClass(a.bulletActiveClass + "-next-next"))
                        });
                        else {
                            var u = p.eq(i),
                                c = u.index();
                            if (u.addClass(a.bulletActiveClass), a.dynamicBullets) {
                                for (var h = p.eq(l), v = p.eq(o), f = l; f <= o; f += 1) p.eq(f).addClass(a.bulletActiveClass + "-main");
                                if (e.params.loop)
                                    if (c >= p.length - a.dynamicMainBullets) {
                                        for (var g = a.dynamicMainBullets; g >= 0; g -= 1) p.eq(p.length - g).addClass(a.bulletActiveClass + "-main");
                                        p.eq(p.length - a.dynamicMainBullets - 1).addClass(a.bulletActiveClass + "-prev")
                                    } else h.prev().addClass(a.bulletActiveClass + "-prev").prev().addClass(a.bulletActiveClass + "-prev-prev"), v.next().addClass(a.bulletActiveClass + "-next").next().addClass(a.bulletActiveClass + "-next-next");
                                else h.prev().addClass(a.bulletActiveClass + "-prev").prev().addClass(a.bulletActiveClass + "-prev-prev"), v.next().addClass(a.bulletActiveClass + "-next").next().addClass(a.bulletActiveClass + "-next-next")
                            }
                        }
                        if (a.dynamicBullets) {
                            var b = Math.min(p.length, a.dynamicMainBullets + 4),
                                w = (e.pagination.bulletSize * b - e.pagination.bulletSize) / 2 - d * e.pagination.bulletSize,
                                y = t ? "right" : "left";
                            p.css(e.isHorizontal() ? y : "top", w + "px")
                        }
                    }
                    if ("fraction" === a.type && (r.find(P(a.currentClass)).text(a.formatFractionCurrent(i + 1)), r.find(P(a.totalClass)).text(a.formatFractionTotal(n))), "progressbar" === a.type) {
                        var E;
                        E = a.progressbarOpposite ? e.isHorizontal() ? "vertical" : "horizontal" : e.isHorizontal() ? "horizontal" : "vertical";
                        var x = (i + 1) / n,
                            T = 1,
                            C = 1;
                        "horizontal" === E ? T = x : C = x, r.find(P(a.progressbarFillClass)).transform("translate3d(0,0,0) scaleX(" + T + ") scaleY(" + C + ")").transition(e.params.speed)
                    }
                    "custom" === a.type && a.renderCustom ? (r.html(a.renderCustom(e, i + 1, n)), e.emit("paginationRender", r[0])) : e.emit("paginationUpdate", r[0]), e.params.watchOverflow && e.enabled && r[e.isLocked ? "addClass" : "removeClass"](a.lockClass)
                }
            },
            render: function() {
                var e = this,
                    t = e.params.pagination;
                if (t.el && e.pagination.el && e.pagination.$el && 0 !== e.pagination.$el.length) {
                    var a = e.virtual && e.params.virtual.enabled ? e.virtual.slides.length : e.slides.length,
                        i = e.pagination.$el,
                        s = "";
                    if ("bullets" === t.type) {
                        var r = e.params.loop ? Math.ceil((a - 2 * e.loopedSlides) / e.params.slidesPerGroup) : e.snapGrid.length;
                        e.params.freeMode && !e.params.loop && r > a && (r = a);
                        for (var n = 0; n < r; n += 1) t.renderBullet ? s += t.renderBullet.call(e, n, t.bulletClass) : s += "<" + t.bulletElement + ' class="' + t.bulletClass + '"></' + t.bulletElement + ">";
                        i.html(s), e.pagination.bullets = i.find(P(t.bulletClass))
                    }
                    "fraction" === t.type && (s = t.renderFraction ? t.renderFraction.call(e, t.currentClass, t.totalClass) : '<span class="' + t.currentClass + '"></span> / <span class="' + t.totalClass + '"></span>', i.html(s)), "progressbar" === t.type && (s = t.renderProgressbar ? t.renderProgressbar.call(e, t.progressbarFillClass) : '<span class="' + t.progressbarFillClass + '"></span>', i.html(s)), "custom" !== t.type && e.emit("paginationRender", e.pagination.$el[0])
                }
            },
            init: function() {
                var e = this;
                e.params.pagination = k(e.$el, e.params.pagination, e.params.createElements, {
                    el: "swiper-pagination"
                });
                var t = e.params.pagination;
                if (t.el) {
                    var a = m(t.el);
                    0 !== a.length && (e.params.uniqueNavElements && "string" == typeof t.el && a.length > 1 && (a = e.$el.find(t.el)), "bullets" === t.type && t.clickable && a.addClass(t.clickableClass), a.addClass(t.modifierClass + t.type), "bullets" === t.type && t.dynamicBullets && (a.addClass("" + t.modifierClass + t.type + "-dynamic"), e.pagination.dynamicBulletIndex = 0, t.dynamicMainBullets < 1 && (t.dynamicMainBullets = 1)), "progressbar" === t.type && t.progressbarOpposite && a.addClass(t.progressbarOppositeClass), t.clickable && a.on("click", P(t.bulletClass), function(t) {
                        t.preventDefault();
                        var a = m(this).index() * e.params.slidesPerGroup;
                        e.params.loop && (a += e.loopedSlides), e.slideTo(a)
                    }), M(e.pagination, {
                        $el: a,
                        el: a[0]
                    }), e.enabled || a.addClass(t.lockClass))
                }
            },
            destroy: function() {
                var e = this,
                    t = e.params.pagination;
                if (t.el && e.pagination.el && e.pagination.$el && 0 !== e.pagination.$el.length) {
                    var a = e.pagination.$el;
                    a.removeClass(t.hiddenClass), a.removeClass(t.modifierClass + t.type), e.pagination.bullets && e.pagination.bullets.removeClass(t.bulletActiveClass), t.clickable && a.off("click", P(t.bulletClass))
                }
            }
        },
        te = {
            setTranslate: function() {
                var e = this;
                if (e.params.scrollbar.el && e.scrollbar.el) {
                    var t = e.scrollbar,
                        a = e.rtlTranslate,
                        i = e.progress,
                        s = t.dragSize,
                        r = t.trackSize,
                        n = t.$dragEl,
                        l = t.$el,
                        o = e.params.scrollbar,
                        d = s,
                        p = (r - s) * i;
                    a ? (p = -p) > 0 ? (d = s - p, p = 0) : -p + s > r && (d = r + p) : p < 0 ? (d = s + p, p = 0) : p + s > r && (d = r - p), e.isHorizontal() ? (n.transform("translate3d(" + p + "px, 0, 0)"), n[0].style.width = d + "px") : (n.transform("translate3d(0px, " + p + "px, 0)"), n[0].style.height = d + "px"), o.hide && (clearTimeout(e.scrollbar.timeout), l[0].style.opacity = 1, e.scrollbar.timeout = setTimeout(function() {
                        l[0].style.opacity = 0, l.transition(400)
                    }, 1e3))
                }
            },
            setTransition: function(e) {
                var t = this;
                t.params.scrollbar.el && t.scrollbar.el && t.scrollbar.$dragEl.transition(e)
            },
            updateSize: function() {
                var e = this;
                if (e.params.scrollbar.el && e.scrollbar.el) {
                    var t = e.scrollbar,
                        a = t.$dragEl,
                        i = t.$el;
                    a[0].style.width = "", a[0].style.height = "";
                    var s, r = e.isHorizontal() ? i[0].offsetWidth : i[0].offsetHeight,
                        n = e.size / e.virtualSize,
                        l = n * (r / e.size);
                    s = "auto" === e.params.scrollbar.dragSize ? r * n : parseInt(e.params.scrollbar.dragSize, 10), e.isHorizontal() ? a[0].style.width = s + "px" : a[0].style.height = s + "px", i[0].style.display = n >= 1 ? "none" : "", e.params.scrollbar.hide && (i[0].style.opacity = 0), M(t, {
                        trackSize: r,
                        divider: n,
                        moveDivider: l,
                        dragSize: s
                    }), e.params.watchOverflow && e.enabled && t.$el[e.isLocked ? "addClass" : "removeClass"](e.params.scrollbar.lockClass)
                }
            },
            getPointerPosition: function(e) {
                return this.isHorizontal() ? "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].clientX : e.clientX : "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].clientY : e.clientY
            },
            setDragPosition: function(e) {
                var t, a = this,
                    i = a.scrollbar,
                    s = a.rtlTranslate,
                    r = i.$el,
                    n = i.dragSize,
                    l = i.trackSize,
                    o = i.dragStartPos;
                t = (i.getPointerPosition(e) - r.offset()[a.isHorizontal() ? "left" : "top"] - (null !== o ? o : n / 2)) / (l - n), t = Math.max(Math.min(t, 1), 0), s && (t = 1 - t);
                var d = a.minTranslate() + (a.maxTranslate() - a.minTranslate()) * t;
                a.updateProgress(d), a.setTranslate(d), a.updateActiveIndex(), a.updateSlidesClasses()
            },
            onDragStart: function(e) {
                var t = this,
                    a = t.params.scrollbar,
                    i = t.scrollbar,
                    s = t.$wrapperEl,
                    r = i.$el,
                    n = i.$dragEl;
                t.scrollbar.isTouched = !0, t.scrollbar.dragStartPos = e.target === n[0] || e.target === n ? i.getPointerPosition(e) - e.target.getBoundingClientRect()[t.isHorizontal() ? "left" : "top"] : null, e.preventDefault(), e.stopPropagation(), s.transition(100), n.transition(100), i.setDragPosition(e), clearTimeout(t.scrollbar.dragTimeout), r.transition(0), a.hide && r.css("opacity", 1), t.params.cssMode && t.$wrapperEl.css("scroll-snap-type", "none"), t.emit("scrollbarDragStart", e)
            },
            onDragMove: function(e) {
                var t = this,
                    a = t.scrollbar,
                    i = t.$wrapperEl,
                    s = a.$el,
                    r = a.$dragEl;
                t.scrollbar.isTouched && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, a.setDragPosition(e), i.transition(0), s.transition(0), r.transition(0), t.emit("scrollbarDragMove", e))
            },
            onDragEnd: function(e) {
                var t = this,
                    a = t.params.scrollbar,
                    i = t.scrollbar,
                    s = t.$wrapperEl,
                    r = i.$el;
                t.scrollbar.isTouched && (t.scrollbar.isTouched = !1, t.params.cssMode && (t.$wrapperEl.css("scroll-snap-type", ""), s.transition("")), a.hide && (clearTimeout(t.scrollbar.dragTimeout), t.scrollbar.dragTimeout = E(function() {
                    r.css("opacity", 0), r.transition(400)
                }, 1e3)), t.emit("scrollbarDragEnd", e), a.snapOnRelease && t.slideToClosest())
            },
            enableDraggable: function() {
                var e = this;
                if (e.params.scrollbar.el) {
                    var t = r(),
                        a = e.scrollbar,
                        i = e.touchEventsTouch,
                        s = e.touchEventsDesktop,
                        n = e.params,
                        l = e.support,
                        o = a.$el[0],
                        d = !(!l.passiveListener || !n.passiveListeners) && {
                            passive: !1,
                            capture: !1
                        },
                        p = !(!l.passiveListener || !n.passiveListeners) && {
                            passive: !0,
                            capture: !1
                        };
                    o && (l.touch ? (o.addEventListener(i.start, e.scrollbar.onDragStart, d), o.addEventListener(i.move, e.scrollbar.onDragMove, d), o.addEventListener(i.end, e.scrollbar.onDragEnd, p)) : (o.addEventListener(s.start, e.scrollbar.onDragStart, d), t.addEventListener(s.move, e.scrollbar.onDragMove, d), t.addEventListener(s.end, e.scrollbar.onDragEnd, p)))
                }
            },
            disableDraggable: function() {
                var e = this;
                if (e.params.scrollbar.el) {
                    var t = r(),
                        a = e.scrollbar,
                        i = e.touchEventsTouch,
                        s = e.touchEventsDesktop,
                        n = e.params,
                        l = e.support,
                        o = a.$el[0],
                        d = !(!l.passiveListener || !n.passiveListeners) && {
                            passive: !1,
                            capture: !1
                        },
                        p = !(!l.passiveListener || !n.passiveListeners) && {
                            passive: !0,
                            capture: !1
                        };
                    o && (l.touch ? (o.removeEventListener(i.start, e.scrollbar.onDragStart, d), o.removeEventListener(i.move, e.scrollbar.onDragMove, d), o.removeEventListener(i.end, e.scrollbar.onDragEnd, p)) : (o.removeEventListener(s.start, e.scrollbar.onDragStart, d), t.removeEventListener(s.move, e.scrollbar.onDragMove, d), t.removeEventListener(s.end, e.scrollbar.onDragEnd, p)))
                }
            },
            init: function() {
                var e = this,
                    t = e.scrollbar,
                    a = e.$el;
                e.params.scrollbar = k(a, e.params.scrollbar, e.params.createElements, {
                    el: "swiper-scrollbar"
                });
                var i = e.params.scrollbar;
                if (i.el) {
                    var s = m(i.el);
                    e.params.uniqueNavElements && "string" == typeof i.el && s.length > 1 && 1 === a.find(i.el).length && (s = a.find(i.el));
                    var r = s.find("." + e.params.scrollbar.dragClass);
                    0 === r.length && (r = m('<div class="' + e.params.scrollbar.dragClass + '"></div>'), s.append(r)), M(t, {
                        $el: s,
                        el: s[0],
                        $dragEl: r,
                        dragEl: r[0]
                    }), i.draggable && t.enableDraggable(), s && s[e.enabled ? "removeClass" : "addClass"](e.params.scrollbar.lockClass)
                }
            },
            destroy: function() {
                this.scrollbar.disableDraggable()
            }
        },
        ae = {
            setTransform: function(e, t) {
                var a = this.rtl,
                    i = m(e),
                    s = a ? -1 : 1,
                    r = i.attr("data-swiper-parallax") || "0",
                    n = i.attr("data-swiper-parallax-x"),
                    l = i.attr("data-swiper-parallax-y"),
                    o = i.attr("data-swiper-parallax-scale"),
                    d = i.attr("data-swiper-parallax-opacity");
                if (n || l ? (n = n || "0", l = l || "0") : this.isHorizontal() ? (n = r, l = "0") : (l = r, n = "0"), n = n.indexOf("%") >= 0 ? parseInt(n, 10) * t * s + "%" : n * t * s + "px", l = l.indexOf("%") >= 0 ? parseInt(l, 10) * t + "%" : l * t + "px", null != d) {
                    var p = d - (d - 1) * (1 - Math.abs(t));
                    i[0].style.opacity = p
                }
                if (null == o) i.transform("translate3d(" + n + ", " + l + ", 0px)");
                else {
                    var u = o - (o - 1) * (1 - Math.abs(t));
                    i.transform("translate3d(" + n + ", " + l + ", 0px) scale(" + u + ")")
                }
            },
            setTranslate: function() {
                var e = this,
                    t = e.$el,
                    a = e.slides,
                    i = e.progress,
                    s = e.snapGrid;
                t.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(t) {
                    e.parallax.setTransform(t, i)
                }), a.each(function(t, a) {
                    var r = t.progress;
                    e.params.slidesPerGroup > 1 && "auto" !== e.params.slidesPerView && (r += Math.ceil(a / 2) - i * (s.length - 1)), r = Math.min(Math.max(r, -1), 1), m(t).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(t) {
                        e.parallax.setTransform(t, r)
                    })
                })
            },
            setTransition: function(e) {
                void 0 === e && (e = this.params.speed);
                this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(t) {
                    var a = m(t),
                        i = parseInt(a.attr("data-swiper-parallax-duration"), 10) || e;
                    0 === e && (i = 0), a.transition(i)
                })
            }
        },
        ie = {
            getDistanceBetweenTouches: function(e) {
                if (e.targetTouches.length < 2) return 1;
                var t = e.targetTouches[0].pageX,
                    a = e.targetTouches[0].pageY,
                    i = e.targetTouches[1].pageX,
                    s = e.targetTouches[1].pageY;
                return Math.sqrt(Math.pow(i - t, 2) + Math.pow(s - a, 2))
            },
            onGestureStart: function(e) {
                var t = this,
                    a = t.support,
                    i = t.params.zoom,
                    s = t.zoom,
                    r = s.gesture;
                if (s.fakeGestureTouched = !1, s.fakeGestureMoved = !1, !a.gestures) {
                    if ("touchstart" !== e.type || "touchstart" === e.type && e.targetTouches.length < 2) return;
                    s.fakeGestureTouched = !0, r.scaleStart = ie.getDistanceBetweenTouches(e)
                }
                r.$slideEl && r.$slideEl.length || (r.$slideEl = m(e.target).closest("." + t.params.slideClass), 0 === r.$slideEl.length && (r.$slideEl = t.slides.eq(t.activeIndex)), r.$imageEl = r.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), r.$imageWrapEl = r.$imageEl.parent("." + i.containerClass), r.maxRatio = r.$imageWrapEl.attr("data-swiper-zoom") || i.maxRatio, 0 !== r.$imageWrapEl.length) ? (r.$imageEl && r.$imageEl.transition(0), t.zoom.isScaling = !0) : r.$imageEl = void 0
            },
            onGestureChange: function(e) {
                var t = this,
                    a = t.support,
                    i = t.params.zoom,
                    s = t.zoom,
                    r = s.gesture;
                if (!a.gestures) {
                    if ("touchmove" !== e.type || "touchmove" === e.type && e.targetTouches.length < 2) return;
                    s.fakeGestureMoved = !0, r.scaleMove = ie.getDistanceBetweenTouches(e)
                }
                r.$imageEl && 0 !== r.$imageEl.length ? (a.gestures ? s.scale = e.scale * s.currentScale : s.scale = r.scaleMove / r.scaleStart * s.currentScale, s.scale > r.maxRatio && (s.scale = r.maxRatio - 1 + Math.pow(s.scale - r.maxRatio + 1, .5)), s.scale < i.minRatio && (s.scale = i.minRatio + 1 - Math.pow(i.minRatio - s.scale + 1, .5)), r.$imageEl.transform("translate3d(0,0,0) scale(" + s.scale + ")")) : "gesturechange" === e.type && s.onGestureStart(e)
            },
            onGestureEnd: function(e) {
                var t = this,
                    a = t.device,
                    i = t.support,
                    s = t.params.zoom,
                    r = t.zoom,
                    n = r.gesture;
                if (!i.gestures) {
                    if (!r.fakeGestureTouched || !r.fakeGestureMoved) return;
                    if ("touchend" !== e.type || "touchend" === e.type && e.changedTouches.length < 2 && !a.android) return;
                    r.fakeGestureTouched = !1, r.fakeGestureMoved = !1
                }
                n.$imageEl && 0 !== n.$imageEl.length && (r.scale = Math.max(Math.min(r.scale, n.maxRatio), s.minRatio), n.$imageEl.transition(t.params.speed).transform("translate3d(0,0,0) scale(" + r.scale + ")"), r.currentScale = r.scale, r.isScaling = !1, 1 === r.scale && (n.$slideEl = void 0))
            },
            onTouchStart: function(e) {
                var t = this.device,
                    a = this.zoom,
                    i = a.gesture,
                    s = a.image;
                i.$imageEl && 0 !== i.$imageEl.length && (s.isTouched || (t.android && e.cancelable && e.preventDefault(), s.isTouched = !0, s.touchesStart.x = "touchstart" === e.type ? e.targetTouches[0].pageX : e.pageX, s.touchesStart.y = "touchstart" === e.type ? e.targetTouches[0].pageY : e.pageY))
            },
            onTouchMove: function(e) {
                var t = this,
                    a = t.zoom,
                    i = a.gesture,
                    s = a.image,
                    r = a.velocity;
                if (i.$imageEl && 0 !== i.$imageEl.length && (t.allowClick = !1, s.isTouched && i.$slideEl)) {
                    s.isMoved || (s.width = i.$imageEl[0].offsetWidth, s.height = i.$imageEl[0].offsetHeight, s.startX = T(i.$imageWrapEl[0], "x") || 0, s.startY = T(i.$imageWrapEl[0], "y") || 0, i.slideWidth = i.$slideEl[0].offsetWidth, i.slideHeight = i.$slideEl[0].offsetHeight, i.$imageWrapEl.transition(0));
                    var n = s.width * a.scale,
                        l = s.height * a.scale;
                    if (!(n < i.slideWidth && l < i.slideHeight)) {
                        if (s.minX = Math.min(i.slideWidth / 2 - n / 2, 0), s.maxX = -s.minX, s.minY = Math.min(i.slideHeight / 2 - l / 2, 0), s.maxY = -s.minY, s.touchesCurrent.x = "touchmove" === e.type ? e.targetTouches[0].pageX : e.pageX, s.touchesCurrent.y = "touchmove" === e.type ? e.targetTouches[0].pageY : e.pageY, !s.isMoved && !a.isScaling) {
                            if (t.isHorizontal() && (Math.floor(s.minX) === Math.floor(s.startX) && s.touchesCurrent.x < s.touchesStart.x || Math.floor(s.maxX) === Math.floor(s.startX) && s.touchesCurrent.x > s.touchesStart.x)) return void(s.isTouched = !1);
                            if (!t.isHorizontal() && (Math.floor(s.minY) === Math.floor(s.startY) && s.touchesCurrent.y < s.touchesStart.y || Math.floor(s.maxY) === Math.floor(s.startY) && s.touchesCurrent.y > s.touchesStart.y)) return void(s.isTouched = !1)
                        }
                        e.cancelable && e.preventDefault(), e.stopPropagation(), s.isMoved = !0, s.currentX = s.touchesCurrent.x - s.touchesStart.x + s.startX, s.currentY = s.touchesCurrent.y - s.touchesStart.y + s.startY, s.currentX < s.minX && (s.currentX = s.minX + 1 - Math.pow(s.minX - s.currentX + 1, .8)), s.currentX > s.maxX && (s.currentX = s.maxX - 1 + Math.pow(s.currentX - s.maxX + 1, .8)), s.currentY < s.minY && (s.currentY = s.minY + 1 - Math.pow(s.minY - s.currentY + 1, .8)), s.currentY > s.maxY && (s.currentY = s.maxY - 1 + Math.pow(s.currentY - s.maxY + 1, .8)), r.prevPositionX || (r.prevPositionX = s.touchesCurrent.x), r.prevPositionY || (r.prevPositionY = s.touchesCurrent.y), r.prevTime || (r.prevTime = Date.now()), r.x = (s.touchesCurrent.x - r.prevPositionX) / (Date.now() - r.prevTime) / 2, r.y = (s.touchesCurrent.y - r.prevPositionY) / (Date.now() - r.prevTime) / 2, Math.abs(s.touchesCurrent.x - r.prevPositionX) < 2 && (r.x = 0), Math.abs(s.touchesCurrent.y - r.prevPositionY) < 2 && (r.y = 0), r.prevPositionX = s.touchesCurrent.x, r.prevPositionY = s.touchesCurrent.y, r.prevTime = Date.now(), i.$imageWrapEl.transform("translate3d(" + s.currentX + "px, " + s.currentY + "px,0)")
                    }
                }
            },
            onTouchEnd: function() {
                var e = this.zoom,
                    t = e.gesture,
                    a = e.image,
                    i = e.velocity;
                if (t.$imageEl && 0 !== t.$imageEl.length) {
                    if (!a.isTouched || !a.isMoved) return a.isTouched = !1, void(a.isMoved = !1);
                    a.isTouched = !1, a.isMoved = !1;
                    var s = 300,
                        r = 300,
                        n = i.x * s,
                        l = a.currentX + n,
                        o = i.y * r,
                        d = a.currentY + o;
                    0 !== i.x && (s = Math.abs((l - a.currentX) / i.x)), 0 !== i.y && (r = Math.abs((d - a.currentY) / i.y));
                    var p = Math.max(s, r);
                    a.currentX = l, a.currentY = d;
                    var u = a.width * e.scale,
                        c = a.height * e.scale;
                    a.minX = Math.min(t.slideWidth / 2 - u / 2, 0), a.maxX = -a.minX, a.minY = Math.min(t.slideHeight / 2 - c / 2, 0), a.maxY = -a.minY, a.currentX = Math.max(Math.min(a.currentX, a.maxX), a.minX), a.currentY = Math.max(Math.min(a.currentY, a.maxY), a.minY), t.$imageWrapEl.transition(p).transform("translate3d(" + a.currentX + "px, " + a.currentY + "px,0)")
                }
            },
            onTransitionEnd: function() {
                var e = this,
                    t = e.zoom,
                    a = t.gesture;
                a.$slideEl && e.previousIndex !== e.activeIndex && (a.$imageEl && a.$imageEl.transform("translate3d(0,0,0) scale(1)"), a.$imageWrapEl && a.$imageWrapEl.transform("translate3d(0,0,0)"), t.scale = 1, t.currentScale = 1, a.$slideEl = void 0, a.$imageEl = void 0, a.$imageWrapEl = void 0)
            },
            toggle: function(e) {
                var t = this.zoom;
                t.scale && 1 !== t.scale ? t.out() : t.in(e)
            },
            in: function(e) {
                var t, a, i, s, r, n, o, d, p, u, c, h, v, f, g, b, w = this,
                    y = l(),
                    E = w.zoom,
                    x = w.params.zoom,
                    T = E.gesture,
                    C = E.image;
                (T.$slideEl || (e && e.target && (T.$slideEl = m(e.target).closest("." + w.params.slideClass)), T.$slideEl || (w.params.virtual && w.params.virtual.enabled && w.virtual ? T.$slideEl = w.$wrapperEl.children("." + w.params.slideActiveClass) : T.$slideEl = w.slides.eq(w.activeIndex)), T.$imageEl = T.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), T.$imageWrapEl = T.$imageEl.parent("." + x.containerClass)), T.$imageEl && 0 !== T.$imageEl.length && T.$imageWrapEl && 0 !== T.$imageWrapEl.length) && (T.$slideEl.addClass("" + x.zoomedSlideClass), void 0 === C.touchesStart.x && e ? (t = "touchend" === e.type ? e.changedTouches[0].pageX : e.pageX, a = "touchend" === e.type ? e.changedTouches[0].pageY : e.pageY) : (t = C.touchesStart.x, a = C.touchesStart.y), E.scale = T.$imageWrapEl.attr("data-swiper-zoom") || x.maxRatio, E.currentScale = T.$imageWrapEl.attr("data-swiper-zoom") || x.maxRatio, e ? (g = T.$slideEl[0].offsetWidth, b = T.$slideEl[0].offsetHeight, i = T.$slideEl.offset().left + y.scrollX + g / 2 - t, s = T.$slideEl.offset().top + y.scrollY + b / 2 - a, o = T.$imageEl[0].offsetWidth, d = T.$imageEl[0].offsetHeight, p = o * E.scale, u = d * E.scale, v = -(c = Math.min(g / 2 - p / 2, 0)), f = -(h = Math.min(b / 2 - u / 2, 0)), (r = i * E.scale) < c && (r = c), r > v && (r = v), (n = s * E.scale) < h && (n = h), n > f && (n = f)) : (r = 0, n = 0), T.$imageWrapEl.transition(300).transform("translate3d(" + r + "px, " + n + "px,0)"), T.$imageEl.transition(300).transform("translate3d(0,0,0) scale(" + E.scale + ")"))
            },
            out: function() {
                var e = this,
                    t = e.zoom,
                    a = e.params.zoom,
                    i = t.gesture;
                i.$slideEl || (e.params.virtual && e.params.virtual.enabled && e.virtual ? i.$slideEl = e.$wrapperEl.children("." + e.params.slideActiveClass) : i.$slideEl = e.slides.eq(e.activeIndex), i.$imageEl = i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), i.$imageWrapEl = i.$imageEl.parent("." + a.containerClass)), i.$imageEl && 0 !== i.$imageEl.length && i.$imageWrapEl && 0 !== i.$imageWrapEl.length && (t.scale = 1, t.currentScale = 1, i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"), i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"), i.$slideEl.removeClass("" + a.zoomedSlideClass), i.$slideEl = void 0)
            },
            toggleGestures: function(e) {
                var t = this,
                    a = t.zoom,
                    i = a.slideSelector,
                    s = a.passiveListener;
                t.$wrapperEl[e]("gesturestart", i, a.onGestureStart, s), t.$wrapperEl[e]("gesturechange", i, a.onGestureChange, s), t.$wrapperEl[e]("gestureend", i, a.onGestureEnd, s)
            },
            enableGestures: function() {
                this.zoom.gesturesEnabled || (this.zoom.gesturesEnabled = !0, this.zoom.toggleGestures("on"))
            },
            disableGestures: function() {
                this.zoom.gesturesEnabled && (this.zoom.gesturesEnabled = !1, this.zoom.toggleGestures("off"))
            },
            enable: function() {
                var e = this,
                    t = e.support,
                    a = e.zoom;
                if (!a.enabled) {
                    a.enabled = !0;
                    var i = !("touchstart" !== e.touchEvents.start || !t.passiveListener || !e.params.passiveListeners) && {
                            passive: !0,
                            capture: !1
                        },
                        s = !t.passiveListener || {
                            passive: !1,
                            capture: !0
                        },
                        r = "." + e.params.slideClass;
                    e.zoom.passiveListener = i, e.zoom.slideSelector = r, t.gestures ? (e.$wrapperEl.on(e.touchEvents.start, e.zoom.enableGestures, i), e.$wrapperEl.on(e.touchEvents.end, e.zoom.disableGestures, i)) : "touchstart" === e.touchEvents.start && (e.$wrapperEl.on(e.touchEvents.start, r, a.onGestureStart, i), e.$wrapperEl.on(e.touchEvents.move, r, a.onGestureChange, s), e.$wrapperEl.on(e.touchEvents.end, r, a.onGestureEnd, i), e.touchEvents.cancel && e.$wrapperEl.on(e.touchEvents.cancel, r, a.onGestureEnd, i)), e.$wrapperEl.on(e.touchEvents.move, "." + e.params.zoom.containerClass, a.onTouchMove, s)
                }
            },
            disable: function() {
                var e = this,
                    t = e.zoom;
                if (t.enabled) {
                    var a = e.support;
                    e.zoom.enabled = !1;
                    var i = !("touchstart" !== e.touchEvents.start || !a.passiveListener || !e.params.passiveListeners) && {
                            passive: !0,
                            capture: !1
                        },
                        s = !a.passiveListener || {
                            passive: !1,
                            capture: !0
                        },
                        r = "." + e.params.slideClass;
                    a.gestures ? (e.$wrapperEl.off(e.touchEvents.start, e.zoom.enableGestures, i), e.$wrapperEl.off(e.touchEvents.end, e.zoom.disableGestures, i)) : "touchstart" === e.touchEvents.start && (e.$wrapperEl.off(e.touchEvents.start, r, t.onGestureStart, i), e.$wrapperEl.off(e.touchEvents.move, r, t.onGestureChange, s), e.$wrapperEl.off(e.touchEvents.end, r, t.onGestureEnd, i), e.touchEvents.cancel && e.$wrapperEl.off(e.touchEvents.cancel, r, t.onGestureEnd, i)), e.$wrapperEl.off(e.touchEvents.move, "." + e.params.zoom.containerClass, t.onTouchMove, s)
                }
            }
        },
        se = {
            loadInSlide: function(e, t) {
                void 0 === t && (t = !0);
                var a = this,
                    i = a.params.lazy;
                if (void 0 !== e && 0 !== a.slides.length) {
                    var s = a.virtual && a.params.virtual.enabled ? a.$wrapperEl.children("." + a.params.slideClass + '[data-swiper-slide-index="' + e + '"]') : a.slides.eq(e),
                        r = s.find("." + i.elementClass + ":not(." + i.loadedClass + "):not(." + i.loadingClass + ")");
                    !s.hasClass(i.elementClass) || s.hasClass(i.loadedClass) || s.hasClass(i.loadingClass) || r.push(s[0]), 0 !== r.length && r.each(function(e) {
                        var r = m(e);
                        r.addClass(i.loadingClass);
                        var n = r.attr("data-background"),
                            l = r.attr("data-src"),
                            o = r.attr("data-srcset"),
                            d = r.attr("data-sizes"),
                            p = r.parent("picture");
                        a.loadImage(r[0], l || n, o, d, !1, function() {
                            if (null != a && a && (!a || a.params) && !a.destroyed) {
                                if (n ? (r.css("background-image", 'url("' + n + '")'), r.removeAttr("data-background")) : (o && (r.attr("srcset", o), r.removeAttr("data-srcset")), d && (r.attr("sizes", d), r.removeAttr("data-sizes")), p.length && p.children("source").each(function(e) {
                                        var t = m(e);
                                        t.attr("data-srcset") && (t.attr("srcset", t.attr("data-srcset")), t.removeAttr("data-srcset"))
                                    }), l && (r.attr("src", l), r.removeAttr("data-src"))), r.addClass(i.loadedClass).removeClass(i.loadingClass), s.find("." + i.preloaderClass).remove(), a.params.loop && t) {
                                    var e = s.attr("data-swiper-slide-index");
                                    if (s.hasClass(a.params.slideDuplicateClass)) {
                                        var u = a.$wrapperEl.children('[data-swiper-slide-index="' + e + '"]:not(.' + a.params.slideDuplicateClass + ")");
                                        a.lazy.loadInSlide(u.index(), !1)
                                    } else {
                                        var c = a.$wrapperEl.children("." + a.params.slideDuplicateClass + '[data-swiper-slide-index="' + e + '"]');
                                        a.lazy.loadInSlide(c.index(), !1)
                                    }
                                }
                                a.emit("lazyImageReady", s[0], r[0]), a.params.autoHeight && a.updateAutoHeight()
                            }
                        }), a.emit("lazyImageLoad", s[0], r[0])
                    })
                }
            },
            load: function() {
                var e = this,
                    t = e.$wrapperEl,
                    a = e.params,
                    i = e.slides,
                    s = e.activeIndex,
                    r = e.virtual && a.virtual.enabled,
                    n = a.lazy,
                    l = a.slidesPerView;

                function o(e) {
                    if (r) {
                        if (t.children("." + a.slideClass + '[data-swiper-slide-index="' + e + '"]').length) return !0
                    } else if (i[e]) return !0;
                    return !1
                }

                function d(e) {
                    return r ? m(e).attr("data-swiper-slide-index") : m(e).index()
                }
                if ("auto" === l && (l = 0), e.lazy.initialImageLoaded || (e.lazy.initialImageLoaded = !0), e.params.watchSlidesVisibility) t.children("." + a.slideVisibleClass).each(function(t) {
                    var a = r ? m(t).attr("data-swiper-slide-index") : m(t).index();
                    e.lazy.loadInSlide(a)
                });
                else if (l > 1)
                    for (var p = s; p < s + l; p += 1) o(p) && e.lazy.loadInSlide(p);
                else e.lazy.loadInSlide(s);
                if (n.loadPrevNext)
                    if (l > 1 || n.loadPrevNextAmount && n.loadPrevNextAmount > 1) {
                        for (var u = n.loadPrevNextAmount, c = l, h = Math.min(s + c + Math.max(u, c), i.length), v = Math.max(s - Math.max(c, u), 0), f = s + l; f < h; f += 1) o(f) && e.lazy.loadInSlide(f);
                        for (var g = v; g < s; g += 1) o(g) && e.lazy.loadInSlide(g)
                    } else {
                        var b = t.children("." + a.slideNextClass);
                        b.length > 0 && e.lazy.loadInSlide(d(b));
                        var w = t.children("." + a.slidePrevClass);
                        w.length > 0 && e.lazy.loadInSlide(d(w))
                    }
            },
            checkInViewOnLoad: function() {
                var e = l(),
                    t = this;
                if (t && !t.destroyed) {
                    var a = t.params.lazy.scrollingElement ? m(t.params.lazy.scrollingElement) : m(e),
                        i = a[0] === e,
                        s = i ? e.innerWidth : a[0].offsetWidth,
                        r = i ? e.innerHeight : a[0].offsetHeight,
                        n = t.$el.offset(),
                        o = !1;
                    t.rtlTranslate && (n.left -= t.$el[0].scrollLeft);
                    for (var d = [
                            [n.left, n.top],
                            [n.left + t.width, n.top],
                            [n.left, n.top + t.height],
                            [n.left + t.width, n.top + t.height]
                        ], p = 0; p < d.length; p += 1) {
                        var u = d[p];
                        if (u[0] >= 0 && u[0] <= s && u[1] >= 0 && u[1] <= r) {
                            if (0 === u[0] && 0 === u[1]) continue;
                            o = !0
                        }
                    }
                    var c = !("touchstart" !== t.touchEvents.start || !t.support.passiveListener || !t.params.passiveListeners) && {
                        passive: !0,
                        capture: !1
                    };
                    o ? (t.lazy.load(), a.off("scroll", t.lazy.checkInViewOnLoad, c)) : t.lazy.scrollHandlerAttached || (t.lazy.scrollHandlerAttached = !0, a.on("scroll", t.lazy.checkInViewOnLoad, c))
                }
            }
        },
        re = {
            LinearSpline: function(e, t) {
                var a, i, s, r, n, l = function(e, t) {
                    for (i = -1, a = e.length; a - i > 1;) e[s = a + i >> 1] <= t ? i = s : a = s;
                    return a
                };
                return this.x = e, this.y = t, this.lastIndex = e.length - 1, this.interpolate = function(e) {
                    return e ? (n = l(this.x, e), r = n - 1, (e - this.x[r]) * (this.y[n] - this.y[r]) / (this.x[n] - this.x[r]) + this.y[r]) : 0
                }, this
            },
            getInterpolateFunction: function(e) {
                var t = this;
                t.controller.spline || (t.controller.spline = t.params.loop ? new re.LinearSpline(t.slidesGrid, e.slidesGrid) : new re.LinearSpline(t.snapGrid, e.snapGrid))
            },
            setTranslate: function(e, t) {
                var a, i, s = this,
                    r = s.controller.control,
                    n = s.constructor;

                function l(e) {
                    var t = s.rtlTranslate ? -s.translate : s.translate;
                    "slide" === s.params.controller.by && (s.controller.getInterpolateFunction(e), i = -s.controller.spline.interpolate(-t)), i && "container" !== s.params.controller.by || (a = (e.maxTranslate() - e.minTranslate()) / (s.maxTranslate() - s.minTranslate()), i = (t - s.minTranslate()) * a + e.minTranslate()), s.params.controller.inverse && (i = e.maxTranslate() - i), e.updateProgress(i), e.setTranslate(i, s), e.updateActiveIndex(), e.updateSlidesClasses()
                }
                if (Array.isArray(r))
                    for (var o = 0; o < r.length; o += 1) r[o] !== t && r[o] instanceof n && l(r[o]);
                else r instanceof n && t !== r && l(r)
            },
            setTransition: function(e, t) {
                var a, i = this,
                    s = i.constructor,
                    r = i.controller.control;

                function n(t) {
                    t.setTransition(e, i), 0 !== e && (t.transitionStart(), t.params.autoHeight && E(function() {
                        t.updateAutoHeight()
                    }), t.$wrapperEl.transitionEnd(function() {
                        r && (t.params.loop && "slide" === i.params.controller.by && t.loopFix(), t.transitionEnd())
                    }))
                }
                if (Array.isArray(r))
                    for (a = 0; a < r.length; a += 1) r[a] !== t && r[a] instanceof s && n(r[a]);
                else r instanceof s && t !== r && n(r)
            }
        },
        ne = {
            getRandomNumber: function(e) {
                void 0 === e && (e = 16);
                return "x".repeat(e).replace(/x/g, function() {
                    return Math.round(16 * Math.random()).toString(16)
                })
            },
            makeElFocusable: function(e) {
                return e.attr("tabIndex", "0"), e
            },
            makeElNotFocusable: function(e) {
                return e.attr("tabIndex", "-1"), e
            },
            addElRole: function(e, t) {
                return e.attr("role", t), e
            },
            addElRoleDescription: function(e, t) {
                return e.attr("aria-roledescription", t), e
            },
            addElControls: function(e, t) {
                return e.attr("aria-controls", t), e
            },
            addElLabel: function(e, t) {
                return e.attr("aria-label", t), e
            },
            addElId: function(e, t) {
                return e.attr("id", t), e
            },
            addElLive: function(e, t) {
                return e.attr("aria-live", t), e
            },
            disableEl: function(e) {
                return e.attr("aria-disabled", !0), e
            },
            enableEl: function(e) {
                return e.attr("aria-disabled", !1), e
            },
            onEnterOrSpaceKey: function(e) {
                if (13 === e.keyCode || 32 === e.keyCode) {
                    var t = this,
                        a = t.params.a11y,
                        i = m(e.target);
                    t.navigation && t.navigation.$nextEl && i.is(t.navigation.$nextEl) && (t.isEnd && !t.params.loop || t.slideNext(), t.isEnd ? t.a11y.notify(a.lastSlideMessage) : t.a11y.notify(a.nextSlideMessage)), t.navigation && t.navigation.$prevEl && i.is(t.navigation.$prevEl) && (t.isBeginning && !t.params.loop || t.slidePrev(), t.isBeginning ? t.a11y.notify(a.firstSlideMessage) : t.a11y.notify(a.prevSlideMessage)), t.pagination && i.is(P(t.params.pagination.bulletClass)) && i[0].click()
                }
            },
            notify: function(e) {
                var t = this.a11y.liveRegion;
                0 !== t.length && (t.html(""), t.html(e))
            },
            updateNavigation: function() {
                var e = this;
                if (!e.params.loop && e.navigation) {
                    var t = e.navigation,
                        a = t.$nextEl,
                        i = t.$prevEl;
                    i && i.length > 0 && (e.isBeginning ? (e.a11y.disableEl(i), e.a11y.makeElNotFocusable(i)) : (e.a11y.enableEl(i), e.a11y.makeElFocusable(i))), a && a.length > 0 && (e.isEnd ? (e.a11y.disableEl(a), e.a11y.makeElNotFocusable(a)) : (e.a11y.enableEl(a), e.a11y.makeElFocusable(a)))
                }
            },
            updatePagination: function() {
                var e = this,
                    t = e.params.a11y;
                e.pagination && e.params.pagination.clickable && e.pagination.bullets && e.pagination.bullets.length && e.pagination.bullets.each(function(a) {
                    var i = m(a);
                    e.a11y.makeElFocusable(i), e.params.pagination.renderBullet || (e.a11y.addElRole(i, "button"), e.a11y.addElLabel(i, t.paginationBulletMessage.replace(/\{\{index\}\}/, i.index() + 1)))
                })
            },
            init: function() {
                var e = this,
                    t = e.params.a11y;
                e.$el.append(e.a11y.liveRegion);
                var a = e.$el;
                t.containerRoleDescriptionMessage && e.a11y.addElRoleDescription(a, t.containerRoleDescriptionMessage), t.containerMessage && e.a11y.addElLabel(a, t.containerMessage);
                var i = e.$wrapperEl,
                    s = i.attr("id") || "swiper-wrapper-" + e.a11y.getRandomNumber(16),
                    r = e.params.autoplay && e.params.autoplay.enabled ? "off" : "polite";
                e.a11y.addElId(i, s), e.a11y.addElLive(i, r), t.itemRoleDescriptionMessage && e.a11y.addElRoleDescription(m(e.slides), t.itemRoleDescriptionMessage), e.a11y.addElRole(m(e.slides), t.slideRole);
                var n, l, o = e.params.loop ? e.slides.filter(function(t) {
                    return !t.classList.contains(e.params.slideDuplicateClass)
                }).length : e.slides.length;
                e.slides.each(function(a, i) {
                    var s = m(a),
                        r = e.params.loop ? parseInt(s.attr("data-swiper-slide-index"), 10) : i,
                        n = t.slideLabelMessage.replace(/\{\{index\}\}/, r + 1).replace(/\{\{slidesLength\}\}/, o);
                    e.a11y.addElLabel(s, n)
                }), e.navigation && e.navigation.$nextEl && (n = e.navigation.$nextEl), e.navigation && e.navigation.$prevEl && (l = e.navigation.$prevEl), n && n.length && (e.a11y.makeElFocusable(n), "BUTTON" !== n[0].tagName && (e.a11y.addElRole(n, "button"), n.on("keydown", e.a11y.onEnterOrSpaceKey)), e.a11y.addElLabel(n, t.nextSlideMessage), e.a11y.addElControls(n, s)), l && l.length && (e.a11y.makeElFocusable(l), "BUTTON" !== l[0].tagName && (e.a11y.addElRole(l, "button"), l.on("keydown", e.a11y.onEnterOrSpaceKey)), e.a11y.addElLabel(l, t.prevSlideMessage), e.a11y.addElControls(l, s)), e.pagination && e.params.pagination.clickable && e.pagination.bullets && e.pagination.bullets.length && e.pagination.$el.on("keydown", P(e.params.pagination.bulletClass), e.a11y.onEnterOrSpaceKey)
            },
            destroy: function() {
                var e, t, a = this;
                a.a11y.liveRegion && a.a11y.liveRegion.length > 0 && a.a11y.liveRegion.remove(), a.navigation && a.navigation.$nextEl && (e = a.navigation.$nextEl), a.navigation && a.navigation.$prevEl && (t = a.navigation.$prevEl), e && e.off("keydown", a.a11y.onEnterOrSpaceKey), t && t.off("keydown", a.a11y.onEnterOrSpaceKey), a.pagination && a.params.pagination.clickable && a.pagination.bullets && a.pagination.bullets.length && a.pagination.$el.off("keydown", P(a.params.pagination.bulletClass), a.a11y.onEnterOrSpaceKey)
            }
        },
        le = {
            init: function() {
                var e = this,
                    t = l();
                if (e.params.history) {
                    if (!t.history || !t.history.pushState) return e.params.history.enabled = !1, void(e.params.hashNavigation.enabled = !0);
                    var a = e.history;
                    a.initialized = !0, a.paths = le.getPathValues(e.params.url), (a.paths.key || a.paths.value) && (a.scrollToSlide(0, a.paths.value, e.params.runCallbacksOnInit), e.params.history.replaceState || t.addEventListener("popstate", e.history.setHistoryPopState))
                }
            },
            destroy: function() {
                var e = l();
                this.params.history.replaceState || e.removeEventListener("popstate", this.history.setHistoryPopState)
            },
            setHistoryPopState: function() {
                var e = this;
                e.history.paths = le.getPathValues(e.params.url), e.history.scrollToSlide(e.params.speed, e.history.paths.value, !1)
            },
            getPathValues: function(e) {
                var t = l(),
                    a = (e ? new URL(e) : t.location).pathname.slice(1).split("/").filter(function(e) {
                        return "" !== e
                    }),
                    i = a.length;
                return {
                    key: a[i - 2],
                    value: a[i - 1]
                }
            },
            setHistory: function(e, t) {
                var a = this,
                    i = l();
                if (a.history.initialized && a.params.history.enabled) {
                    var s;
                    s = a.params.url ? new URL(a.params.url) : i.location;
                    var r = a.slides.eq(t),
                        n = le.slugify(r.attr("data-history"));
                    if (a.params.history.root.length > 0) {
                        var o = a.params.history.root;
                        "/" === o[o.length - 1] && (o = o.slice(0, o.length - 1)), n = o + "/" + e + "/" + n
                    } else s.pathname.includes(e) || (n = e + "/" + n);
                    var d = i.history.state;
                    d && d.value === n || (a.params.history.replaceState ? i.history.replaceState({
                        value: n
                    }, null, n) : i.history.pushState({
                        value: n
                    }, null, n))
                }
            },
            slugify: function(e) {
                return e.toString().replace(/\s+/g, "-").replace(/[^\w-]+/g, "").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "")
            },
            scrollToSlide: function(e, t, a) {
                var i = this;
                if (t)
                    for (var s = 0, r = i.slides.length; s < r; s += 1) {
                        var n = i.slides.eq(s);
                        if (le.slugify(n.attr("data-history")) === t && !n.hasClass(i.params.slideDuplicateClass)) {
                            var l = n.index();
                            i.slideTo(l, e, a)
                        }
                    } else i.slideTo(0, e, a)
            }
        },
        oe = {
            onHashChange: function() {
                var e = this,
                    t = r();
                e.emit("hashChange");
                var a = t.location.hash.replace("#", "");
                if (a !== e.slides.eq(e.activeIndex).attr("data-hash")) {
                    var i = e.$wrapperEl.children("." + e.params.slideClass + '[data-hash="' + a + '"]').index();
                    if (void 0 === i) return;
                    e.slideTo(i)
                }
            },
            setHash: function() {
                var e = this,
                    t = l(),
                    a = r();
                if (e.hashNavigation.initialized && e.params.hashNavigation.enabled)
                    if (e.params.hashNavigation.replaceState && t.history && t.history.replaceState) t.history.replaceState(null, null, "#" + e.slides.eq(e.activeIndex).attr("data-hash") || ""), e.emit("hashSet");
                    else {
                        var i = e.slides.eq(e.activeIndex),
                            s = i.attr("data-hash") || i.attr("data-history");
                        a.location.hash = s || "", e.emit("hashSet")
                    }
            },
            init: function() {
                var e = this,
                    t = r(),
                    a = l();
                if (!(!e.params.hashNavigation.enabled || e.params.history && e.params.history.enabled)) {
                    e.hashNavigation.initialized = !0;
                    var i = t.location.hash.replace("#", "");
                    if (i)
                        for (var s = 0, n = e.slides.length; s < n; s += 1) {
                            var o = e.slides.eq(s);
                            if ((o.attr("data-hash") || o.attr("data-history")) === i && !o.hasClass(e.params.slideDuplicateClass)) {
                                var d = o.index();
                                e.slideTo(d, 0, e.params.runCallbacksOnInit, !0)
                            }
                        }
                    e.params.hashNavigation.watchState && m(a).on("hashchange", e.hashNavigation.onHashChange)
                }
            },
            destroy: function() {
                var e = l();
                this.params.hashNavigation.watchState && m(e).off("hashchange", this.hashNavigation.onHashChange)
            }
        },
        de = {
            run: function() {
                var e = this,
                    t = e.slides.eq(e.activeIndex),
                    a = e.params.autoplay.delay;
                t.attr("data-swiper-autoplay") && (a = t.attr("data-swiper-autoplay") || e.params.autoplay.delay), clearTimeout(e.autoplay.timeout), e.autoplay.timeout = E(function() {
                    var t;
                    e.params.autoplay.reverseDirection ? e.params.loop ? (e.loopFix(), t = e.slidePrev(e.params.speed, !0, !0), e.emit("autoplay")) : e.isBeginning ? e.params.autoplay.stopOnLastSlide ? e.autoplay.stop() : (t = e.slideTo(e.slides.length - 1, e.params.speed, !0, !0), e.emit("autoplay")) : (t = e.slidePrev(e.params.speed, !0, !0), e.emit("autoplay")) : e.params.loop ? (e.loopFix(), t = e.slideNext(e.params.speed, !0, !0), e.emit("autoplay")) : e.isEnd ? e.params.autoplay.stopOnLastSlide ? e.autoplay.stop() : (t = e.slideTo(0, e.params.speed, !0, !0), e.emit("autoplay")) : (t = e.slideNext(e.params.speed, !0, !0), e.emit("autoplay")), (e.params.cssMode && e.autoplay.running || !1 === t) && e.autoplay.run()
                }, a)
            },
            start: function() {
                var e = this;
                return void 0 === e.autoplay.timeout && (!e.autoplay.running && (e.autoplay.running = !0, e.emit("autoplayStart"), e.autoplay.run(), !0))
            },
            stop: function() {
                var e = this;
                return !!e.autoplay.running && (void 0 !== e.autoplay.timeout && (e.autoplay.timeout && (clearTimeout(e.autoplay.timeout), e.autoplay.timeout = void 0), e.autoplay.running = !1, e.emit("autoplayStop"), !0))
            },
            pause: function(e) {
                var t = this;
                t.autoplay.running && (t.autoplay.paused || (t.autoplay.timeout && clearTimeout(t.autoplay.timeout), t.autoplay.paused = !0, 0 !== e && t.params.autoplay.waitForTransition ? ["transitionend", "webkitTransitionEnd"].forEach(function(e) {
                    t.$wrapperEl[0].addEventListener(e, t.autoplay.onTransitionEnd)
                }) : (t.autoplay.paused = !1, t.autoplay.run())))
            },
            onVisibilityChange: function() {
                var e = this,
                    t = r();
                "hidden" === t.visibilityState && e.autoplay.running && e.autoplay.pause(), "visible" === t.visibilityState && e.autoplay.paused && (e.autoplay.run(), e.autoplay.paused = !1)
            },
            onTransitionEnd: function(e) {
                var t = this;
                t && !t.destroyed && t.$wrapperEl && e.target === t.$wrapperEl[0] && (["transitionend", "webkitTransitionEnd"].forEach(function(e) {
                    t.$wrapperEl[0].removeEventListener(e, t.autoplay.onTransitionEnd)
                }), t.autoplay.paused = !1, t.autoplay.running ? t.autoplay.run() : t.autoplay.stop())
            },
            onMouseEnter: function() {
                var e = this;
                e.params.autoplay.disableOnInteraction ? e.autoplay.stop() : e.autoplay.pause(), ["transitionend", "webkitTransitionEnd"].forEach(function(t) {
                    e.$wrapperEl[0].removeEventListener(t, e.autoplay.onTransitionEnd)
                })
            },
            onMouseLeave: function() {
                var e = this;
                e.params.autoplay.disableOnInteraction || (e.autoplay.paused = !1, e.autoplay.run())
            },
            attachMouseEvents: function() {
                var e = this;
                e.params.autoplay.pauseOnMouseEnter && (e.$el.on("mouseenter", e.autoplay.onMouseEnter), e.$el.on("mouseleave", e.autoplay.onMouseLeave))
            },
            detachMouseEvents: function() {
                var e = this;
                e.$el.off("mouseenter", e.autoplay.onMouseEnter), e.$el.off("mouseleave", e.autoplay.onMouseLeave)
            }
        },
        pe = {
            setTranslate: function() {
                for (var e = this, t = e.slides, a = 0; a < t.length; a += 1) {
                    var i = e.slides.eq(a),
                        s = -i[0].swiperSlideOffset;
                    e.params.virtualTranslate || (s -= e.translate);
                    var r = 0;
                    e.isHorizontal() || (r = s, s = 0);
                    var n = e.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(i[0].progress), 0) : 1 + Math.min(Math.max(i[0].progress, -1), 0);
                    i.css({
                        opacity: n
                    }).transform("translate3d(" + s + "px, " + r + "px, 0px)")
                }
            },
            setTransition: function(e) {
                var t = this,
                    a = t.slides,
                    i = t.$wrapperEl;
                if (a.transition(e), t.params.virtualTranslate && 0 !== e) {
                    var s = !1;
                    a.transitionEnd(function() {
                        if (!s && t && !t.destroyed) {
                            s = !0, t.animating = !1;
                            for (var e = ["webkitTransitionEnd", "transitionend"], a = 0; a < e.length; a += 1) i.trigger(e[a])
                        }
                    })
                }
            }
        },
        ue = {
            setTranslate: function() {
                var e, t = this,
                    a = t.$el,
                    i = t.$wrapperEl,
                    s = t.slides,
                    r = t.width,
                    n = t.height,
                    l = t.rtlTranslate,
                    o = t.size,
                    d = t.browser,
                    p = t.params.cubeEffect,
                    u = t.isHorizontal(),
                    c = t.virtual && t.params.virtual.enabled,
                    h = 0;
                p.shadow && (u ? (0 === (e = i.find(".swiper-cube-shadow")).length && (e = m('<div class="swiper-cube-shadow"></div>'), i.append(e)), e.css({
                    height: r + "px"
                })) : 0 === (e = a.find(".swiper-cube-shadow")).length && (e = m('<div class="swiper-cube-shadow"></div>'), a.append(e)));
                for (var v = 0; v < s.length; v += 1) {
                    var f = s.eq(v),
                        g = v;
                    c && (g = parseInt(f.attr("data-swiper-slide-index"), 10));
                    var b = 90 * g,
                        w = Math.floor(b / 360);
                    l && (b = -b, w = Math.floor(-b / 360));
                    var y = Math.max(Math.min(f[0].progress, 1), -1),
                        E = 0,
                        x = 0,
                        T = 0;
                    g % 4 == 0 ? (E = 4 * -w * o, T = 0) : (g - 1) % 4 == 0 ? (E = 0, T = 4 * -w * o) : (g - 2) % 4 == 0 ? (E = o + 4 * w * o, T = o) : (g - 3) % 4 == 0 && (E = -o, T = 3 * o + 4 * o * w), l && (E = -E), u || (x = E, E = 0);
                    var C = "rotateX(" + (u ? 0 : -b) + "deg) rotateY(" + (u ? b : 0) + "deg) translate3d(" + E + "px, " + x + "px, " + T + "px)";
                    if (y <= 1 && y > -1 && (h = 90 * g + 90 * y, l && (h = 90 * -g - 90 * y)), f.transform(C), p.slideShadows) {
                        var S = u ? f.find(".swiper-slide-shadow-left") : f.find(".swiper-slide-shadow-top"),
                            M = u ? f.find(".swiper-slide-shadow-right") : f.find(".swiper-slide-shadow-bottom");
                        0 === S.length && (S = m('<div class="swiper-slide-shadow-' + (u ? "left" : "top") + '"></div>'), f.append(S)), 0 === M.length && (M = m('<div class="swiper-slide-shadow-' + (u ? "right" : "bottom") + '"></div>'), f.append(M)), S.length && (S[0].style.opacity = Math.max(-y, 0)), M.length && (M[0].style.opacity = Math.max(y, 0))
                    }
                }
                if (i.css({
                        "-webkit-transform-origin": "50% 50% -" + o / 2 + "px",
                        "-moz-transform-origin": "50% 50% -" + o / 2 + "px",
                        "-ms-transform-origin": "50% 50% -" + o / 2 + "px",
                        "transform-origin": "50% 50% -" + o / 2 + "px"
                    }), p.shadow)
                    if (u) e.transform("translate3d(0px, " + (r / 2 + p.shadowOffset) + "px, " + -r / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + p.shadowScale + ")");
                    else {
                        var z = Math.abs(h) - 90 * Math.floor(Math.abs(h) / 90),
                            P = 1.5 - (Math.sin(2 * z * Math.PI / 360) / 2 + Math.cos(2 * z * Math.PI / 360) / 2),
                            k = p.shadowScale,
                            $ = p.shadowScale / P,
                            L = p.shadowOffset;
                        e.transform("scale3d(" + k + ", 1, " + $ + ") translate3d(0px, " + (n / 2 + L) + "px, " + -n / 2 / $ + "px) rotateX(-90deg)")
                    }
                var I = d.isSafari || d.isWebView ? -o / 2 : 0;
                i.transform("translate3d(0px,0," + I + "px) rotateX(" + (t.isHorizontal() ? 0 : h) + "deg) rotateY(" + (t.isHorizontal() ? -h : 0) + "deg)")
            },
            setTransition: function(e) {
                var t = this,
                    a = t.$el;
                t.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), t.params.cubeEffect.shadow && !t.isHorizontal() && a.find(".swiper-cube-shadow").transition(e)
            }
        },
        ce = {
            setTranslate: function() {
                for (var e = this, t = e.slides, a = e.rtlTranslate, i = 0; i < t.length; i += 1) {
                    var s = t.eq(i),
                        r = s[0].progress;
                    e.params.flipEffect.limitRotation && (r = Math.max(Math.min(s[0].progress, 1), -1));
                    var n = -180 * r,
                        l = 0,
                        o = -s[0].swiperSlideOffset,
                        d = 0;
                    if (e.isHorizontal() ? a && (n = -n) : (d = o, o = 0, l = -n, n = 0), s[0].style.zIndex = -Math.abs(Math.round(r)) + t.length, e.params.flipEffect.slideShadows) {
                        var p = e.isHorizontal() ? s.find(".swiper-slide-shadow-left") : s.find(".swiper-slide-shadow-top"),
                            u = e.isHorizontal() ? s.find(".swiper-slide-shadow-right") : s.find(".swiper-slide-shadow-bottom");
                        0 === p.length && (p = m('<div class="swiper-slide-shadow-' + (e.isHorizontal() ? "left" : "top") + '"></div>'), s.append(p)), 0 === u.length && (u = m('<div class="swiper-slide-shadow-' + (e.isHorizontal() ? "right" : "bottom") + '"></div>'), s.append(u)), p.length && (p[0].style.opacity = Math.max(-r, 0)), u.length && (u[0].style.opacity = Math.max(r, 0))
                    }
                    s.transform("translate3d(" + o + "px, " + d + "px, 0px) rotateX(" + l + "deg) rotateY(" + n + "deg)")
                }
            },
            setTransition: function(e) {
                var t = this,
                    a = t.slides,
                    i = t.activeIndex,
                    s = t.$wrapperEl;
                if (a.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), t.params.virtualTranslate && 0 !== e) {
                    var r = !1;
                    a.eq(i).transitionEnd(function() {
                        if (!r && t && !t.destroyed) {
                            r = !0, t.animating = !1;
                            for (var e = ["webkitTransitionEnd", "transitionend"], a = 0; a < e.length; a += 1) s.trigger(e[a])
                        }
                    })
                }
            }
        },
        he = {
            setTranslate: function() {
                for (var e = this, t = e.width, a = e.height, i = e.slides, s = e.slidesSizesGrid, r = e.params.coverflowEffect, n = e.isHorizontal(), l = e.translate, o = n ? t / 2 - l : a / 2 - l, d = n ? r.rotate : -r.rotate, p = r.depth, u = 0, c = i.length; u < c; u += 1) {
                    var h = i.eq(u),
                        v = s[u],
                        f = (o - h[0].swiperSlideOffset - v / 2) / v * r.modifier,
                        g = n ? d * f : 0,
                        b = n ? 0 : d * f,
                        w = -p * Math.abs(f),
                        y = r.stretch;
                    "string" == typeof y && -1 !== y.indexOf("%") && (y = parseFloat(r.stretch) / 100 * v);
                    var E = n ? 0 : y * f,
                        x = n ? y * f : 0,
                        T = 1 - (1 - r.scale) * Math.abs(f);
                    Math.abs(x) < .001 && (x = 0), Math.abs(E) < .001 && (E = 0), Math.abs(w) < .001 && (w = 0), Math.abs(g) < .001 && (g = 0), Math.abs(b) < .001 && (b = 0), Math.abs(T) < .001 && (T = 0);
                    var C = "translate3d(" + x + "px," + E + "px," + w + "px)  rotateX(" + b + "deg) rotateY(" + g + "deg) scale(" + T + ")";
                    if (h.transform(C), h[0].style.zIndex = 1 - Math.abs(Math.round(f)), r.slideShadows) {
                        var S = n ? h.find(".swiper-slide-shadow-left") : h.find(".swiper-slide-shadow-top"),
                            M = n ? h.find(".swiper-slide-shadow-right") : h.find(".swiper-slide-shadow-bottom");
                        0 === S.length && (S = m('<div class="swiper-slide-shadow-' + (n ? "left" : "top") + '"></div>'), h.append(S)), 0 === M.length && (M = m('<div class="swiper-slide-shadow-' + (n ? "right" : "bottom") + '"></div>'), h.append(M)), S.length && (S[0].style.opacity = f > 0 ? f : 0), M.length && (M[0].style.opacity = -f > 0 ? -f : 0)
                    }
                }
            },
            setTransition: function(e) {
                this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)
            }
        },
        ve = {
            init: function() {
                var e = this,
                    t = e.params.thumbs;
                if (e.thumbs.initialized) return !1;
                e.thumbs.initialized = !0;
                var a = e.constructor;
                return t.swiper instanceof a ? (e.thumbs.swiper = t.swiper, M(e.thumbs.swiper.originalParams, {
                    watchSlidesProgress: !0,
                    slideToClickedSlide: !1
                }), M(e.thumbs.swiper.params, {
                    watchSlidesProgress: !0,
                    slideToClickedSlide: !1
                })) : C(t.swiper) && (e.thumbs.swiper = new a(M({}, t.swiper, {
                    watchSlidesVisibility: !0,
                    watchSlidesProgress: !0,
                    slideToClickedSlide: !1
                })), e.thumbs.swiperCreated = !0), e.thumbs.swiper.$el.addClass(e.params.thumbs.thumbsContainerClass), e.thumbs.swiper.on("tap", e.thumbs.onThumbClick), !0
            },
            onThumbClick: function() {
                var e = this,
                    t = e.thumbs.swiper;
                if (t) {
                    var a = t.clickedIndex,
                        i = t.clickedSlide;
                    if (!(i && m(i).hasClass(e.params.thumbs.slideThumbActiveClass) || null == a)) {
                        var s;
                        if (s = t.params.loop ? parseInt(m(t.clickedSlide).attr("data-swiper-slide-index"), 10) : a, e.params.loop) {
                            var r = e.activeIndex;
                            e.slides.eq(r).hasClass(e.params.slideDuplicateClass) && (e.loopFix(), e._clientLeft = e.$wrapperEl[0].clientLeft, r = e.activeIndex);
                            var n = e.slides.eq(r).prevAll('[data-swiper-slide-index="' + s + '"]').eq(0).index(),
                                l = e.slides.eq(r).nextAll('[data-swiper-slide-index="' + s + '"]').eq(0).index();
                            s = void 0 === n ? l : void 0 === l ? n : l - r < r - n ? l : n
                        }
                        e.slideTo(s)
                    }
                }
            },
            update: function(e) {
                var t = this,
                    a = t.thumbs.swiper;
                if (a) {
                    var i = "auto" === a.params.slidesPerView ? a.slidesPerViewDynamic() : a.params.slidesPerView,
                        s = t.params.thumbs.autoScrollOffset,
                        r = s && !a.params.loop;
                    if (t.realIndex !== a.realIndex || r) {
                        var n, l, o = a.activeIndex;
                        if (a.params.loop) {
                            a.slides.eq(o).hasClass(a.params.slideDuplicateClass) && (a.loopFix(), a._clientLeft = a.$wrapperEl[0].clientLeft, o = a.activeIndex);
                            var d = a.slides.eq(o).prevAll('[data-swiper-slide-index="' + t.realIndex + '"]').eq(0).index(),
                                p = a.slides.eq(o).nextAll('[data-swiper-slide-index="' + t.realIndex + '"]').eq(0).index();
                            n = void 0 === d ? p : void 0 === p ? d : p - o == o - d ? a.params.slidesPerGroup > 1 ? p : o : p - o < o - d ? p : d, l = t.activeIndex > t.previousIndex ? "next" : "prev"
                        } else l = (n = t.realIndex) > t.previousIndex ? "next" : "prev";
                        r && (n += "next" === l ? s : -1 * s), a.visibleSlidesIndexes && a.visibleSlidesIndexes.indexOf(n) < 0 && (a.params.centeredSlides ? n = n > o ? n - Math.floor(i / 2) + 1 : n + Math.floor(i / 2) - 1 : n > o && a.params.slidesPerGroup, a.slideTo(n, e ? 0 : void 0))
                    }
                    var u = 1,
                        c = t.params.thumbs.slideThumbActiveClass;
                    if (t.params.slidesPerView > 1 && !t.params.centeredSlides && (u = t.params.slidesPerView), t.params.thumbs.multipleActiveThumbs || (u = 1), u = Math.floor(u), a.slides.removeClass(c), a.params.loop || a.params.virtual && a.params.virtual.enabled)
                        for (var h = 0; h < u; h += 1) a.$wrapperEl.children('[data-swiper-slide-index="' + (t.realIndex + h) + '"]').addClass(c);
                    else
                        for (var v = 0; v < u; v += 1) a.slides.eq(t.realIndex + v).addClass(c)
                }
            }
        },
        fe = [U, Z, {
            name: "mousewheel",
            params: {
                mousewheel: {
                    enabled: !1,
                    releaseOnEdges: !1,
                    invert: !1,
                    forceToAxis: !1,
                    sensitivity: 1,
                    eventsTarget: "container",
                    thresholdDelta: null,
                    thresholdTime: null
                }
            },
            create: function() {
                z(this, {
                    mousewheel: {
                        enabled: !1,
                        lastScrollTime: x(),
                        lastEventBeforeSnap: void 0,
                        recentWheelEvents: [],
                        enable: J.enable,
                        disable: J.disable,
                        handle: J.handle,
                        handleMouseEnter: J.handleMouseEnter,
                        handleMouseLeave: J.handleMouseLeave,
                        animateSlider: J.animateSlider,
                        releaseScroll: J.releaseScroll
                    }
                })
            },
            on: {
                init: function(e) {
                    !e.params.mousewheel.enabled && e.params.cssMode && e.mousewheel.disable(), e.params.mousewheel.enabled && e.mousewheel.enable()
                },
                destroy: function(e) {
                    e.params.cssMode && e.mousewheel.enable(), e.mousewheel.enabled && e.mousewheel.disable()
                }
            }
        }, {
            name: "navigation",
            params: {
                navigation: {
                    nextEl: null,
                    prevEl: null,
                    hideOnClick: !1,
                    disabledClass: "swiper-button-disabled",
                    hiddenClass: "swiper-button-hidden",
                    lockClass: "swiper-button-lock"
                }
            },
            create: function() {
                z(this, {
                    navigation: t({}, Q)
                })
            },
            on: {
                init: function(e) {
                    e.navigation.init(), e.navigation.update()
                },
                toEdge: function(e) {
                    e.navigation.update()
                },
                fromEdge: function(e) {
                    e.navigation.update()
                },
                destroy: function(e) {
                    e.navigation.destroy()
                },
                "enable disable": function(e) {
                    var t = e.navigation,
                        a = t.$nextEl,
                        i = t.$prevEl;
                    a && a[e.enabled ? "removeClass" : "addClass"](e.params.navigation.lockClass), i && i[e.enabled ? "removeClass" : "addClass"](e.params.navigation.lockClass)
                },
                click: function(e, t) {
                    var a = e.navigation,
                        i = a.$nextEl,
                        s = a.$prevEl,
                        r = t.target;
                    if (e.params.navigation.hideOnClick && !m(r).is(s) && !m(r).is(i)) {
                        if (e.pagination && e.params.pagination && e.params.pagination.clickable && (e.pagination.el === r || e.pagination.el.contains(r))) return;
                        var n;
                        i ? n = i.hasClass(e.params.navigation.hiddenClass) : s && (n = s.hasClass(e.params.navigation.hiddenClass)), !0 === n ? e.emit("navigationShow") : e.emit("navigationHide"), i && i.toggleClass(e.params.navigation.hiddenClass), s && s.toggleClass(e.params.navigation.hiddenClass)
                    }
                }
            }
        }, {
            name: "pagination",
            params: {
                pagination: {
                    el: null,
                    bulletElement: "span",
                    clickable: !1,
                    hideOnClick: !1,
                    renderBullet: null,
                    renderProgressbar: null,
                    renderFraction: null,
                    renderCustom: null,
                    progressbarOpposite: !1,
                    type: "bullets",
                    dynamicBullets: !1,
                    dynamicMainBullets: 1,
                    formatFractionCurrent: function(e) {
                        return e
                    },
                    formatFractionTotal: function(e) {
                        return e
                    },
                    bulletClass: "swiper-pagination-bullet",
                    bulletActiveClass: "swiper-pagination-bullet-active",
                    modifierClass: "swiper-pagination-",
                    currentClass: "swiper-pagination-current",
                    totalClass: "swiper-pagination-total",
                    hiddenClass: "swiper-pagination-hidden",
                    progressbarFillClass: "swiper-pagination-progressbar-fill",
                    progressbarOppositeClass: "swiper-pagination-progressbar-opposite",
                    clickableClass: "swiper-pagination-clickable",
                    lockClass: "swiper-pagination-lock"
                }
            },
            create: function() {
                z(this, {
                    pagination: t({
                        dynamicBulletIndex: 0
                    }, ee)
                })
            },
            on: {
                init: function(e) {
                    e.pagination.init(), e.pagination.render(), e.pagination.update()
                },
                activeIndexChange: function(e) {
                    (e.params.loop || void 0 === e.snapIndex) && e.pagination.update()
                },
                snapIndexChange: function(e) {
                    e.params.loop || e.pagination.update()
                },
                slidesLengthChange: function(e) {
                    e.params.loop && (e.pagination.render(), e.pagination.update())
                },
                snapGridLengthChange: function(e) {
                    e.params.loop || (e.pagination.render(), e.pagination.update())
                },
                destroy: function(e) {
                    e.pagination.destroy()
                },
                "enable disable": function(e) {
                    var t = e.pagination.$el;
                    t && t[e.enabled ? "removeClass" : "addClass"](e.params.pagination.lockClass)
                },
                click: function(e, t) {
                    var a = t.target;
                    if (e.params.pagination.el && e.params.pagination.hideOnClick && e.pagination.$el.length > 0 && !m(a).hasClass(e.params.pagination.bulletClass)) {
                        if (e.navigation && (e.navigation.nextEl && a === e.navigation.nextEl || e.navigation.prevEl && a === e.navigation.prevEl)) return;
                        !0 === e.pagination.$el.hasClass(e.params.pagination.hiddenClass) ? e.emit("paginationShow") : e.emit("paginationHide"), e.pagination.$el.toggleClass(e.params.pagination.hiddenClass)
                    }
                }
            }
        }, {
            name: "scrollbar",
            params: {
                scrollbar: {
                    el: null,
                    dragSize: "auto",
                    hide: !1,
                    draggable: !1,
                    snapOnRelease: !0,
                    lockClass: "swiper-scrollbar-lock",
                    dragClass: "swiper-scrollbar-drag"
                }
            },
            create: function() {
                z(this, {
                    scrollbar: t({
                        isTouched: !1,
                        timeout: null,
                        dragTimeout: null
                    }, te)
                })
            },
            on: {
                init: function(e) {
                    e.scrollbar.init(), e.scrollbar.updateSize(), e.scrollbar.setTranslate()
                },
                update: function(e) {
                    e.scrollbar.updateSize()
                },
                resize: function(e) {
                    e.scrollbar.updateSize()
                },
                observerUpdate: function(e) {
                    e.scrollbar.updateSize()
                },
                setTranslate: function(e) {
                    e.scrollbar.setTranslate()
                },
                setTransition: function(e, t) {
                    e.scrollbar.setTransition(t)
                },
                "enable disable": function(e) {
                    var t = e.scrollbar.$el;
                    t && t[e.enabled ? "removeClass" : "addClass"](e.params.scrollbar.lockClass)
                },
                destroy: function(e) {
                    e.scrollbar.destroy()
                }
            }
        }, {
            name: "parallax",
            params: {
                parallax: {
                    enabled: !1
                }
            },
            create: function() {
                z(this, {
                    parallax: t({}, ae)
                })
            },
            on: {
                beforeInit: function(e) {
                    e.params.parallax.enabled && (e.params.watchSlidesProgress = !0, e.originalParams.watchSlidesProgress = !0)
                },
                init: function(e) {
                    e.params.parallax.enabled && e.parallax.setTranslate()
                },
                setTranslate: function(e) {
                    e.params.parallax.enabled && e.parallax.setTranslate()
                },
                setTransition: function(e, t) {
                    e.params.parallax.enabled && e.parallax.setTransition(t)
                }
            }
        }, {
            name: "zoom",
            params: {
                zoom: {
                    enabled: !1,
                    maxRatio: 3,
                    minRatio: 1,
                    toggle: !0,
                    containerClass: "swiper-zoom-container",
                    zoomedSlideClass: "swiper-slide-zoomed"
                }
            },
            create: function() {
                var e = this;
                z(e, {
                    zoom: t({
                        enabled: !1,
                        scale: 1,
                        currentScale: 1,
                        isScaling: !1,
                        gesture: {
                            $slideEl: void 0,
                            slideWidth: void 0,
                            slideHeight: void 0,
                            $imageEl: void 0,
                            $imageWrapEl: void 0,
                            maxRatio: 3
                        },
                        image: {
                            isTouched: void 0,
                            isMoved: void 0,
                            currentX: void 0,
                            currentY: void 0,
                            minX: void 0,
                            minY: void 0,
                            maxX: void 0,
                            maxY: void 0,
                            width: void 0,
                            height: void 0,
                            startX: void 0,
                            startY: void 0,
                            touchesStart: {},
                            touchesCurrent: {}
                        },
                        velocity: {
                            x: void 0,
                            y: void 0,
                            prevPositionX: void 0,
                            prevPositionY: void 0,
                            prevTime: void 0
                        }
                    }, ie)
                });
                var a = 1;
                Object.defineProperty(e.zoom, "scale", {
                    get: function() {
                        return a
                    },
                    set: function(t) {
                        if (a !== t) {
                            var i = e.zoom.gesture.$imageEl ? e.zoom.gesture.$imageEl[0] : void 0,
                                s = e.zoom.gesture.$slideEl ? e.zoom.gesture.$slideEl[0] : void 0;
                            e.emit("zoomChange", t, i, s)
                        }
                        a = t
                    }
                })
            },
            on: {
                init: function(e) {
                    e.params.zoom.enabled && e.zoom.enable()
                },
                destroy: function(e) {
                    e.zoom.disable()
                },
                touchStart: function(e, t) {
                    e.zoom.enabled && e.zoom.onTouchStart(t)
                },
                touchEnd: function(e, t) {
                    e.zoom.enabled && e.zoom.onTouchEnd(t)
                },
                doubleTap: function(e, t) {
                    !e.animating && e.params.zoom.enabled && e.zoom.enabled && e.params.zoom.toggle && e.zoom.toggle(t)
                },
                transitionEnd: function(e) {
                    e.zoom.enabled && e.params.zoom.enabled && e.zoom.onTransitionEnd()
                },
                slideChange: function(e) {
                    e.zoom.enabled && e.params.zoom.enabled && e.params.cssMode && e.zoom.onTransitionEnd()
                }
            }
        }, {
            name: "lazy",
            params: {
                lazy: {
                    checkInView: !1,
                    enabled: !1,
                    loadPrevNext: !1,
                    loadPrevNextAmount: 1,
                    loadOnTransitionStart: !1,
                    scrollingElement: "",
                    elementClass: "swiper-lazy",
                    loadingClass: "swiper-lazy-loading",
                    loadedClass: "swiper-lazy-loaded",
                    preloaderClass: "swiper-lazy-preloader"
                }
            },
            create: function() {
                z(this, {
                    lazy: t({
                        initialImageLoaded: !1
                    }, se)
                })
            },
            on: {
                beforeInit: function(e) {
                    e.params.lazy.enabled && e.params.preloadImages && (e.params.preloadImages = !1)
                },
                init: function(e) {
                    e.params.lazy.enabled && !e.params.loop && 0 === e.params.initialSlide && (e.params.lazy.checkInView ? e.lazy.checkInViewOnLoad() : e.lazy.load())
                },
                scroll: function(e) {
                    e.params.freeMode && !e.params.freeModeSticky && e.lazy.load()
                },
                "scrollbarDragMove resize _freeModeNoMomentumRelease": function(e) {
                    e.params.lazy.enabled && e.lazy.load()
                },
                transitionStart: function(e) {
                    e.params.lazy.enabled && (e.params.lazy.loadOnTransitionStart || !e.params.lazy.loadOnTransitionStart && !e.lazy.initialImageLoaded) && e.lazy.load()
                },
                transitionEnd: function(e) {
                    e.params.lazy.enabled && !e.params.lazy.loadOnTransitionStart && e.lazy.load()
                },
                slideChange: function(e) {
                    var t = e.params,
                        a = t.lazy,
                        i = t.cssMode,
                        s = t.watchSlidesVisibility,
                        r = t.watchSlidesProgress,
                        n = t.touchReleaseOnEdges,
                        l = t.resistanceRatio;
                    a.enabled && (i || (s || r) && (n || 0 === l)) && e.lazy.load()
                }
            }
        }, {
            name: "controller",
            params: {
                controller: {
                    control: void 0,
                    inverse: !1,
                    by: "slide"
                }
            },
            create: function() {
                z(this, {
                    controller: t({
                        control: this.params.controller.control
                    }, re)
                })
            },
            on: {
                update: function(e) {
                    e.controller.control && e.controller.spline && (e.controller.spline = void 0, delete e.controller.spline)
                },
                resize: function(e) {
                    e.controller.control && e.controller.spline && (e.controller.spline = void 0, delete e.controller.spline)
                },
                observerUpdate: function(e) {
                    e.controller.control && e.controller.spline && (e.controller.spline = void 0, delete e.controller.spline)
                },
                setTranslate: function(e, t, a) {
                    e.controller.control && e.controller.setTranslate(t, a)
                },
                setTransition: function(e, t, a) {
                    e.controller.control && e.controller.setTransition(t, a)
                }
            }
        }, {
            name: "a11y",
            params: {
                a11y: {
                    enabled: !0,
                    notificationClass: "swiper-notification",
                    prevSlideMessage: "Previous slide",
                    nextSlideMessage: "Next slide",
                    firstSlideMessage: "This is the first slide",
                    lastSlideMessage: "This is the last slide",
                    paginationBulletMessage: "Go to slide {{index}}",
                    slideLabelMessage: "{{index}} / {{slidesLength}}",
                    containerMessage: null,
                    containerRoleDescriptionMessage: null,
                    itemRoleDescriptionMessage: null,
                    slideRole: "group"
                }
            },
            create: function() {
                z(this, {
                    a11y: t({}, ne, {
                        liveRegion: m('<span class="' + this.params.a11y.notificationClass + '" aria-live="assertive" aria-atomic="true"></span>')
                    })
                })
            },
            on: {
                afterInit: function(e) {
                    e.params.a11y.enabled && (e.a11y.init(), e.a11y.updateNavigation())
                },
                toEdge: function(e) {
                    e.params.a11y.enabled && e.a11y.updateNavigation()
                },
                fromEdge: function(e) {
                    e.params.a11y.enabled && e.a11y.updateNavigation()
                },
                paginationUpdate: function(e) {
                    e.params.a11y.enabled && e.a11y.updatePagination()
                },
                destroy: function(e) {
                    e.params.a11y.enabled && e.a11y.destroy()
                }
            }
        }, {
            name: "history",
            params: {
                history: {
                    enabled: !1,
                    root: "",
                    replaceState: !1,
                    key: "slides"
                }
            },
            create: function() {
                z(this, {
                    history: t({}, le)
                })
            },
            on: {
                init: function(e) {
                    e.params.history.enabled && e.history.init()
                },
                destroy: function(e) {
                    e.params.history.enabled && e.history.destroy()
                },
                "transitionEnd _freeModeNoMomentumRelease": function(e) {
                    e.history.initialized && e.history.setHistory(e.params.history.key, e.activeIndex)
                },
                slideChange: function(e) {
                    e.history.initialized && e.params.cssMode && e.history.setHistory(e.params.history.key, e.activeIndex)
                }
            }
        }, {
            name: "hash-navigation",
            params: {
                hashNavigation: {
                    enabled: !1,
                    replaceState: !1,
                    watchState: !1
                }
            },
            create: function() {
                z(this, {
                    hashNavigation: t({
                        initialized: !1
                    }, oe)
                })
            },
            on: {
                init: function(e) {
                    e.params.hashNavigation.enabled && e.hashNavigation.init()
                },
                destroy: function(e) {
                    e.params.hashNavigation.enabled && e.hashNavigation.destroy()
                },
                "transitionEnd _freeModeNoMomentumRelease": function(e) {
                    e.hashNavigation.initialized && e.hashNavigation.setHash()
                },
                slideChange: function(e) {
                    e.hashNavigation.initialized && e.params.cssMode && e.hashNavigation.setHash()
                }
            }
        }, {
            name: "autoplay",
            params: {
                autoplay: {
                    enabled: !1,
                    delay: 3e3,
                    waitForTransition: !0,
                    disableOnInteraction: !0,
                    stopOnLastSlide: !1,
                    reverseDirection: !1,
                    pauseOnMouseEnter: !1
                }
            },
            create: function() {
                z(this, {
                    autoplay: t({}, de, {
                        running: !1,
                        paused: !1
                    })
                })
            },
            on: {
                init: function(e) {
                    e.params.autoplay.enabled && (e.autoplay.start(), r().addEventListener("visibilitychange", e.autoplay.onVisibilityChange), e.autoplay.attachMouseEvents())
                },
                beforeTransitionStart: function(e, t, a) {
                    e.autoplay.running && (a || !e.params.autoplay.disableOnInteraction ? e.autoplay.pause(t) : e.autoplay.stop())
                },
                sliderFirstMove: function(e) {
                    e.autoplay.running && (e.params.autoplay.disableOnInteraction ? e.autoplay.stop() : e.autoplay.pause())
                },
                touchEnd: function(e) {
                    e.params.cssMode && e.autoplay.paused && !e.params.autoplay.disableOnInteraction && e.autoplay.run()
                },
                destroy: function(e) {
                    e.autoplay.detachMouseEvents(), e.autoplay.running && e.autoplay.stop(), r().removeEventListener("visibilitychange", e.autoplay.onVisibilityChange)
                }
            }
        }, {
            name: "effect-fade",
            params: {
                fadeEffect: {
                    crossFade: !1
                }
            },
            create: function() {
                z(this, {
                    fadeEffect: t({}, pe)
                })
            },
            on: {
                beforeInit: function(e) {
                    if ("fade" === e.params.effect) {
                        e.classNames.push(e.params.containerModifierClass + "fade");
                        var t = {
                            slidesPerView: 1,
                            slidesPerColumn: 1,
                            slidesPerGroup: 1,
                            watchSlidesProgress: !0,
                            spaceBetween: 0,
                            virtualTranslate: !0
                        };
                        M(e.params, t), M(e.originalParams, t)
                    }
                },
                setTranslate: function(e) {
                    "fade" === e.params.effect && e.fadeEffect.setTranslate()
                },
                setTransition: function(e, t) {
                    "fade" === e.params.effect && e.fadeEffect.setTransition(t)
                }
            }
        }, {
            name: "effect-cube",
            params: {
                cubeEffect: {
                    slideShadows: !0,
                    shadow: !0,
                    shadowOffset: 20,
                    shadowScale: .94
                }
            },
            create: function() {
                z(this, {
                    cubeEffect: t({}, ue)
                })
            },
            on: {
                beforeInit: function(e) {
                    if ("cube" === e.params.effect) {
                        e.classNames.push(e.params.containerModifierClass + "cube"), e.classNames.push(e.params.containerModifierClass + "3d");
                        var t = {
                            slidesPerView: 1,
                            slidesPerColumn: 1,
                            slidesPerGroup: 1,
                            watchSlidesProgress: !0,
                            resistanceRatio: 0,
                            spaceBetween: 0,
                            centeredSlides: !1,
                            virtualTranslate: !0
                        };
                        M(e.params, t), M(e.originalParams, t)
                    }
                },
                setTranslate: function(e) {
                    "cube" === e.params.effect && e.cubeEffect.setTranslate()
                },
                setTransition: function(e, t) {
                    "cube" === e.params.effect && e.cubeEffect.setTransition(t)
                }
            }
        }, {
            name: "effect-flip",
            params: {
                flipEffect: {
                    slideShadows: !0,
                    limitRotation: !0
                }
            },
            create: function() {
                z(this, {
                    flipEffect: t({}, ce)
                })
            },
            on: {
                beforeInit: function(e) {
                    if ("flip" === e.params.effect) {
                        e.classNames.push(e.params.containerModifierClass + "flip"), e.classNames.push(e.params.containerModifierClass + "3d");
                        var t = {
                            slidesPerView: 1,
                            slidesPerColumn: 1,
                            slidesPerGroup: 1,
                            watchSlidesProgress: !0,
                            spaceBetween: 0,
                            virtualTranslate: !0
                        };
                        M(e.params, t), M(e.originalParams, t)
                    }
                },
                setTranslate: function(e) {
                    "flip" === e.params.effect && e.flipEffect.setTranslate()
                },
                setTransition: function(e, t) {
                    "flip" === e.params.effect && e.flipEffect.setTransition(t)
                }
            }
        }, {
            name: "effect-coverflow",
            params: {
                coverflowEffect: {
                    rotate: 50,
                    stretch: 0,
                    depth: 100,
                    scale: 1,
                    modifier: 1,
                    slideShadows: !0
                }
            },
            create: function() {
                z(this, {
                    coverflowEffect: t({}, he)
                })
            },
            on: {
                beforeInit: function(e) {
                    "coverflow" === e.params.effect && (e.classNames.push(e.params.containerModifierClass + "coverflow"), e.classNames.push(e.params.containerModifierClass + "3d"), e.params.watchSlidesProgress = !0, e.originalParams.watchSlidesProgress = !0)
                },
                setTranslate: function(e) {
                    "coverflow" === e.params.effect && e.coverflowEffect.setTranslate()
                },
                setTransition: function(e, t) {
                    "coverflow" === e.params.effect && e.coverflowEffect.setTransition(t)
                }
            }
        }, {
            name: "thumbs",
            params: {
                thumbs: {
                    swiper: null,
                    multipleActiveThumbs: !0,
                    autoScrollOffset: 0,
                    slideThumbActiveClass: "swiper-slide-thumb-active",
                    thumbsContainerClass: "swiper-container-thumbs"
                }
            },
            create: function() {
                z(this, {
                    thumbs: t({
                        swiper: null,
                        initialized: !1
                    }, ve)
                })
            },
            on: {
                beforeInit: function(e) {
                    var t = e.params.thumbs;
                    t && t.swiper && (e.thumbs.init(), e.thumbs.update(!0))
                },
                slideChange: function(e) {
                    e.thumbs.swiper && e.thumbs.update()
                },
                update: function(e) {
                    e.thumbs.swiper && e.thumbs.update()
                },
                resize: function(e) {
                    e.thumbs.swiper && e.thumbs.update()
                },
                observerUpdate: function(e) {
                    e.thumbs.swiper && e.thumbs.update()
                },
                setTransition: function(e, t) {
                    var a = e.thumbs.swiper;
                    a && a.setTransition(t)
                },
                beforeDestroy: function(e) {
                    var t = e.thumbs.swiper;
                    t && e.thumbs.swiperCreated && t && t.destroy()
                }
            }
        }];
    return q.use(fe), q
});
(function(modules) {
    var installedModules = {};

    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) {
            return installedModules[moduleId].exports
        }
        var module = installedModules[moduleId] = {
            i: moduleId,
            l: false,
            exports: {}
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.l = true;
        return module.exports
    }
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.i = function(value) {
        return value
    };
    __webpack_require__.d = function(exports, name, getter) {
        if (!__webpack_require__.o(exports, name)) {
            Object.defineProperty(exports, name, {
                configurable: false,
                enumerable: true,
                get: getter
            })
        }
    };
    __webpack_require__.n = function(module) {
        var getter = module && module.__esModule ? function getDefault() {
            return module["default"]
        } : function getModuleExports() {
            return module
        };
        __webpack_require__.d(getter, "a", getter);
        return getter
    };
    __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property)
    };
    __webpack_require__.p = "";
    return __webpack_require__(__webpack_require__.s = 28)
})([function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _jquery = __webpack_require__(1);
    var _jquery2 = _interopRequireDefault(_jquery);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }
    var Util = function() {
        var transition = false;
        var MAX_UID = 1e6;
        var TransitionEndEvent = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend"
        };

        function toType(obj) {
            return {}.toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase()
        }

        function getSpecialTransitionEndEvent() {
            return {
                bindType: transition.end,
                delegateType: transition.end,
                handle: function handle(event) {
                    if ((0, _jquery2.default)(event.target).is(this)) {
                        return event.handleObj.handler.apply(this, arguments)
                    }
                    return undefined
                }
            }
        }

        function transitionEndTest() {
            if (window.QUnit) {
                return false
            }
            var el = document.createElement("bootstrap");
            for (var name in TransitionEndEvent) {
                if (typeof el.style[name] !== "undefined") {
                    return {
                        end: TransitionEndEvent[name]
                    }
                }
            }
            return false
        }

        function transitionEndEmulator(duration) {
            var _this = this;
            var called = false;
            (0, _jquery2.default)(this).one(Util.TRANSITION_END, function() {
                called = true
            });
            setTimeout(function() {
                if (!called) {
                    Util.triggerTransitionEnd(_this)
                }
            }, duration);
            return this
        }

        function setTransitionEndSupport() {
            transition = transitionEndTest();
            _jquery2.default.fn.emulateTransitionEnd = transitionEndEmulator;
            if (Util.supportsTransitionEnd()) {
                _jquery2.default.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()
            }
        }

        function parseOption(item) {
            if ("true" === item) {
                return true
            } else if ("false" === item) {
                return false
            } else if (!isNaN(item * 1)) {
                return parseFloat(item)
            } else {
                return item
            }
        }
        var Util = {
            TRANSITION_END: "bsTransitionEnd",
            getUID: function getUID(prefix) {
                do {
                    prefix += ~~(Math.random() * MAX_UID)
                } while (document.getElementById(prefix));
                return prefix
            },
            getSelectorFromElement: function getSelectorFromElement(element) {
                var selector = element.getAttribute("data-target");
                if (!selector || selector === "#") {
                    selector = element.getAttribute("href") || ""
                }
                try {
                    var $selector = (0, _jquery2.default)(document).find(selector);
                    return $selector.length > 0 ? selector : null
                } catch (error) {
                    return null
                }
            },
            reflow: function reflow(element) {
                return element.offsetHeight
            },
            triggerTransitionEnd: function triggerTransitionEnd(element) {
                (0, _jquery2.default)(element).trigger(transition.end)
            },
            supportsTransitionEnd: function supportsTransitionEnd() {
                return Boolean(transition)
            },
            isElement: function isElement(obj) {
                return (obj[0] || obj).nodeType
            },
            typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {
                for (var property in configTypes) {
                    if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
                        var expectedTypes = configTypes[property];
                        var value = config[property];
                        var valueType = value && Util.isElement(value) ? "element" : toType(value);
                        if (!new RegExp(expectedTypes).test(valueType)) {
                            throw new Error(componentName.toUpperCase() + ": " + ('Option "' + property + '" provided type "' + valueType + '" ') + ('but expected type "' + expectedTypes + '".'))
                        }
                    }
                }
            },
            parseDataOptions: function parseDataOptions(dataOptions) {
                var options = [];
                var string = dataOptions.split(";");
                string.forEach(function(item, index) {
                    var option = item.split(":");
                    option = option.map(function(item) {
                        return item.trim()
                    });
                    if (option[0]) {
                        options[option[0]] = parseOption(option[1])
                    }
                });
                return options
            }
        };
        setTransitionEndSupport();
        return Util
    }(_jquery2.default);
    exports.default = Util
}, function(module, exports) {
    module.exports = jQuery
}, , function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        inputsContainer: "[data-inputs-container]",
        virtualInput: "[data-virtual-input]",
        isChecked: "is-selected",
        inputTarget: "[data-input-target]",
        dataTargetId: "[data-target-id]",
        content: "[data-content]",
        contentTarget: "[data-content-target]"
    };
    var selectInput = function() {
        function selectInput(inputGroup, drop) {
            _classCallCheck(this, selectInput);
            this.inputGroup = inputGroup;
            this.type = this.inputGroup.data("inputs-container");
            this.drop = drop;
            this.virtualInputs = this.inputGroup.find(SELECTORS.virtualInput);
            this.bindEvents()
        }
        _createClass(selectInput, [{
            key: "bindEvents",
            value: function bindEvents() {
                var _this = this;
                this.virtualInputs.on("click", function(event) {
                    return _this.selectItem(event)
                })
            }
        }, {
            key: "selectItem",
            value: function selectItem(event) {
                if (this.type == "checkboxes") {
                    if ($(event.currentTarget).hasClass("is-selected")) {
                        $(event.currentTarget).removeClass(SELECTORS.isChecked);
                        $(event.currentTarget).find("input").prop("checked", false)
                    } else {
                        $(event.currentTarget).addClass(SELECTORS.isChecked);
                        $(event.currentTarget).find("input").prop("checked", true)
                    }
                } else {
                    this.virtualInputs.removeClass(SELECTORS.isChecked);
                    this.virtualInputs.find("input").prop("checked", false);
                    $(event.currentTarget).addClass(SELECTORS.isChecked);
                    $(event.currentTarget).find("input").prop("checked", true)
                }
                if (this.drop) {
                    this.getDropdownContent(event);
                    this.setDropdownContent();
                    this.drop.close()
                }
            }
        }, {
            key: "setDropdownContent",
            value: function setDropdownContent() {
                for (var property in this.data) {
                    $(this.drop.target).find("[data-view-" + property + "]").text(this.data[property])
                }
            }
        }, {
            key: "getDropdownContent",
            value: function getDropdownContent(event) {
                this.data = $(event.currentTarget).data("config")
            }
        }], [{
            key: "init",
            value: function init(container, drop) {
                if (container) {
                    new selectInput($(container).find(SELECTORS.inputsContainer), drop)
                } else {
                    $(SELECTORS.inputsContainer).each(function() {
                        new selectInput($(this), drop)
                    })
                }
            }
        }]);
        return selectInput
    }();
    exports.default = selectInput
}, function(module, exports, __webpack_require__) {
    "use strict";
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
        return typeof obj
    } : function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function() {
        "use strict";
        var $;
        var Swiper = function Swiper(container, params) {
            if (!(this instanceof Swiper)) return new Swiper(container, params);
            var defaults = {
                direction: "horizontal",
                touchEventsTarget: "container",
                initialSlide: 0,
                speed: 300,
                autoplay: false,
                autoplayDisableOnInteraction: true,
                autoplayStopOnLast: false,
                iOSEdgeSwipeDetection: false,
                iOSEdgeSwipeThreshold: 20,
                freeMode: false,
                freeModeMomentum: true,
                freeModeMomentumRatio: 1,
                freeModeMomentumBounce: true,
                freeModeMomentumBounceRatio: 1,
                freeModeMomentumVelocityRatio: 1,
                freeModeSticky: false,
                freeModeMinimumVelocity: .02,
                autoHeight: false,
                setWrapperSize: false,
                virtualTranslate: false,
                effect: "slide",
                coverflow: {
                    rotate: 50,
                    stretch: 0,
                    depth: 100,
                    modifier: 1,
                    slideShadows: true
                },
                flip: {
                    slideShadows: true,
                    limitRotation: true
                },
                cube: {
                    slideShadows: true,
                    shadow: true,
                    shadowOffset: 20,
                    shadowScale: .94
                },
                fade: {
                    crossFade: false
                },
                parallax: false,
                zoom: false,
                zoomMax: 3,
                zoomMin: 1,
                zoomToggle: true,
                scrollbar: null,
                scrollbarHide: true,
                scrollbarDraggable: false,
                scrollbarSnapOnRelease: false,
                keyboardControl: false,
                mousewheelControl: false,
                mousewheelReleaseOnEdges: false,
                mousewheelInvert: false,
                mousewheelForceToAxis: false,
                mousewheelSensitivity: 1,
                mousewheelEventsTarged: "lu-container",
                hashnav: false,
                hashnavWatchState: false,
                history: false,
                replaceState: false,
                spaceBetween: 0,
                slidesPerView: 2,
                slidesPerColumn: 1,
                slidesPerColumnFill: "column",
                slidesPerGroup: 1,
                centeredSlides: false,
                slidesOffsetBefore: 0,
                slidesOffsetAfter: 0,
                roundLengths: false,
                touchRatio: 1,
                touchAngle: 45,
                simulateTouch: true,
                shortSwipes: true,
                longSwipes: true,
                longSwipesRatio: .5,
                longSwipesMs: 300,
                followFinger: true,
                onlyExternal: false,
                threshold: 0,
                touchMoveStopPropagation: true,
                touchReleaseOnEdges: false,
                uniqueNavElements: true,
                pagination: null,
                paginationElement: "span",
                paginationClickable: false,
                paginationHide: false,
                paginationBulletRender: null,
                paginationProgressRender: null,
                paginationFractionRender: null,
                paginationCustomRender: null,
                paginationType: "bullets",
                resistance: true,
                resistanceRatio: .85,
                nextButton: ".swiper-button-next",
                prevButton: ".swiper-button-prev",
                watchSlidesProgress: false,
                watchSlidesVisibility: false,
                grabCursor: false,
                preventClicks: true,
                preventClicksPropagation: true,
                slideToClickedSlide: false,
                lazyLoading: false,
                lazyLoadingInPrevNext: false,
                lazyLoadingInPrevNextAmount: 1,
                lazyLoadingOnTransitionStart: false,
                preloadImages: true,
                updateOnImagesReady: true,
                loop: false,
                loopAdditionalSlides: 0,
                loopedSlides: null,
                control: undefined,
                controlInverse: false,
                controlBy: "slide",
                normalizeSlideIndex: true,
                allowSwipeToPrev: true,
                allowSwipeToNext: true,
                swipeHandler: null,
                noSwiping: true,
                noSwipingClass: "swiper-no-swiping",
                passiveListeners: true,
                containerModifierClass: "swiper-container-",
                slideClass: "swiper-slide",
                slideActiveClass: "swiper-slide-active",
                slideDuplicateActiveClass: "swiper-slide-duplicate-active",
                slideVisibleClass: "swiper-slide-visible",
                slideDuplicateClass: "swiper-slide-duplicate",
                slideNextClass: "swiper-slide-next",
                slideDuplicateNextClass: "swiper-slide-duplicate-next",
                slidePrevClass: "swiper-slide-prev",
                slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
                wrapperClass: "swiper-wrapper",
                bulletClass: "swiper-pagination-bullet",
                bulletActiveClass: "swiper-pagination-bullet-active",
                buttonDisabledClass: "swiper-button-disabled",
                paginationCurrentClass: "swiper-pagination-current",
                paginationTotalClass: "swiper-pagination-total",
                paginationHiddenClass: "swiper-pagination-hidden",
                paginationProgressbarClass: "swiper-pagination-progressbar",
                paginationClickableClass: "swiper-pagination-clickable",
                paginationModifierClass: "swiper-pagination-",
                lazyLoadingClass: "swiper-lazy",
                lazyStatusLoadingClass: "swiper-lazy-loading",
                lazyStatusLoadedClass: "swiper-lazy-loaded",
                lazyPreloaderClass: "swiper-lazy-preloader",
                notificationClass: "swiper-notification",
                preloaderClass: "preloader",
                zoomContainerClass: "swiper-zoom-container",
                observer: false,
                observeParents: false,
                a11y: false,
                prevSlideMessage: "Previous slide",
                nextSlideMessage: "Next slide",
                firstSlideMessage: "This is the first slide",
                lastSlideMessage: "This is the last slide",
                paginationBulletMessage: "Go to slide {{index}}",
                runCallbacksOnInit: true
            };
            var initialVirtualTranslate = params && params.virtualTranslate;
            params = params || {};
            var originalParams = {};
            for (var param in params) {
                if (_typeof(params[param]) === "object" && params[param] !== null && !(params[param].nodeType || params[param] === window || params[param] === document || typeof Dom7 !== "undefined" && params[param] instanceof Dom7 || typeof jQuery !== "undefined" && params[param] instanceof jQuery)) {
                    originalParams[param] = {};
                    for (var deepParam in params[param]) {
                        originalParams[param][deepParam] = params[param][deepParam]
                    }
                } else {
                    originalParams[param] = params[param]
                }
            }
            for (var def in defaults) {
                if (typeof params[def] === "undefined") {
                    params[def] = defaults[def]
                } else if (_typeof(params[def]) === "object") {
                    for (var deepDef in defaults[def]) {
                        if (typeof params[def][deepDef] === "undefined") {
                            params[def][deepDef] = defaults[def][deepDef]
                        }
                    }
                }
            }
            var s = this;
            s.params = params;
            s.originalParams = originalParams;
            s.classNames = [];
            if (typeof $ !== "undefined" && typeof Dom7 !== "undefined") {
                $ = Dom7
            }
            if (typeof $ === "undefined") {
                if (typeof Dom7 === "undefined") {
                    $ = window.Dom7 || window.Zepto || window.jQuery
                } else {
                    $ = Dom7
                }
                if (!$) return
            }
            s.$ = $;
            s.currentBreakpoint = undefined;
            s.getActiveBreakpoint = function() {
                if (!s.params.breakpoints) return false;
                var breakpoint = false;
                var points = [],
                    point;
                for (point in s.params.breakpoints) {
                    if (s.params.breakpoints.hasOwnProperty(point)) {
                        points.push(point)
                    }
                }
                points.sort(function(a, b) {
                    return parseInt(a, 10) > parseInt(b, 10)
                });
                for (var i = 0; i < points.length; i++) {
                    point = points[i];
                    if (point >= window.innerWidth && !breakpoint) {
                        breakpoint = point
                    }
                }
                return breakpoint || "max"
            };
            s.setBreakpoint = function() {
                var breakpoint = s.getActiveBreakpoint();
                if (breakpoint && s.currentBreakpoint !== breakpoint) {
                    var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;
                    var needsReLoop = s.params.loop && breakPointsParams.slidesPerView !== s.params.slidesPerView;
                    for (var param in breakPointsParams) {
                        s.params[param] = breakPointsParams[param]
                    }
                    s.currentBreakpoint = breakpoint;
                    if (needsReLoop && s.destroyLoop) {
                        s.reLoop(true)
                    }
                }
            };
            if (s.params.breakpoints) {
                s.setBreakpoint()
            }
            s.container = $(container);
            if (s.container.length === 0) return;
            if (s.container.length > 1) {
                var swipers = [];
                s.container.each(function() {
                    var container = this;
                    swipers.push(new Swiper(this, params))
                });
                return swipers
            }
            s.container[0].swiper = s;
            s.container.data("swiper", s);
            s.classNames.push(s.params.containerModifierClass + s.params.direction);
            if (s.params.freeMode) {
                s.classNames.push(s.params.containerModifierClass + "free-mode")
            }
            if (!s.support.flexbox) {
                s.classNames.push(s.params.containerModifierClass + "no-flexbox");
                s.params.slidesPerColumn = 1
            }
            if (s.params.autoHeight) {
                s.classNames.push(s.params.containerModifierClass + "autoheight")
            }
            if (s.params.parallax || s.params.watchSlidesVisibility) {
                s.params.watchSlidesProgress = true
            }
            if (s.params.touchReleaseOnEdges) {
                s.params.resistanceRatio = 0
            }
            if (["cube", "coverflow", "flip"].indexOf(s.params.effect) >= 0) {
                if (s.support.transforms3d) {
                    s.params.watchSlidesProgress = true;
                    s.classNames.push(s.params.containerModifierClass + "3d")
                } else {
                    s.params.effect = "slide"
                }
            }
            if (s.params.effect !== "slide") {
                s.classNames.push(s.params.containerModifierClass + s.params.effect)
            }
            if (s.params.effect === "cube") {
                s.params.resistanceRatio = 0;
                s.params.slidesPerView = 1;
                s.params.slidesPerColumn = 1;
                s.params.slidesPerGroup = 1;
                s.params.centeredSlides = false;
                s.params.spaceBetween = 0;
                s.params.virtualTranslate = true
            }
            if (s.params.effect === "fade" || s.params.effect === "flip") {
                s.params.slidesPerView = 1;
                s.params.slidesPerColumn = 1;
                s.params.slidesPerGroup = 1;
                s.params.watchSlidesProgress = true;
                s.params.spaceBetween = 0;
                if (typeof initialVirtualTranslate === "undefined") {
                    s.params.virtualTranslate = true
                }
            }
            if (s.params.grabCursor && s.support.touch) {
                s.params.grabCursor = false
            }
            s.wrapper = s.container.children("." + s.params.wrapperClass);
            if (s.params.pagination) {
                s.paginationContainer = $(s.params.pagination);
                if (s.params.uniqueNavElements && typeof s.params.pagination === "string" && s.paginationContainer.length > 1 && s.container.find(s.params.pagination).length === 1) {
                    s.paginationContainer = s.container.find(s.params.pagination)
                }
                if (s.params.paginationType === "bullets" && s.params.paginationClickable) {
                    s.paginationContainer.addClass(s.params.paginationModifierClass + "clickable")
                } else {
                    s.params.paginationClickable = false
                }
                s.paginationContainer.addClass(s.params.paginationModifierClass + s.params.paginationType)
            }
            if (s.params.nextButton || s.params.prevButton) {
                if (s.params.nextButton) {
                    s.nextButton = $(s.params.nextButton);
                    if (s.params.uniqueNavElements && typeof s.params.nextButton === "string" && s.nextButton.length > 1 && s.container.find(s.params.nextButton).length === 1) {
                        s.nextButton = s.container.find(s.params.nextButton)
                    }
                }
                if (s.params.prevButton) {
                    s.prevButton = $(s.params.prevButton);
                    if (s.params.uniqueNavElements && typeof s.params.prevButton === "string" && s.prevButton.length > 1 && s.container.find(s.params.prevButton).length === 1) {
                        s.prevButton = s.container.find(s.params.prevButton)
                    }
                }
            }
            s.isHorizontal = function() {
                return s.params.direction === "horizontal"
            };
            s.rtl = s.isHorizontal() && (s.container[0].dir.toLowerCase() === "rtl" || s.container.css("direction") === "rtl");
            if (s.rtl) {
                s.classNames.push(s.params.containerModifierClass + "rtl")
            }
            if (s.rtl) {
                s.wrongRTL = s.wrapper.css("display") === "-webkit-box"
            }
            if (s.params.slidesPerColumn > 1) {
                s.classNames.push(s.params.containerModifierClass + "multirow")
            }
            if (s.device.android) {
                s.classNames.push(s.params.containerModifierClass + "android")
            }
            s.container.addClass(s.classNames.join(" "));
            s.translate = 0;
            s.progress = 0;
            s.velocity = 0;
            s.lockSwipeToNext = function() {
                s.params.allowSwipeToNext = false;
                if (s.params.allowSwipeToPrev === false && s.params.grabCursor) {
                    s.unsetGrabCursor()
                }
            };
            s.lockSwipeToPrev = function() {
                s.params.allowSwipeToPrev = false;
                if (s.params.allowSwipeToNext === false && s.params.grabCursor) {
                    s.unsetGrabCursor()
                }
            };
            s.lockSwipes = function() {
                s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;
                if (s.params.grabCursor) s.unsetGrabCursor()
            };
            s.unlockSwipeToNext = function() {
                s.params.allowSwipeToNext = true;
                if (s.params.allowSwipeToPrev === true && s.params.grabCursor) {
                    s.setGrabCursor()
                }
            };
            s.unlockSwipeToPrev = function() {
                s.params.allowSwipeToPrev = true;
                if (s.params.allowSwipeToNext === true && s.params.grabCursor) {
                    s.setGrabCursor()
                }
            };
            s.unlockSwipes = function() {
                s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;
                if (s.params.grabCursor) s.setGrabCursor()
            };

            function round(a) {
                return Math.floor(a)
            }
            s.setGrabCursor = function(moving) {
                s.container[0].style.cursor = "move";
                s.container[0].style.cursor = moving ? "-webkit-grabbing" : "-webkit-grab";
                s.container[0].style.cursor = moving ? "-moz-grabbin" : "-moz-grab";
                s.container[0].style.cursor = moving ? "grabbing" : "grab"
            };
            s.unsetGrabCursor = function() {
                s.container[0].style.cursor = ""
            };
            if (s.params.grabCursor) {
                s.setGrabCursor()
            }
            s.imagesToLoad = [];
            s.imagesLoaded = 0;
            s.loadImage = function(imgElement, src, srcset, sizes, checkForComplete, callback) {
                var image;

                function onReady() {
                    if (callback) callback()
                }
                if (!imgElement.complete || !checkForComplete) {
                    if (src) {
                        image = new window.Image;
                        image.onload = onReady;
                        image.onerror = onReady;
                        if (sizes) {
                            image.sizes = sizes
                        }
                        if (srcset) {
                            image.srcset = srcset
                        }
                        if (src) {
                            image.src = src
                        }
                    } else {
                        onReady()
                    }
                } else {
                    onReady()
                }
            };
            s.preloadImages = function() {
                s.imagesToLoad = s.container.find("img");

                function _onReady() {
                    if (typeof s === "undefined" || s === null || !s) return;
                    if (s.imagesLoaded !== undefined) s.imagesLoaded++;
                    if (s.imagesLoaded === s.imagesToLoad.length) {
                        if (s.params.updateOnImagesReady) s.update();
                        s.emit("onImagesReady", s)
                    }
                }
                for (var i = 0; i < s.imagesToLoad.length; i++) {
                    s.loadImage(s.imagesToLoad[i], s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute("src"), s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute("srcset"), s.imagesToLoad[i].sizes || s.imagesToLoad[i].getAttribute("sizes"), true, _onReady)
                }
            };
            s.autoplayTimeoutId = undefined;
            s.autoplaying = false;
            s.autoplayPaused = false;

            function autoplay() {
                var autoplayDelay = s.params.autoplay;
                var activeSlide = s.slides.eq(s.activeIndex);
                if (activeSlide.attr("data-swiper-autoplay")) {
                    autoplayDelay = activeSlide.attr("data-swiper-autoplay") || s.params.autoplay
                }
                s.autoplayTimeoutId = setTimeout(function() {
                    if (s.params.loop) {
                        s.fixLoop();
                        s._slideNext();
                        s.emit("onAutoplay", s)
                    } else {
                        if (!s.isEnd) {
                            s._slideNext();
                            s.emit("onAutoplay", s)
                        } else {
                            if (!params.autoplayStopOnLast) {
                                s._slideTo(0);
                                s.emit("onAutoplay", s)
                            } else {
                                s.stopAutoplay()
                            }
                        }
                    }
                }, autoplayDelay)
            }
            s.startAutoplay = function() {
                if (typeof s.autoplayTimeoutId !== "undefined") return false;
                if (!s.params.autoplay) return false;
                if (s.autoplaying) return false;
                s.autoplaying = true;
                s.emit("onAutoplayStart", s);
                autoplay()
            };
            s.stopAutoplay = function(internal) {
                if (!s.autoplayTimeoutId) return;
                if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);
                s.autoplaying = false;
                s.autoplayTimeoutId = undefined;
                s.emit("onAutoplayStop", s)
            };
            s.pauseAutoplay = function(speed) {
                if (s.autoplayPaused) return;
                if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);
                s.autoplayPaused = true;
                if (speed === 0) {
                    s.autoplayPaused = false;
                    autoplay()
                } else {
                    s.wrapper.transitionEnd(function() {
                        if (!s) return;
                        s.autoplayPaused = false;
                        if (!s.autoplaying) {
                            s.stopAutoplay()
                        } else {
                            autoplay()
                        }
                    })
                }
            };
            s.minTranslate = function() {
                return -s.snapGrid[0]
            };
            s.maxTranslate = function() {
                return -s.snapGrid[s.snapGrid.length - 1]
            };
            s.updateAutoHeight = function() {
                var activeSlides = [];
                var newHeight = 0;
                var i;
                if (s.params.slidesPerView !== "auto" && s.params.slidesPerView > 1) {
                    for (i = 0; i < Math.ceil(s.params.slidesPerView); i++) {
                        var index = s.activeIndex + i;
                        if (index > s.slides.length) break;
                        activeSlides.push(s.slides.eq(index)[0])
                    }
                } else {
                    activeSlides.push(s.slides.eq(s.activeIndex)[0])
                }
                for (i = 0; i < activeSlides.length; i++) {
                    if (typeof activeSlides[i] !== "undefined") {
                        var height = activeSlides[i].offsetHeight;
                        newHeight = height > newHeight ? height : newHeight
                    }
                }
                if (newHeight) s.wrapper.css("height", newHeight + "px")
            };
            s.updateContainerSize = function() {
                var width, height;
                if (typeof s.params.width !== "undefined") {
                    width = s.params.width
                } else {
                    width = s.container[0].clientWidth
                }
                if (typeof s.params.height !== "undefined") {
                    height = s.params.height
                } else {
                    height = s.container[0].clientHeight
                }
                if (width === 0 && s.isHorizontal() || height === 0 && !s.isHorizontal()) {
                    return
                }
                width = width - parseInt(s.container.css("padding-left"), 10) - parseInt(s.container.css("padding-right"), 10);
                height = height - parseInt(s.container.css("padding-top"), 10) - parseInt(s.container.css("padding-bottom"), 10);
                s.width = width;
                s.height = height;
                s.size = s.isHorizontal() ? s.width : s.height
            };
            s.updateSlidesSize = function() {
                s.slides = s.wrapper.children("." + s.params.slideClass);
                s.snapGrid = [];
                s.slidesGrid = [];
                s.slidesSizesGrid = [];
                var spaceBetween = s.params.spaceBetween,
                    slidePosition = -s.params.slidesOffsetBefore,
                    i, prevSlideSize = 0,
                    index = 0;
                if (typeof s.size === "undefined") return;
                if (typeof spaceBetween === "string" && spaceBetween.indexOf("%") >= 0) {
                    spaceBetween = parseFloat(spaceBetween.replace("%", "")) / 100 * s.size
                }
                s.virtualSize = -spaceBetween;
                if (s.rtl) s.slides.css({
                    marginLeft: "",
                    marginTop: ""
                });
                else s.slides.css({
                    marginRight: "",
                    marginBottom: ""
                });
                var slidesNumberEvenToRows;
                if (s.params.slidesPerColumn > 1) {
                    if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {
                        slidesNumberEvenToRows = s.slides.length
                    } else {
                        slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn
                    }
                    if (s.params.slidesPerView !== "auto" && s.params.slidesPerColumnFill === "row") {
                        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn)
                    }
                }
                var slideSize;
                var slidesPerColumn = s.params.slidesPerColumn;
                var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;
                var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);
                for (i = 0; i < s.slides.length; i++) {
                    slideSize = 0;
                    var slide = s.slides.eq(i);
                    if (s.params.slidesPerColumn > 1) {
                        var newSlideOrderIndex;
                        var column, row;
                        if (s.params.slidesPerColumnFill === "column") {
                            column = Math.floor(i / slidesPerColumn);
                            row = i - column * slidesPerColumn;
                            if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {
                                if (++row >= slidesPerColumn) {
                                    row = 0;
                                    column++
                                }
                            }
                            newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;
                            slide.css({
                                "-webkit-box-ordinal-group": newSlideOrderIndex,
                                "-moz-box-ordinal-group": newSlideOrderIndex,
                                "-ms-flex-order": newSlideOrderIndex,
                                "-webkit-order": newSlideOrderIndex,
                                order: newSlideOrderIndex
                            })
                        } else {
                            row = Math.floor(i / slidesPerRow);
                            column = i - row * slidesPerRow
                        }
                        slide.css("margin-" + (s.isHorizontal() ? "top" : "left"), row !== 0 && s.params.spaceBetween && s.params.spaceBetween + "px").attr("data-swiper-column", column).attr("data-swiper-row", row)
                    }
                    if (slide.css("display") === "none") continue;
                    if (s.params.slidesPerView === "auto") {
                        slideSize = s.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);
                        if (s.params.roundLengths) slideSize = round(slideSize)
                    } else {
                        slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;
                        if (s.params.roundLengths) slideSize = round(slideSize);
                        if (s.isHorizontal()) {
                            s.slides[i].style.width = slideSize + "px"
                        } else {
                            s.slides[i].style.height = slideSize + "px"
                        }
                    }
                    s.slides[i].swiperSlideSize = slideSize;
                    s.slidesSizesGrid.push(slideSize);
                    if (s.params.centeredSlides) {
                        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
                        if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;
                        if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;
                        if (Math.abs(slidePosition) < 1 / 1e3) slidePosition = 0;
                        if (index % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);
                        s.slidesGrid.push(slidePosition)
                    } else {
                        if (index % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);
                        s.slidesGrid.push(slidePosition);
                        slidePosition = slidePosition + slideSize + spaceBetween
                    }
                    s.virtualSize += slideSize + spaceBetween;
                    prevSlideSize = slideSize;
                    index++
                }
                s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;
                var newSlidesGrid;
                if (s.rtl && s.wrongRTL && (s.params.effect === "slide" || s.params.effect === "coverflow")) {
                    s.wrapper.css({
                        width: s.virtualSize + s.params.spaceBetween + "px"
                    })
                }
                if (!s.support.flexbox || s.params.setWrapperSize) {
                    if (s.isHorizontal()) s.wrapper.css({
                        width: s.virtualSize + s.params.spaceBetween + "px"
                    });
                    else s.wrapper.css({
                        height: s.virtualSize + s.params.spaceBetween + "px"
                    })
                }
                if (s.params.slidesPerColumn > 1) {
                    s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;
                    s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;
                    if (s.isHorizontal()) s.wrapper.css({
                        width: s.virtualSize + s.params.spaceBetween + "px"
                    });
                    else s.wrapper.css({
                        height: s.virtualSize + s.params.spaceBetween + "px"
                    });
                    if (s.params.centeredSlides) {
                        newSlidesGrid = [];
                        for (i = 0; i < s.snapGrid.length; i++) {
                            if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i])
                        }
                        s.snapGrid = newSlidesGrid
                    }
                }
                if (!s.params.centeredSlides) {
                    newSlidesGrid = [];
                    for (i = 0; i < s.snapGrid.length; i++) {
                        if (s.snapGrid[i] <= s.virtualSize - s.size) {
                            newSlidesGrid.push(s.snapGrid[i])
                        }
                    }
                    s.snapGrid = newSlidesGrid;
                    if (Math.floor(s.virtualSize - s.size) - Math.floor(s.snapGrid[s.snapGrid.length - 1]) > 1) {
                        s.snapGrid.push(s.virtualSize - s.size)
                    }
                }
                if (s.snapGrid.length === 0) s.snapGrid = [0];
                if (s.params.spaceBetween !== 0) {
                    if (s.isHorizontal()) {
                        if (s.rtl) s.slides.css({
                            marginLeft: spaceBetween + "px"
                        });
                        else s.slides.css({
                            marginRight: spaceBetween + "px"
                        })
                    } else s.slides.css({
                        marginBottom: spaceBetween + "px"
                    })
                }
                if (s.params.watchSlidesProgress) {
                    s.updateSlidesOffset()
                }
            };
            s.updateSlidesOffset = function() {
                for (var i = 0; i < s.slides.length; i++) {
                    s.slides[i].swiperSlideOffset = s.isHorizontal() ? s.slides[i].offsetLeft : s.slides[i].offsetTop
                }
            };
            s.currentSlidesPerView = function() {
                var spv = 1,
                    i, j;
                if (s.params.centeredSlides) {
                    var size = s.slides[s.activeIndex].swiperSlideSize;
                    var breakLoop;
                    for (i = s.activeIndex + 1; i < s.slides.length; i++) {
                        if (s.slides[i] && !breakLoop) {
                            size += s.slides[i].swiperSlideSize;
                            spv++;
                            if (size > s.size) breakLoop = true
                        }
                    }
                    for (j = s.activeIndex - 1; j >= 0; j--) {
                        if (s.slides[j] && !breakLoop) {
                            size += s.slides[j].swiperSlideSize;
                            spv++;
                            if (size > s.size) breakLoop = true
                        }
                    }
                } else {
                    for (i = s.activeIndex + 1; i < s.slides.length; i++) {
                        if (s.slidesGrid[i] - s.slidesGrid[s.activeIndex] < s.size) {
                            spv++
                        }
                    }
                }
                return spv
            };
            s.updateSlidesProgress = function(translate) {
                if (typeof translate === "undefined") {
                    translate = s.translate || 0
                }
                if (s.slides.length === 0) return;
                if (typeof s.slides[0].swiperSlideOffset === "undefined") s.updateSlidesOffset();
                var offsetCenter = -translate;
                if (s.rtl) offsetCenter = translate;
                s.slides.removeClass(s.params.slideVisibleClass);
                for (var i = 0; i < s.slides.length; i++) {
                    var slide = s.slides[i];
                    var slideProgress = (offsetCenter + (s.params.centeredSlides ? s.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);
                    if (s.params.watchSlidesVisibility) {
                        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);
                        var slideAfter = slideBefore + s.slidesSizesGrid[i];
                        var isVisible = slideBefore >= 0 && slideBefore < s.size || slideAfter > 0 && slideAfter <= s.size || slideBefore <= 0 && slideAfter >= s.size;
                        if (isVisible) {
                            s.slides.eq(i).addClass(s.params.slideVisibleClass)
                        }
                    }
                    slide.progress = s.rtl ? -slideProgress : slideProgress
                }
            };
            s.updateProgress = function(translate) {
                if (typeof translate === "undefined") {
                    translate = s.translate || 0
                }
                var translatesDiff = s.maxTranslate() - s.minTranslate();
                var wasBeginning = s.isBeginning;
                var wasEnd = s.isEnd;
                if (translatesDiff === 0) {
                    s.progress = 0;
                    s.isBeginning = s.isEnd = true
                } else {
                    s.progress = (translate - s.minTranslate()) / translatesDiff;
                    s.isBeginning = s.progress <= 0;
                    s.isEnd = s.progress >= 1
                }
                if (s.isBeginning && !wasBeginning) s.emit("onReachBeginning", s);
                if (s.isEnd && !wasEnd) s.emit("onReachEnd", s);
                if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);
                s.emit("onProgress", s, s.progress)
            };
            s.updateActiveIndex = function() {
                var translate = s.rtl ? s.translate : -s.translate;
                var newActiveIndex, i, snapIndex;
                for (i = 0; i < s.slidesGrid.length; i++) {
                    if (typeof s.slidesGrid[i + 1] !== "undefined") {
                        if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {
                            newActiveIndex = i
                        } else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {
                            newActiveIndex = i + 1
                        }
                    } else {
                        if (translate >= s.slidesGrid[i]) {
                            newActiveIndex = i
                        }
                    }
                }
                if (s.params.normalizeSlideIndex) {
                    if (newActiveIndex < 0 || typeof newActiveIndex === "undefined") newActiveIndex = 0
                }
                snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);
                if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;
                if (newActiveIndex === s.activeIndex) {
                    return
                }
                s.snapIndex = snapIndex;
                s.previousIndex = s.activeIndex;
                s.activeIndex = newActiveIndex;
                s.updateClasses();
                s.updateRealIndex()
            };
            s.updateRealIndex = function() {
                s.realIndex = parseInt(s.slides.eq(s.activeIndex).attr("data-swiper-slide-index") || s.activeIndex, 10)
            };
            s.updateClasses = function() {
                s.slides.removeClass(s.params.slideActiveClass + " " + s.params.slideNextClass + " " + s.params.slidePrevClass + " " + s.params.slideDuplicateActiveClass + " " + s.params.slideDuplicateNextClass + " " + s.params.slideDuplicatePrevClass);
                var activeSlide = s.slides.eq(s.activeIndex);
                activeSlide.addClass(s.params.slideActiveClass);
                if (params.loop) {
                    if (activeSlide.hasClass(s.params.slideDuplicateClass)) {
                        s.wrapper.children("." + s.params.slideClass + ":not(." + s.params.slideDuplicateClass + ')[data-swiper-slide-index="' + s.realIndex + '"]').addClass(s.params.slideDuplicateActiveClass)
                    } else {
                        s.wrapper.children("." + s.params.slideClass + "." + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + s.realIndex + '"]').addClass(s.params.slideDuplicateActiveClass)
                    }
                }
                var nextSlide = activeSlide.next("." + s.params.slideClass).addClass(s.params.slideNextClass);
                if (s.params.loop && nextSlide.length === 0) {
                    nextSlide = s.slides.eq(0);
                    nextSlide.addClass(s.params.slideNextClass)
                }
                var prevSlide = activeSlide.prev("." + s.params.slideClass).addClass(s.params.slidePrevClass);
                if (s.params.loop && prevSlide.length === 0) {
                    prevSlide = s.slides.eq(-1);
                    prevSlide.addClass(s.params.slidePrevClass)
                }
                if (params.loop) {
                    if (nextSlide.hasClass(s.params.slideDuplicateClass)) {
                        s.wrapper.children("." + s.params.slideClass + ":not(." + s.params.slideDuplicateClass + ')[data-swiper-slide-index="' + nextSlide.attr("data-swiper-slide-index") + '"]').addClass(s.params.slideDuplicateNextClass)
                    } else {
                        s.wrapper.children("." + s.params.slideClass + "." + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + nextSlide.attr("data-swiper-slide-index") + '"]').addClass(s.params.slideDuplicateNextClass)
                    }
                    if (prevSlide.hasClass(s.params.slideDuplicateClass)) {
                        s.wrapper.children("." + s.params.slideClass + ":not(." + s.params.slideDuplicateClass + ')[data-swiper-slide-index="' + prevSlide.attr("data-swiper-slide-index") + '"]').addClass(s.params.slideDuplicatePrevClass)
                    } else {
                        s.wrapper.children("." + s.params.slideClass + "." + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + prevSlide.attr("data-swiper-slide-index") + '"]').addClass(s.params.slideDuplicatePrevClass)
                    }
                }
                if (s.paginationContainer && s.paginationContainer.length > 0) {
                    var current, total = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;
                    if (s.params.loop) {
                        current = Math.ceil((s.activeIndex - s.loopedSlides) / s.params.slidesPerGroup);
                        if (current > s.slides.length - 1 - s.loopedSlides * 2) {
                            current = current - (s.slides.length - s.loopedSlides * 2)
                        }
                        if (current > total - 1) current = current - total;
                        if (current < 0 && s.params.paginationType !== "bullets") current = total + current
                    } else {
                        if (typeof s.snapIndex !== "undefined") {
                            current = s.snapIndex
                        } else {
                            current = s.activeIndex || 0
                        }
                    }
                    if (s.params.paginationType === "bullets" && s.bullets && s.bullets.length > 0) {
                        s.bullets.removeClass(s.params.bulletActiveClass);
                        if (s.paginationContainer.length > 1) {
                            s.bullets.each(function() {
                                if ($(this).index() === current) $(this).addClass(s.params.bulletActiveClass)
                            })
                        } else {
                            s.bullets.eq(current).addClass(s.params.bulletActiveClass)
                        }
                    }
                    if (s.params.paginationType === "fraction") {
                        s.paginationContainer.find("." + s.params.paginationCurrentClass).text(current + 1);
                        s.paginationContainer.find("." + s.params.paginationTotalClass).text(total)
                    }
                    if (s.params.paginationType === "progress") {
                        var scale = (current + 1) / total,
                            scaleX = scale,
                            scaleY = 1;
                        if (!s.isHorizontal()) {
                            scaleY = scale;
                            scaleX = 1
                        }
                        s.paginationContainer.find("." + s.params.paginationProgressbarClass).transform("translate3d(0,0,0) scaleX(" + scaleX + ") scaleY(" + scaleY + ")").transition(s.params.speed)
                    }
                    if (s.params.paginationType === "custom" && s.params.paginationCustomRender) {
                        s.paginationContainer.html(s.params.paginationCustomRender(s, current + 1, total));
                        s.emit("onPaginationRendered", s, s.paginationContainer[0])
                    }
                }
                if (!s.params.loop) {
                    if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                        if (s.isBeginning) {
                            s.prevButton.addClass(s.params.buttonDisabledClass);
                            if (s.params.a11y && s.a11y) s.a11y.disable(s.prevButton)
                        } else {
                            s.prevButton.removeClass(s.params.buttonDisabledClass);
                            if (s.params.a11y && s.a11y) s.a11y.enable(s.prevButton)
                        }
                    }
                    if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                        if (s.isEnd) {
                            s.nextButton.addClass(s.params.buttonDisabledClass);
                            if (s.params.a11y && s.a11y) s.a11y.disable(s.nextButton)
                        } else {
                            s.nextButton.removeClass(s.params.buttonDisabledClass);
                            if (s.params.a11y && s.a11y) s.a11y.enable(s.nextButton)
                        }
                    }
                }
            };
            s.updatePagination = function() {
                if (!s.params.pagination) return;
                if (s.paginationContainer && s.paginationContainer.length > 0) {
                    var paginationHTML = "";
                    if (s.params.paginationType === "bullets") {
                        var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;
                        for (var i = 0; i < numberOfBullets; i++) {
                            if (s.params.paginationBulletRender) {
                                paginationHTML += s.params.paginationBulletRender(s, i, s.params.bulletClass)
                            } else {
                                paginationHTML += "<" + s.params.paginationElement + ' class="' + s.params.bulletClass + '"></' + s.params.paginationElement + ">"
                            }
                        }
                        s.paginationContainer.html(paginationHTML);
                        s.bullets = s.paginationContainer.find("." + s.params.bulletClass);
                        if (s.params.paginationClickable && s.params.a11y && s.a11y) {
                            s.a11y.initPagination()
                        }
                    }
                    if (s.params.paginationType === "fraction") {
                        if (s.params.paginationFractionRender) {
                            paginationHTML = s.params.paginationFractionRender(s, s.params.paginationCurrentClass, s.params.paginationTotalClass)
                        } else {
                            paginationHTML = '<span class="' + s.params.paginationCurrentClass + '"></span>' + " / " + '<span class="' + s.params.paginationTotalClass + '"></span>'
                        }
                        s.paginationContainer.html(paginationHTML)
                    }
                    if (s.params.paginationType === "progress") {
                        if (s.params.paginationProgressRender) {
                            paginationHTML = s.params.paginationProgressRender(s, s.params.paginationProgressbarClass)
                        } else {
                            paginationHTML = '<span class="' + s.params.paginationProgressbarClass + '"></span>'
                        }
                        s.paginationContainer.html(paginationHTML)
                    }
                    if (s.params.paginationType !== "custom") {
                        s.emit("onPaginationRendered", s, s.paginationContainer[0])
                    }
                }
            };
            s.update = function(updateTranslate) {
                if (!s) return;
                s.updateContainerSize();
                s.updateSlidesSize();
                s.updateProgress();
                s.updatePagination();
                s.updateClasses();
                if (s.params.scrollbar && s.scrollbar) {
                    s.scrollbar.set()
                }
                var newTranslate;

                function forceSetTranslate() {
                    var translate = s.rtl ? -s.translate : s.translate;
                    newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());
                    s.setWrapperTranslate(newTranslate);
                    s.updateActiveIndex();
                    s.updateClasses()
                }
                if (updateTranslate) {
                    var translated;
                    if (s.controller && s.controller.spline) {
                        s.controller.spline = undefined
                    }
                    if (s.params.freeMode) {
                        forceSetTranslate();
                        if (s.params.autoHeight) {
                            s.updateAutoHeight()
                        }
                    } else {
                        if ((s.params.slidesPerView === "auto" || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {
                            translated = s.slideTo(s.slides.length - 1, 0, false, true)
                        } else {
                            translated = s.slideTo(s.activeIndex, 0, false, true)
                        }
                        if (!translated) {
                            forceSetTranslate()
                        }
                    }
                } else if (s.params.autoHeight) {
                    s.updateAutoHeight()
                }
            };
            s.onResize = function(forceUpdatePagination) {
                if (s.params.onBeforeResize) s.params.onBeforeResize(s);
                if (s.params.breakpoints) {
                    s.setBreakpoint()
                }
                var allowSwipeToPrev = s.params.allowSwipeToPrev;
                var allowSwipeToNext = s.params.allowSwipeToNext;
                s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;
                s.updateContainerSize();
                s.updateSlidesSize();
                if (s.params.slidesPerView === "auto" || s.params.freeMode || forceUpdatePagination) s.updatePagination();
                if (s.params.scrollbar && s.scrollbar) {
                    s.scrollbar.set()
                }
                if (s.controller && s.controller.spline) {
                    s.controller.spline = undefined
                }
                var slideChangedBySlideTo = false;
                if (s.params.freeMode) {
                    var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());
                    s.setWrapperTranslate(newTranslate);
                    s.updateActiveIndex();
                    s.updateClasses();
                    if (s.params.autoHeight) {
                        s.updateAutoHeight()
                    }
                } else {
                    s.updateClasses();
                    if ((s.params.slidesPerView === "auto" || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {
                        slideChangedBySlideTo = s.slideTo(s.slides.length - 1, 0, false, true)
                    } else {
                        slideChangedBySlideTo = s.slideTo(s.activeIndex, 0, false, true)
                    }
                }
                if (s.params.lazyLoading && !slideChangedBySlideTo && s.lazy) {
                    s.lazy.load()
                }
                s.params.allowSwipeToPrev = allowSwipeToPrev;
                s.params.allowSwipeToNext = allowSwipeToNext;
                if (s.params.onAfterResize) s.params.onAfterResize(s)
            };
            s.touchEventsDesktop = {
                start: "mousedown",
                move: "mousemove",
                end: "mouseup"
            };
            if (window.navigator.pointerEnabled) s.touchEventsDesktop = {
                start: "pointerdown",
                move: "pointermove",
                end: "pointerup"
            };
            else if (window.navigator.msPointerEnabled) s.touchEventsDesktop = {
                start: "MSPointerDown",
                move: "MSPointerMove",
                end: "MSPointerUp"
            };
            s.touchEvents = {
                start: s.support.touch || !s.params.simulateTouch ? "touchstart" : s.touchEventsDesktop.start,
                move: s.support.touch || !s.params.simulateTouch ? "touchmove" : s.touchEventsDesktop.move,
                end: s.support.touch || !s.params.simulateTouch ? "touchend" : s.touchEventsDesktop.end
            };
            if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {
                (s.params.touchEventsTarget === "container" ? s.container : s.wrapper).addClass("swiper-wp8-" + s.params.direction)
            }
            s.initEvents = function(detach) {
                var actionDom = detach ? "off" : "on";
                var action = detach ? "removeEventListener" : "addEventListener";
                var touchEventsTarget = s.params.touchEventsTarget === "lu-container" ? s.container[0] : s.wrapper[0];
                var target = s.support.touch ? touchEventsTarget : document;
                var moveCapture = s.params.nested ? true : false;
                if (s.browser.ie) {
                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);
                    target[action](s.touchEvents.move, s.onTouchMove, moveCapture);
                    target[action](s.touchEvents.end, s.onTouchEnd, false)
                } else {
                    if (s.support.touch) {
                        var passiveListener = s.touchEvents.start === "touchstart" && s.support.passiveListener && s.params.passiveListeners ? {
                            passive: true,
                            capture: false
                        } : false;
                        touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, passiveListener);
                        touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);
                        touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, passiveListener)
                    }
                    if (params.simulateTouch && !s.device.ios && !s.device.android || params.simulateTouch && !s.support.touch && s.device.ios) {
                        touchEventsTarget[action]("mousedown", s.onTouchStart, false);
                        document[action]("mousemove", s.onTouchMove, moveCapture);
                        document[action]("mouseup", s.onTouchEnd, false)
                    }
                }
                window[action]("resize", s.onResize);
                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                    s.nextButton[actionDom]("click", s.onClickNext);
                    if (s.params.a11y && s.a11y) s.nextButton[actionDom]("keydown", s.a11y.onEnterKey)
                }
                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                    s.prevButton[actionDom]("click", s.onClickPrev);
                    if (s.params.a11y && s.a11y) s.prevButton[actionDom]("keydown", s.a11y.onEnterKey)
                }
                if (s.params.pagination && s.params.paginationClickable) {
                    s.paginationContainer[actionDom]("click", "." + s.params.bulletClass, s.onClickIndex);
                    if (s.params.a11y && s.a11y) s.paginationContainer[actionDom]("keydown", "." + s.params.bulletClass, s.a11y.onEnterKey)
                }
                if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]("click", s.preventClicks, true)
            };
            s.attachEvents = function() {
                s.initEvents()
            };
            s.detachEvents = function() {
                s.initEvents(true)
            };
            s.allowClick = true;
            s.preventClicks = function(e) {
                if (!s.allowClick) {
                    if (s.params.preventClicks) e.preventDefault();
                    if (s.params.preventClicksPropagation && s.animating) {
                        e.stopPropagation();
                        e.stopImmediatePropagation()
                    }
                }
            };
            s.onClickNext = function(e) {
                e.preventDefault();
                if (s.isEnd && !s.params.loop) return;
                s.slideNext()
            };
            s.onClickPrev = function(e) {
                e.preventDefault();
                if (s.isBeginning && !s.params.loop) return;
                s.slidePrev()
            };
            s.onClickIndex = function(e) {
                e.preventDefault();
                var index = $(this).index() * s.params.slidesPerGroup;
                if (s.params.loop) index = index + s.loopedSlides;
                s.slideTo(index)
            };

            function findElementInEvent(e, selector) {
                var el = $(e.target);
                if (!el.is(selector)) {
                    if (typeof selector === "string") {
                        el = el.parents(selector)
                    } else if (selector.nodeType) {
                        var found;
                        el.parents().each(function(index, _el) {
                            if (_el === selector) found = selector
                        });
                        if (!found) return undefined;
                        else return selector
                    }
                }
                if (el.length === 0) {
                    return undefined
                }
                return el[0]
            }
            s.updateClickedSlide = function(e) {
                var slide = findElementInEvent(e, "." + s.params.slideClass);
                var slideFound = false;
                if (slide) {
                    for (var i = 0; i < s.slides.length; i++) {
                        if (s.slides[i] === slide) slideFound = true
                    }
                }
                if (slide && slideFound) {
                    s.clickedSlide = slide;
                    s.clickedIndex = $(slide).index()
                } else {
                    s.clickedSlide = undefined;
                    s.clickedIndex = undefined;
                    return
                }
                if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {
                    var slideToIndex = s.clickedIndex,
                        realIndex, duplicatedSlides, slidesPerView = s.params.slidesPerView === "auto" ? s.currentSlidesPerView() : s.params.slidesPerView;
                    if (s.params.loop) {
                        if (s.animating) return;
                        realIndex = parseInt($(s.clickedSlide).attr("data-swiper-slide-index"), 10);
                        if (s.params.centeredSlides) {
                            if (slideToIndex < s.loopedSlides - slidesPerView / 2 || slideToIndex > s.slides.length - s.loopedSlides + slidesPerView / 2) {
                                s.fixLoop();
                                slideToIndex = s.wrapper.children("." + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.' + s.params.slideDuplicateClass + ")").eq(0).index();
                                setTimeout(function() {
                                    s.slideTo(slideToIndex)
                                }, 0)
                            } else {
                                s.slideTo(slideToIndex)
                            }
                        } else {
                            if (slideToIndex > s.slides.length - slidesPerView) {
                                s.fixLoop();
                                slideToIndex = s.wrapper.children("." + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.' + s.params.slideDuplicateClass + ")").eq(0).index();
                                setTimeout(function() {
                                    s.slideTo(slideToIndex)
                                }, 0)
                            } else {
                                s.slideTo(slideToIndex)
                            }
                        }
                    } else {
                        s.slideTo(slideToIndex)
                    }
                }
            };
            var isTouched, isMoved, allowTouchCallbacks, touchStartTime, isScrolling, currentTranslate, startTranslate, allowThresholdMove, formElements = "input, select, textarea, button, video",
                lastClickTime = Date.now(),
                clickTimeout, velocities = [],
                allowMomentumBounce;
            s.animating = false;
            s.touches = {
                startX: 0,
                startY: 0,
                currentX: 0,
                currentY: 0,
                diff: 0
            };
            var isTouchEvent, startMoving;
            s.onTouchStart = function(e) {
                if (e.originalEvent) e = e.originalEvent;
                isTouchEvent = e.type === "touchstart";
                if (!isTouchEvent && "which" in e && e.which === 3) return;
                if (s.params.noSwiping && findElementInEvent(e, "." + s.params.noSwipingClass)) {
                    s.allowClick = true;
                    return
                }
                if (s.params.swipeHandler) {
                    if (!findElementInEvent(e, s.params.swipeHandler)) return
                }
                var startX = s.touches.currentX = e.type === "touchstart" ? e.targetTouches[0].pageX : e.pageX;
                var startY = s.touches.currentY = e.type === "touchstart" ? e.targetTouches[0].pageY : e.pageY;
                if (s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {
                    return
                }
                isTouched = true;
                isMoved = false;
                allowTouchCallbacks = true;
                isScrolling = undefined;
                startMoving = undefined;
                s.touches.startX = startX;
                s.touches.startY = startY;
                touchStartTime = Date.now();
                s.allowClick = true;
                s.updateContainerSize();
                s.swipeDirection = undefined;
                if (s.params.threshold > 0) allowThresholdMove = false;
                if (e.type !== "touchstart") {
                    var preventDefault = true;
                    if ($(e.target).is(formElements)) preventDefault = false;
                    if (document.activeElement && $(document.activeElement).is(formElements)) {
                        document.activeElement.blur()
                    }
                    if (preventDefault) {
                        e.preventDefault()
                    }
                }
                s.emit("onTouchStart", s, e)
            };
            s.onTouchMove = function(e) {
                if (e.originalEvent) e = e.originalEvent;
                if (isTouchEvent && e.type === "mousemove") return;
                if (e.preventedByNestedSwiper) {
                    s.touches.startX = e.type === "touchmove" ? e.targetTouches[0].pageX : e.pageX;
                    s.touches.startY = e.type === "touchmove" ? e.targetTouches[0].pageY : e.pageY;
                    return
                }
                if (s.params.onlyExternal) {
                    s.allowClick = false;
                    if (isTouched) {
                        s.touches.startX = s.touches.currentX = e.type === "touchmove" ? e.targetTouches[0].pageX : e.pageX;
                        s.touches.startY = s.touches.currentY = e.type === "touchmove" ? e.targetTouches[0].pageY : e.pageY;
                        touchStartTime = Date.now()
                    }
                    return
                }
                if (isTouchEvent && s.params.touchReleaseOnEdges && !s.params.loop) {
                    if (!s.isHorizontal()) {
                        if (s.touches.currentY < s.touches.startY && s.translate <= s.maxTranslate() || s.touches.currentY > s.touches.startY && s.translate >= s.minTranslate()) {
                            return
                        }
                    } else {
                        if (s.touches.currentX < s.touches.startX && s.translate <= s.maxTranslate() || s.touches.currentX > s.touches.startX && s.translate >= s.minTranslate()) {
                            return
                        }
                    }
                }
                if (isTouchEvent && document.activeElement) {
                    if (e.target === document.activeElement && $(e.target).is(formElements)) {
                        isMoved = true;
                        s.allowClick = false;
                        return
                    }
                }
                if (allowTouchCallbacks) {
                    s.emit("onTouchMove", s, e)
                }
                if (e.targetTouches && e.targetTouches.length > 1) return;
                s.touches.currentX = e.type === "touchmove" ? e.targetTouches[0].pageX : e.pageX;
                s.touches.currentY = e.type === "touchmove" ? e.targetTouches[0].pageY : e.pageY;
                if (typeof isScrolling === "undefined") {
                    var touchAngle;
                    if (s.isHorizontal() && s.touches.currentY === s.touches.startY || !s.isHorizontal() && s.touches.currentX === s.touches.startX) {
                        isScrolling = false
                    } else {
                        touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;
                        isScrolling = s.isHorizontal() ? touchAngle > s.params.touchAngle : 90 - touchAngle > s.params.touchAngle
                    }
                }
                if (isScrolling) {
                    s.emit("onTouchMoveOpposite", s, e)
                }
                if (typeof startMoving === "undefined") {
                    if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {
                        startMoving = true
                    }
                }
                if (!isTouched) return;
                if (isScrolling) {
                    isTouched = false;
                    return
                }
                if (!startMoving) {
                    return
                }
                s.allowClick = false;
                s.emit("onSliderMove", s, e);
                e.preventDefault();
                if (s.params.touchMoveStopPropagation && !s.params.nested) {
                    e.stopPropagation()
                }
                if (!isMoved) {
                    if (params.loop) {
                        s.fixLoop()
                    }
                    startTranslate = s.getWrapperTranslate();
                    s.setWrapperTransition(0);
                    if (s.animating) {
                        s.wrapper.trigger("webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd")
                    }
                    if (s.params.autoplay && s.autoplaying) {
                        if (s.params.autoplayDisableOnInteraction) {
                            s.stopAutoplay()
                        } else {
                            s.pauseAutoplay()
                        }
                    }
                    allowMomentumBounce = false;
                    if (s.params.grabCursor && (s.params.allowSwipeToNext === true || s.params.allowSwipeToPrev === true)) {
                        s.setGrabCursor(true)
                    }
                }
                isMoved = true;
                var diff = s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;
                diff = diff * s.params.touchRatio;
                if (s.rtl) diff = -diff;
                s.swipeDirection = diff > 0 ? "prev" : "next";
                currentTranslate = diff + startTranslate;
                var disableParentSwiper = true;
                if (diff > 0 && currentTranslate > s.minTranslate()) {
                    disableParentSwiper = false;
                    if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio)
                } else if (diff < 0 && currentTranslate < s.maxTranslate()) {
                    disableParentSwiper = false;
                    if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio)
                }
                if (disableParentSwiper) {
                    e.preventedByNestedSwiper = true
                }
                if (!s.params.allowSwipeToNext && s.swipeDirection === "next" && currentTranslate < startTranslate) {
                    currentTranslate = startTranslate
                }
                if (!s.params.allowSwipeToPrev && s.swipeDirection === "prev" && currentTranslate > startTranslate) {
                    currentTranslate = startTranslate
                }
                if (s.params.threshold > 0) {
                    if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {
                        if (!allowThresholdMove) {
                            allowThresholdMove = true;
                            s.touches.startX = s.touches.currentX;
                            s.touches.startY = s.touches.currentY;
                            currentTranslate = startTranslate;
                            s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;
                            return
                        }
                    } else {
                        currentTranslate = startTranslate;
                        return
                    }
                }
                if (!s.params.followFinger) return;
                if (s.params.freeMode || s.params.watchSlidesProgress) {
                    s.updateActiveIndex()
                }
                if (s.params.freeMode) {
                    if (velocities.length === 0) {
                        velocities.push({
                            position: s.touches[s.isHorizontal() ? "startX" : "startY"],
                            time: touchStartTime
                        })
                    }
                    velocities.push({
                        position: s.touches[s.isHorizontal() ? "currentX" : "currentY"],
                        time: (new window.Date).getTime()
                    })
                }
                s.updateProgress(currentTranslate);
                s.setWrapperTranslate(currentTranslate)
            };
            s.onTouchEnd = function(e) {
                if (e.originalEvent) e = e.originalEvent;
                if (allowTouchCallbacks) {
                    s.emit("onTouchEnd", s, e)
                }
                allowTouchCallbacks = false;
                if (!isTouched) return;
                if (s.params.grabCursor && isMoved && isTouched && (s.params.allowSwipeToNext === true || s.params.allowSwipeToPrev === true)) {
                    s.setGrabCursor(false)
                }
                var touchEndTime = Date.now();
                var timeDiff = touchEndTime - touchStartTime;
                if (s.allowClick) {
                    s.updateClickedSlide(e);
                    s.emit("onTap", s, e);
                    if (timeDiff < 300 && touchEndTime - lastClickTime > 300) {
                        if (clickTimeout) clearTimeout(clickTimeout);
                        clickTimeout = setTimeout(function() {
                            if (!s) return;
                            if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {
                                s.paginationContainer.toggleClass(s.params.paginationHiddenClass)
                            }
                            s.emit("onClick", s, e)
                        }, 300)
                    }
                    if (timeDiff < 300 && touchEndTime - lastClickTime < 300) {
                        if (clickTimeout) clearTimeout(clickTimeout);
                        s.emit("onDoubleTap", s, e)
                    }
                }
                lastClickTime = Date.now();
                setTimeout(function() {
                    if (s) s.allowClick = true
                }, 0);
                if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {
                    isTouched = isMoved = false;
                    return
                }
                isTouched = isMoved = false;
                var currentPos;
                if (s.params.followFinger) {
                    currentPos = s.rtl ? s.translate : -s.translate
                } else {
                    currentPos = -currentTranslate
                }
                if (s.params.freeMode) {
                    if (currentPos < -s.minTranslate()) {
                        s.slideTo(s.activeIndex);
                        return
                    } else if (currentPos > -s.maxTranslate()) {
                        if (s.slides.length < s.snapGrid.length) {
                            s.slideTo(s.snapGrid.length - 1)
                        } else {
                            s.slideTo(s.slides.length - 1)
                        }
                        return
                    }
                    if (s.params.freeModeMomentum) {
                        if (velocities.length > 1) {
                            var lastMoveEvent = velocities.pop(),
                                velocityEvent = velocities.pop();
                            var distance = lastMoveEvent.position - velocityEvent.position;
                            var time = lastMoveEvent.time - velocityEvent.time;
                            s.velocity = distance / time;
                            s.velocity = s.velocity / 2;
                            if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {
                                s.velocity = 0
                            }
                            if (time > 150 || (new window.Date).getTime() - lastMoveEvent.time > 300) {
                                s.velocity = 0
                            }
                        } else {
                            s.velocity = 0
                        }
                        s.velocity = s.velocity * s.params.freeModeMomentumVelocityRatio;
                        velocities.length = 0;
                        var momentumDuration = 1e3 * s.params.freeModeMomentumRatio;
                        var momentumDistance = s.velocity * momentumDuration;
                        var newPosition = s.translate + momentumDistance;
                        if (s.rtl) newPosition = -newPosition;
                        var doBounce = false;
                        var afterBouncePosition;
                        var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;
                        if (newPosition < s.maxTranslate()) {
                            if (s.params.freeModeMomentumBounce) {
                                if (newPosition + s.maxTranslate() < -bounceAmount) {
                                    newPosition = s.maxTranslate() - bounceAmount
                                }
                                afterBouncePosition = s.maxTranslate();
                                doBounce = true;
                                allowMomentumBounce = true
                            } else {
                                newPosition = s.maxTranslate()
                            }
                        } else if (newPosition > s.minTranslate()) {
                            if (s.params.freeModeMomentumBounce) {
                                if (newPosition - s.minTranslate() > bounceAmount) {
                                    newPosition = s.minTranslate() + bounceAmount
                                }
                                afterBouncePosition = s.minTranslate();
                                doBounce = true;
                                allowMomentumBounce = true
                            } else {
                                newPosition = s.minTranslate()
                            }
                        } else if (s.params.freeModeSticky) {
                            var j = 0,
                                nextSlide;
                            for (j = 0; j < s.snapGrid.length; j += 1) {
                                if (s.snapGrid[j] > -newPosition) {
                                    nextSlide = j;
                                    break
                                }
                            }
                            if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === "next") {
                                newPosition = s.snapGrid[nextSlide]
                            } else {
                                newPosition = s.snapGrid[nextSlide - 1]
                            }
                            if (!s.rtl) newPosition = -newPosition
                        }
                        if (s.velocity !== 0) {
                            if (s.rtl) {
                                momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity)
                            } else {
                                momentumDuration = Math.abs((newPosition - s.translate) / s.velocity)
                            }
                        } else if (s.params.freeModeSticky) {
                            s.slideReset();
                            return
                        }
                        if (s.params.freeModeMomentumBounce && doBounce) {
                            s.updateProgress(afterBouncePosition);
                            s.setWrapperTransition(momentumDuration);
                            s.setWrapperTranslate(newPosition);
                            s.onTransitionStart();
                            s.animating = true;
                            s.wrapper.transitionEnd(function() {
                                if (!s || !allowMomentumBounce) return;
                                s.emit("onMomentumBounce", s);
                                s.setWrapperTransition(s.params.speed);
                                s.setWrapperTranslate(afterBouncePosition);
                                s.wrapper.transitionEnd(function() {
                                    if (!s) return;
                                    s.onTransitionEnd()
                                })
                            })
                        } else if (s.velocity) {
                            s.updateProgress(newPosition);
                            s.setWrapperTransition(momentumDuration);
                            s.setWrapperTranslate(newPosition);
                            s.onTransitionStart();
                            if (!s.animating) {
                                s.animating = true;
                                s.wrapper.transitionEnd(function() {
                                    if (!s) return;
                                    s.onTransitionEnd()
                                })
                            }
                        } else {
                            s.updateProgress(newPosition)
                        }
                        s.updateActiveIndex()
                    }
                    if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {
                        s.updateProgress();
                        s.updateActiveIndex()
                    }
                    return
                }
                var i, stopIndex = 0,
                    groupSize = s.slidesSizesGrid[0];
                for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {
                    if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== "undefined") {
                        if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {
                            stopIndex = i;
                            groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i]
                        }
                    } else {
                        if (currentPos >= s.slidesGrid[i]) {
                            stopIndex = i;
                            groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2]
                        }
                    }
                }
                var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;
                if (timeDiff > s.params.longSwipesMs) {
                    if (!s.params.longSwipes) {
                        s.slideTo(s.activeIndex);
                        return
                    }
                    if (s.swipeDirection === "next") {
                        if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);
                        else s.slideTo(stopIndex)
                    }
                    if (s.swipeDirection === "prev") {
                        if (ratio > 1 - s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);
                        else s.slideTo(stopIndex)
                    }
                } else {
                    if (!s.params.shortSwipes) {
                        s.slideTo(s.activeIndex);
                        return
                    }
                    if (s.swipeDirection === "next") {
                        s.slideTo(stopIndex + s.params.slidesPerGroup)
                    }
                    if (s.swipeDirection === "prev") {
                        s.slideTo(stopIndex)
                    }
                }
            };
            s._slideTo = function(slideIndex, speed) {
                return s.slideTo(slideIndex, speed, true, true)
            };
            s.slideTo = function(slideIndex, speed, runCallbacks, internal) {
                if (typeof runCallbacks === "undefined") runCallbacks = true;
                if (typeof slideIndex === "undefined") slideIndex = 0;
                if (slideIndex < 0) slideIndex = 0;
                s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);
                if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;
                var translate = -s.snapGrid[s.snapIndex];
                if (s.params.autoplay && s.autoplaying) {
                    if (internal || !s.params.autoplayDisableOnInteraction) {
                        s.pauseAutoplay(speed)
                    } else {
                        s.stopAutoplay()
                    }
                }
                s.updateProgress(translate);
                if (s.params.normalizeSlideIndex) {
                    for (var i = 0; i < s.slidesGrid.length; i++) {
                        if (-Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {
                            slideIndex = i
                        }
                    }
                }
                if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {
                    return false
                }
                if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {
                    if ((s.activeIndex || 0) !== slideIndex) return false
                }
                if (typeof speed === "undefined") speed = s.params.speed;
                s.previousIndex = s.activeIndex || 0;
                s.activeIndex = slideIndex;
                s.updateRealIndex();
                if (s.rtl && -translate === s.translate || !s.rtl && translate === s.translate) {
                    if (s.params.autoHeight) {
                        s.updateAutoHeight()
                    }
                    s.updateClasses();
                    if (s.params.effect !== "slide") {
                        s.setWrapperTranslate(translate)
                    }
                    return false
                }
                s.updateClasses();
                s.onTransitionStart(runCallbacks);
                if (speed === 0 || s.browser.lteIE9) {
                    s.setWrapperTranslate(translate);
                    s.setWrapperTransition(0);
                    s.onTransitionEnd(runCallbacks)
                } else {
                    s.setWrapperTranslate(translate);
                    s.setWrapperTransition(speed);
                    if (!s.animating) {
                        s.animating = true;
                        s.wrapper.transitionEnd(function() {
                            if (!s) return;
                            s.onTransitionEnd(runCallbacks)
                        })
                    }
                }
                return true
            };
            s.onTransitionStart = function(runCallbacks) {
                if (typeof runCallbacks === "undefined") runCallbacks = true;
                if (s.params.autoHeight) {
                    s.updateAutoHeight()
                }
                if (s.lazy) s.lazy.onTransitionStart();
                if (runCallbacks) {
                    s.emit("onTransitionStart", s);
                    if (s.activeIndex !== s.previousIndex) {
                        s.emit("onSlideChangeStart", s);
                        if (s.activeIndex > s.previousIndex) {
                            s.emit("onSlideNextStart", s)
                        } else {
                            s.emit("onSlidePrevStart", s)
                        }
                    }
                }
            };
            s.onTransitionEnd = function(runCallbacks) {
                s.animating = false;
                s.setWrapperTransition(0);
                if (typeof runCallbacks === "undefined") runCallbacks = true;
                if (s.lazy) s.lazy.onTransitionEnd();
                if (runCallbacks) {
                    s.emit("onTransitionEnd", s);
                    if (s.activeIndex !== s.previousIndex) {
                        s.emit("onSlideChangeEnd", s);
                        if (s.activeIndex > s.previousIndex) {
                            s.emit("onSlideNextEnd", s)
                        } else {
                            s.emit("onSlidePrevEnd", s)
                        }
                    }
                }
                if (s.params.history && s.history) {
                    s.history.setHistory(s.params.history, s.activeIndex)
                }
                if (s.params.hashnav && s.hashnav) {
                    s.hashnav.setHash()
                }
            };
            s.slideNext = function(runCallbacks, speed, internal) {
                if (s.params.loop) {
                    if (s.animating) return false;
                    s.fixLoop();
                    var clientLeft = s.container[0].clientLeft;
                    return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal)
                } else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal)
            };
            s._slideNext = function(speed) {
                return s.slideNext(true, speed, true)
            };
            s.slidePrev = function(runCallbacks, speed, internal) {
                if (s.params.loop) {
                    if (s.animating) return false;
                    s.fixLoop();
                    var clientLeft = s.container[0].clientLeft;
                    return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal)
                } else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal)
            };
            s._slidePrev = function(speed) {
                return s.slidePrev(true, speed, true)
            };
            s.slideReset = function(runCallbacks, speed, internal) {
                return s.slideTo(s.activeIndex, speed, runCallbacks)
            };
            s.disableTouchControl = function() {
                s.params.onlyExternal = true;
                return true
            };
            s.enableTouchControl = function() {
                s.params.onlyExternal = false;
                return true
            };
            s.setWrapperTransition = function(duration, byController) {
                s.wrapper.transition(duration);
                if (s.params.effect !== "slide" && s.effects[s.params.effect]) {
                    s.effects[s.params.effect].setTransition(duration)
                }
                if (s.params.parallax && s.parallax) {
                    s.parallax.setTransition(duration)
                }
                if (s.params.scrollbar && s.scrollbar) {
                    s.scrollbar.setTransition(duration)
                }
                if (s.params.control && s.controller) {
                    s.controller.setTransition(duration, byController)
                }
                s.emit("onSetTransition", s, duration)
            };
            s.setWrapperTranslate = function(translate, updateActiveIndex, byController) {
                var x = 0,
                    y = 0,
                    z = 0;
                if (s.isHorizontal()) {
                    x = s.rtl ? -translate : translate
                } else {
                    y = translate
                }
                if (s.params.roundLengths) {
                    x = round(x);
                    y = round(y)
                }
                if (!s.params.virtualTranslate) {
                    if (s.support.transforms3d) s.wrapper.transform("translate3d(" + x + "px, " + y + "px, " + z + "px)");
                    else s.wrapper.transform("translate(" + x + "px, " + y + "px)")
                }
                s.translate = s.isHorizontal() ? x : y;
                var progress;
                var translatesDiff = s.maxTranslate() - s.minTranslate();
                if (translatesDiff === 0) {
                    progress = 0
                } else {
                    progress = (translate - s.minTranslate()) / translatesDiff
                }
                if (progress !== s.progress) {
                    s.updateProgress(translate)
                }
                if (updateActiveIndex) s.updateActiveIndex();
                if (s.params.effect !== "slide" && s.effects[s.params.effect]) {
                    s.effects[s.params.effect].setTranslate(s.translate)
                }
                if (s.params.parallax && s.parallax) {
                    s.parallax.setTranslate(s.translate)
                }
                if (s.params.scrollbar && s.scrollbar) {
                    s.scrollbar.setTranslate(s.translate)
                }
                if (s.params.control && s.controller) {
                    s.controller.setTranslate(s.translate, byController)
                }
                s.emit("onSetTranslate", s, s.translate)
            };
            s.getTranslate = function(el, axis) {
                var matrix, curTransform, curStyle, transformMatrix;
                if (typeof axis === "undefined") {
                    axis = "x"
                }
                if (s.params.virtualTranslate) {
                    return s.rtl ? -s.translate : s.translate
                }
                curStyle = window.getComputedStyle(el, null);
                if (window.WebKitCSSMatrix) {
                    curTransform = curStyle.transform || curStyle.webkitTransform;
                    if (curTransform.split(",").length > 6) {
                        curTransform = curTransform.split(", ").map(function(a) {
                            return a.replace(",", ".")
                        }).join(", ")
                    }
                    transformMatrix = new window.WebKitCSSMatrix(curTransform === "none" ? "" : curTransform)
                } else {
                    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,");
                    matrix = transformMatrix.toString().split(",")
                }
                if (axis === "x") {
                    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;
                    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);
                    else curTransform = parseFloat(matrix[4])
                }
                if (axis === "y") {
                    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;
                    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);
                    else curTransform = parseFloat(matrix[5])
                }
                if (s.rtl && curTransform) curTransform = -curTransform;
                return curTransform || 0
            };
            s.getWrapperTranslate = function(axis) {
                if (typeof axis === "undefined") {
                    axis = s.isHorizontal() ? "x" : "y"
                }
                return s.getTranslate(s.wrapper[0], axis)
            };
            s.observers = [];

            function initObserver(target, options) {
                options = options || {};
                var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;
                var observer = new ObserverFunc(function(mutations) {
                    mutations.forEach(function(mutation) {
                        s.onResize(true);
                        s.emit("onObserverUpdate", s, mutation)
                    })
                });
                observer.observe(target, {
                    attributes: typeof options.attributes === "undefined" ? true : options.attributes,
                    childList: typeof options.childList === "undefined" ? true : options.childList,
                    characterData: typeof options.characterData === "undefined" ? true : options.characterData
                });
                s.observers.push(observer)
            }
            s.initObservers = function() {
                if (s.params.observeParents) {
                    var containerParents = s.container.parents();
                    for (var i = 0; i < containerParents.length; i++) {
                        initObserver(containerParents[i])
                    }
                }
                initObserver(s.container[0], {
                    childList: false
                });
                initObserver(s.wrapper[0], {
                    attributes: false
                })
            };
            s.disconnectObservers = function() {
                for (var i = 0; i < s.observers.length; i++) {
                    s.observers[i].disconnect()
                }
                s.observers = []
            };
            s.createLoop = function() {
                s.wrapper.children("." + s.params.slideClass + "." + s.params.slideDuplicateClass).remove();
                var slides = s.wrapper.children("." + s.params.slideClass);
                if (s.params.slidesPerView === "auto" && !s.params.loopedSlides) s.params.loopedSlides = slides.length;
                s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);
                s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;
                if (s.loopedSlides > slides.length) {
                    s.loopedSlides = slides.length
                }
                var prependSlides = [],
                    appendSlides = [],
                    i;
                slides.each(function(index, el) {
                    var slide = $(this);
                    if (index < s.loopedSlides) appendSlides.push(el);
                    if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);
                    slide.attr("data-swiper-slide-index", index)
                });
                for (i = 0; i < appendSlides.length; i++) {
                    s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass))
                }
                for (i = prependSlides.length - 1; i >= 0; i--) {
                    s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass))
                }
            };
            s.destroyLoop = function() {
                s.wrapper.children("." + s.params.slideClass + "." + s.params.slideDuplicateClass).remove();
                s.slides.removeAttr("data-swiper-slide-index")
            };
            s.reLoop = function(updatePosition) {
                var oldIndex = s.activeIndex - s.loopedSlides;
                s.destroyLoop();
                s.createLoop();
                s.updateSlidesSize();
                if (updatePosition) {
                    s.slideTo(oldIndex + s.loopedSlides, 0, false)
                }
            };
            s.fixLoop = function() {
                var newIndex;
                if (s.activeIndex < s.loopedSlides) {
                    newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;
                    newIndex = newIndex + s.loopedSlides;
                    s.slideTo(newIndex, 0, false, true)
                } else if (s.params.slidesPerView === "auto" && s.activeIndex >= s.loopedSlides * 2 || s.activeIndex > s.slides.length - s.params.slidesPerView * 2) {
                    newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;
                    newIndex = newIndex + s.loopedSlides;
                    s.slideTo(newIndex, 0, false, true)
                }
            };
            s.appendSlide = function(slides) {
                if (s.params.loop) {
                    s.destroyLoop()
                }
                if ((typeof slides === "undefined" ? "undefined" : _typeof(slides)) === "object" && slides.length) {
                    for (var i = 0; i < slides.length; i++) {
                        if (slides[i]) s.wrapper.append(slides[i])
                    }
                } else {
                    s.wrapper.append(slides)
                }
                if (s.params.loop) {
                    s.createLoop()
                }
                if (!(s.params.observer && s.support.observer)) {
                    s.update(true)
                }
            };
            s.prependSlide = function(slides) {
                if (s.params.loop) {
                    s.destroyLoop()
                }
                var newActiveIndex = s.activeIndex + 1;
                if ((typeof slides === "undefined" ? "undefined" : _typeof(slides)) === "object" && slides.length) {
                    for (var i = 0; i < slides.length; i++) {
                        if (slides[i]) s.wrapper.prepend(slides[i])
                    }
                    newActiveIndex = s.activeIndex + slides.length
                } else {
                    s.wrapper.prepend(slides)
                }
                if (s.params.loop) {
                    s.createLoop()
                }
                if (!(s.params.observer && s.support.observer)) {
                    s.update(true)
                }
                s.slideTo(newActiveIndex, 0, false)
            };
            s.removeSlide = function(slidesIndexes) {
                if (s.params.loop) {
                    s.destroyLoop();
                    s.slides = s.wrapper.children("." + s.params.slideClass)
                }
                var newActiveIndex = s.activeIndex,
                    indexToRemove;
                if ((typeof slidesIndexes === "undefined" ? "undefined" : _typeof(slidesIndexes)) === "object" && slidesIndexes.length) {
                    for (var i = 0; i < slidesIndexes.length; i++) {
                        indexToRemove = slidesIndexes[i];
                        if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();
                        if (indexToRemove < newActiveIndex) newActiveIndex--
                    }
                    newActiveIndex = Math.max(newActiveIndex, 0)
                } else {
                    indexToRemove = slidesIndexes;
                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();
                    if (indexToRemove < newActiveIndex) newActiveIndex--;
                    newActiveIndex = Math.max(newActiveIndex, 0)
                }
                if (s.params.loop) {
                    s.createLoop()
                }
                if (!(s.params.observer && s.support.observer)) {
                    s.update(true)
                }
                if (s.params.loop) {
                    s.slideTo(newActiveIndex + s.loopedSlides, 0, false)
                } else {
                    s.slideTo(newActiveIndex, 0, false)
                }
            };
            s.removeAllSlides = function() {
                var slidesIndexes = [];
                for (var i = 0; i < s.slides.length; i++) {
                    slidesIndexes.push(i)
                }
                s.removeSlide(slidesIndexes)
            };
            s.effects = {
                fade: {
                    setTranslate: function setTranslate() {
                        for (var i = 0; i < s.slides.length; i++) {
                            var slide = s.slides.eq(i);
                            var offset = slide[0].swiperSlideOffset;
                            var tx = -offset;
                            if (!s.params.virtualTranslate) tx = tx - s.translate;
                            var ty = 0;
                            if (!s.isHorizontal()) {
                                ty = tx;
                                tx = 0
                            }
                            var slideOpacity = s.params.fade.crossFade ? Math.max(1 - Math.abs(slide[0].progress), 0) : 1 + Math.min(Math.max(slide[0].progress, -1), 0);
                            slide.css({
                                opacity: slideOpacity
                            }).transform("translate3d(" + tx + "px, " + ty + "px, 0px)")
                        }
                    },
                    setTransition: function setTransition(duration) {
                        s.slides.transition(duration);
                        if (s.params.virtualTranslate && duration !== 0) {
                            var eventTriggered = false;
                            s.slides.transitionEnd(function() {
                                if (eventTriggered) return;
                                if (!s) return;
                                eventTriggered = true;
                                s.animating = false;
                                var triggerEvents = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"];
                                for (var i = 0; i < triggerEvents.length; i++) {
                                    s.wrapper.trigger(triggerEvents[i])
                                }
                            })
                        }
                    }
                },
                flip: {
                    setTranslate: function setTranslate() {
                        for (var i = 0; i < s.slides.length; i++) {
                            var slide = s.slides.eq(i);
                            var progress = slide[0].progress;
                            if (s.params.flip.limitRotation) {
                                progress = Math.max(Math.min(slide[0].progress, 1), -1)
                            }
                            var offset = slide[0].swiperSlideOffset;
                            var rotate = -180 * progress,
                                rotateY = rotate,
                                rotateX = 0,
                                tx = -offset,
                                ty = 0;
                            if (!s.isHorizontal()) {
                                ty = tx;
                                tx = 0;
                                rotateX = -rotateY;
                                rotateY = 0
                            } else if (s.rtl) {
                                rotateY = -rotateY
                            }
                            slide[0].style.zIndex = -Math.abs(Math.round(progress)) + s.slides.length;
                            if (s.params.flip.slideShadows) {
                                var shadowBefore = s.isHorizontal() ? slide.find(".swiper-slide-shadow-left") : slide.find(".swiper-slide-shadow-top");
                                var shadowAfter = s.isHorizontal() ? slide.find(".swiper-slide-shadow-right") : slide.find(".swiper-slide-shadow-bottom");
                                if (shadowBefore.length === 0) {
                                    shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? "left" : "top") + '"></div>');
                                    slide.append(shadowBefore)
                                }
                                if (shadowAfter.length === 0) {
                                    shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? "right" : "bottom") + '"></div>');
                                    slide.append(shadowAfter)
                                }
                                if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
                                if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0)
                            }
                            slide.transform("translate3d(" + tx + "px, " + ty + "px, 0px) rotateX(" + rotateX + "deg) rotateY(" + rotateY + "deg)")
                        }
                    },
                    setTransition: function setTransition(duration) {
                        s.slides.transition(duration).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(duration);
                        if (s.params.virtualTranslate && duration !== 0) {
                            var eventTriggered = false;
                            s.slides.eq(s.activeIndex).transitionEnd(function() {
                                if (eventTriggered) return;
                                if (!s) return;
                                if (!$(this).hasClass(s.params.slideActiveClass)) return;
                                eventTriggered = true;
                                s.animating = false;
                                var triggerEvents = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"];
                                for (var i = 0; i < triggerEvents.length; i++) {
                                    s.wrapper.trigger(triggerEvents[i])
                                }
                            })
                        }
                    }
                },
                cube: {
                    setTranslate: function setTranslate() {
                        var wrapperRotate = 0,
                            cubeShadow;
                        if (s.params.cube.shadow) {
                            if (s.isHorizontal()) {
                                cubeShadow = s.wrapper.find(".swiper-cube-shadow");
                                if (cubeShadow.length === 0) {
                                    cubeShadow = $('<div class="swiper-cube-shadow"></div>');
                                    s.wrapper.append(cubeShadow)
                                }
                                cubeShadow.css({
                                    height: s.width + "px"
                                })
                            } else {
                                cubeShadow = s.container.find(".swiper-cube-shadow");
                                if (cubeShadow.length === 0) {
                                    cubeShadow = $('<div class="swiper-cube-shadow"></div>');
                                    s.container.append(cubeShadow)
                                }
                            }
                        }
                        for (var i = 0; i < s.slides.length; i++) {
                            var slide = s.slides.eq(i);
                            var slideAngle = i * 90;
                            var round = Math.floor(slideAngle / 360);
                            if (s.rtl) {
                                slideAngle = -slideAngle;
                                round = Math.floor(-slideAngle / 360)
                            }
                            var progress = Math.max(Math.min(slide[0].progress, 1), -1);
                            var tx = 0,
                                ty = 0,
                                tz = 0;
                            if (i % 4 === 0) {
                                tx = -round * 4 * s.size;
                                tz = 0
                            } else if ((i - 1) % 4 === 0) {
                                tx = 0;
                                tz = -round * 4 * s.size
                            } else if ((i - 2) % 4 === 0) {
                                tx = s.size + round * 4 * s.size;
                                tz = s.size
                            } else if ((i - 3) % 4 === 0) {
                                tx = -s.size;
                                tz = 3 * s.size + s.size * 4 * round
                            }
                            if (s.rtl) {
                                tx = -tx
                            }
                            if (!s.isHorizontal()) {
                                ty = tx;
                                tx = 0
                            }
                            var transform = "rotateX(" + (s.isHorizontal() ? 0 : -slideAngle) + "deg) rotateY(" + (s.isHorizontal() ? slideAngle : 0) + "deg) translate3d(" + tx + "px, " + ty + "px, " + tz + "px)";
                            if (progress <= 1 && progress > -1) {
                                wrapperRotate = i * 90 + progress * 90;
                                if (s.rtl) wrapperRotate = -i * 90 - progress * 90
                            }
                            slide.transform(transform);
                            if (s.params.cube.slideShadows) {
                                var shadowBefore = s.isHorizontal() ? slide.find(".swiper-slide-shadow-left") : slide.find(".swiper-slide-shadow-top");
                                var shadowAfter = s.isHorizontal() ? slide.find(".swiper-slide-shadow-right") : slide.find(".swiper-slide-shadow-bottom");
                                if (shadowBefore.length === 0) {
                                    shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? "left" : "top") + '"></div>');
                                    slide.append(shadowBefore)
                                }
                                if (shadowAfter.length === 0) {
                                    shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? "right" : "bottom") + '"></div>');
                                    slide.append(shadowAfter)
                                }
                                if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
                                if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0)
                            }
                        }
                        s.wrapper.css({
                            "-webkit-transform-origin": "50% 50% -" + s.size / 2 + "px",
                            "-moz-transform-origin": "50% 50% -" + s.size / 2 + "px",
                            "-ms-transform-origin": "50% 50% -" + s.size / 2 + "px",
                            "transform-origin": "50% 50% -" + s.size / 2 + "px"
                        });
                        if (s.params.cube.shadow) {
                            if (s.isHorizontal()) {
                                cubeShadow.transform("translate3d(0px, " + (s.width / 2 + s.params.cube.shadowOffset) + "px, " + -s.width / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + s.params.cube.shadowScale + ")")
                            } else {
                                var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
                                var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);
                                var scale1 = s.params.cube.shadowScale,
                                    scale2 = s.params.cube.shadowScale / multiplier,
                                    offset = s.params.cube.shadowOffset;
                                cubeShadow.transform("scale3d(" + scale1 + ", 1, " + scale2 + ") translate3d(0px, " + (s.height / 2 + offset) + "px, " + -s.height / 2 / scale2 + "px) rotateX(-90deg)")
                            }
                        }
                        var zFactor = s.isSafari || s.isUiWebView ? -s.size / 2 : 0;
                        s.wrapper.transform("translate3d(0px,0," + zFactor + "px) rotateX(" + (s.isHorizontal() ? 0 : wrapperRotate) + "deg) rotateY(" + (s.isHorizontal() ? -wrapperRotate : 0) + "deg)")
                    },
                    setTransition: function setTransition(duration) {
                        s.slides.transition(duration).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(duration);
                        if (s.params.cube.shadow && !s.isHorizontal()) {
                            s.container.find(".swiper-cube-shadow").transition(duration)
                        }
                    }
                },
                coverflow: {
                    setTranslate: function setTranslate() {
                        var transform = s.translate;
                        var center = s.isHorizontal() ? -transform + s.width / 2 : -transform + s.height / 2;
                        var rotate = s.isHorizontal() ? s.params.coverflow.rotate : -s.params.coverflow.rotate;
                        var translate = s.params.coverflow.depth;
                        for (var i = 0, length = s.slides.length; i < length; i++) {
                            var slide = s.slides.eq(i);
                            var slideSize = s.slidesSizesGrid[i];
                            var slideOffset = slide[0].swiperSlideOffset;
                            var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;
                            var rotateY = s.isHorizontal() ? rotate * offsetMultiplier : 0;
                            var rotateX = s.isHorizontal() ? 0 : rotate * offsetMultiplier;
                            var translateZ = -translate * Math.abs(offsetMultiplier);
                            var translateY = s.isHorizontal() ? 0 : s.params.coverflow.stretch * offsetMultiplier;
                            var translateX = s.isHorizontal() ? s.params.coverflow.stretch * offsetMultiplier : 0;
                            if (Math.abs(translateX) < .001) translateX = 0;
                            if (Math.abs(translateY) < .001) translateY = 0;
                            if (Math.abs(translateZ) < .001) translateZ = 0;
                            if (Math.abs(rotateY) < .001) rotateY = 0;
                            if (Math.abs(rotateX) < .001) rotateX = 0;
                            var slideTransform = "translate3d(" + translateX + "px," + translateY + "px," + translateZ + "px)  rotateX(" + rotateX + "deg) rotateY(" + rotateY + "deg)";
                            slide.transform(slideTransform);
                            slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;
                            if (s.params.coverflow.slideShadows) {
                                var shadowBefore = s.isHorizontal() ? slide.find(".swiper-slide-shadow-left") : slide.find(".swiper-slide-shadow-top");
                                var shadowAfter = s.isHorizontal() ? slide.find(".swiper-slide-shadow-right") : slide.find(".swiper-slide-shadow-bottom");
                                if (shadowBefore.length === 0) {
                                    shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? "left" : "top") + '"></div>');
                                    slide.append(shadowBefore)
                                }
                                if (shadowAfter.length === 0) {
                                    shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? "right" : "bottom") + '"></div>');
                                    slide.append(shadowAfter)
                                }
                                if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
                                if (shadowAfter.length) shadowAfter[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0
                            }
                        }
                        if (s.browser.ie) {
                            var ws = s.wrapper[0].style;
                            ws.perspectiveOrigin = center + "px 50%"
                        }
                    },
                    setTransition: function setTransition(duration) {
                        s.slides.transition(duration).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(duration)
                    }
                }
            };
            s.lazy = {
                initialImageLoaded: false,
                loadImageInSlide: function loadImageInSlide(index, loadInDuplicate) {
                    if (typeof index === "undefined") return;
                    if (typeof loadInDuplicate === "undefined") loadInDuplicate = true;
                    if (s.slides.length === 0) return;
                    var slide = s.slides.eq(index);
                    var img = slide.find("." + s.params.lazyLoadingClass + ":not(." + s.params.lazyStatusLoadedClass + "):not(." + s.params.lazyStatusLoadingClass + ")");
                    if (slide.hasClass(s.params.lazyLoadingClass) && !slide.hasClass(s.params.lazyStatusLoadedClass) && !slide.hasClass(s.params.lazyStatusLoadingClass)) {
                        img = img.add(slide[0])
                    }
                    if (img.length === 0) return;
                    img.each(function() {
                        var _img = $(this);
                        _img.addClass(s.params.lazyStatusLoadingClass);
                        var background = _img.attr("data-background");
                        var src = _img.attr("data-src"),
                            srcset = _img.attr("data-srcset"),
                            sizes = _img.attr("data-sizes");
                        s.loadImage(_img[0], src || background, srcset, sizes, false, function() {
                            if (typeof s === "undefined" || s === null || !s) return;
                            if (background) {
                                _img.css("background-image", 'url("' + background + '")');
                                _img.removeAttr("data-background")
                            } else {
                                if (srcset) {
                                    _img.attr("srcset", srcset);
                                    _img.removeAttr("data-srcset")
                                }
                                if (sizes) {
                                    _img.attr("sizes", sizes);
                                    _img.removeAttr("data-sizes")
                                }
                                if (src) {
                                    _img.attr("src", src);
                                    _img.removeAttr("data-src")
                                }
                            }
                            _img.addClass(s.params.lazyStatusLoadedClass).removeClass(s.params.lazyStatusLoadingClass);
                            slide.find("." + s.params.lazyPreloaderClass + ", ." + s.params.preloaderClass).remove();
                            if (s.params.loop && loadInDuplicate) {
                                var slideOriginalIndex = slide.attr("data-swiper-slide-index");
                                if (slide.hasClass(s.params.slideDuplicateClass)) {
                                    var originalSlide = s.wrapper.children('[data-swiper-slide-index="' + slideOriginalIndex + '"]:not(.' + s.params.slideDuplicateClass + ")");
                                    s.lazy.loadImageInSlide(originalSlide.index(), false)
                                } else {
                                    var duplicatedSlide = s.wrapper.children("." + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + slideOriginalIndex + '"]');
                                    s.lazy.loadImageInSlide(duplicatedSlide.index(), false)
                                }
                            }
                            s.emit("onLazyImageReady", s, slide[0], _img[0])
                        });
                        s.emit("onLazyImageLoad", s, slide[0], _img[0])
                    })
                },
                load: function load() {
                    var i;
                    var slidesPerView = s.params.slidesPerView;
                    if (slidesPerView === "auto") {
                        slidesPerView = 0
                    }
                    if (!s.lazy.initialImageLoaded) s.lazy.initialImageLoaded = true;
                    if (s.params.watchSlidesVisibility) {
                        s.wrapper.children("." + s.params.slideVisibleClass).each(function() {
                            s.lazy.loadImageInSlide($(this).index())
                        })
                    } else {
                        if (slidesPerView > 1) {
                            for (i = s.activeIndex; i < s.activeIndex + slidesPerView; i++) {
                                if (s.slides[i]) s.lazy.loadImageInSlide(i)
                            }
                        } else {
                            s.lazy.loadImageInSlide(s.activeIndex)
                        }
                    }
                    if (s.params.lazyLoadingInPrevNext) {
                        if (slidesPerView > 1 || s.params.lazyLoadingInPrevNextAmount && s.params.lazyLoadingInPrevNextAmount > 1) {
                            var amount = s.params.lazyLoadingInPrevNextAmount;
                            var spv = slidesPerView;
                            var maxIndex = Math.min(s.activeIndex + spv + Math.max(amount, spv), s.slides.length);
                            var minIndex = Math.max(s.activeIndex - Math.max(spv, amount), 0);
                            for (i = s.activeIndex + slidesPerView; i < maxIndex; i++) {
                                if (s.slides[i]) s.lazy.loadImageInSlide(i)
                            }
                            for (i = minIndex; i < s.activeIndex; i++) {
                                if (s.slides[i]) s.lazy.loadImageInSlide(i)
                            }
                        } else {
                            var nextSlide = s.wrapper.children("." + s.params.slideNextClass);
                            if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());
                            var prevSlide = s.wrapper.children("." + s.params.slidePrevClass);
                            if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index())
                        }
                    }
                },
                onTransitionStart: function onTransitionStart() {
                    if (s.params.lazyLoading) {
                        if (s.params.lazyLoadingOnTransitionStart || !s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded) {
                            s.lazy.load()
                        }
                    }
                },
                onTransitionEnd: function onTransitionEnd() {
                    if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {
                        s.lazy.load()
                    }
                }
            };
            s.scrollbar = {
                isTouched: false,
                setDragPosition: function setDragPosition(e) {
                    var sb = s.scrollbar;
                    var x = 0,
                        y = 0;
                    var translate;
                    var pointerPosition = s.isHorizontal() ? e.type === "touchstart" || e.type === "touchmove" ? e.targetTouches[0].pageX : e.pageX || e.clientX : e.type === "touchstart" || e.type === "touchmove" ? e.targetTouches[0].pageY : e.pageY || e.clientY;
                    var position = pointerPosition - sb.track.offset()[s.isHorizontal() ? "left" : "top"] - sb.dragSize / 2;
                    var positionMin = -s.minTranslate() * sb.moveDivider;
                    var positionMax = -s.maxTranslate() * sb.moveDivider;
                    if (position < positionMin) {
                        position = positionMin
                    } else if (position > positionMax) {
                        position = positionMax
                    }
                    position = -position / sb.moveDivider;
                    s.updateProgress(position);
                    s.setWrapperTranslate(position, true)
                },
                dragStart: function dragStart(e) {
                    var sb = s.scrollbar;
                    sb.isTouched = true;
                    e.preventDefault();
                    e.stopPropagation();
                    sb.setDragPosition(e);
                    clearTimeout(sb.dragTimeout);
                    sb.track.transition(0);
                    if (s.params.scrollbarHide) {
                        sb.track.css("opacity", 1)
                    }
                    s.wrapper.transition(100);
                    sb.drag.transition(100);
                    s.emit("onScrollbarDragStart", s)
                },
                dragMove: function dragMove(e) {
                    var sb = s.scrollbar;
                    if (!sb.isTouched) return;
                    if (e.preventDefault) e.preventDefault();
                    else e.returnValue = false;
                    sb.setDragPosition(e);
                    s.wrapper.transition(0);
                    sb.track.transition(0);
                    sb.drag.transition(0);
                    s.emit("onScrollbarDragMove", s)
                },
                dragEnd: function dragEnd(e) {
                    var sb = s.scrollbar;
                    if (!sb.isTouched) return;
                    sb.isTouched = false;
                    if (s.params.scrollbarHide) {
                        clearTimeout(sb.dragTimeout);
                        sb.dragTimeout = setTimeout(function() {
                            sb.track.css("opacity", 0);
                            sb.track.transition(400)
                        }, 1e3)
                    }
                    s.emit("onScrollbarDragEnd", s);
                    if (s.params.scrollbarSnapOnRelease) {
                        s.slideReset()
                    }
                },
                draggableEvents: function() {
                    if (s.params.simulateTouch === false && !s.support.touch) return s.touchEventsDesktop;
                    else return s.touchEvents
                }(),
                enableDraggable: function enableDraggable() {
                    var sb = s.scrollbar;
                    var target = s.support.touch ? sb.track : document;
                    $(sb.track).on(sb.draggableEvents.start, sb.dragStart);
                    $(target).on(sb.draggableEvents.move, sb.dragMove);
                    $(target).on(sb.draggableEvents.end, sb.dragEnd)
                },
                disableDraggable: function disableDraggable() {
                    var sb = s.scrollbar;
                    var target = s.support.touch ? sb.track : document;
                    $(sb.track).off(sb.draggableEvents.start, sb.dragStart);
                    $(target).off(sb.draggableEvents.move, sb.dragMove);
                    $(target).off(sb.draggableEvents.end, sb.dragEnd)
                },
                set: function set() {
                    if (!s.params.scrollbar) return;
                    var sb = s.scrollbar;
                    sb.track = $(s.params.scrollbar);
                    if (s.params.uniqueNavElements && typeof s.params.scrollbar === "string" && sb.track.length > 1 && s.container.find(s.params.scrollbar).length === 1) {
                        sb.track = s.container.find(s.params.scrollbar)
                    }
                    sb.drag = sb.track.find(".swiper-scrollbar-drag");
                    if (sb.drag.length === 0) {
                        sb.drag = $('<div class="swiper-scrollbar-drag"></div>');
                        sb.track.append(sb.drag)
                    }
                    sb.drag[0].style.width = "";
                    sb.drag[0].style.height = "";
                    sb.trackSize = s.isHorizontal() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;
                    sb.divider = s.size / s.virtualSize;
                    sb.moveDivider = sb.divider * (sb.trackSize / s.size);
                    sb.dragSize = sb.trackSize * sb.divider;
                    if (s.isHorizontal()) {
                        sb.drag[0].style.width = sb.dragSize + "px"
                    } else {
                        sb.drag[0].style.height = sb.dragSize + "px"
                    }
                    if (sb.divider >= 1) {
                        sb.track[0].style.display = "none"
                    } else {
                        sb.track[0].style.display = ""
                    }
                    if (s.params.scrollbarHide) {
                        sb.track[0].style.opacity = 0
                    }
                },
                setTranslate: function setTranslate() {
                    if (!s.params.scrollbar) return;
                    var diff;
                    var sb = s.scrollbar;
                    var translate = s.translate || 0;
                    var newPos;
                    var newSize = sb.dragSize;
                    newPos = (sb.trackSize - sb.dragSize) * s.progress;
                    if (s.rtl && s.isHorizontal()) {
                        newPos = -newPos;
                        if (newPos > 0) {
                            newSize = sb.dragSize - newPos;
                            newPos = 0
                        } else if (-newPos + sb.dragSize > sb.trackSize) {
                            newSize = sb.trackSize + newPos
                        }
                    } else {
                        if (newPos < 0) {
                            newSize = sb.dragSize + newPos;
                            newPos = 0
                        } else if (newPos + sb.dragSize > sb.trackSize) {
                            newSize = sb.trackSize - newPos
                        }
                    }
                    if (s.isHorizontal()) {
                        if (s.support.transforms3d) {
                            sb.drag.transform("translate3d(" + newPos + "px, 0, 0)")
                        } else {
                            sb.drag.transform("translateX(" + newPos + "px)")
                        }
                        sb.drag[0].style.width = newSize + "px"
                    } else {
                        if (s.support.transforms3d) {
                            sb.drag.transform("translate3d(0px, " + newPos + "px, 0)")
                        } else {
                            sb.drag.transform("translateY(" + newPos + "px)")
                        }
                        sb.drag[0].style.height = newSize + "px"
                    }
                    if (s.params.scrollbarHide) {
                        clearTimeout(sb.timeout);
                        sb.track[0].style.opacity = 1;
                        sb.timeout = setTimeout(function() {
                            sb.track[0].style.opacity = 0;
                            sb.track.transition(400)
                        }, 1e3)
                    }
                },
                setTransition: function setTransition(duration) {
                    if (!s.params.scrollbar) return;
                    s.scrollbar.drag.transition(duration)
                }
            };
            s.controller = {
                LinearSpline: function LinearSpline(x, y) {
                    var binarySearch = function() {
                        var maxIndex, minIndex, guess;
                        return function(array, val) {
                            minIndex = -1;
                            maxIndex = array.length;
                            while (maxIndex - minIndex > 1) {
                                if (array[guess = maxIndex + minIndex >> 1] <= val) {
                                    minIndex = guess
                                } else {
                                    maxIndex = guess
                                }
                            }
                            return maxIndex
                        }
                    }();
                    this.x = x;
                    this.y = y;
                    this.lastIndex = x.length - 1;
                    var i1, i3;
                    var l = this.x.length;
                    this.interpolate = function(x2) {
                        if (!x2) return 0;
                        i3 = binarySearch(this.x, x2);
                        i1 = i3 - 1;
                        return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1]
                    }
                },
                getInterpolateFunction: function getInterpolateFunction(c) {
                    if (!s.controller.spline) s.controller.spline = s.params.loop ? new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) : new s.controller.LinearSpline(s.snapGrid, c.snapGrid)
                },
                setTranslate: function setTranslate(translate, byController) {
                    var controlled = s.params.control;
                    var multiplier, controlledTranslate;

                    function setControlledTranslate(c) {
                        translate = c.rtl && c.params.direction === "horizontal" ? -s.translate : s.translate;
                        if (s.params.controlBy === "slide") {
                            s.controller.getInterpolateFunction(c);
                            controlledTranslate = -s.controller.spline.interpolate(-translate)
                        }
                        console.log("3402", s.params.controlBy);
                        if (!controlledTranslate || s.params.controlBy === "container") {
                            multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());
                            controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate()
                        }
                        if (s.params.controlInverse) {
                            controlledTranslate = c.maxTranslate() - controlledTranslate
                        }
                        c.updateProgress(controlledTranslate);
                        c.setWrapperTranslate(controlledTranslate, false, s);
                        c.updateActiveIndex()
                    }
                    if (Array.isArray(controlled)) {
                        for (var i = 0; i < controlled.length; i++) {
                            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
                                setControlledTranslate(controlled[i])
                            }
                        }
                    } else if (controlled instanceof Swiper && byController !== controlled) {
                        setControlledTranslate(controlled)
                    }
                },
                setTransition: function setTransition(duration, byController) {
                    var controlled = s.params.control;
                    var i;

                    function setControlledTransition(c) {
                        c.setWrapperTransition(duration, s);
                        if (duration !== 0) {
                            c.onTransitionStart();
                            c.wrapper.transitionEnd(function() {
                                if (!controlled) return;
                                if (c.params.loop && s.params.controlBy === "slide") {
                                    c.fixLoop()
                                }
                                c.onTransitionEnd()
                            })
                        }
                    }
                    if (Array.isArray(controlled)) {
                        for (i = 0; i < controlled.length; i++) {
                            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
                                setControlledTransition(controlled[i])
                            }
                        }
                    } else if (controlled instanceof Swiper && byController !== controlled) {
                        setControlledTransition(controlled)
                    }
                }
            };
            s.hashnav = {
                onHashCange: function onHashCange(e, a) {
                    var newHash = document.location.hash.replace("#", "");
                    var activeSlideHash = s.slides.eq(s.activeIndex).attr("data-hash");
                    if (newHash !== activeSlideHash) {
                        s.slideTo(s.wrapper.children("." + s.params.slideClass + '[data-hash="' + newHash + '"]').index())
                    }
                },
                attachEvents: function attachEvents(detach) {
                    var action = detach ? "off" : "on";
                    $(window)[action]("hashchange", s.hashnav.onHashCange)
                },
                setHash: function setHash() {
                    if (!s.hashnav.initialized || !s.params.hashnav) return;
                    if (s.params.replaceState && window.history && window.history.replaceState) {
                        window.history.replaceState(null, null, "#" + s.slides.eq(s.activeIndex).attr("data-hash") || "")
                    } else {
                        var slide = s.slides.eq(s.activeIndex);
                        var hash = slide.attr("data-hash") || slide.attr("data-history");
                        document.location.hash = hash || ""
                    }
                },
                init: function init() {
                    if (!s.params.hashnav || s.params.history) return;
                    s.hashnav.initialized = true;
                    var hash = document.location.hash.replace("#", "");
                    if (hash) {
                        var speed = 0;
                        for (var i = 0, length = s.slides.length; i < length; i++) {
                            var slide = s.slides.eq(i);
                            var slideHash = slide.attr("data-hash") || slide.attr("data-history");
                            if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {
                                var index = slide.index();
                                s.slideTo(index, speed, s.params.runCallbacksOnInit, true)
                            }
                        }
                    }
                    if (s.params.hashnavWatchState) s.hashnav.attachEvents()
                },
                destroy: function destroy() {
                    if (s.params.hashnavWatchState) s.hashnav.attachEvents(true)
                }
            };
            s.history = {
                init: function init() {
                    if (!s.params.history) return;
                    if (!window.history || !window.history.pushState) {
                        s.params.history = false;
                        s.params.hashnav = true;
                        return
                    }
                    s.history.initialized = true;
                    this.paths = this.getPathValues();
                    if (!this.paths.key && !this.paths.value) return;
                    this.scrollToSlide(0, this.paths.value, s.params.runCallbacksOnInit);
                    if (!s.params.replaceState) {
                        window.addEventListener("popstate", this.setHistoryPopState)
                    }
                },
                setHistoryPopState: function setHistoryPopState() {
                    s.history.paths = s.history.getPathValues();
                    s.history.scrollToSlide(s.params.speed, s.history.paths.value, false)
                },
                getPathValues: function getPathValues() {
                    var pathArray = window.location.pathname.slice(1).split("/");
                    var total = pathArray.length;
                    var key = pathArray[total - 2];
                    var value = pathArray[total - 1];
                    return {
                        key: key,
                        value: value
                    }
                },
                setHistory: function setHistory(key, index) {
                    if (!s.history.initialized || !s.params.history) return;
                    var slide = s.slides.eq(index);
                    var value = this.slugify(slide.attr("data-history"));
                    if (!window.location.pathname.includes(key)) {
                        value = key + "/" + value
                    }
                    if (s.params.replaceState) {
                        window.history.replaceState(null, null, value)
                    } else {
                        window.history.pushState(null, null, value)
                    }
                },
                slugify: function slugify(text) {
                    return text.toString().toLowerCase().replace(/\s+/g, "-").replace(/[^\w\-]+/g, "").replace(/\-\-+/g, "-").replace(/^-+/, "").replace(/-+$/, "")
                },
                scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {
                    if (value) {
                        for (var i = 0, length = s.slides.length; i < length; i++) {
                            var slide = s.slides.eq(i);
                            var slideHistory = this.slugify(slide.attr("data-history"));
                            if (slideHistory === value && !slide.hasClass(s.params.slideDuplicateClass)) {
                                var index = slide.index();
                                s.slideTo(index, speed, runCallbacks)
                            }
                        }
                    } else {
                        s.slideTo(0, speed, runCallbacks)
                    }
                }
            };

            function handleKeyboard(e) {
                if (e.originalEvent) e = e.originalEvent;
                var kc = e.keyCode || e.charCode;
                if (!s.params.allowSwipeToNext && (s.isHorizontal() && kc === 39 || !s.isHorizontal() && kc === 40)) {
                    return false
                }
                if (!s.params.allowSwipeToPrev && (s.isHorizontal() && kc === 37 || !s.isHorizontal() && kc === 38)) {
                    return false
                }
                if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
                    return
                }
                if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === "input" || document.activeElement.nodeName.toLowerCase() === "textarea")) {
                    return
                }
                if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {
                    var inView = false;
                    if (s.container.parents("." + s.params.slideClass).length > 0 && s.container.parents("." + s.params.slideActiveClass).length === 0) {
                        return
                    }
                    var windowScroll = {
                        left: window.pageXOffset,
                        top: window.pageYOffset
                    };
                    var windowWidth = window.innerWidth;
                    var windowHeight = window.innerHeight;
                    var swiperOffset = s.container.offset();
                    if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;
                    var swiperCoord = [
                        [swiperOffset.left, swiperOffset.top],
                        [swiperOffset.left + s.width, swiperOffset.top],
                        [swiperOffset.left, swiperOffset.top + s.height],
                        [swiperOffset.left + s.width, swiperOffset.top + s.height]
                    ];
                    for (var i = 0; i < swiperCoord.length; i++) {
                        var point = swiperCoord[i];
                        if (point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth && point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight) {
                            inView = true
                        }
                    }
                    if (!inView) return
                }
                if (s.isHorizontal()) {
                    if (kc === 37 || kc === 39) {
                        if (e.preventDefault) e.preventDefault();
                        else e.returnValue = false
                    }
                    if (kc === 39 && !s.rtl || kc === 37 && s.rtl) s.slideNext();
                    if (kc === 37 && !s.rtl || kc === 39 && s.rtl) s.slidePrev()
                } else {
                    if (kc === 38 || kc === 40) {
                        if (e.preventDefault) e.preventDefault();
                        else e.returnValue = false
                    }
                    if (kc === 40) s.slideNext();
                    if (kc === 38) s.slidePrev()
                }
                s.emit("onKeyPress", s, kc)
            }
            s.disableKeyboardControl = function() {
                s.params.keyboardControl = false;
                $(document).off("keydown", handleKeyboard)
            };
            s.enableKeyboardControl = function() {
                s.params.keyboardControl = true;
                $(document).on("keydown", handleKeyboard)
            };
            s.mousewheel = {
                event: false,
                lastScrollTime: (new window.Date).getTime()
            };

            function isEventSupported() {
                var eventName = "onwheel";
                var isSupported = eventName in document;
                if (!isSupported) {
                    var element = document.createElement("div");
                    element.setAttribute(eventName, "return;");
                    isSupported = typeof element[eventName] === "function"
                }
                if (!isSupported && document.implementation && document.implementation.hasFeature && document.implementation.hasFeature("", "") !== true) {
                    isSupported = document.implementation.hasFeature("Events.wheel", "3.0")
                }
                return isSupported
            }

            function normalizeWheel(event) {
                var PIXEL_STEP = 10;
                var LINE_HEIGHT = 40;
                var PAGE_HEIGHT = 800;
                var sX = 0,
                    sY = 0,
                    pX = 0,
                    pY = 0;
                if ("detail" in event) {
                    sY = event.detail
                }
                if ("wheelDelta" in event) {
                    sY = -event.wheelDelta / 120
                }
                if ("wheelDeltaY" in event) {
                    sY = -event.wheelDeltaY / 120
                }
                if ("wheelDeltaX" in event) {
                    sX = -event.wheelDeltaX / 120
                }
                if ("axis" in event && event.axis === event.HORIZONTAL_AXIS) {
                    sX = sY;
                    sY = 0
                }
                pX = sX * PIXEL_STEP;
                pY = sY * PIXEL_STEP;
                if ("deltaY" in event) {
                    pY = event.deltaY
                }
                if ("deltaX" in event) {
                    pX = event.deltaX
                }
                if ((pX || pY) && event.deltaMode) {
                    if (event.deltaMode === 1) {
                        pX *= LINE_HEIGHT;
                        pY *= LINE_HEIGHT
                    } else {
                        pX *= PAGE_HEIGHT;
                        pY *= PAGE_HEIGHT
                    }
                }
                if (pX && !sX) {
                    sX = pX < 1 ? -1 : 1
                }
                if (pY && !sY) {
                    sY = pY < 1 ? -1 : 1
                }
                return {
                    spinX: sX,
                    spinY: sY,
                    pixelX: pX,
                    pixelY: pY
                }
            }
            if (s.params.mousewheelControl) {
                s.mousewheel.event = navigator.userAgent.indexOf("firefox") > -1 ? "DOMMouseScroll" : isEventSupported() ? "wheel" : "mousewheel"
            }

            function handleMousewheel(e) {
                if (e.originalEvent) e = e.originalEvent;
                var delta = 0;
                var rtlFactor = s.rtl ? -1 : 1;
                var data = normalizeWheel(e);
                if (s.params.mousewheelForceToAxis) {
                    if (s.isHorizontal()) {
                        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;
                        else return
                    } else {
                        if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;
                        else return
                    }
                } else {
                    delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY
                }
                if (delta === 0) return;
                if (s.params.mousewheelInvert) delta = -delta;
                if (!s.params.freeMode) {
                    if ((new window.Date).getTime() - s.mousewheel.lastScrollTime > 60) {
                        if (delta < 0) {
                            if ((!s.isEnd || s.params.loop) && !s.animating) {
                                s.slideNext();
                                s.emit("onScroll", s, e)
                            } else if (s.params.mousewheelReleaseOnEdges) return true
                        } else {
                            if ((!s.isBeginning || s.params.loop) && !s.animating) {
                                s.slidePrev();
                                s.emit("onScroll", s, e)
                            } else if (s.params.mousewheelReleaseOnEdges) return true
                        }
                    }
                    s.mousewheel.lastScrollTime = (new window.Date).getTime()
                } else {
                    var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;
                    var wasBeginning = s.isBeginning,
                        wasEnd = s.isEnd;
                    if (position >= s.minTranslate()) position = s.minTranslate();
                    if (position <= s.maxTranslate()) position = s.maxTranslate();
                    s.setWrapperTransition(0);
                    s.setWrapperTranslate(position);
                    s.updateProgress();
                    s.updateActiveIndex();
                    if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {
                        s.updateClasses()
                    }
                    if (s.params.freeModeSticky) {
                        clearTimeout(s.mousewheel.timeout);
                        s.mousewheel.timeout = setTimeout(function() {
                            s.slideReset()
                        }, 300)
                    } else {
                        if (s.params.lazyLoading && s.lazy) {
                            s.lazy.load()
                        }
                    }
                    s.emit("onScroll", s, e);
                    if (s.params.autoplay && s.params.autoplayDisableOnInteraction) s.stopAutoplay();
                    if (position === 0 || position === s.maxTranslate()) return
                }
                if (e.preventDefault) e.preventDefault();
                else e.returnValue = false;
                return false
            }
            s.disableMousewheelControl = function() {
                if (!s.mousewheel.event) return false;
                var target = s.container;
                console.log("3913", s.params.mousewheelEventsTarged);
                if (s.params.mousewheelEventsTarged !== "container") {
                    target = $(s.params.mousewheelEventsTarged)
                }
                target.off(s.mousewheel.event, handleMousewheel);
                s.params.mousewheelControl = false;
                return true
            };
            s.enableMousewheelControl = function() {
                if (!s.mousewheel.event) return false;
                var target = s.container;
                console.log("3925", s.params.mousewheelEventsTarged);
                if (s.params.mousewheelEventsTarged !== "container") {
                    target = $(s.params.mousewheelEventsTarged)
                }
                target.on(s.mousewheel.event, handleMousewheel);
                s.params.mousewheelControl = true;
                return true
            };

            function setParallaxTransform(el, progress) {
                el = $(el);
                var p, pX, pY;
                var rtlFactor = s.rtl ? -1 : 1;
                p = el.attr("data-swiper-parallax") || "0";
                pX = el.attr("data-swiper-parallax-x");
                pY = el.attr("data-swiper-parallax-y");
                if (pX || pY) {
                    pX = pX || "0";
                    pY = pY || "0"
                } else {
                    if (s.isHorizontal()) {
                        pX = p;
                        pY = "0"
                    } else {
                        pY = p;
                        pX = "0"
                    }
                }
                if (pX.indexOf("%") >= 0) {
                    pX = parseInt(pX, 10) * progress * rtlFactor + "%"
                } else {
                    pX = pX * progress * rtlFactor + "px"
                }
                if (pY.indexOf("%") >= 0) {
                    pY = parseInt(pY, 10) * progress + "%"
                } else {
                    pY = pY * progress + "px"
                }
                el.transform("translate3d(" + pX + ", " + pY + ",0px)")
            }
            s.parallax = {
                setTranslate: function setTranslate() {
                    s.container.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function() {
                        setParallaxTransform(this, s.progress)
                    });
                    s.slides.each(function() {
                        var slide = $(this);
                        slide.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function() {
                            var progress = Math.min(Math.max(slide[0].progress, -1), 1);
                            setParallaxTransform(this, progress)
                        })
                    })
                },
                setTransition: function setTransition(duration) {
                    if (typeof duration === "undefined") duration = s.params.speed;
                    s.container.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function() {
                        var el = $(this);
                        var parallaxDuration = parseInt(el.attr("data-swiper-parallax-duration"), 10) || duration;
                        if (duration === 0) parallaxDuration = 0;
                        el.transition(parallaxDuration)
                    })
                }
            };
            s.zoom = {
                scale: 1,
                currentScale: 1,
                isScaling: false,
                gesture: {
                    slide: undefined,
                    slideWidth: undefined,
                    slideHeight: undefined,
                    image: undefined,
                    imageWrap: undefined,
                    zoomMax: s.params.zoomMax
                },
                image: {
                    isTouched: undefined,
                    isMoved: undefined,
                    currentX: undefined,
                    currentY: undefined,
                    minX: undefined,
                    minY: undefined,
                    maxX: undefined,
                    maxY: undefined,
                    width: undefined,
                    height: undefined,
                    startX: undefined,
                    startY: undefined,
                    touchesStart: {},
                    touchesCurrent: {}
                },
                velocity: {
                    x: undefined,
                    y: undefined,
                    prevPositionX: undefined,
                    prevPositionY: undefined,
                    prevTime: undefined
                },
                getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {
                    if (e.targetTouches.length < 2) return 1;
                    var x1 = e.targetTouches[0].pageX,
                        y1 = e.targetTouches[0].pageY,
                        x2 = e.targetTouches[1].pageX,
                        y2 = e.targetTouches[1].pageY;
                    var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
                    return distance
                },
                onGestureStart: function onGestureStart(e) {
                    var z = s.zoom;
                    if (!s.support.gestures) {
                        if (e.type !== "touchstart" || e.type === "touchstart" && e.targetTouches.length < 2) {
                            return
                        }
                        z.gesture.scaleStart = z.getDistanceBetweenTouches(e)
                    }
                    if (!z.gesture.slide || !z.gesture.slide.length) {
                        z.gesture.slide = $(this);
                        if (z.gesture.slide.length === 0) z.gesture.slide = s.slides.eq(s.activeIndex);
                        z.gesture.image = z.gesture.slide.find("img, svg, canvas");
                        z.gesture.imageWrap = z.gesture.image.parent("." + s.params.zoomContainerClass);
                        z.gesture.zoomMax = z.gesture.imageWrap.attr("data-swiper-zoom") || s.params.zoomMax;
                        if (z.gesture.imageWrap.length === 0) {
                            z.gesture.image = undefined;
                            return
                        }
                    }
                    z.gesture.image.transition(0);
                    z.isScaling = true
                },
                onGestureChange: function onGestureChange(e) {
                    var z = s.zoom;
                    if (!s.support.gestures) {
                        if (e.type !== "touchmove" || e.type === "touchmove" && e.targetTouches.length < 2) {
                            return
                        }
                        z.gesture.scaleMove = z.getDistanceBetweenTouches(e)
                    }
                    if (!z.gesture.image || z.gesture.image.length === 0) return;
                    if (s.support.gestures) {
                        z.scale = e.scale * z.currentScale
                    } else {
                        z.scale = z.gesture.scaleMove / z.gesture.scaleStart * z.currentScale
                    }
                    if (z.scale > z.gesture.zoomMax) {
                        z.scale = z.gesture.zoomMax - 1 + Math.pow(z.scale - z.gesture.zoomMax + 1, .5)
                    }
                    if (z.scale < s.params.zoomMin) {
                        z.scale = s.params.zoomMin + 1 - Math.pow(s.params.zoomMin - z.scale + 1, .5)
                    }
                    z.gesture.image.transform("translate3d(0,0,0) scale(" + z.scale + ")")
                },
                onGestureEnd: function onGestureEnd(e) {
                    var z = s.zoom;
                    if (!s.support.gestures) {
                        if (e.type !== "touchend" || e.type === "touchend" && e.changedTouches.length < 2) {
                            return
                        }
                    }
                    if (!z.gesture.image || z.gesture.image.length === 0) return;
                    z.scale = Math.max(Math.min(z.scale, z.gesture.zoomMax), s.params.zoomMin);
                    z.gesture.image.transition(s.params.speed).transform("translate3d(0,0,0) scale(" + z.scale + ")");
                    z.currentScale = z.scale;
                    z.isScaling = false;
                    if (z.scale === 1) z.gesture.slide = undefined
                },
                onTouchStart: function onTouchStart(s, e) {
                    var z = s.zoom;
                    if (!z.gesture.image || z.gesture.image.length === 0) return;
                    if (z.image.isTouched) return;
                    if (s.device.os === "android") e.preventDefault();
                    z.image.isTouched = true;
                    z.image.touchesStart.x = e.type === "touchstart" ? e.targetTouches[0].pageX : e.pageX;
                    z.image.touchesStart.y = e.type === "touchstart" ? e.targetTouches[0].pageY : e.pageY
                },
                onTouchMove: function onTouchMove(e) {
                    var z = s.zoom;
                    if (!z.gesture.image || z.gesture.image.length === 0) return;
                    s.allowClick = false;
                    if (!z.image.isTouched || !z.gesture.slide) return;
                    if (!z.image.isMoved) {
                        z.image.width = z.gesture.image[0].offsetWidth;
                        z.image.height = z.gesture.image[0].offsetHeight;
                        z.image.startX = s.getTranslate(z.gesture.imageWrap[0], "x") || 0;
                        z.image.startY = s.getTranslate(z.gesture.imageWrap[0], "y") || 0;
                        z.gesture.slideWidth = z.gesture.slide[0].offsetWidth;
                        z.gesture.slideHeight = z.gesture.slide[0].offsetHeight;
                        z.gesture.imageWrap.transition(0);
                        if (s.rtl) z.image.startX = -z.image.startX;
                        if (s.rtl) z.image.startY = -z.image.startY
                    }
                    var scaledWidth = z.image.width * z.scale;
                    var scaledHeight = z.image.height * z.scale;
                    if (scaledWidth < z.gesture.slideWidth && scaledHeight < z.gesture.slideHeight) return;
                    z.image.minX = Math.min(z.gesture.slideWidth / 2 - scaledWidth / 2, 0);
                    z.image.maxX = -z.image.minX;
                    z.image.minY = Math.min(z.gesture.slideHeight / 2 - scaledHeight / 2, 0);
                    z.image.maxY = -z.image.minY;
                    z.image.touchesCurrent.x = e.type === "touchmove" ? e.targetTouches[0].pageX : e.pageX;
                    z.image.touchesCurrent.y = e.type === "touchmove" ? e.targetTouches[0].pageY : e.pageY;
                    if (!z.image.isMoved && !z.isScaling) {
                        if (s.isHorizontal() && Math.floor(z.image.minX) === Math.floor(z.image.startX) && z.image.touchesCurrent.x < z.image.touchesStart.x || Math.floor(z.image.maxX) === Math.floor(z.image.startX) && z.image.touchesCurrent.x > z.image.touchesStart.x) {
                            z.image.isTouched = false;
                            return
                        } else if (!s.isHorizontal() && Math.floor(z.image.minY) === Math.floor(z.image.startY) && z.image.touchesCurrent.y < z.image.touchesStart.y || Math.floor(z.image.maxY) === Math.floor(z.image.startY) && z.image.touchesCurrent.y > z.image.touchesStart.y) {
                            z.image.isTouched = false;
                            return
                        }
                    }
                    e.preventDefault();
                    e.stopPropagation();
                    z.image.isMoved = true;
                    z.image.currentX = z.image.touchesCurrent.x - z.image.touchesStart.x + z.image.startX;
                    z.image.currentY = z.image.touchesCurrent.y - z.image.touchesStart.y + z.image.startY;
                    if (z.image.currentX < z.image.minX) {
                        z.image.currentX = z.image.minX + 1 - Math.pow(z.image.minX - z.image.currentX + 1, .8)
                    }
                    if (z.image.currentX > z.image.maxX) {
                        z.image.currentX = z.image.maxX - 1 + Math.pow(z.image.currentX - z.image.maxX + 1, .8)
                    }
                    if (z.image.currentY < z.image.minY) {
                        z.image.currentY = z.image.minY + 1 - Math.pow(z.image.minY - z.image.currentY + 1, .8)
                    }
                    if (z.image.currentY > z.image.maxY) {
                        z.image.currentY = z.image.maxY - 1 + Math.pow(z.image.currentY - z.image.maxY + 1, .8)
                    }
                    if (!z.velocity.prevPositionX) z.velocity.prevPositionX = z.image.touchesCurrent.x;
                    if (!z.velocity.prevPositionY) z.velocity.prevPositionY = z.image.touchesCurrent.y;
                    if (!z.velocity.prevTime) z.velocity.prevTime = Date.now();
                    z.velocity.x = (z.image.touchesCurrent.x - z.velocity.prevPositionX) / (Date.now() - z.velocity.prevTime) / 2;
                    z.velocity.y = (z.image.touchesCurrent.y - z.velocity.prevPositionY) / (Date.now() - z.velocity.prevTime) / 2;
                    if (Math.abs(z.image.touchesCurrent.x - z.velocity.prevPositionX) < 2) z.velocity.x = 0;
                    if (Math.abs(z.image.touchesCurrent.y - z.velocity.prevPositionY) < 2) z.velocity.y = 0;
                    z.velocity.prevPositionX = z.image.touchesCurrent.x;
                    z.velocity.prevPositionY = z.image.touchesCurrent.y;
                    z.velocity.prevTime = Date.now();
                    z.gesture.imageWrap.transform("translate3d(" + z.image.currentX + "px, " + z.image.currentY + "px,0)")
                },
                onTouchEnd: function onTouchEnd(s, e) {
                    var z = s.zoom;
                    if (!z.gesture.image || z.gesture.image.length === 0) return;
                    if (!z.image.isTouched || !z.image.isMoved) {
                        z.image.isTouched = false;
                        z.image.isMoved = false;
                        return
                    }
                    z.image.isTouched = false;
                    z.image.isMoved = false;
                    var momentumDurationX = 300;
                    var momentumDurationY = 300;
                    var momentumDistanceX = z.velocity.x * momentumDurationX;
                    var newPositionX = z.image.currentX + momentumDistanceX;
                    var momentumDistanceY = z.velocity.y * momentumDurationY;
                    var newPositionY = z.image.currentY + momentumDistanceY;
                    if (z.velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - z.image.currentX) / z.velocity.x);
                    if (z.velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - z.image.currentY) / z.velocity.y);
                    var momentumDuration = Math.max(momentumDurationX, momentumDurationY);
                    z.image.currentX = newPositionX;
                    z.image.currentY = newPositionY;
                    var scaledWidth = z.image.width * z.scale;
                    var scaledHeight = z.image.height * z.scale;
                    z.image.minX = Math.min(z.gesture.slideWidth / 2 - scaledWidth / 2, 0);
                    z.image.maxX = -z.image.minX;
                    z.image.minY = Math.min(z.gesture.slideHeight / 2 - scaledHeight / 2, 0);
                    z.image.maxY = -z.image.minY;
                    z.image.currentX = Math.max(Math.min(z.image.currentX, z.image.maxX), z.image.minX);
                    z.image.currentY = Math.max(Math.min(z.image.currentY, z.image.maxY), z.image.minY);
                    z.gesture.imageWrap.transition(momentumDuration).transform("translate3d(" + z.image.currentX + "px, " + z.image.currentY + "px,0)")
                },
                onTransitionEnd: function onTransitionEnd(s) {
                    var z = s.zoom;
                    if (z.gesture.slide && s.previousIndex !== s.activeIndex) {
                        z.gesture.image.transform("translate3d(0,0,0) scale(1)");
                        z.gesture.imageWrap.transform("translate3d(0,0,0)");
                        z.gesture.slide = z.gesture.image = z.gesture.imageWrap = undefined;
                        z.scale = z.currentScale = 1
                    }
                },
                toggleZoom: function toggleZoom(s, e) {
                    var z = s.zoom;
                    if (!z.gesture.slide) {
                        z.gesture.slide = s.clickedSlide ? $(s.clickedSlide) : s.slides.eq(s.activeIndex);
                        z.gesture.image = z.gesture.slide.find("img, svg, canvas");
                        z.gesture.imageWrap = z.gesture.image.parent("." + s.params.zoomContainerClass)
                    }
                    if (!z.gesture.image || z.gesture.image.length === 0) return;
                    var touchX, touchY, offsetX, offsetY, diffX, diffY, translateX, translateY, imageWidth, imageHeight, scaledWidth, scaledHeight, translateMinX, translateMinY, translateMaxX, translateMaxY, slideWidth, slideHeight;
                    if (typeof z.image.touchesStart.x === "undefined" && e) {
                        touchX = e.type === "touchend" ? e.changedTouches[0].pageX : e.pageX;
                        touchY = e.type === "touchend" ? e.changedTouches[0].pageY : e.pageY
                    } else {
                        touchX = z.image.touchesStart.x;
                        touchY = z.image.touchesStart.y
                    }
                    if (z.scale && z.scale !== 1) {
                        z.scale = z.currentScale = 1;
                        z.gesture.imageWrap.transition(300).transform("translate3d(0,0,0)");
                        z.gesture.image.transition(300).transform("translate3d(0,0,0) scale(1)");
                        z.gesture.slide = undefined
                    } else {
                        z.scale = z.currentScale = z.gesture.imageWrap.attr("data-swiper-zoom") || s.params.zoomMax;
                        if (e) {
                            slideWidth = z.gesture.slide[0].offsetWidth;
                            slideHeight = z.gesture.slide[0].offsetHeight;
                            offsetX = z.gesture.slide.offset().left;
                            offsetY = z.gesture.slide.offset().top;
                            diffX = offsetX + slideWidth / 2 - touchX;
                            diffY = offsetY + slideHeight / 2 - touchY;
                            imageWidth = z.gesture.image[0].offsetWidth;
                            imageHeight = z.gesture.image[0].offsetHeight;
                            scaledWidth = imageWidth * z.scale;
                            scaledHeight = imageHeight * z.scale;
                            translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);
                            translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);
                            translateMaxX = -translateMinX;
                            translateMaxY = -translateMinY;
                            translateX = diffX * z.scale;
                            translateY = diffY * z.scale;
                            if (translateX < translateMinX) {
                                translateX = translateMinX
                            }
                            if (translateX > translateMaxX) {
                                translateX = translateMaxX
                            }
                            if (translateY < translateMinY) {
                                translateY = translateMinY
                            }
                            if (translateY > translateMaxY) {
                                translateY = translateMaxY
                            }
                        } else {
                            translateX = 0;
                            translateY = 0
                        }
                        z.gesture.imageWrap.transition(300).transform("translate3d(" + translateX + "px, " + translateY + "px,0)");
                        z.gesture.image.transition(300).transform("translate3d(0,0,0) scale(" + z.scale + ")")
                    }
                },
                attachEvents: function attachEvents(detach) {
                    var action = detach ? "off" : "on";
                    if (s.params.zoom) {
                        var target = s.slides;
                        var passiveListener = s.touchEvents.start === "touchstart" && s.support.passiveListener && s.params.passiveListeners ? {
                            passive: true,
                            capture: false
                        } : false;
                        if (s.support.gestures) {
                            s.slides[action]("gesturestart", s.zoom.onGestureStart, passiveListener);
                            s.slides[action]("gesturechange", s.zoom.onGestureChange, passiveListener);
                            s.slides[action]("gestureend", s.zoom.onGestureEnd, passiveListener)
                        } else if (s.touchEvents.start === "touchstart") {
                            s.slides[action](s.touchEvents.start, s.zoom.onGestureStart, passiveListener);
                            s.slides[action](s.touchEvents.move, s.zoom.onGestureChange, passiveListener);
                            s.slides[action](s.touchEvents.end, s.zoom.onGestureEnd, passiveListener)
                        }
                        s[action]("touchStart", s.zoom.onTouchStart);
                        s.slides.each(function(index, slide) {
                            if ($(slide).find("." + s.params.zoomContainerClass).length > 0) {
                                $(slide)[action](s.touchEvents.move, s.zoom.onTouchMove)
                            }
                        });
                        s[action]("touchEnd", s.zoom.onTouchEnd);
                        s[action]("transitionEnd", s.zoom.onTransitionEnd);
                        if (s.params.zoomToggle) {
                            s.on("doubleTap", s.zoom.toggleZoom)
                        }
                    }
                },
                init: function init() {
                    s.zoom.attachEvents()
                },
                destroy: function destroy() {
                    s.zoom.attachEvents(true)
                }
            };
            s._plugins = [];
            for (var plugin in s.plugins) {
                var p = s.plugins[plugin](s, s.params[plugin]);
                if (p) s._plugins.push(p)
            }
            s.callPlugins = function(eventName) {
                for (var i = 0; i < s._plugins.length; i++) {
                    if (eventName in s._plugins[i]) {
                        s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5])
                    }
                }
            };

            function normalizeEventName(eventName) {
                if (eventName.indexOf("on") !== 0) {
                    if (eventName[0] !== eventName[0].toUpperCase()) {
                        eventName = "on" + eventName[0].toUpperCase() + eventName.substring(1)
                    } else {
                        eventName = "on" + eventName
                    }
                }
                return eventName
            }
            s.emitterEventListeners = {};
            s.emit = function(eventName) {
                if (s.params[eventName]) {
                    s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5])
                }
                var i;
                if (s.emitterEventListeners[eventName]) {
                    for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {
                        s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5])
                    }
                }
                if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5])
            };
            s.on = function(eventName, handler) {
                eventName = normalizeEventName(eventName);
                if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];
                s.emitterEventListeners[eventName].push(handler);
                return s
            };
            s.off = function(eventName, handler) {
                var i;
                eventName = normalizeEventName(eventName);
                if (typeof handler === "undefined") {
                    s.emitterEventListeners[eventName] = [];
                    return s
                }
                if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;
                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {
                    if (s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1)
                }
                return s
            };
            s.once = function(eventName, handler) {
                eventName = normalizeEventName(eventName);
                var _handler = function _handler() {
                    handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
                    s.off(eventName, _handler)
                };
                s.on(eventName, _handler);
                return s
            };
            s.a11y = {
                makeFocusable: function makeFocusable($el) {
                    $el.attr("tabIndex", "0");
                    return $el
                },
                addRole: function addRole($el, role) {
                    $el.attr("role", role);
                    return $el
                },
                addLabel: function addLabel($el, label) {
                    $el.attr("aria-label", label);
                    return $el
                },
                disable: function disable($el) {
                    $el.attr("aria-disabled", true);
                    return $el
                },
                enable: function enable($el) {
                    $el.attr("aria-disabled", false);
                    return $el
                },
                onEnterKey: function onEnterKey(event) {
                    if (event.keyCode !== 13) return;
                    if ($(event.target).is(s.params.nextButton)) {
                        s.onClickNext(event);
                        if (s.isEnd) {
                            s.a11y.notify(s.params.lastSlideMessage)
                        } else {
                            s.a11y.notify(s.params.nextSlideMessage)
                        }
                    } else if ($(event.target).is(s.params.prevButton)) {
                        s.onClickPrev(event);
                        if (s.isBeginning) {
                            s.a11y.notify(s.params.firstSlideMessage)
                        } else {
                            s.a11y.notify(s.params.prevSlideMessage)
                        }
                    }
                    if ($(event.target).is("." + s.params.bulletClass)) {
                        $(event.target)[0].click()
                    }
                },
                liveRegion: $('<span class="' + s.params.notificationClass + '" aria-live="assertive" aria-atomic="true"></span>'),
                notify: function notify(message) {
                    var notification = s.a11y.liveRegion;
                    if (notification.length === 0) return;
                    notification.html("");
                    notification.html(message)
                },
                init: function init() {
                    if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                        s.a11y.makeFocusable(s.nextButton);
                        s.a11y.addRole(s.nextButton, "button");
                        s.a11y.addLabel(s.nextButton, s.params.nextSlideMessage)
                    }
                    if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                        s.a11y.makeFocusable(s.prevButton);
                        s.a11y.addRole(s.prevButton, "button");
                        s.a11y.addLabel(s.prevButton, s.params.prevSlideMessage)
                    }
                    $(s.container).append(s.a11y.liveRegion)
                },
                initPagination: function initPagination() {
                    if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {
                        s.bullets.each(function() {
                            var bullet = $(this);
                            s.a11y.makeFocusable(bullet);
                            s.a11y.addRole(bullet, "button");
                            s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1))
                        })
                    }
                },
                destroy: function destroy() {
                    if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove()
                }
            };
            s.init = function() {
                if (s.params.loop) s.createLoop();
                s.updateContainerSize();
                s.updateSlidesSize();
                s.updatePagination();
                if (s.params.scrollbar && s.scrollbar) {
                    s.scrollbar.set();
                    if (s.params.scrollbarDraggable) {
                        s.scrollbar.enableDraggable()
                    }
                }
                if (s.params.effect !== "slide" && s.effects[s.params.effect]) {
                    if (!s.params.loop) s.updateProgress();
                    s.effects[s.params.effect].setTranslate()
                }
                if (s.params.loop) {
                    s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit)
                } else {
                    s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);
                    if (s.params.initialSlide === 0) {
                        if (s.parallax && s.params.parallax) s.parallax.setTranslate();
                        if (s.lazy && s.params.lazyLoading) {
                            s.lazy.load();
                            s.lazy.initialImageLoaded = true
                        }
                    }
                }
                s.attachEvents();
                if (s.params.observer && s.support.observer) {
                    s.initObservers()
                }
                if (s.params.preloadImages && !s.params.lazyLoading) {
                    s.preloadImages()
                }
                if (s.params.zoom && s.zoom) {
                    s.zoom.init()
                }
                if (s.params.autoplay) {
                    s.startAutoplay()
                }
                if (s.params.keyboardControl) {
                    if (s.enableKeyboardControl) s.enableKeyboardControl()
                }
                if (s.params.mousewheelControl) {
                    if (s.enableMousewheelControl) s.enableMousewheelControl()
                }
                if (s.params.hashnavReplaceState) {
                    s.params.replaceState = s.params.hashnavReplaceState
                }
                if (s.params.history) {
                    if (s.history) s.history.init()
                }
                if (s.params.hashnav) {
                    if (s.hashnav) s.hashnav.init()
                }
                if (s.params.a11y && s.a11y) s.a11y.init();
                s.emit("onInit", s)
            };
            s.cleanupStyles = function() {
                s.container.removeClass(s.classNames.join(" ")).removeAttr("style");
                s.wrapper.removeAttr("style");
                if (s.slides && s.slides.length) {
                    s.slides.removeClass([s.params.slideVisibleClass, s.params.slideActiveClass, s.params.slideNextClass, s.params.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-column").removeAttr("data-swiper-row")
                }
                if (s.paginationContainer && s.paginationContainer.length) {
                    s.paginationContainer.removeClass(s.params.paginationHiddenClass)
                }
                if (s.bullets && s.bullets.length) {
                    s.bullets.removeClass(s.params.bulletActiveClass)
                }
                if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);
                if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);
                if (s.params.scrollbar && s.scrollbar) {
                    if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr("style");
                    if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr("style")
                }
            };
            s.destroy = function(deleteInstance, cleanupStyles) {
                s.detachEvents();
                s.stopAutoplay();
                if (s.params.scrollbar && s.scrollbar) {
                    if (s.params.scrollbarDraggable) {
                        s.scrollbar.disableDraggable()
                    }
                }
                if (s.params.loop) {
                    s.destroyLoop()
                }
                if (cleanupStyles) {
                    s.cleanupStyles()
                }
                s.disconnectObservers();
                if (s.params.zoom && s.zoom) {
                    s.zoom.destroy()
                }
                if (s.params.keyboardControl) {
                    if (s.disableKeyboardControl) s.disableKeyboardControl()
                }
                if (s.params.mousewheelControl) {
                    if (s.disableMousewheelControl) s.disableMousewheelControl()
                }
                if (s.params.a11y && s.a11y) s.a11y.destroy();
                if (s.params.history && !s.params.replaceState) {
                    window.removeEventListener("popstate", s.history.setHistoryPopState)
                }
                if (s.params.hashnav && s.hashnav) {
                    s.hashnav.destroy()
                }
                s.emit("onDestroy");
                if (deleteInstance !== false) s = null
            };
            s.init();
            return s
        };
        Swiper.prototype = {
            isSafari: function() {
                var ua = window.navigator.userAgent.toLowerCase();
                return ua.indexOf("safari") >= 0 && ua.indexOf("chrome") < 0 && ua.indexOf("android") < 0
            }(),
            isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),
            isArray: function isArray(arr) {
                return Object.prototype.toString.apply(arr) === "[object Array]"
            },
            browser: {
                ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,
                ieTouch: window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1 || window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1,
                lteIE9: function() {
                    var div = document.createElement("div");
                    div.innerHTML = "\x3c!--[if lte IE 9]><i></i><![endif]--\x3e";
                    return div.getElementsByTagName("i").length === 1
                }()
            },
            device: function() {
                var ua = window.navigator.userAgent;
                var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
                var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
                var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
                var iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
                return {
                    ios: ipad || iphone || ipod,
                    android: android
                }
            }(),
            support: {
                touch: window.Modernizr && Modernizr.touch === true || function() {
                    return !!("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch)
                }(),
                transforms3d: window.Modernizr && Modernizr.csstransforms3d === true || function() {
                    var div = document.createElement("div").style;
                    return "webkitPerspective" in div || "MozPerspective" in div || "OPerspective" in div || "MsPerspective" in div || "perspective" in div
                }(),
                flexbox: function() {
                    var div = document.createElement("div").style;
                    var styles = "alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" ");
                    for (var i = 0; i < styles.length; i++) {
                        if (styles[i] in div) return true
                    }
                }(),
                observer: function() {
                    return "MutationObserver" in window || "WebkitMutationObserver" in window
                }(),
                passiveListener: function() {
                    var supportsPassive = false;
                    try {
                        var opts = Object.defineProperty({}, "passive", {
                            get: function get() {
                                supportsPassive = true
                            }
                        });
                        window.addEventListener("testPassiveListener", null, opts)
                    } catch (e) {}
                    return supportsPassive
                }(),
                gestures: function() {
                    return "ongesturestart" in window
                }()
            },
            plugins: {}
        };
        var Dom7 = function() {
            var Dom7 = function Dom7(arr) {
                var _this = this,
                    i = 0;
                for (i = 0; i < arr.length; i++) {
                    _this[i] = arr[i]
                }
                _this.length = arr.length;
                return this
            };
            var $ = function $(selector, context) {
                var arr = [],
                    i = 0;
                if (selector && !context) {
                    if (selector instanceof Dom7) {
                        return selector
                    }
                }
                if (selector) {
                    if (typeof selector === "string") {
                        var els, tempParent, html = selector.trim();
                        if (html.indexOf("<") >= 0 && html.indexOf(">") >= 0) {
                            var toCreate = "div";
                            if (html.indexOf("<li") === 0) toCreate = "ul";
                            if (html.indexOf("<tr") === 0) toCreate = "tbody";
                            if (html.indexOf("<td") === 0 || html.indexOf("<th") === 0) toCreate = "tr";
                            if (html.indexOf("<tbody") === 0) toCreate = "table";
                            if (html.indexOf("<option") === 0) toCreate = "select";
                            tempParent = document.createElement(toCreate);
                            tempParent.innerHTML = selector;
                            for (i = 0; i < tempParent.childNodes.length; i++) {
                                arr.push(tempParent.childNodes[i])
                            }
                        } else {
                            if (!context && selector[0] === "#" && !selector.match(/[ .<>:~]/)) {
                                els = [document.getElementById(selector.split("#")[1])]
                            } else {
                                els = (context || document).querySelectorAll(selector)
                            }
                            for (i = 0; i < els.length; i++) {
                                if (els[i]) arr.push(els[i])
                            }
                        }
                    } else if (selector.nodeType || selector === window || selector === document) {
                        arr.push(selector)
                    } else if (selector.length > 0 && selector[0].nodeType) {
                        for (i = 0; i < selector.length; i++) {
                            arr.push(selector[i])
                        }
                    }
                }
                return new Dom7(arr)
            };
            Dom7.prototype = {
                addClass: function addClass(className) {
                    if (typeof className === "undefined") {
                        return this
                    }
                    var classes = className.split(" ");
                    for (var i = 0; i < classes.length; i++) {
                        for (var j = 0; j < this.length; j++) {
                            this[j].classList.add(classes[i])
                        }
                    }
                    return this
                },
                removeClass: function removeClass(className) {
                    var classes = className.split(" ");
                    for (var i = 0; i < classes.length; i++) {
                        for (var j = 0; j < this.length; j++) {
                            this[j].classList.remove(classes[i])
                        }
                    }
                    return this
                },
                hasClass: function hasClass(className) {
                    if (!this[0]) return false;
                    else return this[0].classList.contains(className)
                },
                toggleClass: function toggleClass(className) {
                    var classes = className.split(" ");
                    for (var i = 0; i < classes.length; i++) {
                        for (var j = 0; j < this.length; j++) {
                            this[j].classList.toggle(classes[i])
                        }
                    }
                    return this
                },
                attr: function attr(attrs, value) {
                    if (arguments.length === 1 && typeof attrs === "string") {
                        if (this[0]) return this[0].getAttribute(attrs);
                        else return undefined
                    } else {
                        for (var i = 0; i < this.length; i++) {
                            if (arguments.length === 2) {
                                this[i].setAttribute(attrs, value)
                            } else {
                                for (var attrName in attrs) {
                                    this[i][attrName] = attrs[attrName];
                                    this[i].setAttribute(attrName, attrs[attrName])
                                }
                            }
                        }
                        return this
                    }
                },
                removeAttr: function removeAttr(attr) {
                    for (var i = 0; i < this.length; i++) {
                        this[i].removeAttribute(attr)
                    }
                    return this
                },
                data: function data(key, value) {
                    if (typeof value === "undefined") {
                        if (this[0]) {
                            var dataKey = this[0].getAttribute("data-" + key);
                            if (dataKey) return dataKey;
                            else if (this[0].dom7ElementDataStorage && key in this[0].dom7ElementDataStorage) return this[0].dom7ElementDataStorage[key];
                            else return undefined
                        } else return undefined
                    } else {
                        for (var i = 0; i < this.length; i++) {
                            var el = this[i];
                            if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};
                            el.dom7ElementDataStorage[key] = value
                        }
                        return this
                    }
                },
                transform: function transform(_transform) {
                    for (var i = 0; i < this.length; i++) {
                        var elStyle = this[i].style;
                        elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = _transform
                    }
                    return this
                },
                transition: function transition(duration) {
                    if (typeof duration !== "string") {
                        duration = duration + "ms"
                    }
                    for (var i = 0; i < this.length; i++) {
                        var elStyle = this[i].style;
                        elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration
                    }
                    return this
                },
                on: function on(eventName, targetSelector, listener, capture) {
                    function handleLiveEvent(e) {
                        var target = e.target;
                        if ($(target).is(targetSelector)) listener.call(target, e);
                        else {
                            var parents = $(target).parents();
                            for (var k = 0; k < parents.length; k++) {
                                if ($(parents[k]).is(targetSelector)) listener.call(parents[k], e)
                            }
                        }
                    }
                    var events = eventName.split(" ");
                    var i, j;
                    for (i = 0; i < this.length; i++) {
                        if (typeof targetSelector === "function" || targetSelector === false) {
                            if (typeof targetSelector === "function") {
                                listener = arguments[1];
                                capture = arguments[2] || false
                            }
                            for (j = 0; j < events.length; j++) {
                                this[i].addEventListener(events[j], listener, capture)
                            }
                        } else {
                            for (j = 0; j < events.length; j++) {
                                if (!this[i].dom7LiveListeners) this[i].dom7LiveListeners = [];
                                this[i].dom7LiveListeners.push({
                                    listener: listener,
                                    liveListener: handleLiveEvent
                                });
                                this[i].addEventListener(events[j], handleLiveEvent, capture)
                            }
                        }
                    }
                    return this
                },
                off: function off(eventName, targetSelector, listener, capture) {
                    var events = eventName.split(" ");
                    for (var i = 0; i < events.length; i++) {
                        for (var j = 0; j < this.length; j++) {
                            if (typeof targetSelector === "function" || targetSelector === false) {
                                if (typeof targetSelector === "function") {
                                    listener = arguments[1];
                                    capture = arguments[2] || false
                                }
                                this[j].removeEventListener(events[i], listener, capture)
                            } else {
                                if (this[j].dom7LiveListeners) {
                                    for (var k = 0; k < this[j].dom7LiveListeners.length; k++) {
                                        if (this[j].dom7LiveListeners[k].listener === listener) {
                                            this[j].removeEventListener(events[i], this[j].dom7LiveListeners[k].liveListener, capture)
                                        }
                                    }
                                }
                            }
                        }
                    }
                    return this
                },
                once: function once(eventName, targetSelector, listener, capture) {
                    var dom = this;
                    if (typeof targetSelector === "function") {
                        targetSelector = false;
                        listener = arguments[1];
                        capture = arguments[2]
                    }

                    function proxy(e) {
                        listener(e);
                        dom.off(eventName, targetSelector, proxy, capture)
                    }
                    dom.on(eventName, targetSelector, proxy, capture)
                },
                trigger: function trigger(eventName, eventData) {
                    for (var i = 0; i < this.length; i++) {
                        var evt;
                        try {
                            evt = new window.CustomEvent(eventName, {
                                detail: eventData,
                                bubbles: true,
                                cancelable: true
                            })
                        } catch (e) {
                            evt = document.createEvent("Event");
                            evt.initEvent(eventName, true, true);
                            evt.detail = eventData
                        }
                        this[i].dispatchEvent(evt)
                    }
                    return this
                },
                transitionEnd: function transitionEnd(callback) {
                    var events = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"],
                        i, j, dom = this;

                    function fireCallBack(e) {
                        if (e.target !== this) return;
                        callback.call(this, e);
                        for (i = 0; i < events.length; i++) {
                            dom.off(events[i], fireCallBack)
                        }
                    }
                    if (callback) {
                        for (i = 0; i < events.length; i++) {
                            dom.on(events[i], fireCallBack)
                        }
                    }
                    return this
                },
                width: function width() {
                    if (this[0] === window) {
                        return window.innerWidth
                    } else {
                        if (this.length > 0) {
                            return parseFloat(this.css("width"))
                        } else {
                            return null
                        }
                    }
                },
                outerWidth: function outerWidth(includeMargins) {
                    if (this.length > 0) {
                        if (includeMargins) return this[0].offsetWidth + parseFloat(this.css("margin-right")) + parseFloat(this.css("margin-left"));
                        else return this[0].offsetWidth
                    } else return null
                },
                height: function height() {
                    if (this[0] === window) {
                        return window.innerHeight
                    } else {
                        if (this.length > 0) {
                            return parseFloat(this.css("height"))
                        } else {
                            return null
                        }
                    }
                },
                outerHeight: function outerHeight(includeMargins) {
                    if (this.length > 0) {
                        if (includeMargins) return this[0].offsetHeight + parseFloat(this.css("margin-top")) + parseFloat(this.css("margin-bottom"));
                        else return this[0].offsetHeight
                    } else return null
                },
                offset: function offset() {
                    if (this.length > 0) {
                        var el = this[0];
                        var box = el.getBoundingClientRect();
                        var body = document.body;
                        var clientTop = el.clientTop || body.clientTop || 0;
                        var clientLeft = el.clientLeft || body.clientLeft || 0;
                        var scrollTop = window.pageYOffset || el.scrollTop;
                        var scrollLeft = window.pageXOffset || el.scrollLeft;
                        return {
                            top: box.top + scrollTop - clientTop,
                            left: box.left + scrollLeft - clientLeft
                        }
                    } else {
                        return null
                    }
                },
                css: function css(props, value) {
                    var i;
                    if (arguments.length === 1) {
                        if (typeof props === "string") {
                            if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props)
                        } else {
                            for (i = 0; i < this.length; i++) {
                                for (var prop in props) {
                                    this[i].style[prop] = props[prop]
                                }
                            }
                            return this
                        }
                    }
                    if (arguments.length === 2 && typeof props === "string") {
                        for (i = 0; i < this.length; i++) {
                            this[i].style[props] = value
                        }
                        return this
                    }
                    return this
                },
                each: function each(callback) {
                    for (var i = 0; i < this.length; i++) {
                        callback.call(this[i], i, this[i])
                    }
                    return this
                },
                html: function html(_html) {
                    if (typeof _html === "undefined") {
                        return this[0] ? this[0].innerHTML : undefined
                    } else {
                        for (var i = 0; i < this.length; i++) {
                            this[i].innerHTML = _html
                        }
                        return this
                    }
                },
                text: function text(_text) {
                    if (typeof _text === "undefined") {
                        if (this[0]) {
                            return this[0].textContent.trim()
                        } else return null
                    } else {
                        for (var i = 0; i < this.length; i++) {
                            this[i].textContent = _text
                        }
                        return this
                    }
                },
                is: function is(selector) {
                    if (!this[0]) return false;
                    var compareWith, i;
                    if (typeof selector === "string") {
                        var el = this[0];
                        if (el === document) return selector === document;
                        if (el === window) return selector === window;
                        if (el.matches) return el.matches(selector);
                        else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);
                        else if (el.mozMatchesSelector) return el.mozMatchesSelector(selector);
                        else if (el.msMatchesSelector) return el.msMatchesSelector(selector);
                        else {
                            compareWith = $(selector);
                            for (i = 0; i < compareWith.length; i++) {
                                if (compareWith[i] === this[0]) return true
                            }
                            return false
                        }
                    } else if (selector === document) return this[0] === document;
                    else if (selector === window) return this[0] === window;
                    else {
                        if (selector.nodeType || selector instanceof Dom7) {
                            compareWith = selector.nodeType ? [selector] : selector;
                            for (i = 0; i < compareWith.length; i++) {
                                if (compareWith[i] === this[0]) return true
                            }
                            return false
                        }
                        return false
                    }
                },
                index: function index() {
                    if (this[0]) {
                        var child = this[0];
                        var i = 0;
                        while ((child = child.previousSibling) !== null) {
                            if (child.nodeType === 1) i++
                        }
                        return i
                    } else return undefined
                },
                eq: function eq(index) {
                    if (typeof index === "undefined") return this;
                    var length = this.length;
                    var returnIndex;
                    if (index > length - 1) {
                        return new Dom7([])
                    }
                    if (index < 0) {
                        returnIndex = length + index;
                        if (returnIndex < 0) return new Dom7([]);
                        else return new Dom7([this[returnIndex]])
                    }
                    return new Dom7([this[index]])
                },
                append: function append(newChild) {
                    var i, j;
                    for (i = 0; i < this.length; i++) {
                        if (typeof newChild === "string") {
                            var tempDiv = document.createElement("div");
                            tempDiv.innerHTML = newChild;
                            while (tempDiv.firstChild) {
                                this[i].appendChild(tempDiv.firstChild)
                            }
                        } else if (newChild instanceof Dom7) {
                            for (j = 0; j < newChild.length; j++) {
                                this[i].appendChild(newChild[j])
                            }
                        } else {
                            this[i].appendChild(newChild)
                        }
                    }
                    return this
                },
                prepend: function prepend(newChild) {
                    var i, j;
                    for (i = 0; i < this.length; i++) {
                        if (typeof newChild === "string") {
                            var tempDiv = document.createElement("div");
                            tempDiv.innerHTML = newChild;
                            for (j = tempDiv.childNodes.length - 1; j >= 0; j--) {
                                this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0])
                            }
                        } else if (newChild instanceof Dom7) {
                            for (j = 0; j < newChild.length; j++) {
                                this[i].insertBefore(newChild[j], this[i].childNodes[0])
                            }
                        } else {
                            this[i].insertBefore(newChild, this[i].childNodes[0])
                        }
                    }
                    return this
                },
                insertBefore: function insertBefore(selector) {
                    var before = $(selector);
                    for (var i = 0; i < this.length; i++) {
                        if (before.length === 1) {
                            before[0].parentNode.insertBefore(this[i], before[0])
                        } else if (before.length > 1) {
                            for (var j = 0; j < before.length; j++) {
                                before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j])
                            }
                        }
                    }
                },
                insertAfter: function insertAfter(selector) {
                    var after = $(selector);
                    for (var i = 0; i < this.length; i++) {
                        if (after.length === 1) {
                            after[0].parentNode.insertBefore(this[i], after[0].nextSibling)
                        } else if (after.length > 1) {
                            for (var j = 0; j < after.length; j++) {
                                after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling)
                            }
                        }
                    }
                },
                next: function next(selector) {
                    if (this.length > 0) {
                        if (selector) {
                            if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return new Dom7([this[0].nextElementSibling]);
                            else return new Dom7([])
                        } else {
                            if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);
                            else return new Dom7([])
                        }
                    } else return new Dom7([])
                },
                nextAll: function nextAll(selector) {
                    var nextEls = [];
                    var el = this[0];
                    if (!el) return new Dom7([]);
                    while (el.nextElementSibling) {
                        var next = el.nextElementSibling;
                        if (selector) {
                            if ($(next).is(selector)) nextEls.push(next)
                        } else nextEls.push(next);
                        el = next
                    }
                    return new Dom7(nextEls)
                },
                prev: function prev(selector) {
                    if (this.length > 0) {
                        if (selector) {
                            if (this[0].previousElementSibling && $(this[0].previousElementSibling).is(selector)) return new Dom7([this[0].previousElementSibling]);
                            else return new Dom7([])
                        } else {
                            if (this[0].previousElementSibling) return new Dom7([this[0].previousElementSibling]);
                            else return new Dom7([])
                        }
                    } else return new Dom7([])
                },
                prevAll: function prevAll(selector) {
                    var prevEls = [];
                    var el = this[0];
                    if (!el) return new Dom7([]);
                    while (el.previousElementSibling) {
                        var prev = el.previousElementSibling;
                        if (selector) {
                            if ($(prev).is(selector)) prevEls.push(prev)
                        } else prevEls.push(prev);
                        el = prev
                    }
                    return new Dom7(prevEls)
                },
                parent: function parent(selector) {
                    var parents = [];
                    for (var i = 0; i < this.length; i++) {
                        if (selector) {
                            if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode)
                        } else {
                            parents.push(this[i].parentNode)
                        }
                    }
                    return $($.unique(parents))
                },
                parents: function parents(selector) {
                    var parents = [];
                    for (var i = 0; i < this.length; i++) {
                        var parent = this[i].parentNode;
                        while (parent) {
                            if (selector) {
                                if ($(parent).is(selector)) parents.push(parent)
                            } else {
                                parents.push(parent)
                            }
                            parent = parent.parentNode
                        }
                    }
                    return $($.unique(parents))
                },
                find: function find(selector) {
                    var foundElements = [];
                    for (var i = 0; i < this.length; i++) {
                        var found = this[i].querySelectorAll(selector);
                        for (var j = 0; j < found.length; j++) {
                            foundElements.push(found[j])
                        }
                    }
                    return new Dom7(foundElements)
                },
                children: function children(selector) {
                    var children = [];
                    for (var i = 0; i < this.length; i++) {
                        var childNodes = this[i].childNodes;
                        for (var j = 0; j < childNodes.length; j++) {
                            if (!selector) {
                                if (childNodes[j].nodeType === 1) children.push(childNodes[j])
                            } else {
                                if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) children.push(childNodes[j])
                            }
                        }
                    }
                    return new Dom7($.unique(children))
                },
                remove: function remove() {
                    for (var i = 0; i < this.length; i++) {
                        if (this[i].parentNode) this[i].parentNode.removeChild(this[i])
                    }
                    return this
                },
                add: function add() {
                    var dom = this;
                    var i, j;
                    for (i = 0; i < arguments.length; i++) {
                        var toAdd = $(arguments[i]);
                        for (j = 0; j < toAdd.length; j++) {
                            dom[dom.length] = toAdd[j];
                            dom.length++
                        }
                    }
                    return dom
                }
            };
            $.fn = Dom7.prototype;
            $.unique = function(arr) {
                var unique = [];
                for (var i = 0; i < arr.length; i++) {
                    if (unique.indexOf(arr[i]) === -1) unique.push(arr[i])
                }
                return unique
            };
            return $
        }();
        var swiperDomPlugins = ["jQuery", "Zepto", "Dom7"];
        for (var i = 0; i < swiperDomPlugins.length; i++) {
            if (window[swiperDomPlugins[i]]) {
                addLibraryPlugin(window[swiperDomPlugins[i]])
            }
        }
        var domLib;
        if (typeof Dom7 === "undefined") {
            domLib = window.Dom7 || window.Zepto || window.jQuery
        } else {
            domLib = Dom7
        }

        function addLibraryPlugin(lib) {
            lib.fn.swiper = function(params) {
                var firstInstance;
                lib(this).each(function() {
                    var s = new Swiper(this, params);
                    if (!firstInstance) firstInstance = s
                });
                return firstInstance
            }
        }
        if (domLib) {
            if (!("transitionEnd" in domLib.fn)) {
                domLib.fn.transitionEnd = function(callback) {
                    var events = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"],
                        i, j, dom = this;

                    function fireCallBack(e) {
                        if (e.target !== this) return;
                        callback.call(this, e);
                        for (i = 0; i < events.length; i++) {
                            dom.off(events[i], fireCallBack)
                        }
                    }
                    if (callback) {
                        for (i = 0; i < events.length; i++) {
                            dom.on(events[i], fireCallBack)
                        }
                    }
                    return this
                }
            }
            if (!("transform" in domLib.fn)) {
                domLib.fn.transform = function(transform) {
                    for (var i = 0; i < this.length; i++) {
                        var elStyle = this[i].style;
                        elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform
                    }
                    return this
                }
            }
            if (!("transition" in domLib.fn)) {
                domLib.fn.transition = function(duration) {
                    if (typeof duration !== "string") {
                        duration = duration + "ms"
                    }
                    for (var i = 0; i < this.length; i++) {
                        var elStyle = this[i].style;
                        elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration
                    }
                    return this
                }
            }
            if (!("outerWidth" in domLib.fn)) {
                domLib.fn.outerWidth = function(includeMargins) {
                    if (this.length > 0) {
                        if (includeMargins) return this[0].offsetWidth + parseFloat(this.css("margin-right")) + parseFloat(this.css("margin-left"));
                        else return this[0].offsetWidth
                    } else return null
                }
            }
        }
        window.Swiper = Swiper
    })();
    if (true) {
        module.exports = window.Swiper
    } else if (typeof define === "function" && define.amd) {
        define([], function() {
            "use strict";
            return window.Swiper
        })
    }
}, function(module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
        return typeof obj
    } : function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function(root, factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(34)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === "object") {
            module.exports = factory(require("tether"))
        } else {
            root.Drop = factory(root.Tether)
        }
    })(undefined, function(Tether) {
        "use strict";
        var _bind = Function.prototype.bind;
        var _slicedToArray = function() {
            function sliceIterator(arr, i) {
                var _arr = [];
                var _n = true;
                var _d = false;
                var _e = undefined;
                try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break
                    }
                } catch (err) {
                    _d = true;
                    _e = err
                } finally {
                    try {
                        if (!_n && _i["return"]) _i["return"]()
                    } finally {
                        if (_d) throw _e
                    }
                }
                return _arr
            }
            return function(arr, i) {
                if (Array.isArray(arr)) {
                    return arr
                } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i)
                } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }
        }();
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor)
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor
            }
        }();
        var _get = function get(_x2, _x3, _x4) {
            var _again = true;
            _function: while (_again) {
                var object = _x2,
                    property = _x3,
                    receiver = _x4;
                _again = false;
                if (object === null) object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                        return undefined
                    } else {
                        _x2 = parent;
                        _x3 = property;
                        _x4 = receiver;
                        _again = true;
                        desc = parent = undefined;
                        continue _function
                    }
                } else if ("value" in desc) {
                    return desc.value
                } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                        return undefined
                    }
                    return getter.call(receiver)
                }
            }
        };

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function")
            }
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)))
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass
        }
        var _Tether$Utils = Tether.Utils;
        var extend = _Tether$Utils.extend;
        var addClass = _Tether$Utils.addClass;
        var removeClass = _Tether$Utils.removeClass;
        var hasClass = _Tether$Utils.hasClass;
        var Evented = _Tether$Utils.Evented;

        function sortAttach(str) {
            var _str$split = str.split(" ");
            var _str$split2 = _slicedToArray(_str$split, 2);
            var first = _str$split2[0];
            var second = _str$split2[1];
            if (["left", "right"].indexOf(first) >= 0) {
                var _ref = [second, first];
                first = _ref[0];
                second = _ref[1]
            }
            return [first, second].join(" ")
        }

        function removeFromArray(arr, item) {
            var index = undefined;
            var results = [];
            while ((index = arr.indexOf(item)) !== -1) {
                results.push(arr.splice(index, 1))
            }
            return results
        }
        var clickEvents = ["click"];
        var transitionEndEvents = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "otransitionend",
            transition: "transitionend"
        };
        var transitionEndEvent = "";
        for (var _name in transitionEndEvents) {
            if ({}.hasOwnProperty.call(transitionEndEvents, _name)) {
                var tempEl = document.createElement("p");
                if (typeof tempEl.style[_name] !== "undefined") {
                    transitionEndEvent = transitionEndEvents[_name]
                }
            }
        }
        var MIRROR_ATTACH = {
            left: "right",
            right: "left",
            top: "bottom",
            bottom: "top",
            middle: "middle",
            center: "center"
        };
        var allDrops = {};

        function createContext() {
            var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
            var drop = function drop() {
                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key]
                }
                return new(_bind.apply(DropInstance, [null].concat(args)))
            };
            extend(drop, {
                createContext: createContext,
                drops: [],
                defaults: {}
            });
            var defaultOptions = {
                classPrefix: "drop",
                defaults: {
                    position: "bottom left",
                    openOn: "click",
                    beforeClose: null,
                    constrainToScrollParent: true,
                    constrainToWindow: true,
                    classes: "",
                    remove: false,
                    openDelay: 0,
                    closeDelay: 50,
                    focusDelay: null,
                    blurDelay: null,
                    hoverOpenDelay: null,
                    hoverCloseDelay: null,
                    tetherOptions: {}
                }
            };
            extend(drop, defaultOptions, options);
            extend(drop.defaults, defaultOptions.defaults, options.defaults);
            if (typeof allDrops[drop.classPrefix] === "undefined") {
                allDrops[drop.classPrefix] = []
            }
            drop.updateBodyClasses = function() {
                var anyOpen = false;
                var drops = allDrops[drop.classPrefix];
                var len = drops.length;
                for (var i = 0; i < len; ++i) {
                    if (drops[i].isOpened()) {
                        anyOpen = true;
                        break
                    }
                }
                if (anyOpen) {
                    addClass(document.body, drop.classPrefix + "-open")
                } else {
                    removeClass(document.body, drop.classPrefix + "-open")
                }
            };
            var DropInstance = function(_Evented) {
                _inherits(DropInstance, _Evented);

                function DropInstance(opts) {
                    _classCallCheck(this, DropInstance);
                    _get(Object.getPrototypeOf(DropInstance.prototype), "constructor", this).call(this);
                    this.options = extend({}, drop.defaults, opts);
                    this.target = this.options.target;
                    if (typeof this.target === "undefined") {
                        throw new Error("Drop Error: You must provide a target.")
                    }
                    var dataPrefix = "data-" + drop.classPrefix;
                    var contentAttr = this.target.getAttribute(dataPrefix);
                    if (contentAttr && this.options.content == null) {
                        this.options.content = contentAttr
                    }
                    var attrsOverride = ["position", "openOn"];
                    for (var i = 0; i < attrsOverride.length; ++i) {
                        var override = this.target.getAttribute(dataPrefix + "-" + attrsOverride[i]);
                        if (override && this.options[attrsOverride[i]] == null) {
                            this.options[attrsOverride[i]] = override
                        }
                    }
                    if (this.options.classes && this.options.addTargetClasses !== false) {
                        addClass(this.target, this.options.classes)
                    }
                    drop.drops.push(this);
                    allDrops[drop.classPrefix].push(this);
                    this._boundEvents = [];
                    this.bindMethods();
                    this.setupElements();
                    this.setupEvents();
                    this.setupTether()
                }
                _createClass(DropInstance, [{
                    key: "_on",
                    value: function _on(element, event, handler) {
                        this._boundEvents.push({
                            element: element,
                            event: event,
                            handler: handler
                        });
                        element.addEventListener(event, handler)
                    }
                }, {
                    key: "bindMethods",
                    value: function bindMethods() {
                        this.transitionEndHandler = this._transitionEndHandler.bind(this)
                    }
                }, {
                    key: "setupElements",
                    value: function setupElements() {
                        var _this = this;
                        this.drop = document.createElement("div");
                        addClass(this.drop, drop.classPrefix);
                        if (this.options.classes) {
                            addClass(this.drop, this.options.classes)
                        }
                        this.content = document.createElement("div");
                        addClass(this.content, drop.classPrefix + "-content");
                        if (typeof this.options.content === "function") {
                            var generateAndSetContent = function generateAndSetContent() {
                                var contentElementOrHTML = _this.options.content.call(_this, _this);
                                if (typeof contentElementOrHTML === "string") {
                                    _this.content.innerHTML = contentElementOrHTML
                                } else if ((typeof contentElementOrHTML === "undefined" ? "undefined" : _typeof(contentElementOrHTML)) === "object") {
                                    _this.content.innerHTML = "";
                                    _this.content.appendChild(contentElementOrHTML)
                                } else {
                                    throw new Error("Drop Error: Content function should return a string or HTMLElement.")
                                }
                            };
                            generateAndSetContent();
                            this.on("open", generateAndSetContent.bind(this))
                        } else if (_typeof(this.options.content) === "object") {
                            this.content.appendChild(this.options.content)
                        } else {
                            this.content.innerHTML = this.options.content
                        }
                        this.drop.appendChild(this.content)
                    }
                }, {
                    key: "setupTether",
                    value: function setupTether() {
                        var dropAttach = this.options.position.split(" ");
                        dropAttach[0] = MIRROR_ATTACH[dropAttach[0]];
                        dropAttach = dropAttach.join(" ");
                        var constraints = [];
                        if (this.options.constrainToScrollParent) {
                            constraints.push({
                                to: "scrollParent",
                                pin: "top, bottom",
                                attachment: "together none"
                            })
                        } else {
                            constraints.push({
                                to: "scrollParent"
                            })
                        }
                        if (this.options.constrainToWindow !== false) {
                            constraints.push({
                                to: "window",
                                attachment: "together"
                            })
                        } else {
                            constraints.push({
                                to: "window"
                            })
                        }
                        var opts = {
                            element: this.drop,
                            target: this.target,
                            attachment: sortAttach(dropAttach),
                            targetAttachment: sortAttach(this.options.position),
                            classPrefix: drop.classPrefix,
                            offset: "0 0",
                            targetOffset: "0 0",
                            enabled: false,
                            constraints: constraints,
                            addTargetClasses: this.options.addTargetClasses
                        };
                        if (this.options.tetherOptions !== false) {
                            this.tether = new Tether(extend({}, opts, this.options.tetherOptions))
                        }
                    }
                }, {
                    key: "setupEvents",
                    value: function setupEvents() {
                        var _this2 = this;
                        if (!this.options.openOn) {
                            return
                        }
                        if (this.options.openOn === "always") {
                            setTimeout(this.open.bind(this));
                            return
                        }
                        var events = this.options.openOn.split(" ");
                        if (events.indexOf("click") >= 0) {
                            var openHandler = function openHandler(event) {
                                _this2.toggle(event);
                                event.preventDefault()
                            };
                            var closeHandler = function closeHandler(event) {
                                if (!_this2.isOpened()) {
                                    return
                                }
                                if (event.target === _this2.drop || _this2.drop.contains(event.target)) {
                                    return
                                }
                                if (event.target === _this2.target || _this2.target.contains(event.target)) {
                                    return
                                }
                                _this2.close(event)
                            };
                            for (var i = 0; i < clickEvents.length; ++i) {
                                var clickEvent = clickEvents[i];
                                this._on(this.target, clickEvent, openHandler);
                                this._on(document, clickEvent, closeHandler)
                            }
                        }
                        var inTimeout = null;
                        var outTimeout = null;
                        var inHandler = function inHandler(event) {
                            if (outTimeout !== null) {
                                clearTimeout(outTimeout)
                            } else {
                                inTimeout = setTimeout(function() {
                                    _this2.open(event);
                                    inTimeout = null
                                }, (event.type === "focus" ? _this2.options.focusDelay : _this2.options.hoverOpenDelay) || _this2.options.openDelay)
                            }
                        };
                        var outHandler = function outHandler(event) {
                            if (inTimeout !== null) {
                                clearTimeout(inTimeout)
                            } else {
                                outTimeout = setTimeout(function() {
                                    _this2.close(event);
                                    outTimeout = null
                                }, (event.type === "blur" ? _this2.options.blurDelay : _this2.options.hoverCloseDelay) || _this2.options.closeDelay)
                            }
                        };
                        if (events.indexOf("hover") >= 0) {
                            this._on(this.target, "mouseover", inHandler);
                            this._on(this.drop, "mouseover", inHandler);
                            this._on(this.target, "mouseout", outHandler);
                            this._on(this.drop, "mouseout", outHandler)
                        }
                        if (events.indexOf("focus") >= 0) {
                            this._on(this.target, "focus", inHandler);
                            this._on(this.drop, "focus", inHandler);
                            this._on(this.target, "blur", outHandler);
                            this._on(this.drop, "blur", outHandler)
                        }
                    }
                }, {
                    key: "isOpened",
                    value: function isOpened() {
                        if (this.drop) {
                            return hasClass(this.drop, drop.classPrefix + "-open")
                        }
                    }
                }, {
                    key: "toggle",
                    value: function toggle(event) {
                        if (this.isOpened()) {
                            this.close(event)
                        } else {
                            this.open(event)
                        }
                    }
                }, {
                    key: "open",
                    value: function open(event) {
                        var _this3 = this;
                        if (this.isOpened()) {
                            return
                        }
                        if (!this.drop.parentNode) {
                            document.body.appendChild(this.drop)
                        }
                        if (typeof this.tether !== "undefined") {
                            this.tether.enable()
                        }
                        addClass(this.drop, drop.classPrefix + "-open");
                        addClass(this.drop, drop.classPrefix + "-open-transitionend");
                        setTimeout(function() {
                            if (_this3.drop) {
                                addClass(_this3.drop, drop.classPrefix + "-after-open")
                            }
                        });
                        if (typeof this.tether !== "undefined") {
                            this.tether.position()
                        }
                        this.trigger("open");
                        drop.updateBodyClasses()
                    }
                }, {
                    key: "_transitionEndHandler",
                    value: function _transitionEndHandler(e) {
                        if (e.target !== e.currentTarget) {
                            return
                        }
                        if (!hasClass(this.drop, drop.classPrefix + "-open")) {
                            removeClass(this.drop, drop.classPrefix + "-open-transitionend")
                        }
                        this.drop.removeEventListener(transitionEndEvent, this.transitionEndHandler)
                    }
                }, {
                    key: "beforeCloseHandler",
                    value: function beforeCloseHandler(event) {
                        var shouldClose = true;
                        if (!this.isClosing && typeof this.options.beforeClose === "function") {
                            this.isClosing = true;
                            shouldClose = this.options.beforeClose(event, this) !== false
                        }
                        this.isClosing = false;
                        return shouldClose
                    }
                }, {
                    key: "close",
                    value: function close(event) {
                        if (!this.isOpened()) {
                            return
                        }
                        if (!this.beforeCloseHandler(event)) {
                            return
                        }
                        removeClass(this.drop, drop.classPrefix + "-open");
                        removeClass(this.drop, drop.classPrefix + "-after-open");
                        this.drop.addEventListener(transitionEndEvent, this.transitionEndHandler);
                        this.trigger("close");
                        if (typeof this.tether !== "undefined") {
                            this.tether.disable()
                        }
                        drop.updateBodyClasses();
                        if (this.options.remove) {
                            this.remove(event)
                        }
                    }
                }, {
                    key: "remove",
                    value: function remove(event) {
                        this.close(event);
                        if (this.drop.parentNode) {
                            this.drop.parentNode.removeChild(this.drop)
                        }
                    }
                }, {
                    key: "position",
                    value: function position() {
                        if (this.isOpened() && typeof this.tether !== "undefined") {
                            this.tether.position()
                        }
                    }
                }, {
                    key: "destroy",
                    value: function destroy() {
                        this.remove();
                        if (typeof this.tether !== "undefined") {
                            this.tether.destroy()
                        }
                        for (var i = 0; i < this._boundEvents.length; ++i) {
                            var _boundEvents$i = this._boundEvents[i];
                            var element = _boundEvents$i.element;
                            var _event = _boundEvents$i.event;
                            var handler = _boundEvents$i.handler;
                            element.removeEventListener(_event, handler)
                        }
                        this._boundEvents = [];
                        this.tether = null;
                        this.drop = null;
                        this.content = null;
                        this.target = null;
                        removeFromArray(allDrops[drop.classPrefix], this);
                        removeFromArray(drop.drops, this)
                    }
                }]);
                return DropInstance
            }(Evented);
            return drop
        }
        var Drop = createContext();
        document.addEventListener("DOMContentLoaded", function() {
            Drop.updateBodyClasses()
        });
        return Drop
    })
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
        return typeof obj
    } : function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _jquery = __webpack_require__(1);
    var _jquery2 = _interopRequireDefault(_jquery);
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var Collapse = function() {
        var NAME = "collapse";
        var VERSION = "4.0.0-beta";
        var DATA_KEY = "bs.collapse";
        var EVENT_KEY = "." + DATA_KEY;
        var DATA_API_KEY = ".data-api";
        var JQUERY_NO_CONFLICT = _jquery2.default.fn[NAME];
        var TRANSITION_DURATION = 600;
        var Default = {
            toggle: true,
            parent: ""
        };
        var DefaultType = {
            toggle: "boolean",
            parent: "(string|element)"
        };
        var Event = {
            SHOW: "show" + EVENT_KEY,
            SHOWN: "shown" + EVENT_KEY,
            HIDE: "hide" + EVENT_KEY,
            HIDDEN: "hidden" + EVENT_KEY,
            CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
        };
        var ClassName = {
            SHOW: "show",
            COLLAPSE: "collapse",
            COLLAPSING: "collapsing",
            COLLAPSED: "collapsed"
        };
        var Dimension = {
            WIDTH: "width",
            HEIGHT: "height"
        };
        var Selector = {
            ACTIVES: ".show, .collapsing",
            DATA_TOGGLE: '[data-toggle="lu-collapse"]'
        };
        var Collapse = function() {
            function Collapse(element, config) {
                _classCallCheck(this, Collapse);
                this._isTransitioning = false;
                this._element = element;
                this._config = this._getConfig(config);
                this._triggerArray = _jquery2.default.makeArray((0, _jquery2.default)('[data-toggle="lu-collapse"][href="#' + element.id + '"],' + ('[data-toggle="lu-collapse"][data-target="#' + element.id + '"]')));
                var tabToggles = (0, _jquery2.default)(Selector.DATA_TOGGLE);
                for (var i = 0; i < tabToggles.length; i++) {
                    var elem = tabToggles[i];
                    var selector = _util2.default.getSelectorFromElement(elem);
                    if (selector !== null && (0, _jquery2.default)(selector).filter(element).length > 0) {
                        this._triggerArray.push(elem)
                    }
                }
                this._parent = this._config.parent ? this._getParent() : null;
                if (!this._config.parent) {
                    this._addAriaAndCollapsedClass(this._element, this._triggerArray)
                }
                if (this._config.toggle) {
                    this.toggle()
                }
            }
            _createClass(Collapse, [{
                key: "toggle",
                value: function toggle() {
                    if ((0, _jquery2.default)(this._element).hasClass(ClassName.SHOW)) {
                        this.hide()
                    } else {
                        this.show()
                    }
                }
            }, {
                key: "show",
                value: function show() {
                    var _this = this;
                    if (this._isTransitioning || (0, _jquery2.default)(this._element).hasClass(ClassName.SHOW)) {
                        return
                    }
                    var actives = void 0;
                    var activesData = void 0;
                    if (this._parent) {
                        actives = _jquery2.default.makeArray((0, _jquery2.default)(this._parent).children().children(Selector.ACTIVES));
                        if (!actives.length) {
                            actives = null
                        }
                    }
                    if (actives) {
                        activesData = (0, _jquery2.default)(actives).data(DATA_KEY);
                        if (activesData && activesData._isTransitioning) {
                            return
                        }
                    }
                    var startEvent = _jquery2.default.Event(Event.SHOW);
                    (0, _jquery2.default)(this._element).trigger(startEvent);
                    if (startEvent.isDefaultPrevented()) {
                        return
                    }
                    if (actives) {
                        Collapse._jQueryInterface.call((0, _jquery2.default)(actives), "hide");
                        if (!activesData) {
                            (0, _jquery2.default)(actives).data(DATA_KEY, null)
                        }
                    }
                    var dimension = this._getDimension();
                    (0, _jquery2.default)(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);
                    this._element.style[dimension] = 0;
                    if (this._triggerArray.length) {
                        (0, _jquery2.default)(this._triggerArray).removeClass(ClassName.COLLAPSED).attr("aria-expanded", true)
                    }
                    this.setTransitioning(true);
                    var complete = function complete() {
                        (0, _jquery2.default)(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);
                        _this._element.style[dimension] = "";
                        _this.setTransitioning(false);
                        (0, _jquery2.default)(_this._element).trigger(Event.SHOWN)
                    };
                    if (!_util2.default.supportsTransitionEnd()) {
                        complete();
                        return
                    }
                    var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
                    var scrollSize = "scroll" + capitalizedDimension;
                    (0, _jquery2.default)(this._element).one(_util2.default.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);
                    this._element.style[dimension] = this._element[scrollSize] + "px"
                }
            }, {
                key: "hide",
                value: function hide() {
                    var _this2 = this;
                    if (this._isTransitioning || !(0, _jquery2.default)(this._element).hasClass(ClassName.SHOW)) {
                        return
                    }
                    var startEvent = _jquery2.default.Event(Event.HIDE);
                    (0, _jquery2.default)(this._element).trigger(startEvent);
                    if (startEvent.isDefaultPrevented()) {
                        return
                    }
                    var dimension = this._getDimension();
                    this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + "px";
                    _util2.default.reflow(this._element);
                    (0, _jquery2.default)(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);
                    if (this._triggerArray.length) {
                        for (var i = 0; i < this._triggerArray.length; i++) {
                            var trigger = this._triggerArray[i];
                            var selector = _util2.default.getSelectorFromElement(trigger);
                            if (selector !== null) {
                                var $elem = (0, _jquery2.default)(selector);
                                if (!$elem.hasClass(ClassName.SHOW)) {
                                    (0, _jquery2.default)(trigger).addClass(ClassName.COLLAPSED).attr("aria-expanded", false)
                                }
                            }
                        }
                    }
                    this.setTransitioning(true);
                    var complete = function complete() {
                        _this2.setTransitioning(false);
                        (0, _jquery2.default)(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN)
                    };
                    this._element.style[dimension] = "";
                    if (!_util2.default.supportsTransitionEnd()) {
                        complete();
                        return
                    }(0, _jquery2.default)(this._element).one(_util2.default.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION)
                }
            }, {
                key: "setTransitioning",
                value: function setTransitioning(isTransitioning) {
                    this._isTransitioning = isTransitioning
                }
            }, {
                key: "dispose",
                value: function dispose() {
                    _jquery2.default.removeData(this._element, DATA_KEY);
                    this._config = null;
                    this._parent = null;
                    this._element = null;
                    this._triggerArray = null;
                    this._isTransitioning = null
                }
            }, {
                key: "_getConfig",
                value: function _getConfig(config) {
                    config = _jquery2.default.extend({}, Default, config);
                    config.toggle = Boolean(config.toggle);
                    _util2.default.typeCheckConfig(NAME, config, DefaultType);
                    return config
                }
            }, {
                key: "_getDimension",
                value: function _getDimension() {
                    var hasWidth = (0, _jquery2.default)(this._element).hasClass(Dimension.WIDTH);
                    return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT
                }
            }, {
                key: "_getParent",
                value: function _getParent() {
                    var _this3 = this;
                    var parent = null;
                    if (_util2.default.isElement(this._config.parent)) {
                        parent = this._config.parent;
                        if (typeof this._config.parent.jquery !== "undefined") {
                            parent = this._config.parent[0]
                        }
                    } else {
                        parent = (0, _jquery2.default)(this._config.parent)[0]
                    }
                    var selector = '[data-toggle="lu-collapse"][data-parent="' + this._config.parent + '"]';
                    (0, _jquery2.default)(parent).find(selector).each(function(i, element) {
                        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element])
                    });
                    return parent
                }
            }, {
                key: "_addAriaAndCollapsedClass",
                value: function _addAriaAndCollapsedClass(element, triggerArray) {
                    if (element) {
                        var isOpen = (0, _jquery2.default)(element).hasClass(ClassName.SHOW);
                        if (triggerArray.length) {
                            (0, _jquery2.default)(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr("aria-expanded", isOpen)
                        }
                    }
                }
            }], [{
                key: "_getTargetFromElement",
                value: function _getTargetFromElement(element) {
                    var selector = _util2.default.getSelectorFromElement(element);
                    return selector ? (0, _jquery2.default)(selector)[0] : null
                }
            }, {
                key: "_jQueryInterface",
                value: function _jQueryInterface(config) {
                    return this.each(function() {
                        var $this = (0, _jquery2.default)(this);
                        var data = $this.data(DATA_KEY);
                        var _config = _jquery2.default.extend({}, Default, $this.data(), (typeof config === "undefined" ? "undefined" : _typeof(config)) === "object" && config);
                        if (!data && _config.toggle && /show|hide/.test(config)) {
                            _config.toggle = false
                        }
                        if (!data) {
                            data = new Collapse(this, _config);
                            $this.data(DATA_KEY, data)
                        }
                        if (typeof config === "string") {
                            if (typeof data[config] === "undefined") {
                                throw new Error('No method named "' + config + '"')
                            }
                            data[config]()
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function get() {
                    return VERSION
                }
            }, {
                key: "Default",
                get: function get() {
                    return Default
                }
            }]);
            return Collapse
        }();
        (0, _jquery2.default)(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function(event) {
            if (event.currentTarget.tagName === "A") {
                event.preventDefault()
            }
            var $trigger = (0, _jquery2.default)(this);
            var selector = _util2.default.getSelectorFromElement(this);
            (0, _jquery2.default)(selector).each(function() {
                var $target = (0, _jquery2.default)(this);
                var data = $target.data(DATA_KEY);
                var config = data ? "toggle" : $trigger.data();
                Collapse._jQueryInterface.call($target, config)
            })
        });
        _jquery2.default.fn[NAME] = Collapse._jQueryInterface;
        _jquery2.default.fn[NAME].Constructor = Collapse;
        _jquery2.default.fn[NAME].noConflict = function() {
            _jquery2.default.fn[NAME] = JQUERY_NO_CONFLICT;
            return Collapse._jQueryInterface
        };
        return Collapse
    }(_jquery2.default);
    exports.default = Collapse
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _Swiper = __webpack_require__(4);
    var _Swiper2 = _interopRequireDefault(_Swiper);
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        container: "[data-content-slider]"
    };
    var Default = {
        slideToClickedSlide: false,
        navStorage: "normal"
    };
    var contentSlider = function() {
        function contentSlider(container, options) {
            _classCallCheck(this, contentSlider);
            this.container = container;
            this.options = options;
            this.isInit = false;
            this.getConfig();
            this.initPLugin();
            this.bindEvents()
        }
        _createClass(contentSlider, [{
            key: "getConfig",
            value: function getConfig() {
                var dataConfig = this.container.data();
                if (dataConfig.options) {
                    this.dataOptions = _util2.default.parseDataOptions(dataConfig.options)
                } else {
                    this.dataOptions = {}
                }
                this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options)
            }
        }, {
            key: "bindEvents",
            value: function bindEvents() {}
        }, {
            key: "initPLugin",
            value: function initPLugin() {
                var that = this;
                this.swiperInstance = new _Swiper2.default(this.container, {
                    scrollbarHide: true,
                    effect: false,
                    resistance: true,
                    resistanceRatio: 0,
                    slidesPerView: "auto",
                    watchSlidesVisibility: true,
                    onInit: function onInit(swiper) {
                        that.onInit(swiper)
                    },
                    onTap: function onTap(swiper, event) {
                        that.changeActiveSlide(swiper);
                        if (that.config.slideToClickedSlide) {
                            that.slideToClickedSlide(swiper, event)
                        }
                        that.onClick()
                    }
                })
            }
        }, {
            key: "changeActiveSlide",
            value: function changeActiveSlide(swiper) {
                if (!this.isInit) {
                    return
                }
                var slides = swiper.slides;
                switch (this.config.navStorage) {
                    case "normal":
                        break;
                    case "hash":
                        break;
                    case "localStorage":
                        $(slides).removeClass("is-active");
                        window.localStorage.setItem("content-slider-" + this.config.localStorageId, swiper.clickedIndex);
                        break
                }
            }
        }, {
            key: "slideToClickedSlide",
            value: function slideToClickedSlide(swiper, event) {
                var clickedIndex = swiper.clickedIndex,
                    slides = swiper.slides;
                swiper.updateActiveIndex();
                if (!$(slides[clickedIndex - 1]).hasClass("swiper-slide-visible")) {
                    swiper.slideTo(swiper.activeIndex - 1)
                }
                if (!$(slides[clickedIndex + 1]).hasClass("swiper-slide-visible")) {
                    swiper.slideTo(swiper.activeIndex + 1)
                }
            }
        }, {
            key: "onInit",
            value: function onInit(swiper) {
                switch (this.config.navStorage) {
                    case "normal":
                        var activeSlideIndex = 0,
                            slides = swiper.slides;
                        $(slides).each(function(index) {
                            if ($(this).hasClass("is-active")) {
                                activeSlideIndex = index
                            }
                        });
                        swiper.slideTo(activeSlideIndex, 0);
                        break;
                    case "hash":
                        if (window.location.hash) {
                            var slide = $(swiper.container).find('[href="' + window.location.hash + '"]'),
                                slideIndex = slide.closest(".swiper-slide").index();
                            slide.trigger("click");
                            swiper.slideTo(slideIndex, 0)
                        }
                        break;
                    case "localStorage":
                        var index = window.localStorage.getItem("content-slider-" + this.config.localStorageId);
                        if (index) {
                            swiper.slideTo(index, 0)
                        } else {
                            swiper.slideTo(0, 0)
                        }
                        $(swiper.slides[index]).find("a").trigger("click");
                        break
                }
                this.showSlider(swiper);
                this.isInit = true
            }
        }, {
            key: "showSlider",
            value: function showSlider(swiper) {
                swiper.container.css({
                    visibility: "visible"
                })
            }
        }, {
            key: "onClick",
            value: function onClick() {}
        }, {
            key: "onSlideChangeStart",
            value: function onSlideChangeStart() {}
        }, {
            key: "onSlideChangeEnd",
            value: function onSlideChangeEnd() {}
        }]);
        return contentSlider
    }();

    function initDataSelectors() {
        $(SELECTORS.container).each(function() {
            new contentSlider($(this))
        })
    }

    function initJqueryPlugin() {
        $.fn.luContentSlider = function(options) {
            return this.each(function() {
                new contentSlider($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = init
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _drop = __webpack_require__(5);
    var _drop2 = _interopRequireDefault(_drop);
    var _selectInput = __webpack_require__(3);
    var _selectInput2 = _interopRequireDefault(_selectInput);
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        dropdownToggle: '[data-toggle="lu-dropdown"], [data-dropdown]',
        dropdownParent: ".has-dropdown",
        dropdownMenu: "[data-dropdown-menu]",
        dropdownArrowTarget: "[data-arrow-target]",
        dropdownPlacement: "[data-placement]",
        dropdownOpen: "[data-open]",
        dropdownClasses: "[data-class]",
        width: "[data-width]"
    };
    var Default = {
        open: "click",
        placement: "bottom left",
        width: null,
        class: ""
    };
    var dropdown = function() {
        function dropdown(_dropdown, options) {
            _classCallCheck(this, dropdown);
            this.dropdown = $(_dropdown);
            this.options = options;
            this.dropdownParent = this.dropdown.closest(SELECTORS.dropdownParent);
            this.dropdownArrowTarget = $(this.dropdownParent).find(SELECTORS.dropdownArrowTarget);
            this.dropdownToggle = $(this.dropdownParent).find(SELECTORS.dropdownToggle);
            this.dropdownMenu = $(this.dropdownParent).find(SELECTORS.dropdownMenu);
            this.getConfig();
            this.initPlugin();
            this.bindEvents();
            if (this.dropdown.find("[data-input-content-target]").length) {
                this.initSelect()
            }
        }
        _createClass(dropdown, [{
            key: "bindEvents",
            value: function bindEvents() {
                this.dropdown.on("closeDropdown", this.close.bind(this));
                this.dropdown.on("openDropdown", this.open.bind(this))
            }
        }, {
            key: "getConfig",
            value: function getConfig() {
                var dataConfig = this.dropdown.data();
                if (dataConfig.options) {
                    this.dataOptions = _util2.default.parseDataOptions(dataConfig.options)
                } else {
                    this.dataOptions = {}
                }
                this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options);
                this.setDropdownWidth();
                if (!this.dropdownArrowTarget.length) {
                    this.dropdownArrowTarget = this.dropdown
                }
            }
        }, {
            key: "initPlugin",
            value: function initPlugin() {
                this.drop = new _drop2.default({
                    target: this.dropdown[0],
                    content: this.dropdownMenu[0],
                    position: this.config.placement,
                    classes: this.config.class,
                    openOn: this.config.open
                });
                if (this.config.onInit) {
                    this.config.onInit(this.drop)
                }
                this.drop.on("open", this.onOpen.bind(this));
                this.drop.on("close", this.onClose.bind(this))
            }
        }, {
            key: "getArrowTargetPoition",
            value: function getArrowTargetPoition() {
                var dropdownOffset = this.dropdown.offset();
                var arrowTargetOffset = this.dropdownArrowTarget.offset();
                var arrowTargetWidth = this.dropdownArrowTarget.outerWidth();
                if (/left/i.test(this.config.placement)) {
                    this.arrowTargetPosition = arrowTargetOffset.left - dropdownOffset.left + arrowTargetWidth / 2
                } else if (/right/i.test(this.config.placement)) {
                    this.arrowTargetPosition = this.dropdown.outerWidth() - (arrowTargetOffset.left - dropdownOffset.left) - arrowTargetWidth / 2
                }
            }
        }, {
            key: "setArrowPostion",
            value: function setArrowPostion() {
                var arrow = $(this.drop.drop).find("[data-arrow]");
                if (!arrow) {
                    return
                }
                this.getArrowTargetPoition();
                var arrowBorderWidth = arrow.outerWidth() / 2;
                if (/center/i.test(this.config.placement)) {
                    arrow.css({
                        left: "0",
                        right: "0",
                        margin: "auto"
                    })
                } else if (/left/i.test(this.config.placement)) {
                    arrow.css({
                        left: this.arrowTargetPosition - arrowBorderWidth
                    })
                } else if (/right/i.test(this.config.placement)) {
                    arrow.css({
                        left: "auto",
                        right: this.arrowTargetPosition - arrowBorderWidth
                    })
                }
            }
        }, {
            key: "setDropdownWidth",
            value: function setDropdownWidth() {
                if (!this.config.width) {
                    return
                }
                $(this.dropdownMenu).css({
                    opacity: 0,
                    position: "absolute",
                    left: -1e4
                });
                var width = parseInt(this.config.width);
                var parentWidth = this.dropdownParent.outerWidth();
                $(this.dropdownMenu).css({
                    width: width * parentWidth / 100,
                    "min-width": width * parentWidth / 100
                });
                $(this.dropdownMenu).css({
                    opacity: "",
                    position: "",
                    left: ""
                })
            }
        }, {
            key: "onOpen",
            value: function onOpen() {
                this.setArrowPostion();
                this.setDropdownWidth();
                if (typeof this.config.onOpen === "function") {
                    this.config.onOpen(this.drop)
                }
            }
        }, {
            key: "onClose",
            value: function onClose() {
                if (typeof this.config.onClose === "function") {
                    this.config.onClose(this.drop)
                }
            }
        }, {
            key: "open",
            value: function open() {
                this.drop.open()
            }
        }, {
            key: "close",
            value: function close() {
                this.drop.close()
            }
        }, {
            key: "initSelect",
            value: function initSelect() {
                _selectInput2.default.init($(this.drop.drop), this.drop)
            }
        }]);
        return dropdown
    }();

    function initDataSelectors() {
        $(SELECTORS.dropdownToggle).each(function() {
            new dropdown($(this))
        })
    }

    function initJqueryPlugin() {
        $.fn.luDropdown = function(options) {
            return this.each(function() {
                new dropdown($(this), options)
            })
        }
    }

    function closeAllDropdowns() {
        for (var i = 0; i < _drop2.default.drops.length; i++) {
            _drop2.default.drops[i].close()
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin,
        closeAllDropdowns: closeAllDropdowns
    };
    exports.default = init
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _drop = __webpack_require__(5);
    var _drop2 = _interopRequireDefault(_drop);
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        toggle: '[data-toggle="lu-tooltip"], [data-toggle="tooltip"], [data-tooltip]'
    };
    var Default = {
        open: "hover",
        placement: "top center",
        class: "lu-tooltip"
    };
    var tooltip = function() {
        function tooltip(_tooltip, options) {
            _classCallCheck(this, tooltip);
            this.tooltip = $(_tooltip);
            this.options = options;
            this.getConfig();
            this.getContent();
            this.initPlugin()
        }
        _createClass(tooltip, [{
            key: "getConfig",
            value: function getConfig() {
                var dataConfig = this.tooltip.data();
                if (dataConfig.options) {
                    this.dataOptions = _util2.default.parseDataOptions(dataConfig.options)
                } else {
                    this.dataOptions = {}
                }
                this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options)
            }
        }, {
            key: "getContent",
            value: function getContent() {
                if ($(this.tooltip).attr("data-title")) {
                    this.tooltipContent = $(this.tooltip).attr("data-title")
                } else {
                    $(this.tooltip).attr("data-title", $(this.tooltip).attr("title"));
                    $(this.tooltip).removeAttr("title");
                    this.tooltipContent = $(this.tooltip).attr("data-title")
                }
            }
        }, {
            key: "initPlugin",
            value: function initPlugin() {
                this.drop = new _drop2.default({
                    target: this.tooltip[0],
                    content: this.tooltipContent,
                    position: this.config.placement,
                    classes: this.config.class,
                    openOn: this.config.open
                });
                this.drop.on("open", this.onOpen.bind(this))
            }
        }, {
            key: "getArrowTargetPoition",
            value: function getArrowTargetPoition() {
                var tooltipwitdh = this.tooltip.outerWidth();
                if (/left/i.test(this.config.placement)) {
                    this.arrowTargetPosition = tooltipwitdh / 2
                } else if (/right/i.test(this.config.placement)) {
                    this.arrowTargetPosition = tooltipwitdh / 2
                }
            }
        }, {
            key: "setArrowPostion",
            value: function setArrowPostion() {
                $(this.drop.drop).find(".tooltip__arrow").remove();
                $(this.drop.drop).append('<div class="lu-tooltip__arrow" data-arrow></div>');
                var arrow = $(this.drop.drop).find("[data-arrow]");
                if (!arrow) {
                    return
                }
                this.getArrowTargetPoition();
                var arrowBorderWidth = arrow.outerWidth() / 2;
                if (/center/i.test(this.config.placement)) {
                    arrow.css({
                        left: "0",
                        right: "0",
                        margin: "auto"
                    })
                } else if (/left/i.test(this.config.placement)) {
                    arrow.css({
                        left: this.arrowTargetPosition,
                        marginLeft: -arrowBorderWidth
                    })
                } else if (/right/i.test(this.config.placement)) {
                    arrow.css({
                        left: "auto",
                        right: this.arrowTargetPosition,
                        marginRight: -arrowBorderWidth
                    })
                }
            }
        }, {
            key: "onOpen",
            value: function onOpen() {
                this.setArrowPostion()
            }
        }]);
        return tooltip
    }();

    function initDataSelectors() {
        $(SELECTORS.toggle).each(function() {
            new tooltip($(this))
        })
    }

    function initJqueryPlugin() {
        $.fn.luTooltip = function(options) {
            return this.each(function() {
                new tooltip($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = init
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        container: "[data-check-container]",
        checkAll: "[data-check-all]",
        childs: "input:checkbox.table-mass-action-check:enabled",
        counterView: "[data-checkbox-counter]"
    };
    var Default = {};
    var CheckAll = function() {
        function CheckAll(container, options) {
            _classCallCheck(this, CheckAll);
            this.container = container;
            this.checkAllBtn = this.container.find(SELECTORS.checkAll);
            this.childs = this.container.find(SELECTORS.childs).not(SELECTORS.checkAll);
            this.counterView = this.container.find(SELECTORS.counterView);
            this.checkCounter = 0;
            this.options = options;
            this.getConfig();
            this.initCounter();
            this.bindEvents()
        }
        _createClass(CheckAll, [{
            key: "bindEvents",
            value: function bindEvents() {
                this.checkAllBtn.on("change", this.checkAll.bind(this));
                this.childs.on("change", this.updateCounter.bind(this))
            }
        }, {
            key: "getConfig",
            value: function getConfig() {
                var dataConfig = this.container.data();
                if (dataConfig.options) {
                    this.dataOptions = _util2.default.parseDataOptions(dataConfig.options)
                } else {
                    this.dataOptions = {}
                }
                this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options)
            }
        }, {
            key: "checkAll",
            value: function checkAll(event) {
                this.childs.prop("checked", event.target.checked);
                if (event.target.checked) {
                    this.checkCounter = this.childs.length
                } else {
                    this.checkCounter = 0
                }
                this.updateCounterView()
            }
        }, {
            key: "toggleCheckAllBtn",
            value: function toggleCheckAllBtn() {
                if (this.childs.length == this.checkCounter) {
                    this.checkAllBtn.prop("checked", true)
                } else {
                    this.checkAllBtn.prop("checked", false)
                }
                if (typeof this.config.onCheckAll === "function") {
                    this.config.onCheckAll(this.container, this.checkCounter)
                }
            }
        }, {
            key: "initCounter",
            value: function initCounter() {
                if (this.checkAllBtn.is(":checked")) {
                    this.checkCounter = this.childs.length;
                    this.childs.prop("checked", true)
                } else {
                    this.checkCounter = this.childs.filter(":checked").length
                }
            }
        }, {
            key: "updateCounter",
            value: function updateCounter(event) {
                if (event.target.checked) {
                    this.checkCounter++;
                    this.toggleCheckAllBtn()
                } else {
                    this.checkCounter--;
                    this.toggleCheckAllBtn()
                }
                this.updateCounterView()
            }
        }, {
            key: "updateCounterView",
            value: function updateCounterView() {
                if (typeof this.config.onCheck === "function") {
                    this.config.onCheck(this.container, this.checkCounter)
                }
                this.counterView.text(this.checkCounter)
            }
        }]);
        return CheckAll
    }();

    function initDataSelectors() {
        $(SELECTORS.container).each(function() {
            new CheckAll($(this))
        })
    }

    function initJqueryPlugin() {
        $.fn.luCheckAll = function(options) {
            return this.each(function() {
                new CheckAll($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = init
}, function(module, exports, __webpack_require__) {
    "use strict";
    var forms = [].slice.call(document.querySelectorAll(".lu-form-control"));
    forms.forEach(function(item) {
        var $item = $(item);
        item.addEventListener("focus", function() {
            $item.closest(".lu-input-group").addClass("is-focus")
        });
        item.addEventListener("blur", function() {
            $item.closest(".lu-input-group").removeClass("is-focus")
        })
    })
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    __webpack_require__(32);

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        container: "[data-range-slider]",
        input: "input",
        slider: "[data-slider]"
    };
    var rangeSlider = function() {
        function rangeSlider(container) {
            _classCallCheck(this, rangeSlider);
            this.container = container;
            this.input = this.container.find(SELECTORS.input);
            this.slider = this.container.find(SELECTORS.slider);
            this.config = this.container.data();
            this.value = this.input.val();
            this.bindEvents();
            this.initSlider()
        }
        _createClass(rangeSlider, [{
            key: "bindEvents",
            value: function bindEvents() {
                this.input.on("change", this.updateSlider.bind(this))
            }
        }, {
            key: "initSlider",
            value: function initSlider() {
                var that = this;
                this.sliderInstance = $(this.slider).slider({
                    range: "min",
                    value: this.value,
                    min: this.config.min,
                    max: this.config.max,
                    step: this.config.step,
                    slide: function slide(event, ui) {
                        that.updateInput(ui.value)
                    }
                })
            }
        }, {
            key: "updateInput",
            value: function updateInput(value) {
                this.input.val(value)
            }
        }, {
            key: "updateSlider",
            value: function updateSlider(evnet) {
                this.sliderInstance.slider("value", event.target.value)
            }
        }], [{
            key: "init",
            value: function init(container) {
                if (container) {
                    new rangeSlider($(container).find(SELECTORS.container))
                } else {
                    $(SELECTORS.container).each(function() {
                        new rangeSlider($(this))
                    })
                }
            }
        }, {
            key: "reload",
            value: function reload(container) {}
        }]);
        return rangeSlider
    }();

    function initDataSelectors() {
        $(SELECTORS.select).each(function() {
            new Select($(this))
        })
    }

    function initJqueryPlugin() {
        $.fn.luSelect = function(options) {
            return this.each(function() {
                new Select($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = rangeSlider
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _Selectize = __webpack_require__(29);
    var _Selectize2 = _interopRequireDefault(_Selectize);
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        select: "#layers select",
        rawSelect: "#layers .lu-form-control--basic"
    };
    var Default = {
        maxItems: 1,
        removeButton: false,
        resotreOnBackspace: false,
        dragAndDrop: false
    };
    var Select = function() {
        function Select(element, options) {
            _classCallCheck(this, Select);
            this.element = element;
            this.options = options;
            this.getConfig();
            this.directionDetector();
            this.additionalPlugins();
            this.initPlugin()
        }
        _createClass(Select, [{
            key: "initPlugin",
            value: function initPlugin() {
                var plugins = this.additionalPlugins();
                this.element.selectize({
                    placeholder: "",
                    maxItems: this.config.maxItems,
                    createOnBlur: true,
                    plugins: plugins,
                    copyClassesToDropdown: false
                })
            }
        }, {
            key: "getConfig",
            value: function getConfig() {
                var dataConfig = this.element.data();
                if (dataConfig.options) {
                    this.dataOptions = _util2.default.parseDataOptions(dataConfig.options)
                } else {
                    this.dataOptions = {}
                }
                this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options)
            }
        }, {
            key: "directionDetector",
            value: function directionDetector() {
                _Selectize2.default.define("directionDetector", function(options) {
                    var self = this;
                    this.positionDropdown = function() {
                        var original = self.positionDropdown;
                        return function() {
                            this.offset = this.settings.dropdownParent === "body" ? this.$control.offset() : this.$control.position();
                            this.offset.top += this.$control.outerHeight(true);
                            var controlHeight = this.$control.innerHeight();
                            var controlPositon = $(this.$control).offset().top - $(window).scrollTop();
                            var dropdownOffset = controlHeight + controlPositon + this.$dropdown.outerHeight(true);
                            if ($(window).innerHeight() - dropdownOffset < 0) {
                                this.$dropdown.css({
                                    top: "auto",
                                    bottom: 8 + controlHeight,
                                    left: this.offset.left,
                                    width: this.$control[0].getBoundingClientRect().width
                                })
                            } else {
                                this.$dropdown.css({
                                    width: this.$control[0].getBoundingClientRect().width,
                                    top: this.offset.top,
                                    left: this.offset.left,
                                    bottom: "auto"
                                })
                            }
                        }
                    }()
                })
            }
        }, {
            key: "additionalPlugins",
            value: function additionalPlugins() {
                var plugins = ["directionDetector"];
                if (this.config.removeButton) {
                    plugins.push("remove_button")
                }
                if (this.config.resotreOnBackspace) {
                    plugins.push("restore_on_backspace")
                }
                if (this.config.drag_drop) {
                    plugins.push("drag_drop")
                }
                return plugins
            }
        }]);
        return Select
    }();

    function initDataSelectors() {}

    function initJqueryPlugin() {
        $.fn.luSelect = function(options) {
            return this.each(function() {
                new Select($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = init
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _autosize = __webpack_require__(30);
    var _autosize2 = _interopRequireDefault(_autosize);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        container: "[data-editable-cell]",
        input: "[data-editable-input]",
        content: "[data-editable-contnet]",
        init: "[data-init-edit]",
        abort: "[data-abort-edit]",
        accept: "[data-accept-edit]"
    };
    var Default = {};
    var editableCell = function() {
        function editableCell(container, options) {
            _classCallCheck(this, editableCell);
            this.container = container;
            this.options = options;
            this.input = this.container.find(SELECTORS.input);
            this.content = this.container.find(SELECTORS.content);
            this.init = this.container.find(SELECTORS.init);
            this.abort = this.container.find(SELECTORS.abort);
            this.accept = this.container.find(SELECTORS.accept);
            this.oldInputValue = this.input.val().trim();
            this.getConfig();
            this.initEvents();
            this.trimInputContent();
            this.textareaAutosize();
            this.blockNewLine()
        }
        _createClass(editableCell, [{
            key: "getConfig",
            value: function getConfig() {
                var dataConfig = this.container.data();
                if (dataConfig.options) {
                    this.dataOptions = util.parseDataOptions(dataConfig.options)
                } else {
                    this.dataOptions = {}
                }
                this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options)
            }
        }, {
            key: "bindEvents",
            value: function bindEvents() {
                $(this.init).on("click", this.initEdit.bind(this));
                $(this.abort).on("click", this.abortEdit.bind(this));
                $(this.accept).on("click", this.acceptEdit.bind(this))
            }
        }, {
            key: "initEdit",
            value: function initEdit(event) {
                this.content.addClass("hidden");
                this.init.addClass("hidden");
                this.accept.removeClass("hidden");
                this.abort.removeClass("hidden");
                this.input.removeClass("hidden");
                this.textareaAutosizeUpdate();
                $(this.input).focus()
            }
        }, {
            key: "abortEdit",
            value: function abortEdit(event) {
                this.content.removeClass("hidden");
                this.init.removeClass("hidden");
                this.accept.addClass("hidden");
                this.abort.addClass("hidden");
                this.input.addClass("hidden");
                this.input.val(this.oldInputValue)
            }
        }, {
            key: "textareaAutosize",
            value: function textareaAutosize() {
                (0, _autosize2.default)(this.input)
            }
        }, {
            key: "textareaAutosizeUpdate",
            value: function textareaAutosizeUpdate() {
                _autosize2.default.update(this.input)
            }
        }, {
            key: "trimInputContent",
            value: function trimInputContent() {
                $(this.input).val($(this.input).val().trim())
            }
        }, {
            key: "blockNewLine",
            value: function blockNewLine() {
                $(this.input).on("keypress", function(e) {
                    if ((e.keyCode || e.which) == 13) {
                        e.preventDefault()
                    }
                })
            }
        }, {
            key: "acceptEdit",
            value: function acceptEdit(event) {
                this.content.text(this.input.val());
                this.content.removeClass("hidden");
                this.init.removeClass("hidden");
                this.accept.addClass("hidden");
                this.abort.addClass("hidden");
                this.input.addClass("hidden")
            }
        }]);
        return editableCell
    }();

    function initDataSelectors() {
        $(SELECTORS.container).each(function() {
            new editableCell($(this))
        })
    }

    function initJqueryPlugin() {
        $.fn.luEditableCell = function(options) {
            return this.each(function() {
                new editableCell($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = init
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _toastr = __webpack_require__(35);
    var _toastr2 = _interopRequireDefault(_toastr);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }
    var alert = {
        init: function init() {
            this.cacheDom();
            this.bindEvents()
        },
        cacheDom: function cacheDom() {
            this.$showAlert = $("[data-toggle='lu-alert']");
            this.$alertFixedTop = $(".alert--fixed-top");
            this.$alertFixedBottom = $(".alert--fixed-bottom")
        },
        bindEvents: function bindEvents() {
            this.$showAlert.on("click", this.getData.bind(this))
        },
        settings: function settings() {
            if (this.$alertIcon == false) {
                this.$icon = ""
            } else {
                this.$icon = "lu-alert--icon"
            }
            if (!this.$alertTimeout) {
                this.$alertTimeout = 1e5
            }
            if (this.$alertActions) {
                this.$actions = this.$alertActions
            }
        },
        create: function create(event) {
            this.$alertPosition = event.$alertPosition;
            this.$alertSize = event.$alertSize;
            this.$alertStatus = event.$alertStatus;
            this.$alertTitle = event.$alertTitle;
            this.$alertBody = event.$alertBody;
            this.$alertIcon = event.$alertIcon;
            this.$alertActions = event.$alertActions;
            this.$alertTimeout = event.$alertTimeout;
            this.show(event)
        },
        getData: function getData(event) {
            var target = $(event.currentTarget);
            this.$alertPosition = target.data("alert-position");
            this.$alertSize = target.data("alert-size");
            this.$alertStatus = target.data("alert-status");
            this.$alertTitle = target.data("alert-title");
            this.$alertBody = target.data("alert-body");
            this.$alertIcon = target.data("alert-icon");
            this.$alertActions = target.data("alert-actions");
            this.$alertTimeout = target.data("alert-timeout");
            this.show(event)
        },
        show: function show(event) {
            this.settings();
            if (this.$alertPosition == "top" || this.$alertPosition == "bottom") {
                this.delay = 400;
                var that = this;
                if (this.$alertPosition == "top") {
                    var that = this;
                    $("body").prepend(this.getTemplate());
                    this.$alertFixedTop = $(".alert--fixed-top");
                    this.$alertHeight = that.$alertFixedTop.outerHeight();
                    this.$alertFixedTop.css("margin-top", -this.$alertHeight).animate({
                        "margin-top": 0
                    }, this.delay);
                    $(window).resize(function() {
                        if (that.$alertFixedTop.hasClass("is-active")) {
                            this.$alertHeight = that.$alertFixedTop.outerHeight()
                        }
                    });
                    this.$hideAlert = this.$alertFixedTop.closest(".alert").find(".btn--close");
                    this.$hideAlert.on("click", this.hideT.bind(this))
                } else {
                    $("body").append(this.getTemplate());
                    this.$alertFixedBottom = $(".alert--fixed-bottom");
                    this.$alertBottomHeight = this.$alertFixedBottom.outerHeight();
                    this.$alertFixedBottom.css("margin-bottom", -this.$alertBottomHeight).animate({
                        "margin-bottom": "0"
                    }, this.delay);
                    this.$hideAlert = this.$alertFixedBottom.closest(".alert").find(".btn--close");
                    this.$hideAlert.on("click", this.hideB.bind(this))
                }
            } else {
                _toastr2.default.success(this.getTemplate())
            }
        },
        hideT: function hideT(event) {
            var that = this;
            this.$alertHeight = this.$alertFixedTop.outerHeight();
            this.$alertFixedTop.animate({
                "margin-top": -this.$alertHeight
            }, this.delay);
            setTimeout(function() {
                that.$alertFixedTop.removeClass("is-active").remove()
            }, this.delay)
        },
        hideB: function hideB() {
            var that = this;
            this.$alertHeight = this.$alertFixedBottom.outerHeight();
            this.$alertFixedBottom.animate({
                "margin-bottom": -this.$alertHeight
            }, this.delay);
            setTimeout(function() {
                that.$alertFixedBottom.removeClass("is-active").remove()
            }, this.delay)
        },
        getTemplate: function getTemplate() {
            _toastr2.default.options = {
                positionClass: "lu-toast--" + this.$alertPosition,
                timeOut: this.$alertTimeout
            };
            this.$actions = "";
            if (this.$alertActions) {
                this.$actions = '<div class="lu-alert__actions">' + this.$alertActions + "</div>"
            }
            var $titleTemplate = "";
            if (this.$alertTitle) {
                $titleTemplate = '<div class="lu-alert__title">' + this.$alertTitle + " </div>"
            }
            var $primaryTemplate = '<div class="lu-alert lu-alert--' + this.$alertStatus + ' lu-alert--outline lu-alert--float lu-alert--border-left lu-has-icon">' + '<div class="lu-alert__body">' + $titleTemplate + "<p>" + this.$alertBody + "</p>" + "</div>" + this.$actions + "</div>";
            var $secondaryTemplate = '<div class="lu-alert lu-alert--' + this.$alertStatus + " lu-alert--" + this.$alertSize + " lu-alert--fixed lu-alert--fixed-" + this.$alertPosition + ' is-active">' + '<div class="lu-container">' + '<div class="lu-alert__body">' + "<b> " + this.$alertTitle + " </b> " + this.$alertBody + "</div>" + this.$actions + "</div>" + "</div>";
            var $tmpl = $primaryTemplate;
            if (this.$alertPosition == "top" || this.$alertPosition == "bottom") {
                $tmpl = $secondaryTemplate
            }
            return $tmpl
        }
    };
    exports.default = alert
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
        return typeof obj
    } : function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var Modal = function() {
        var NAME = "luModal";
        var VERSION = "4.0.0-beta.2";
        var DATA_KEY = "bs.modal";
        var EVENT_KEY = "." + DATA_KEY;
        var DATA_API_KEY = ".data-api";
        var JQUERY_NO_CONFLICT = $.fn[NAME];
        var TRANSITION_DURATION = 300;
        var BACKDROP_TRANSITION_DURATION = 150;
        var ESCAPE_KEYCODE = 27;
        var Default = {
            backdrop: true,
            keyboard: true,
            focus: true,
            show: true
        };
        var DefaultType = {
            backdrop: "(boolean|string)",
            keyboard: "boolean",
            focus: "boolean",
            show: "boolean"
        };
        var Event = {
            HIDE: "hide" + EVENT_KEY,
            HIDDEN: "hidden" + EVENT_KEY,
            SHOW: "show" + EVENT_KEY,
            SHOWN: "shown" + EVENT_KEY,
            FOCUSIN: "focusin" + EVENT_KEY,
            RESIZE: "resize" + EVENT_KEY,
            CLICK_DISMISS: "click.dismiss" + EVENT_KEY,
            KEYDOWN_DISMISS: "keydown.dismiss" + EVENT_KEY,
            MOUSEUP_DISMISS: "mouseup.dismiss" + EVENT_KEY,
            MOUSEDOWN_DISMISS: "mousedown.dismiss" + EVENT_KEY,
            CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
        };
        var ClassName = {
            SCROLLBAR_MEASURER: "modal-scrollbar-measure",
            BACKDROP: "modal-backdrop",
            OPEN: "modal-open",
            FADE: "fade",
            SHOW: "show"
        };
        var Selector = {
            DIALOG: ".modal-dialog, .lu-modal__dialog",
            DATA_TOGGLE: '[data-toggle="lu-modal"], [data-lu-modal]',
            DATA_DISMISS: '[data-dismiss="lu-modal"]',
            FIXED_CONTENT: ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
            STICKY_CONTENT: ".sticky-top",
            NAVBAR_TOGGLER: ".navbar-toggler"
        };
        var Modal = function() {
            function Modal(element, config) {
                _classCallCheck(this, Modal);
                this._config = this._getConfig(config);
                this._element = element;
                this._dialog = $(element).find(Selector.DIALOG)[0];
                this._backdrop = null;
                this._isShown = false;
                this._isBodyOverflowing = false;
                this._ignoreBackdropClick = false;
                this._originalBodyPadding = 0;
                this._scrollbarWidth = 0
            }
            _createClass(Modal, [{
                key: "toggle",
                value: function toggle(relatedTarget) {
                    return this._isShown ? this.hide() : this.show(relatedTarget)
                }
            }, {
                key: "show",
                value: function show(relatedTarget) {
                    var _this = this;
                    if (this._isTransitioning || this._isShown) {
                        return
                    }
                    if (_util2.default.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {
                        this._isTransitioning = true
                    }
                    var showEvent = $.Event(Event.SHOW, {
                        relatedTarget: relatedTarget
                    });
                    $(this._element).trigger(showEvent);
                    if (this._isShown || showEvent.isDefaultPrevented()) {
                        return
                    }
                    this._isShown = true;
                    this._checkScrollbar();
                    this._setScrollbar();
                    this._adjustDialog();
                    $(document.body).addClass(ClassName.OPEN);
                    this._setEscapeEvent();
                    this._setResizeEvent();
                    $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function(event) {
                        return _this.hide(event)
                    });
                    $(this._dialog).on(Event.MOUSEDOWN_DISMISS, function() {
                        $(_this._element).one(Event.MOUSEUP_DISMISS, function(event) {
                            if ($(event.target).is(_this._element)) {
                                _this._ignoreBackdropClick = true
                            }
                        })
                    });
                    this._showBackdrop(function() {
                        return _this._showElement(relatedTarget)
                    })
                }
            }, {
                key: "hide",
                value: function hide(event) {
                    var _this2 = this;
                    if (event) {
                        event.preventDefault()
                    }
                    if (this._isTransitioning || !this._isShown) {
                        return
                    }
                    var hideEvent = $.Event(Event.HIDE);
                    $(this._element).trigger(hideEvent);
                    if (!this._isShown || hideEvent.isDefaultPrevented()) {
                        return
                    }
                    this._isShown = false;
                    var transition = _util2.default.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);
                    if (transition) {
                        this._isTransitioning = true
                    }
                    this._setEscapeEvent();
                    this._setResizeEvent();
                    $(document).off(Event.FOCUSIN);
                    $(this._element).removeClass(ClassName.SHOW);
                    $(this._element).off(Event.CLICK_DISMISS);
                    $(this._dialog).off(Event.MOUSEDOWN_DISMISS);
                    if (transition) {
                        $(this._element).one(_util2.default.TRANSITION_END, function(event) {
                            return _this2._hideModal(event)
                        }).emulateTransitionEnd(TRANSITION_DURATION)
                    } else {
                        this._hideModal()
                    }
                }
            }, {
                key: "dispose",
                value: function dispose() {
                    $.removeData(this._element, DATA_KEY);
                    $(window, document, this._element, this._backdrop).off(EVENT_KEY);
                    this._config = null;
                    this._element = null;
                    this._dialog = null;
                    this._backdrop = null;
                    this._isShown = null;
                    this._isBodyOverflowing = null;
                    this._ignoreBackdropClick = null;
                    this._scrollbarWidth = null
                }
            }, {
                key: "handleUpdate",
                value: function handleUpdate() {
                    this._adjustDialog()
                }
            }, {
                key: "_getConfig",
                value: function _getConfig(config) {
                    config = $.extend({}, Default, config);
                    _util2.default.typeCheckConfig(NAME, config, DefaultType);
                    return config
                }
            }, {
                key: "_showElement",
                value: function _showElement(relatedTarget) {
                    var _this3 = this;
                    var transition = _util2.default.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);
                    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
                        document.body.appendChild(this._element)
                    }
                    this._element.style.display = "block";
                    this._element.removeAttribute("aria-hidden");
                    this._element.scrollTop = 0;
                    if (transition) {
                        _util2.default.reflow(this._element)
                    }
                    $(this._element).addClass(ClassName.SHOW);
                    if (this._config.focus) {
                        this._enforceFocus()
                    }
                    var shownEvent = $.Event(Event.SHOWN, {
                        relatedTarget: relatedTarget
                    });
                    var transitionComplete = function transitionComplete() {
                        if (_this3._config.focus) {
                            _this3._element.focus()
                        }
                        _this3._isTransitioning = false;
                        $(_this3._element).trigger(shownEvent)
                    };
                    if (transition) {
                        $(this._dialog).one(_util2.default.TRANSITION_END, transitionComplete).emulateTransitionEnd(TRANSITION_DURATION)
                    } else {
                        transitionComplete()
                    }
                }
            }, {
                key: "_enforceFocus",
                value: function _enforceFocus() {
                    var _this4 = this;
                    $(document).off(Event.FOCUSIN).on(Event.FOCUSIN, function(event) {
                        if (document !== event.target && _this4._element !== event.target && !$(_this4._element).has(event.target).length) {
                            _this4._element.focus()
                        }
                    })
                }
            }, {
                key: "_setEscapeEvent",
                value: function _setEscapeEvent() {
                    var _this5 = this;
                    if (this._isShown && this._config.keyboard) {
                        $(this._element).on(Event.KEYDOWN_DISMISS, function(event) {
                            if (event.which === ESCAPE_KEYCODE) {
                                event.preventDefault();
                                _this5.hide()
                            }
                        })
                    } else if (!this._isShown) {
                        $(this._element).off(Event.KEYDOWN_DISMISS)
                    }
                }
            }, {
                key: "_setResizeEvent",
                value: function _setResizeEvent() {
                    var _this6 = this;
                    if (this._isShown) {
                        $(window).on(Event.RESIZE, function(event) {
                            return _this6.handleUpdate(event)
                        })
                    } else {
                        $(window).off(Event.RESIZE)
                    }
                }
            }, {
                key: "_hideModal",
                value: function _hideModal() {
                    var _this7 = this;
                    this._element.style.display = "none";
                    this._element.setAttribute("aria-hidden", true);
                    this._isTransitioning = false;
                    this._showBackdrop(function() {
                        $(document.body).removeClass(ClassName.OPEN);
                        _this7._resetAdjustments();
                        _this7._resetScrollbar();
                        $(_this7._element).trigger(Event.HIDDEN)
                    })
                }
            }, {
                key: "_removeBackdrop",
                value: function _removeBackdrop() {
                    if (this._backdrop) {
                        $(this._backdrop).remove();
                        this._backdrop = null
                    }
                }
            }, {
                key: "_showBackdrop",
                value: function _showBackdrop(callback) {
                    var _this8 = this;
                    var animate = $(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : "";
                    if (this._isShown && this._config.backdrop) {
                        var doAnimate = _util2.default.supportsTransitionEnd() && animate;
                        this._backdrop = document.createElement("div");
                        this._backdrop.className = ClassName.BACKDROP;
                        if (animate) {
                            $(this._backdrop).addClass(animate)
                        }
                        $(this._backdrop).appendTo(document.body);
                        $(this._element).on(Event.CLICK_DISMISS, function(event) {
                            if (_this8._ignoreBackdropClick) {
                                _this8._ignoreBackdropClick = false;
                                return
                            }
                            if (event.target !== event.currentTarget) {
                                return
                            }
                            if (_this8._config.backdrop === "static") {
                                _this8._element.focus()
                            } else {
                                _this8.hide()
                            }
                        });
                        if (doAnimate) {
                            _util2.default.reflow(this._backdrop)
                        }
                        $(this._backdrop).addClass(ClassName.SHOW);
                        if (!callback) {
                            return
                        }
                        if (!doAnimate) {
                            callback();
                            return
                        }
                        $(this._backdrop).one(_util2.default.TRANSITION_END, callback).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION)
                    } else if (!this._isShown && this._backdrop) {
                        $(this._backdrop).removeClass(ClassName.SHOW);
                        var callbackRemove = function callbackRemove() {
                            _this8._removeBackdrop();
                            if (callback) {
                                callback()
                            }
                        };
                        if (_util2.default.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {
                            $(this._backdrop).one(_util2.default.TRANSITION_END, callbackRemove).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION)
                        } else {
                            callbackRemove()
                        }
                    } else if (callback) {
                        callback()
                    }
                }
            }, {
                key: "_adjustDialog",
                value: function _adjustDialog() {
                    var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;
                    if (!this._isBodyOverflowing && isModalOverflowing) {
                        this._element.style.paddingLeft = this._scrollbarWidth + "px"
                    }
                    if (this._isBodyOverflowing && !isModalOverflowing) {
                        this._element.style.paddingRight = this._scrollbarWidth + "px"
                    }
                }
            }, {
                key: "_resetAdjustments",
                value: function _resetAdjustments() {
                    this._element.style.paddingLeft = "";
                    this._element.style.paddingRight = ""
                }
            }, {
                key: "_checkScrollbar",
                value: function _checkScrollbar() {
                    var rect = document.body.getBoundingClientRect();
                    this._isBodyOverflowing = rect.left + rect.right < window.innerWidth;
                    this._scrollbarWidth = this._getScrollbarWidth()
                }
            }, {
                key: "_setScrollbar",
                value: function _setScrollbar() {
                    var _this9 = this;
                    if (this._isBodyOverflowing) {
                        $(Selector.FIXED_CONTENT).each(function(index, element) {
                            var actualPadding = $(element)[0].style.paddingRight;
                            var calculatedPadding = $(element).css("padding-right");
                            $(element).data("padding-right", actualPadding).css("padding-right", parseFloat(calculatedPadding) + _this9._scrollbarWidth + "px")
                        });
                        $(Selector.STICKY_CONTENT).each(function(index, element) {
                            var actualMargin = $(element)[0].style.marginRight;
                            var calculatedMargin = $(element).css("margin-right");
                            $(element).data("margin-right", actualMargin).css("margin-right", parseFloat(calculatedMargin) - _this9._scrollbarWidth + "px")
                        });
                        $(Selector.NAVBAR_TOGGLER).each(function(index, element) {
                            var actualMargin = $(element)[0].style.marginRight;
                            var calculatedMargin = $(element).css("margin-right");
                            $(element).data("margin-right", actualMargin).css("margin-right", parseFloat(calculatedMargin) + _this9._scrollbarWidth + "px")
                        });
                        var actualPadding = document.body.style.paddingRight;
                        var calculatedPadding = $("body").css("padding-right");
                        $("body").data("padding-right", actualPadding).css("padding-right", parseFloat(calculatedPadding) + this._scrollbarWidth + "px")
                    }
                }
            }, {
                key: "_resetScrollbar",
                value: function _resetScrollbar() {
                    $(Selector.FIXED_CONTENT).each(function(index, element) {
                        var padding = $(element).data("padding-right");
                        if (typeof padding !== "undefined") {
                            $(element).css("padding-right", padding).removeData("padding-right")
                        }
                    });
                    $(Selector.STICKY_CONTENT + ", " + Selector.NAVBAR_TOGGLER).each(function(index, element) {
                        var margin = $(element).data("margin-right");
                        if (typeof margin !== "undefined") {
                            $(element).css("margin-right", margin).removeData("margin-right")
                        }
                    });
                    var padding = $("body").data("padding-right");
                    if (typeof padding !== "undefined") {
                        $("body").css("padding-right", padding).removeData("padding-right")
                    }
                }
            }, {
                key: "_getScrollbarWidth",
                value: function _getScrollbarWidth() {
                    var scrollDiv = document.createElement("div");
                    scrollDiv.className = ClassName.SCROLLBAR_MEASURER;
                    document.body.appendChild(scrollDiv);
                    var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
                    document.body.removeChild(scrollDiv);
                    return scrollbarWidth
                }
            }], [{
                key: "_jQueryInterface",
                value: function _jQueryInterface(config, relatedTarget) {
                    return this.each(function() {
                        var data = $(this).data(DATA_KEY);
                        var _config = $.extend({}, Modal.Default, $(this).data(), (typeof config === "undefined" ? "undefined" : _typeof(config)) === "object" && config);
                        if (!data) {
                            data = new Modal(this, _config);
                            $(this).data(DATA_KEY, data)
                        }
                        if (typeof config === "string") {
                            if (typeof data[config] === "undefined") {
                                throw new Error('No method named "' + config + '"')
                            }
                            data[config](relatedTarget)
                        } else if (_config.show) {
                            data.show(relatedTarget)
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function get() {
                    return VERSION
                }
            }, {
                key: "Default",
                get: function get() {
                    return Default
                }
            }]);
            return Modal
        }();
        $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function(event) {
            var _this10 = this;
            var target = void 0;
            var selector = _util2.default.getSelectorFromElement(this);
            if (selector) {
                target = $(selector)[0]
            }
            var config = $(target).data(DATA_KEY) ? "toggle" : $.extend({}, $(target).data(), $(this).data());
            if (this.tagName === "A" || this.tagName === "AREA") {
                event.preventDefault()
            }
            var $target = $(target).one(Event.SHOW, function(showEvent) {
                if (showEvent.isDefaultPrevented()) {
                    return
                }
                $target.one(Event.HIDDEN, function() {
                    if ($(_this10).is(":visible")) {
                        _this10.focus()
                    }
                })
            });
            Modal._jQueryInterface.call($(target), config, this)
        });
        $.fn[NAME] = Modal._jQueryInterface;
        $.fn[NAME].Constructor = Modal;
        $.fn[NAME].noConflict = function() {
            $.fn[NAME] = JQUERY_NO_CONFLICT;
            return Modal._jQueryInterface
        };
        return Modal
    }(_util2.default.jQuery);
    exports.default = Modal
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _enquire = __webpack_require__(31);
    var _enquire2 = _interopRequireDefault(_enquire);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }
    var layersNav = {
        init: function init() {
            this.cacheDom();
            this.bindEvents()
        },
        cacheDom: function cacheDom() {
            this.$nav = $(".lu-nav");
            this.$navigationDroDownLi = this.$nav.find(".lu-nav__item.has-dropdown")
        },
        bindEvents: function bindEvents() {
            var that = this;
            this.$navigationDroDownLi.on("click", this.checkDropDownStatus.bind(this));
            var isMobile = false;
            if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0, 4)) || window.ontouchstart !== undefined) {
                isMobile = true
            }
            _enquire2.default.register("screen and (min-width: 0) and (max-width: 751px)", {
                match: function match() {
                    $(".has-dropdown > a").on("click", function(event) {
                        event.preventDefault()
                    })
                },
                unmatch: function unmatch() {
                    $(".has-dropdown > a").on("click", function(event) {
                        if (isMobile == true || $(this).parents(".navbar--thin").length == 0) {
                            event.preventDefault()
                        }
                    })
                }
            });
            _enquire2.default.register("screen and (min-width: 752px)", {
                match: function match(event) {
                    $(".has-dropdown > a").on("click", function(event) {
                        if ($(this).parents(".navigation").length == 0 && (isMobile == true || $(this).parents(".navbar--thin").length == 0)) {
                            event.preventDefault()
                        }
                    })
                },
                unmatch: function unmatch() {
                    $(".has-dropdown > a").on("click", function(event) {
                        event.preventDefault()
                    })
                }
            });
            $(window).on("click", function(event) {
                $(".nav .has-dropdown").removeClass("is-open")
            }.bind(this))
        },
        checkDropDownStatus: function checkDropDownStatus(event) {
            var toggleBack = this.$nav.find('[data-toggle="back"]');
            var toggleBackI = this.$nav.find('[data-toggle="back"] i');
            if (toggleBack.is(event.target) || toggleBackI.is(event.target)) {} else {
                if ($(event.currentTarget).hasClass("is-open")) {
                    this.hideDropDown(event)
                } else {
                    this.showDropDown(event)
                }
            }
        },
        showDropDown: function showDropDown(event) {
            event.stopPropagation();
            var dropDownElement = $(event.currentTarget);
            var dropDownContainer = $(event.currentTarget).find(".has-dropdown");
            dropDownElement.closest(".lu-nav").find(".is-open").removeClass("is-open");
            dropDownElement.addClass("is-open")
        },
        hideDropDown: function hideDropDown(event) {
            var dropDownElement = $(event.currentTarget);
            var dropDownContainer = $(event.currentTarget).find(".has-dropdown");
            dropDownElement.removeClass("is-open")
        }
    };
    exports.default = layersNav
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        container: "[data-switcher]",
        item: "[data-switcher-item]",
        itemHighlight: "[data-switcher-highlight]"
    };
    var Default = {
        activeElement: 2,
        transition: "all 500ms cubic-bezier(.250, .250, .000, 1.015)"
    };
    var Switcher = function() {
        function Switcher(element, options) {
            _classCallCheck(this, Switcher);
            this.element = $(element);
            this.items = element.find(SELECTORS.item);
            this.itemHighlight = this.element.find(SELECTORS.itemHighlight);
            this.options = options;
            this.activeItemData = {};
            this.isInit = false;
            this.getConfig();
            this.setActiveItem(this.config.activeElement);
            this.bindEvents()
        }
        _createClass(Switcher, [{
            key: "getConfig",
            value: function getConfig() {
                var dataConfig = this.element.data();
                if (dataConfig.options) {
                    this.dataOptions = util.parseDataOptions(dataConfig.options)
                } else {
                    this.dataOptions = {}
                }
                this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options)
            }
        }, {
            key: "bindEvents",
            value: function bindEvents() {
                var _this = this;
                this.items.on("click", function(event) {
                    return _this.slideToItem(event.currentTarget)
                });
                $(window).on("resize", function(event) {
                    return _this.onResize(event)
                })
            }
        }, {
            key: "setActiveItem",
            value: function setActiveItem(itemIndex) {
                this.slideToItem(this.items[itemIndex])
            }
        }, {
            key: "getItemPosition",
            value: function getItemPosition(element) {
                this.activeItemData.element = $(element);
                this.activeItemData.width = $(this.activeItemData.element).outerWidth();
                this.activeItemData.position = $(this.activeItemData.element).position().left
            }
        }, {
            key: "slideToItem",
            value: function slideToItem(element) {
                if (this.activeItemData.element) {
                    this.activeItemData.element.removeClass("is-active")
                }
                this.getItemPosition(element);
                this.itemHighlight.css({
                    transform: "translateX(" + this.activeItemData.position + "px)",
                    width: this.activeItemData.width
                });
                if (this.isInit) {
                    this.itemHighlight.css({
                        transition: this.config.transition
                    })
                } else {
                    this.onInit();
                    this.isInit = true
                }
                this.onSlide()
            }
        }, {
            key: "onInit",
            value: function onInit() {
                if (typeof this.config.onInit === "function") {
                    this.config.onInit(this.element, this.activeItemData.element)
                }
            }
        }, {
            key: "onSlide",
            value: function onSlide() {
                if (typeof this.config.onSlide === "function") {
                    this.config.onSlide(this.element, this.activeItemData.element)
                }
                this.activeItemData.element.addClass("is-active")
            }
        }, {
            key: "onResize",
            value: function onResize() {
                if (typeof this.config.onSlide === "function") {
                    this.config.onResize(this.element, this.activeItemData.element)
                }
                this.activeItemData.element.trigger("click")
            }
        }]);
        return Switcher
    }();

    function initDataSelectors() {
        $(document).ready(function() {
            $(SELECTORS.container).each(function() {
                new Switcher($(this))
            })
        })
    }

    function initJqueryPlugin() {
        $.fn.luSwitcher = function(options) {
            return this.each(function() {
                var switcher = new Switcher($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = init
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var Tab = function() {
        var NAME = "lu-tab";
        var VERSION = "4.0.0-beta.2";
        var DATA_KEY = "bs.tab";
        var EVENT_KEY = "." + DATA_KEY;
        var DATA_API_KEY = ".data-api";
        var JQUERY_NO_CONFLICT = $.fn[NAME];
        var TRANSITION_DURATION = 150;
        var Event = {
            HIDE: "hide" + EVENT_KEY,
            HIDDEN: "hidden" + EVENT_KEY,
            SHOW: "show" + EVENT_KEY,
            SHOWN: "shown" + EVENT_KEY,
            CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
        };
        var ClassName = {
            DROPDOWN_MENU: "dropdown-menu",
            ACTIVE: "is-active",
            DISABLED: "disabled",
            FADE: "fade",
            SHOW: "show"
        };
        var Selector = {
            DROPDOWN: ".dropdown",
            NAV_LIST_GROUP: ".lu-nav, .lu-list-group",
            ACTIVE: ".is-active",
            ACTIVE_UL: "> .is-active",
            DATA_TOGGLE: '[data-toggle="lu-tab"], [data-toggle="pill"], [data-toggle="list"]',
            DROPDOWN_TOGGLE: ".dropdown-toggle",
            DROPDOWN_ACTIVE_CHILD: "> .dropdown-menu .is-active"
        };
        var Tab = function() {
            function Tab(element) {
                _classCallCheck(this, Tab);
                this._element = element
            }
            _createClass(Tab, [{
                key: "show",
                value: function show() {
                    var _this = this;
                    if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName.ACTIVE) || $(this._element).hasClass(ClassName.DISABLED)) {
                        return
                    }
                    var target = void 0;
                    var previous = void 0;
                    var listElement = $(this._element).closest(Selector.NAV_LIST_GROUP)[0];
                    var selector = _util2.default.getSelectorFromElement(this._element);
                    if (listElement) {
                        var itemSelector = listElement.nodeName === "UL" ? Selector.ACTIVE_UL : Selector.ACTIVE;
                        previous = $.makeArray($(listElement).find(itemSelector));
                        previous = previous[previous.length - 1]
                    }
                    var hideEvent = $.Event(Event.HIDE, {
                        relatedTarget: this._element
                    });
                    var showEvent = $.Event(Event.SHOW, {
                        relatedTarget: previous
                    });
                    if (previous) {
                        $(previous).trigger(hideEvent)
                    }
                    $(this._element).trigger(showEvent);
                    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {
                        return
                    }
                    if (selector) {
                        target = $(selector)[0]
                    }
                    this._activate(this._element, listElement);
                    var complete = function complete() {
                        var hiddenEvent = $.Event(Event.HIDDEN, {
                            relatedTarget: _this._element
                        });
                        var shownEvent = $.Event(Event.SHOWN, {
                            relatedTarget: previous
                        });
                        $(previous).trigger(hiddenEvent);
                        $(_this._element).trigger(shownEvent)
                    };
                    if (target) {
                        this._activate(target, target.parentNode, complete)
                    } else {
                        complete()
                    }
                }
            }, {
                key: "dispose",
                value: function dispose() {
                    $.removeData(this._element, DATA_KEY);
                    this._element = null
                }
            }, {
                key: "_activate",
                value: function _activate(element, container, callback) {
                    var _this2 = this;
                    var activeElements = void 0;
                    if (container.nodeName === "UL") {
                        activeElements = $(container).find(Selector.ACTIVE_UL)
                    } else {
                        activeElements = $(container).children(Selector.ACTIVE)
                    }
                    var active = activeElements[0];
                    var isTransitioning = callback && _util2.default.supportsTransitionEnd() && active && $(active).hasClass(ClassName.FADE);
                    var complete = function complete() {
                        return _this2._transitionComplete(element, active, isTransitioning, callback)
                    };
                    if (active && isTransitioning) {
                        $(active).one(_util2.default.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION)
                    } else {
                        complete()
                    }
                    if (active) {
                        $(active).removeClass(ClassName.SHOW)
                    }
                }
            }, {
                key: "_transitionComplete",
                value: function _transitionComplete(element, active, isTransitioning, callback) {
                    if (active) {
                        $(active).removeClass(ClassName.ACTIVE);
                        var dropdownChild = $(active.parentNode).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];
                        if (dropdownChild) {
                            $(dropdownChild).removeClass(ClassName.ACTIVE)
                        }
                        if (active.getAttribute("role") === "tab") {
                            active.setAttribute("aria-selected", false)
                        }
                    }
                    if ($(element).is("a")) {
                        $(element).parent().addClass(ClassName.ACTIVE)
                    } else {
                        $(element).addClass(ClassName.ACTIVE)
                    }
                    if (element.getAttribute("role") === "tab") {
                        element.setAttribute("aria-selected", true)
                    }
                    if (isTransitioning) {
                        _util2.default.reflow(element);
                        $(element).addClass(ClassName.SHOW)
                    } else {
                        $(element).removeClass(ClassName.FADE)
                    }
                    if (element.parentNode && $(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {
                        var dropdownElement = $(element).closest(Selector.DROPDOWN)[0];
                        if (dropdownElement) {
                            $(dropdownElement).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE)
                        }
                        element.setAttribute("aria-expanded", true)
                    }
                    if (callback) {
                        callback()
                    }
                }
            }], [{
                key: "_jQueryInterface",
                value: function _jQueryInterface(config) {
                    return this.each(function() {
                        var $this = $(this);
                        var data = $this.data(DATA_KEY);
                        if (!data) {
                            data = new Tab(this);
                            $this.data(DATA_KEY, data)
                        }
                        if (typeof config === "string") {
                            if (typeof data[config] === "undefined") {
                                throw new Error('No method named "' + config + '"')
                            }
                            data[config]()
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function get() {
                    return VERSION
                }
            }]);
            return Tab
        }();
        $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function(event) {
            event.preventDefault();
            Tab._jQueryInterface.call($(this), "show")
        });
        $.fn[NAME] = Tab._jQueryInterface;
        $.fn[NAME].Constructor = Tab;
        $.fn[NAME].noConflict = function() {
            $.fn[NAME] = JQUERY_NO_CONFLICT;
            return Tab._jQueryInterface
        };
        return Tab
    }(_util2.default.jQuery);
    exports.default = Tab
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _Swiper = __webpack_require__(4);
    var _Swiper2 = _interopRequireDefault(_Swiper);
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        button: '[data-toggle="offCanvas"]',
        overlayers: ".overlayer",
        dismiss: '[data-dismiss="offCanvas"]'
    };
    var Default = {
        position: "right",
        activeClass: "is-open",
        mode: "normal",
        tranition: 400,
        overlayer: false,
        bodyClass: "off-canvas-is-active"
    };
    var OffCanvas = function() {
        function OffCanvas(element, options) {
            _classCallCheck(this, OffCanvas);
            this.element = element;
            this.options = options;
            this.getConfig();
            this.bindEvents()
        }
        _createClass(OffCanvas, [{
            key: "getConfig",
            value: function getConfig() {
                var dataConfig = this.element.data();
                if (dataConfig.options) {
                    this.dataOptions = _util2.default.parseDataOptions(dataConfig.options)
                } else {
                    this.dataOptions = {}
                }
                this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options);
                this.target = $(this.config.target);
                this.dismiss = this.target.find(SELECTORS.dismiss)
            }
        }, {
            key: "bindEvents",
            value: function bindEvents() {
                var _this = this;
                this.element.on("click", function(event) {
                    return _this.checkState(event)
                });
                this.dismiss.on("click", function() {
                    return _this.close()
                });
                $(document).on("click", function(event) {
                    return _this.addEventClickOutside(event)
                })
            }
        }, {
            key: "checkState",
            value: function checkState() {
                if (this.target.hasClass(this.config.activeClass)) {
                    this.close()
                } else {
                    this.open()
                }
            }
        }, {
            key: "open",
            value: function open(evnet) {
                $(this.target).addClass(this.config.activeClass);
                $("body").addClass(this.config.bodyClass)
            }
        }, {
            key: "close",
            value: function close(event) {
                $(this.target).removeClass(this.config.activeClass);
                $("body").removeClass(this.config.bodyClass)
            }
        }, {
            key: "addEventClickOutside",
            value: function addEventClickOutside(event) {
                if (!$(event.target).closest(this.target).length && !$(event.target).closest(this.element).length) {
                    if ($(this.target).is(":visible")) {
                        this.close()
                    }
                }
            }
        }]);
        return OffCanvas
    }();

    function initDataSelectors() {
        $(SELECTORS.button).each(function() {
            new OffCanvas($(this))
        })
    }

    function initJqueryPlugin() {
        $.fn.luOffCanvas = function(options) {
            return this.each(function() {
                new OffCanvas($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = init
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        link: "[data-scroll-to]"
    };
    var Default = {
        topOffset: 10,
        animation: "normal",
        speed: 400,
        constantSpeed: false
    };
    var ScrollTo = function() {
        function ScrollTo(element, options) {
            _classCallCheck(this, ScrollTo);
            this.element = element;
            this.options = options;
            this.hash = $(element).attr("href");
            this.target = $(this.hash);
            if (!this.target.length) {
                return
            }
            this.getConfig();
            this.bindEvents();
            this.targetVisibility()
        }
        _createClass(ScrollTo, [{
            key: "bindEvents",
            value: function bindEvents() {
                var _this = this;
                $(this.element).on("click", function(event) {
                    return _this.startScroll(event)
                });
                $(window).on("scroll", function(event) {
                    return _this.targetVisibility(event)
                })
            }
        }, {
            key: "getConfig",
            value: function getConfig() {
                var dataConfig = this.element.data();
                if (dataConfig.options) {
                    this.dataOptions = _util2.default.parseDataOptions(dataConfig.options)
                } else {
                    this.dataOptions = {}
                }
                this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options)
            }
        }, {
            key: "startScroll",
            value: function startScroll(event) {
                this.targetPosition = this.target.offset().top + this.config.topOffset;
                console.log(this.getAnimationSpeed());
                $("body, html").stop().animate({
                    scrollTop: this.targetPosition
                }, this.config.speed)
            }
        }, {
            key: "isOnScreen",
            value: function isOnScreen() {
                var win = $(window);
                var viewport = {
                    top: win.scrollTop(),
                    left: win.scrollLeft()
                };
                viewport.right = viewport.left + win.width();
                viewport.bottom = viewport.top + win.height();
                var bounds = this.target.offset();
                bounds.right = bounds.left + this.target.outerWidth();
                bounds.bottom = bounds.top + this.target.outerHeight();
                return !(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom)
            }
        }, {
            key: "targetVisibility",
            value: function targetVisibility() {
                if (this.isOnScreen()) {
                    this.onScreen()
                } else {
                    this.outScreen()
                }
            }
        }, {
            key: "onScreen",
            value: function onScreen() {
                if (typeof this.config.onScreen === "function") {
                    this.config.onScreen(this.element, this.target)
                }
            }
        }, {
            key: "outScreen",
            value: function outScreen() {
                if (typeof this.config.outScreen === "function") {
                    this.config.outScreen(this.element, this.target)
                }
            }
        }, {
            key: "getOffset",
            value: function getOffset() {
                return Math.abs(this.target.offset().top - $(window).scrollTop())
            }
        }, {
            key: "getAnimationSpeed",
            value: function getAnimationSpeed() {
                return this.getOffset() / this.config.speed * this.config.speed
            }
        }]);
        return ScrollTo
    }();

    function initDataSelectors() {
        $(SELECTORS.link).each(function() {
            new ScrollTo($(this))
        })
    }

    function initJqueryPlugin() {
        $.fn.luScrollTo = function(options) {
            return this.each(function() {
                new ScrollTo($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = init
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
        return typeof obj
    } : function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _jquery = __webpack_require__(1);
    var _jquery2 = _interopRequireDefault(_jquery);
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var ScrollSpy = function() {
        var NAME = "scrollspy";
        var VERSION = "4.0.0-beta";
        var DATA_KEY = "bs.scrollspy";
        var EVENT_KEY = "." + DATA_KEY;
        var DATA_API_KEY = ".data-api";
        var JQUERY_NO_CONFLICT = _jquery2.default.fn[NAME];
        var Default = {
            offset: 10,
            method: "auto",
            target: ""
        };
        var DefaultType = {
            offset: "number",
            method: "string",
            target: "(string|element)"
        };
        var Event = {
            ACTIVATE: "activate" + EVENT_KEY,
            SCROLL: "scroll" + EVENT_KEY,
            LOAD_DATA_API: "load" + EVENT_KEY + DATA_API_KEY
        };
        var ClassName = {
            DROPDOWN_ITEM: "dropdown-item",
            DROPDOWN_MENU: "dropdown-menu",
            ACTIVE: "is-active"
        };
        var Selector = {
            DATA_SPY: '[data-spy="scroll"]',
            ACTIVE: ".is-active",
            NAV_LIST_GROUP: ".nav, .list-group",
            NAV_LINKS: ".nav__link",
            NAV_ITEMS: ".nav__item",
            LIST_ITEMS: ".list-group-item",
            DROPDOWN: ".dropdown",
            DROPDOWN_ITEMS: ".dropdown-item",
            DROPDOWN_TOGGLE: ".dropdown-toggle"
        };
        var OffsetMethod = {
            OFFSET: "offset",
            POSITION: "position"
        };
        var ScrollSpy = function() {
            function ScrollSpy(element, config) {
                var _this = this;
                _classCallCheck(this, ScrollSpy);
                this._element = element;
                this._scrollElement = element.tagName === "BODY" ? window : element;
                this._config = this._getConfig(config);
                this._selector = this._config.target + " " + Selector.NAV_LINKS + "," + (this._config.target + " " + Selector.LIST_ITEMS + ",") + (this._config.target + " " + Selector.DROPDOWN_ITEMS);
                this._offsets = [];
                this._targets = [];
                this._activeTarget = null;
                this._scrollHeight = 0;
                (0, _jquery2.default)(this._scrollElement).on(Event.SCROLL, function(event) {
                    return _this._process(event)
                });
                this.refresh();
                this._process()
            }
            _createClass(ScrollSpy, [{
                key: "refresh",
                value: function refresh() {
                    var _this2 = this;
                    var autoMethod = this._scrollElement !== this._scrollElement.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;
                    var offsetMethod = this._config.method === "auto" ? autoMethod : this._config.method;
                    var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;
                    this._offsets = [];
                    this._targets = [];
                    this._scrollHeight = this._getScrollHeight();
                    var targets = _jquery2.default.makeArray((0, _jquery2.default)(this._selector));
                    targets.map(function(element) {
                        var target = void 0;
                        var targetSelector = _util2.default.getSelectorFromElement(element);
                        if (targetSelector) {
                            target = (0, _jquery2.default)(targetSelector)[0]
                        }
                        if (target) {
                            var targetBCR = target.getBoundingClientRect();
                            if (targetBCR.width || targetBCR.height) {
                                return [(0, _jquery2.default)(target)[offsetMethod]().top + offsetBase, targetSelector]
                            }
                        }
                        return null
                    }).filter(function(item) {
                        return item
                    }).sort(function(a, b) {
                        return a[0] - b[0]
                    }).forEach(function(item) {
                        _this2._offsets.push(item[0]);
                        _this2._targets.push(item[1])
                    })
                }
            }, {
                key: "dispose",
                value: function dispose() {
                    _jquery2.default.removeData(this._element, DATA_KEY);
                    (0, _jquery2.default)(this._scrollElement).off(EVENT_KEY);
                    this._element = null;
                    this._scrollElement = null;
                    this._config = null;
                    this._selector = null;
                    this._offsets = null;
                    this._targets = null;
                    this._activeTarget = null;
                    this._scrollHeight = null
                }
            }, {
                key: "_getConfig",
                value: function _getConfig(config) {
                    config = _jquery2.default.extend({}, Default, config);
                    if (typeof config.target !== "string") {
                        var id = (0, _jquery2.default)(config.target).attr("id");
                        if (!id) {
                            id = _util2.default.getUID(NAME);
                            (0, _jquery2.default)(config.target).attr("id", id)
                        }
                        config.target = "#" + id
                    }
                    _util2.default.typeCheckConfig(NAME, config, DefaultType);
                    return config
                }
            }, {
                key: "_getScrollTop",
                value: function _getScrollTop() {
                    return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop
                }
            }, {
                key: "_getScrollHeight",
                value: function _getScrollHeight() {
                    return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight)
                }
            }, {
                key: "_getOffsetHeight",
                value: function _getOffsetHeight() {
                    return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height
                }
            }, {
                key: "_process",
                value: function _process() {
                    var scrollTop = this._getScrollTop() + this._config.offset;
                    var scrollHeight = this._getScrollHeight();
                    var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();
                    if (this._scrollHeight !== scrollHeight) {
                        this.refresh()
                    }
                    if (scrollTop >= maxScroll) {
                        var target = this._targets[this._targets.length - 1];
                        if (this._activeTarget !== target) {
                            this._activate(target)
                        }
                        return
                    }
                    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {
                        this._activeTarget = null;
                        this._clear();
                        return
                    }
                    for (var i = this._offsets.length; i--;) {
                        var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === "undefined" || scrollTop < this._offsets[i + 1]);
                        if (isActiveTarget) {
                            this._activate(this._targets[i])
                        }
                    }
                }
            }, {
                key: "_activate",
                value: function _activate(target) {
                    this._activeTarget = target;
                    this._clear();
                    var queries = this._selector.split(",");
                    queries = queries.map(function(selector) {
                        return selector + '[data-target="' + target + '"],' + (selector + '[href="' + target + '"]')
                    });
                    var $link = (0, _jquery2.default)(queries.join(","));
                    if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {
                        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);
                        $link.addClass(ClassName.ACTIVE)
                    } else {
                        $link.addClass(ClassName.ACTIVE);
                        $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_LINKS + ", " + Selector.LIST_ITEMS).addClass(ClassName.ACTIVE);
                        $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).addClass(ClassName.ACTIVE)
                    }(0, _jquery2.default)(this._scrollElement).trigger(Event.ACTIVATE, {
                        relatedTarget: target
                    })
                }
            }, {
                key: "_clear",
                value: function _clear() {
                    (0, _jquery2.default)(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE)
                }
            }], [{
                key: "_jQueryInterface",
                value: function _jQueryInterface(config) {
                    return this.each(function() {
                        var data = (0, _jquery2.default)(this).data(DATA_KEY);
                        var _config = (typeof config === "undefined" ? "undefined" : _typeof(config)) === "object" && config;
                        if (!data) {
                            data = new ScrollSpy(this, _config);
                            (0, _jquery2.default)(this).data(DATA_KEY, data)
                        }
                        if (typeof config === "string") {
                            if (typeof data[config] === "undefined") {
                                throw new Error('No method named "' + config + '"')
                            }
                            data[config]()
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function get() {
                    return VERSION
                }
            }, {
                key: "Default",
                get: function get() {
                    return Default
                }
            }]);
            return ScrollSpy
        }();
        (0, _jquery2.default)(window).on(Event.LOAD_DATA_API, function() {
            var scrollSpys = _jquery2.default.makeArray((0, _jquery2.default)(Selector.DATA_SPY));
            for (var i = scrollSpys.length; i--;) {
                var $spy = (0, _jquery2.default)(scrollSpys[i]);
                ScrollSpy._jQueryInterface.call($spy, $spy.data())
            }
        });
        _jquery2.default.fn[NAME] = ScrollSpy._jQueryInterface;
        _jquery2.default.fn[NAME].Constructor = ScrollSpy;
        _jquery2.default.fn[NAME].noConflict = function() {
            _jquery2.default.fn[NAME] = JQUERY_NO_CONFLICT;
            return ScrollSpy._jQueryInterface
        };
        return ScrollSpy
    }(_jquery2.default);
    exports.default = ScrollSpy
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _stickySidebar = __webpack_require__(33);
    var _stickySidebar2 = _interopRequireDefault(_stickySidebar);
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        stickyElement: "[data-sticky]"
    };
    var Default = {
        topOffset: 0,
        bottomOffset: 0
    };
    var Sticky = function() {
        function Sticky(element, options) {
            _classCallCheck(this, Sticky);
            this.element = element;
            this.options = options;
            this.getConfig();
            this.initPlugn();
            this.bindEvents()
        }
        _createClass(Sticky, [{
            key: "getConfig",
            value: function getConfig() {
                var dataConfig = this.element.data();
                if (dataConfig.options) {
                    this.dataOptions = _util2.default.parseDataOptions(dataConfig.options)
                } else {
                    this.dataOptions = {}
                }
                this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options)
            }
        }, {
            key: "initPlugn",
            value: function initPlugn() {
                this.stickyInstance = new _stickySidebar2.default(this.element[0], {
                    topSpacing: this.config.topOffset,
                    bottomSpacing: this.config.bottomOffset,
                    containerSelector: this.config.container,
                    resizeSensor: true,
                    stickyClass: "is-sticky"
                });
                if (typeof this.config.onOpen === "function") {
                    this.config.onInit(this.stickyInstance)
                }
            }
        }, {
            key: "bindEvents",
            value: function bindEvents() {}
        }]);
        return Sticky
    }();

    function initDataSelectors() {
        $(SELECTORS.stickyElement).each(function() {
            new Sticky($(this))
        })
    }

    function initJqueryPlugin() {
        $.fn.luSticky = function(options) {
            return this.each(function() {
                new Sticky($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = init
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _createClass = function() {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor)
            }
        }
        return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor
        }
    }();
    var _util = __webpack_require__(0);
    var _util2 = _interopRequireDefault(_util);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var SELECTORS = {
        toggler: "[data-toggler]",
        togglerOptions: "[data-toggler-options]"
    };
    var Default = {
        selectors: "",
        container: "body"
    };
    var Toggler = function() {
        function Toggler(element, options) {
            _classCallCheck(this, Toggler);
            this.element = element;
            this.targets = [];
            this.getConfig();
            this.targetsNames = this.config.selectors.split(",");
            this.setTargetElements();
            this.bindEvents()
        }
        _createClass(Toggler, [{
            key: "bindEvents",
            value: function bindEvents() {
                var _this = this;
                this.config = this.element.on("click", function() {
                    return _this.toggle()
                })
            }
        }, {
            key: "getConfig",
            value: function getConfig() {
                var dataToggler = this.getTogglerOptions(this.element.data("toggler"));
                this.config = $.extend({}, Default, dataToggler)
            }
        }, {
            key: "getTogglerOptions",
            value: function getTogglerOptions(options) {
                if (options) {
                    return _util2.default.parseDataOptions(options)
                } else {
                    return []
                }
            }
        }, {
            key: "setTargetElements",
            value: function setTargetElements() {
                this.container = this.element.closest(this.config.container);
                if (this.targetsNames.length > 1) {
                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;
                    try {
                        for (var _iterator = this.targetsNames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var target = _step.value;
                            var element = this.container.find(target);
                            this.targets.push({
                                element: element,
                                options: this.getTogglerOptions(element.data("toggler-options"))
                            })
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return) {
                                _iterator.return()
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError
                            }
                        }
                    }
                }
                if (this.container) {
                    this.targets.push({
                        element: this.container,
                        options: this.getTogglerOptions(this.container.data("toggler-options"))
                    })
                }
            }
        }, {
            key: "toggle",
            value: function toggle() {
                for (var targetName in this.targets) {
                    var _targets$targetName = this.targets[targetName],
                        element = _targets$targetName.element,
                        options = _targets$targetName.options;
                    if (options.addClass) element.addClass(options.addClass);
                    if (options.removeClass) element.removeClass(options.removeClass);
                    if (options.toggleClass) element.toggleClass(options.toggleClass)
                }
            }
        }]);
        return Toggler
    }();

    function initDataSelectors() {
        $(SELECTORS.toggler).each(function() {
            new Toggler($(this))
        })
    }

    function initJqueryPlugin() {
        $.fn.luToggler = function(options) {
            return this.each(function() {
                new Toggler($(this), options)
            })
        }
    }
    var init = {
        initDataSelectors: initDataSelectors,
        initJqueryPlugin: initJqueryPlugin
    };
    exports.default = init
}, , , , function(module, exports, __webpack_require__) {
    "use strict";
    var _navs = __webpack_require__(17);
    var _navs2 = _interopRequireDefault(_navs);
    var _switcher = __webpack_require__(18);
    var _switcher2 = _interopRequireDefault(_switcher);
    __webpack_require__(19);
    __webpack_require__(11);
    var _selects = __webpack_require__(13);
    var _selects2 = _interopRequireDefault(_selects);
    var _selectInput = __webpack_require__(3);
    var _selectInput2 = _interopRequireDefault(_selectInput);
    var _CheckAll = __webpack_require__(10);
    var _CheckAll2 = _interopRequireDefault(_CheckAll);
    var _rangeSlider = __webpack_require__(12);
    var _rangeSlider2 = _interopRequireDefault(_rangeSlider);
    var _dropdown = __webpack_require__(8);
    var _dropdown2 = _interopRequireDefault(_dropdown);
    var _tooltips = __webpack_require__(9);
    var _tooltips2 = _interopRequireDefault(_tooltips);
    __webpack_require__(16);
    var _alert = __webpack_require__(15);
    var _alert2 = _interopRequireDefault(_alert);
    var _contentSlider = __webpack_require__(7);
    var _contentSlider2 = _interopRequireDefault(_contentSlider);
    var _scrollTo = __webpack_require__(21);
    var _scrollTo2 = _interopRequireDefault(_scrollTo);
    var _offCanvas = __webpack_require__(20);
    var _offCanvas2 = _interopRequireDefault(_offCanvas);
    var _inlineEditor = __webpack_require__(14);
    var _inlineEditor2 = _interopRequireDefault(_inlineEditor);
    __webpack_require__(6);
    var _sticky = __webpack_require__(23);
    var _sticky2 = _interopRequireDefault(_sticky);
    var _toggler = __webpack_require__(24);
    var _toggler2 = _interopRequireDefault(_toggler);
    __webpack_require__(22);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        }
    }
    $ = window.jQuery;
    _selectInput2.default.init();
    _rangeSlider2.default.init();
    window.layers = {
        alert: _alert2.default
    };
    $(document).ready(function() {
        _navs2.default.init();
        _alert2.default.init();
        _dropdown2.default.initDataSelectors();
        _tooltips2.default.initDataSelectors();
        _inlineEditor2.default.initDataSelectors();
        _contentSlider2.default.initDataSelectors();
        _selects2.default.initDataSelectors();
        _CheckAll2.default.initDataSelectors();
        _sticky2.default.initDataSelectors();
        _scrollTo2.default.initDataSelectors();
        _offCanvas2.default.initDataSelectors();
        _toggler2.default.initDataSelectors();
        _switcher2.default.initDataSelectors()
    });
    _dropdown2.default.initJqueryPlugin();
    _tooltips2.default.initJqueryPlugin();
    _inlineEditor2.default.initJqueryPlugin();
    _contentSlider2.default.initJqueryPlugin();
    _switcher2.default.initJqueryPlugin();
    _selects2.default.initJqueryPlugin();
    _CheckAll2.default.initJqueryPlugin();
    _sticky2.default.initJqueryPlugin();
    _scrollTo2.default.initJqueryPlugin();
    _offCanvas2.default.initJqueryPlugin();
    _toggler2.default.initJqueryPlugin()
}, function(module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_LOCAL_MODULE_0__, __WEBPACK_LOCAL_MODULE_0__factory, __WEBPACK_LOCAL_MODULE_0__module;
    var __WEBPACK_LOCAL_MODULE_1__, __WEBPACK_LOCAL_MODULE_1__factory, __WEBPACK_LOCAL_MODULE_1__module;
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
        return typeof obj
    } : function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function(root, factory) {
        if (true) {
            !(__WEBPACK_LOCAL_MODULE_0__factory = factory, __WEBPACK_LOCAL_MODULE_0__module = {
                id: "sifter",
                exports: {},
                loaded: false
            }, __WEBPACK_LOCAL_MODULE_0__ = typeof __WEBPACK_LOCAL_MODULE_0__factory === "function" ? __WEBPACK_LOCAL_MODULE_0__factory.call(__WEBPACK_LOCAL_MODULE_0__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_0__module.exports, __WEBPACK_LOCAL_MODULE_0__module) : __WEBPACK_LOCAL_MODULE_0__factory, __WEBPACK_LOCAL_MODULE_0__module.loaded = true, __WEBPACK_LOCAL_MODULE_0__ === undefined && (__WEBPACK_LOCAL_MODULE_0__ = __WEBPACK_LOCAL_MODULE_0__module.exports))
        } else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === "object") {
            module.exports = factory()
        } else {
            root.Sifter = factory()
        }
    })(undefined, function() {
        var Sifter = function Sifter(items, settings) {
            this.items = items;
            this.settings = settings || {
                diacritics: true
            }
        };
        Sifter.prototype.tokenize = function(query) {
            query = trim(String(query || "").toLowerCase());
            if (!query || !query.length) return [];
            var i, n, regex, letter;
            var tokens = [];
            var words = query.split(/ +/);
            for (i = 0, n = words.length; i < n; i++) {
                regex = escape_regex(words[i]);
                if (this.settings.diacritics) {
                    for (letter in DIACRITICS) {
                        if (DIACRITICS.hasOwnProperty(letter)) {
                            regex = regex.replace(new RegExp(letter, "g"), DIACRITICS[letter])
                        }
                    }
                }
                tokens.push({
                    string: words[i],
                    regex: new RegExp(regex, "i")
                })
            }
            return tokens
        };
        Sifter.prototype.iterator = function(object, callback) {
            var iterator;
            if (is_array(object)) {
                iterator = Array.prototype.forEach || function(callback) {
                    for (var i = 0, n = this.length; i < n; i++) {
                        callback(this[i], i, this)
                    }
                }
            } else {
                iterator = function iterator(callback) {
                    for (var key in this) {
                        if (this.hasOwnProperty(key)) {
                            callback(this[key], key, this)
                        }
                    }
                }
            }
            iterator.apply(object, [callback])
        };
        Sifter.prototype.getScoreFunction = function(search, options) {
            var self, fields, tokens, token_count, nesting;
            self = this;
            search = self.prepareSearch(search, options);
            tokens = search.tokens;
            fields = search.options.fields;
            token_count = tokens.length;
            nesting = search.options.nesting;
            var scoreValue = function scoreValue(value, token) {
                var score, pos;
                if (!value) return 0;
                value = String(value || "");
                pos = value.search(token.regex);
                if (pos === -1) return 0;
                score = token.string.length / value.length;
                if (pos === 0) score += .5;
                return score
            };
            var scoreObject = function() {
                var field_count = fields.length;
                if (!field_count) {
                    return function() {
                        return 0
                    }
                }
                if (field_count === 1) {
                    return function(token, data) {
                        return scoreValue(getattr(data, fields[0], nesting), token)
                    }
                }
                return function(token, data) {
                    for (var i = 0, sum = 0; i < field_count; i++) {
                        sum += scoreValue(getattr(data, fields[i], nesting), token)
                    }
                    return sum / field_count
                }
            }();
            if (!token_count) {
                return function() {
                    return 0
                }
            }
            if (token_count === 1) {
                return function(data) {
                    return scoreObject(tokens[0], data)
                }
            }
            if (search.options.conjunction === "and") {
                return function(data) {
                    var score;
                    for (var i = 0, sum = 0; i < token_count; i++) {
                        score = scoreObject(tokens[i], data);
                        if (score <= 0) return 0;
                        sum += score
                    }
                    return sum / token_count
                }
            } else {
                return function(data) {
                    for (var i = 0, sum = 0; i < token_count; i++) {
                        sum += scoreObject(tokens[i], data)
                    }
                    return sum / token_count
                }
            }
        };
        Sifter.prototype.getSortFunction = function(search, options) {
            var i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;
            self = this;
            search = self.prepareSearch(search, options);
            sort = !search.query && options.sort_empty || options.sort;
            get_field = function get_field(name, result) {
                if (name === "$score") return result.score;
                return getattr(self.items[result.id], name, options.nesting)
            };
            fields = [];
            if (sort) {
                for (i = 0, n = sort.length; i < n; i++) {
                    if (search.query || sort[i].field !== "$score") {
                        fields.push(sort[i])
                    }
                }
            }
            if (search.query) {
                implicit_score = true;
                for (i = 0, n = fields.length; i < n; i++) {
                    if (fields[i].field === "$score") {
                        implicit_score = false;
                        break
                    }
                }
                if (implicit_score) {
                    fields.unshift({
                        field: "$score",
                        direction: "desc"
                    })
                }
            } else {
                for (i = 0, n = fields.length; i < n; i++) {
                    if (fields[i].field === "$score") {
                        fields.splice(i, 1);
                        break
                    }
                }
            }
            multipliers = [];
            for (i = 0, n = fields.length; i < n; i++) {
                multipliers.push(fields[i].direction === "desc" ? -1 : 1)
            }
            fields_count = fields.length;
            if (!fields_count) {
                return null
            } else if (fields_count === 1) {
                field = fields[0].field;
                multiplier = multipliers[0];
                return function(a, b) {
                    return multiplier * cmp(get_field(field, a), get_field(field, b))
                }
            } else {
                return function(a, b) {
                    var i, result, a_value, b_value, field;
                    for (i = 0; i < fields_count; i++) {
                        field = fields[i].field;
                        result = multipliers[i] * cmp(get_field(field, a), get_field(field, b));
                        if (result) return result
                    }
                    return 0
                }
            }
        };
        Sifter.prototype.prepareSearch = function(query, options) {
            if ((typeof query === "undefined" ? "undefined" : _typeof(query)) === "object") return query;
            options = extend({}, options);
            var option_fields = options.fields;
            var option_sort = options.sort;
            var option_sort_empty = options.sort_empty;
            if (option_fields && !is_array(option_fields)) options.fields = [option_fields];
            if (option_sort && !is_array(option_sort)) options.sort = [option_sort];
            if (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];
            return {
                options: options,
                query: String(query || "").toLowerCase(),
                tokens: this.tokenize(query),
                total: 0,
                items: []
            }
        };
        Sifter.prototype.search = function(query, options) {
            var self = this,
                value, score, search, calculateScore;
            var fn_sort;
            var fn_score;
            search = this.prepareSearch(query, options);
            options = search.options;
            query = search.query;
            fn_score = options.score || self.getScoreFunction(search);
            if (query.length) {
                self.iterator(self.items, function(item, id) {
                    score = fn_score(item);
                    if (options.filter === false || score > 0) {
                        search.items.push({
                            score: score,
                            id: id
                        })
                    }
                })
            } else {
                self.iterator(self.items, function(item, id) {
                    search.items.push({
                        score: 1,
                        id: id
                    })
                })
            }
            fn_sort = self.getSortFunction(search, options);
            if (fn_sort) search.items.sort(fn_sort);
            search.total = search.items.length;
            if (typeof options.limit === "number") {
                search.items = search.items.slice(0, options.limit)
            }
            return search
        };
        var cmp = function cmp(a, b) {
            if (typeof a === "number" && typeof b === "number") {
                return a > b ? 1 : a < b ? -1 : 0
            }
            a = asciifold(String(a || ""));
            b = asciifold(String(b || ""));
            if (a > b) return 1;
            if (b > a) return -1;
            return 0
        };
        var extend = function extend(a, b) {
            var i, n, k, object;
            for (i = 1, n = arguments.length; i < n; i++) {
                object = arguments[i];
                if (!object) continue;
                for (k in object) {
                    if (object.hasOwnProperty(k)) {
                        a[k] = object[k]
                    }
                }
            }
            return a
        };
        var getattr = function getattr(obj, name, nesting) {
            if (!obj || !name) return;
            if (!nesting) return obj[name];
            var names = name.split(".");
            while (names.length && (obj = obj[names.shift()])) {}
            return obj
        };
        var trim = function trim(str) {
            return (str + "").replace(/^\s+|\s+$|/g, "")
        };
        var escape_regex = function escape_regex(str) {
            return (str + "").replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1")
        };
        var is_array = Array.isArray || typeof $ !== "undefined" && $.isArray || function(object) {
            return Object.prototype.toString.call(object) === "[object Array]"
        };
        var DIACRITICS = {
            a: "[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]",
            b: "[b␢βΒB฿𐌁ᛒ]",
            c: "[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]",
            d: "[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]",
            e: "[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]",
            f: "[fƑƒḞḟ]",
            g: "[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]",
            h: "[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]",
            i: "[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]",
            j: "[jȷĴĵɈɉʝɟʲ]",
            k: "[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]",
            l: "[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]",
            n: "[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]",
            o: "[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]",
            p: "[pṔṕṖṗⱣᵽƤƥᵱ]",
            q: "[qꝖꝗʠɊɋꝘꝙq̃]",
            r: "[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]",
            s: "[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]",
            t: "[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]",
            u: "[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]",
            v: "[vṼṽṾṿƲʋꝞꝟⱱʋ]",
            w: "[wẂẃẀẁŴŵẄẅẆẇẈẉ]",
            x: "[xẌẍẊẋχ]",
            y: "[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]",
            z: "[zŹźẐẑŽžŻżẒẓẔẕƵƶ]"
        };
        var asciifold = function() {
            var i, n, k, chunk;
            var foreignletters = "";
            var lookup = {};
            for (k in DIACRITICS) {
                if (DIACRITICS.hasOwnProperty(k)) {
                    chunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);
                    foreignletters += chunk;
                    for (i = 0, n = chunk.length; i < n; i++) {
                        lookup[chunk.charAt(i)] = k
                    }
                }
            }
            var regexp = new RegExp("[" + foreignletters + "]", "g");
            return function(str) {
                return str.replace(regexp, function(foreignletter) {
                    return lookup[foreignletter]
                }).toLowerCase()
            }
        }();
        return Sifter
    });
    (function(root, factory) {
        if (true) {
            !(__WEBPACK_LOCAL_MODULE_1__factory = factory, __WEBPACK_LOCAL_MODULE_1__module = {
                id: "microplugin",
                exports: {},
                loaded: false
            }, __WEBPACK_LOCAL_MODULE_1__ = typeof __WEBPACK_LOCAL_MODULE_1__factory === "function" ? __WEBPACK_LOCAL_MODULE_1__factory.call(__WEBPACK_LOCAL_MODULE_1__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_1__module.exports, __WEBPACK_LOCAL_MODULE_1__module) : __WEBPACK_LOCAL_MODULE_1__factory, __WEBPACK_LOCAL_MODULE_1__module.loaded = true, __WEBPACK_LOCAL_MODULE_1__ === undefined && (__WEBPACK_LOCAL_MODULE_1__ = __WEBPACK_LOCAL_MODULE_1__module.exports))
        } else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === "object") {
            module.exports = factory()
        } else {
            root.MicroPlugin = factory()
        }
    })(undefined, function() {
        var MicroPlugin = {};
        MicroPlugin.mixin = function(Interface) {
            Interface.plugins = {};
            Interface.prototype.initializePlugins = function(plugins) {
                var i, n, key;
                var self = this;
                var queue = [];
                self.plugins = {
                    names: [],
                    settings: {},
                    requested: {},
                    loaded: {}
                };
                if (utils.isArray(plugins)) {
                    for (i = 0, n = plugins.length; i < n; i++) {
                        if (typeof plugins[i] === "string") {
                            queue.push(plugins[i])
                        } else {
                            self.plugins.settings[plugins[i].name] = plugins[i].options;
                            queue.push(plugins[i].name)
                        }
                    }
                } else if (plugins) {
                    for (key in plugins) {
                        if (plugins.hasOwnProperty(key)) {
                            self.plugins.settings[key] = plugins[key];
                            queue.push(key)
                        }
                    }
                }
                while (queue.length) {
                    self.require(queue.shift())
                }
            };
            Interface.prototype.loadPlugin = function(name) {
                var self = this;
                var plugins = self.plugins;
                var plugin = Interface.plugins[name];
                if (!Interface.plugins.hasOwnProperty(name)) {
                    throw new Error('Unable to find "' + name + '" plugin')
                }
                plugins.requested[name] = true;
                plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);
                plugins.names.push(name)
            };
            Interface.prototype.require = function(name) {
                var self = this;
                var plugins = self.plugins;
                if (!self.plugins.loaded.hasOwnProperty(name)) {
                    if (plugins.requested[name]) {
                        throw new Error('Plugin has circular dependency ("' + name + '")')
                    }
                    self.loadPlugin(name)
                }
                return plugins.loaded[name]
            };
            Interface.define = function(name, fn) {
                Interface.plugins[name] = {
                    name: name,
                    fn: fn
                }
            }
        };
        var utils = {
            isArray: Array.isArray || function(vArg) {
                return Object.prototype.toString.call(vArg) === "[object Array]"
            }
        };
        return MicroPlugin
    });
    (function(root, factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __WEBPACK_LOCAL_MODULE_0__, __WEBPACK_LOCAL_MODULE_1__], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === "object") {
            module.exports = factory(require("jquery"), require("sifter"), require("microplugin"))
        } else {
            root.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin)
        }
    })(undefined, function($, Sifter, MicroPlugin) {
        "use strict";
        var highlight = function highlight($element, pattern) {
            if (typeof pattern === "string" && !pattern.length) return;
            var regex = typeof pattern === "string" ? new RegExp(pattern, "i") : pattern;
            var highlight = function highlight(node) {
                var skip = 0;
                if (node.nodeType === 3) {
                    var pos = node.data.search(regex);
                    if (pos >= 0 && node.data.length > 0) {
                        var match = node.data.match(regex);
                        var spannode = document.createElement("span");
                        spannode.className = "highlight";
                        var middlebit = node.splitText(pos);
                        var endbit = middlebit.splitText(match[0].length);
                        var middleclone = middlebit.cloneNode(true);
                        spannode.appendChild(middleclone);
                        middlebit.parentNode.replaceChild(spannode, middlebit);
                        skip = 1
                    }
                } else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {
                    for (var i = 0; i < node.childNodes.length; ++i) {
                        i += highlight(node.childNodes[i])
                    }
                }
                return skip
            };
            return $element.each(function() {
                highlight(this)
            })
        };
        $.fn.removeHighlight = function() {
            return this.find("span.highlight").each(function() {
                this.parentNode.firstChild.nodeName;
                var parent = this.parentNode;
                parent.replaceChild(this.firstChild, this);
                parent.normalize()
            }).end()
        };
        var MicroEvent = function MicroEvent() {};
        MicroEvent.prototype = {
            on: function on(event, fct) {
                this._events = this._events || {};
                this._events[event] = this._events[event] || [];
                this._events[event].push(fct)
            },
            off: function off(event, fct) {
                var n = arguments.length;
                if (n === 0) return delete this._events;
                if (n === 1) return delete this._events[event];
                this._events = this._events || {};
                if (event in this._events === false) return;
                this._events[event].splice(this._events[event].indexOf(fct), 1)
            },
            trigger: function trigger(event) {
                this._events = this._events || {};
                if (event in this._events === false) return;
                for (var i = 0; i < this._events[event].length; i++) {
                    this._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1))
                }
            }
        };
        MicroEvent.mixin = function(destObject) {
            var props = ["on", "off", "trigger"];
            for (var i = 0; i < props.length; i++) {
                destObject.prototype[props[i]] = MicroEvent.prototype[props[i]]
            }
        };
        var IS_MAC = /Mac/.test(navigator.userAgent);
        var KEY_A = 65;
        var KEY_COMMA = 188;
        var KEY_RETURN = 13;
        var KEY_ESC = 27;
        var KEY_LEFT = 37;
        var KEY_UP = 38;
        var KEY_P = 80;
        var KEY_RIGHT = 39;
        var KEY_DOWN = 40;
        var KEY_N = 78;
        var KEY_BACKSPACE = 8;
        var KEY_DELETE = 46;
        var KEY_SHIFT = 16;
        var KEY_CMD = IS_MAC ? 91 : 17;
        var KEY_CTRL = IS_MAC ? 18 : 17;
        var KEY_TAB = 9;
        var TAG_SELECT = 1;
        var TAG_INPUT = 2;
        var SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement("input").validity;
        var isset = function isset(object) {
            return typeof object !== "undefined"
        };
        var hash_key = function hash_key(value) {
            if (typeof value === "undefined" || value === null) return null;
            if (typeof value === "boolean") return value ? "1" : "0";
            return value + ""
        };
        var escape_html = function escape_html(str) {
            return (str + "").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;")
        };
        var escape_replace = function escape_replace(str) {
            return (str + "").replace(/\$/g, "$$$$")
        };
        var hook = {};
        hook.before = function(self, method, fn) {
            var original = self[method];
            self[method] = function() {
                fn.apply(self, arguments);
                return original.apply(self, arguments)
            }
        };
        hook.after = function(self, method, fn) {
            var original = self[method];
            self[method] = function() {
                var result = original.apply(self, arguments);
                fn.apply(self, arguments);
                return result
            }
        };
        var once = function once(fn) {
            var called = false;
            return function() {
                if (called) return;
                called = true;
                fn.apply(this, arguments)
            }
        };
        var debounce = function debounce(fn, delay) {
            var timeout;
            return function() {
                var self = this;
                var args = arguments;
                window.clearTimeout(timeout);
                timeout = window.setTimeout(function() {
                    fn.apply(self, args)
                }, delay)
            }
        };
        var debounce_events = function debounce_events(self, types, fn) {
            var type;
            var trigger = self.trigger;
            var event_args = {};
            self.trigger = function() {
                var type = arguments[0];
                if (types.indexOf(type) !== -1) {
                    event_args[type] = arguments
                } else {
                    return trigger.apply(self, arguments)
                }
            };
            fn.apply(self, []);
            self.trigger = trigger;
            for (type in event_args) {
                if (event_args.hasOwnProperty(type)) {
                    trigger.apply(self, event_args[type])
                }
            }
        };
        var watchChildEvent = function watchChildEvent($parent, event, selector, fn) {
            $parent.on(event, selector, function(e) {
                var child = e.target;
                while (child && child.parentNode !== $parent[0]) {
                    child = child.parentNode
                }
                e.currentTarget = child;
                return fn.apply(this, [e])
            })
        };
        var getSelection = function getSelection(input) {
            var result = {};
            if ("selectionStart" in input) {
                result.start = input.selectionStart;
                result.length = input.selectionEnd - result.start
            } else if (document.selection) {
                input.focus();
                var sel = document.selection.createRange();
                var selLen = document.selection.createRange().text.length;
                sel.moveStart("character", -input.value.length);
                result.start = sel.text.length - selLen;
                result.length = selLen
            }
            return result
        };
        var transferStyles = function transferStyles($from, $to, properties) {
            var i, n, styles = {};
            if (properties) {
                for (i = 0, n = properties.length; i < n; i++) {
                    styles[properties[i]] = $from.css(properties[i])
                }
            } else {
                styles = $from.css()
            }
            $to.css(styles)
        };
        var measureString = function measureString(str, $parent) {
            if (!str) {
                return 0
            }
            var $test = $("<test>").css({
                position: "absolute",
                top: -99999,
                left: -99999,
                width: "auto",
                padding: 0,
                whiteSpace: "pre"
            }).text(str).appendTo("body");
            transferStyles($parent, $test, ["letterSpacing", "fontSize", "fontFamily", "fontWeight", "textTransform"]);
            var width = $test.width();
            $test.remove();
            return width
        };
        var autoGrow = function autoGrow($input) {
            var currentWidth = null;
            var update = function update(e, options) {
                var value, keyCode, printable, placeholder, width;
                var shift, character, selection;
                e = e || window.event || {};
                options = options || {};
                if (e.metaKey || e.altKey) return;
                if (!options.force && $input.data("grow") === false) return;
                value = $input.val();
                if (e.type && e.type.toLowerCase() === "keydown") {
                    keyCode = e.keyCode;
                    printable = keyCode >= 97 && keyCode <= 122 || keyCode >= 65 && keyCode <= 90 || keyCode >= 48 && keyCode <= 57 || keyCode === 32;
                    if (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {
                        selection = getSelection($input[0]);
                        if (selection.length) {
                            value = value.substring(0, selection.start) + value.substring(selection.start + selection.length)
                        } else if (keyCode === KEY_BACKSPACE && selection.start) {
                            value = value.substring(0, selection.start - 1) + value.substring(selection.start + 1)
                        } else if (keyCode === KEY_DELETE && typeof selection.start !== "undefined") {
                            value = value.substring(0, selection.start) + value.substring(selection.start + 1)
                        }
                    } else if (printable) {
                        shift = e.shiftKey;
                        character = String.fromCharCode(e.keyCode);
                        if (shift) character = character.toUpperCase();
                        else character = character.toLowerCase();
                        value += character
                    }
                }
                placeholder = $input.attr("placeholder");
                if (!value && placeholder) {
                    value = placeholder
                }
                width = measureString(value, $input) + 4;
                if (width !== currentWidth) {
                    currentWidth = width;
                    $input.width(width);
                    $input.triggerHandler("resize")
                }
            };
            $input.on("keydown keyup update blur", update);
            update()
        };
        var domToString = function domToString(d) {
            var tmp = document.createElement("div");
            tmp.appendChild(d.cloneNode(true));
            return tmp.innerHTML
        };
        var logError = function logError(message, options) {
            if (!options) options = {};
            var component = "Selectize";
            console.error(component + ": " + message);
            if (options.explanation) {
                if (console.group) console.group();
                console.error(options.explanation);
                if (console.group) console.groupEnd()
            }
        };
        var Selectize = function Selectize($input, settings) {
            var key, i, n, dir, input, self = this;
            input = $input[0];
            input.selectize = self;
            var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);
            dir = computedStyle ? computedStyle.getPropertyValue("direction") : input.currentStyle && input.currentStyle.direction;
            dir = dir || $input.parents("[dir]:first").attr("dir") || "";
            $.extend(self, {
                order: 0,
                settings: settings,
                $input: $input,
                tabIndex: $input.attr("tabindex") || "",
                tagType: input.tagName.toLowerCase() === "select" ? TAG_SELECT : TAG_INPUT,
                rtl: /rtl/i.test(dir),
                eventNS: ".selectize" + ++Selectize.count,
                highlightedValue: null,
                isOpen: false,
                isDisabled: false,
                isRequired: $input.is("[required]"),
                isInvalid: false,
                isLocked: false,
                isFocused: false,
                isInputHidden: false,
                isSetup: false,
                isShiftDown: false,
                isCmdDown: false,
                isCtrlDown: false,
                ignoreFocus: false,
                ignoreBlur: false,
                ignoreHover: false,
                hasOptions: false,
                currentResults: null,
                lastValue: "",
                caretPos: 0,
                loading: 0,
                loadedSearches: {},
                $activeOption: null,
                $activeItems: [],
                optgroups: {},
                options: {},
                userOptions: {},
                items: [],
                renderCache: {},
                onSearchChange: settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)
            });
            self.sifter = new Sifter(this.options, {
                diacritics: settings.diacritics
            });
            if (self.settings.options) {
                for (i = 0, n = self.settings.options.length; i < n; i++) {
                    self.registerOption(self.settings.options[i])
                }
                delete self.settings.options
            }
            if (self.settings.optgroups) {
                for (i = 0, n = self.settings.optgroups.length; i < n; i++) {
                    self.registerOptionGroup(self.settings.optgroups[i])
                }
                delete self.settings.optgroups
            }
            self.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? "single" : "multi");
            if (typeof self.settings.hideSelected !== "boolean") {
                self.settings.hideSelected = self.settings.mode === "multi"
            }
            self.initializePlugins(self.settings.plugins);
            self.setupCallbacks();
            self.setupTemplates();
            self.setup()
        };
        MicroEvent.mixin(Selectize);
        if (typeof MicroPlugin !== "undefined") {
            MicroPlugin.mixin(Selectize)
        } else {
            logError("Dependency MicroPlugin is missing", {
                explanation: 'Make sure you either: (1) are using the "standalone" ' + "version of Selectize, or (2) require MicroPlugin before you " + "load Selectize."
            })
        }
        $.extend(Selectize.prototype, {
            setup: function setup() {
                var self = this;
                var settings = self.settings;
                var eventNS = self.eventNS;
                var $window = $(window);
                var $document = $(document);
                var $input = self.$input;
                var $wrapper;
                var $control;
                var $control_input;
                var $dropdown;
                var $dropdown_content;
                var $dropdown_parent;
                var inputMode;
                var timeout_blur;
                var timeout_focus;
                var classes;
                var classes_plugins;
                var inputId;
                inputMode = self.settings.mode;
                classes = $input.attr("class") || "";
                $wrapper = $("<div>").addClass(settings.wrapperClass).addClass(inputMode);
                $control = $("<div>").addClass(settings.inputClass + " " + classes).addClass("items").appendTo($wrapper);
                $control_input = $('<input type="text" autocomplete="off" />').appendTo($control).attr("tabindex", $input.is(":disabled") ? "-1" : self.tabIndex);
                $dropdown_parent = $(settings.dropdownParent || $wrapper);
                $dropdown = $("<div>").addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);
                $dropdown_content = $("<div>").addClass(settings.dropdownContentClass).appendTo($dropdown);
                if (inputId = $input.attr("id")) {
                    $control_input.attr("id", inputId + "-selectized");
                    $("label[for='" + inputId + "']").attr("for", inputId + "-selectized")
                }
                if (self.settings.copyClassesToDropdown) {
                    $dropdown.addClass(classes)
                }
                $wrapper.css({
                    width: $input[0].style.width
                });
                if (self.plugins.names.length) {
                    classes_plugins = "plugin-" + self.plugins.names.join(" plugin-");
                    $wrapper.addClass(classes_plugins);
                    $dropdown.addClass(classes_plugins)
                }
                if ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {
                    $input.attr("multiple", "multiple")
                }
                if (self.settings.placeholder) {
                    $control_input.attr("placeholder", settings.placeholder)
                }
                if (!self.settings.splitOn && self.settings.delimiter) {
                    var delimiterEscaped = self.settings.delimiter.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
                    self.settings.splitOn = new RegExp("\\s*" + delimiterEscaped + "+\\s*")
                }
                if ($input.attr("autocorrect")) {
                    $control_input.attr("autocorrect", $input.attr("autocorrect"))
                }
                if ($input.attr("autocapitalize")) {
                    $control_input.attr("autocapitalize", $input.attr("autocapitalize"))
                }
                self.$wrapper = $wrapper;
                self.$control = $control;
                self.$control_input = $control_input;
                self.$dropdown = $dropdown;
                self.$dropdown_content = $dropdown_content;
                $dropdown.on("mouseenter", "[data-selectable]", function() {
                    return self.onOptionHover.apply(self, arguments)
                });
                $dropdown.on("mousedown click", "[data-selectable]", function() {
                    return self.onOptionSelect.apply(self, arguments)
                });
                watchChildEvent($control, "mousedown", "*:not(input)", function() {
                    return self.onItemSelect.apply(self, arguments)
                });
                autoGrow($control_input);
                $control.on({
                    mousedown: function mousedown() {
                        return self.onMouseDown.apply(self, arguments)
                    },
                    click: function click() {
                        return self.onClick.apply(self, arguments)
                    }
                });
                $control_input.on({
                    mousedown: function mousedown(e) {
                        e.stopPropagation()
                    },
                    keydown: function keydown() {
                        return self.onKeyDown.apply(self, arguments)
                    },
                    keyup: function keyup() {
                        return self.onKeyUp.apply(self, arguments)
                    },
                    keypress: function keypress() {
                        return self.onKeyPress.apply(self, arguments)
                    },
                    resize: function resize() {
                        self.positionDropdown.apply(self, [])
                    },
                    blur: function blur() {
                        return self.onBlur.apply(self, arguments)
                    },
                    focus: function focus() {
                        self.ignoreBlur = false;
                        return self.onFocus.apply(self, arguments)
                    },
                    paste: function paste() {
                        return self.onPaste.apply(self, arguments)
                    }
                });
                $document.on("keydown" + eventNS, function(e) {
                    self.isCmdDown = e[IS_MAC ? "metaKey" : "ctrlKey"];
                    self.isCtrlDown = e[IS_MAC ? "altKey" : "ctrlKey"];
                    self.isShiftDown = e.shiftKey
                });
                $document.on("keyup" + eventNS, function(e) {
                    if (e.keyCode === KEY_CTRL) self.isCtrlDown = false;
                    if (e.keyCode === KEY_SHIFT) self.isShiftDown = false;
                    if (e.keyCode === KEY_CMD) self.isCmdDown = false
                });
                $document.on("mousedown" + eventNS, function(e) {
                    if (self.isFocused) {
                        if (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {
                            return false
                        }
                        if (!self.$control.has(e.target).length && e.target !== self.$control[0]) {
                            self.blur(e.target)
                        }
                    }
                });
                $window.on(["scroll" + eventNS, "resize" + eventNS].join(" "), function() {
                    if (self.isOpen) {
                        self.positionDropdown.apply(self, arguments)
                    }
                });
                $window.on("mousemove" + eventNS, function() {
                    self.ignoreHover = false
                });
                this.revertSettings = {
                    $children: $input.children().detach(),
                    tabindex: $input.attr("tabindex")
                };
                $input.attr("tabindex", -1).hide().after(self.$wrapper);
                if ($.isArray(settings.items)) {
                    self.setValue(settings.items);
                    delete settings.items
                }
                if (SUPPORTS_VALIDITY_API) {
                    $input.on("invalid" + eventNS, function(e) {
                        e.preventDefault();
                        self.isInvalid = true;
                        self.refreshState()
                    })
                }
                self.updateOriginalInput();
                self.refreshItems();
                self.refreshState();
                self.updatePlaceholder();
                self.isSetup = true;
                if ($input.is(":disabled")) {
                    self.disable()
                }
                self.on("change", this.onChange);
                $input.data("selectize", self);
                $input.addClass("selectized");
                self.trigger("initialize");
                if (settings.preload === true) {
                    self.onSearchChange("")
                }
            },
            setupTemplates: function setupTemplates() {
                var self = this;
                var field_label = self.settings.labelField;
                var field_optgroup = self.settings.optgroupLabelField;
                var templates = {
                    optgroup: function optgroup(data) {
                        return '<div class="optgroup">' + data.html + "</div>"
                    },
                    optgroup_header: function optgroup_header(data, escape) {
                        return '<div class="optgroup-header">' + escape(data[field_optgroup]) + "</div>"
                    },
                    option: function option(data, escape) {
                        return '<div class="option">' + escape(data[field_label]) + "</div>"
                    },
                    item: function item(data, escape) {
                        return '<div class="item">' + escape(data[field_label]) + "</div>"
                    },
                    option_create: function option_create(data, escape) {
                        return '<div class="create">Add <strong>' + escape(data.input) + "</strong>&hellip;</div>"
                    }
                };
                self.settings.render = $.extend({}, templates, self.settings.render)
            },
            setupCallbacks: function setupCallbacks() {
                var key, fn, callbacks = {
                    initialize: "onInitialize",
                    change: "onChange",
                    item_add: "onItemAdd",
                    item_remove: "onItemRemove",
                    clear: "onClear",
                    option_add: "onOptionAdd",
                    option_remove: "onOptionRemove",
                    option_clear: "onOptionClear",
                    optgroup_add: "onOptionGroupAdd",
                    optgroup_remove: "onOptionGroupRemove",
                    optgroup_clear: "onOptionGroupClear",
                    dropdown_open: "onDropdownOpen",
                    dropdown_close: "onDropdownClose",
                    type: "onType",
                    load: "onLoad",
                    focus: "onFocus",
                    blur: "onBlur"
                };
                for (key in callbacks) {
                    if (callbacks.hasOwnProperty(key)) {
                        fn = this.settings[callbacks[key]];
                        if (fn) this.on(key, fn)
                    }
                }
            },
            onClick: function onClick(e) {
                var self = this;
                if (!self.isFocused) {
                    self.focus();
                    e.preventDefault()
                }
            },
            onMouseDown: function onMouseDown(e) {
                var self = this;
                var defaultPrevented = e.isDefaultPrevented();
                var $target = $(e.target);
                if (self.isFocused) {
                    if (e.target !== self.$control_input[0]) {
                        if (self.settings.mode === "single") {
                            self.isOpen ? self.close() : self.open()
                        } else if (!defaultPrevented) {
                            self.setActiveItem(null)
                        }
                        return false
                    }
                } else {
                    if (!defaultPrevented) {
                        window.setTimeout(function() {
                            self.focus()
                        }, 0)
                    }
                }
            },
            onChange: function onChange() {
                this.$input.trigger("change")
            },
            onPaste: function onPaste(e) {
                var self = this;
                if (self.isFull() || self.isInputHidden || self.isLocked) {
                    e.preventDefault();
                    return
                }
                if (self.settings.splitOn) {
                    setTimeout(function() {
                        var pastedText = self.$control_input.val();
                        if (!pastedText.match(self.settings.splitOn)) {
                            return
                        }
                        var splitInput = $.trim(pastedText).split(self.settings.splitOn);
                        for (var i = 0, n = splitInput.length; i < n; i++) {
                            self.createItem(splitInput[i])
                        }
                    }, 0)
                }
            },
            onKeyPress: function onKeyPress(e) {
                if (this.isLocked) return e && e.preventDefault();
                var character = String.fromCharCode(e.keyCode || e.which);
                if (this.settings.create && this.settings.mode === "multi" && character === this.settings.delimiter) {
                    this.createItem();
                    e.preventDefault();
                    return false
                }
            },
            onKeyDown: function onKeyDown(e) {
                var isInput = e.target === this.$control_input[0];
                var self = this;
                if (self.isLocked) {
                    if (e.keyCode !== KEY_TAB) {
                        e.preventDefault()
                    }
                    return
                }
                switch (e.keyCode) {
                    case KEY_A:
                        if (self.isCmdDown) {
                            self.selectAll();
                            return
                        }
                        break;
                    case KEY_ESC:
                        if (self.isOpen) {
                            e.preventDefault();
                            e.stopPropagation();
                            self.close()
                        }
                        return;
                    case KEY_N:
                        if (!e.ctrlKey || e.altKey) break;
                    case KEY_DOWN:
                        if (!self.isOpen && self.hasOptions) {
                            self.open()
                        } else if (self.$activeOption) {
                            self.ignoreHover = true;
                            var $next = self.getAdjacentOption(self.$activeOption, 1);
                            if ($next.length) self.setActiveOption($next, true, true)
                        }
                        e.preventDefault();
                        return;
                    case KEY_P:
                        if (!e.ctrlKey || e.altKey) break;
                    case KEY_UP:
                        if (self.$activeOption) {
                            self.ignoreHover = true;
                            var $prev = self.getAdjacentOption(self.$activeOption, -1);
                            if ($prev.length) self.setActiveOption($prev, true, true)
                        }
                        e.preventDefault();
                        return;
                    case KEY_RETURN:
                        if (self.isOpen && self.$activeOption) {
                            self.onOptionSelect({
                                currentTarget: self.$activeOption
                            });
                            e.preventDefault()
                        }
                        return;
                    case KEY_LEFT:
                        self.advanceSelection(-1, e);
                        return;
                    case KEY_RIGHT:
                        self.advanceSelection(1, e);
                        return;
                    case KEY_TAB:
                        if (self.settings.selectOnTab && self.isOpen && self.$activeOption) {
                            self.onOptionSelect({
                                currentTarget: self.$activeOption
                            });
                            if (!self.isFull()) {
                                e.preventDefault()
                            }
                        }
                        if (self.settings.create && self.createItem()) {
                            e.preventDefault()
                        }
                        return;
                    case KEY_BACKSPACE:
                    case KEY_DELETE:
                        self.deleteSelection(e);
                        return
                }
                if ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {
                    e.preventDefault();
                    return
                }
            },
            onKeyUp: function onKeyUp(e) {
                var self = this;
                if (self.isLocked) return e && e.preventDefault();
                var value = self.$control_input.val() || "";
                if (self.lastValue !== value) {
                    self.lastValue = value;
                    self.onSearchChange(value);
                    self.refreshOptions();
                    self.trigger("type", value)
                }
            },
            onSearchChange: function onSearchChange(value) {
                var self = this;
                var fn = self.settings.load;
                if (!fn) return;
                if (self.loadedSearches.hasOwnProperty(value)) return;
                self.loadedSearches[value] = true;
                self.load(function(callback) {
                    fn.apply(self, [value, callback])
                })
            },
            onFocus: function onFocus(e) {
                var self = this;
                var wasFocused = self.isFocused;
                if (self.isDisabled) {
                    self.blur();
                    e && e.preventDefault();
                    return false
                }
                if (self.ignoreFocus) return;
                self.isFocused = true;
                if (self.settings.preload === "focus") self.onSearchChange("");
                if (!wasFocused) self.trigger("focus");
                if (!self.$activeItems.length) {
                    self.showInput();
                    self.setActiveItem(null);
                    self.refreshOptions(!!self.settings.openOnFocus)
                }
                self.refreshState()
            },
            onBlur: function onBlur(e, dest) {
                var self = this;
                if (!self.isFocused) return;
                self.isFocused = false;
                if (self.ignoreFocus) {
                    return
                } else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {
                    self.ignoreBlur = true;
                    self.onFocus(e);
                    return
                }
                var deactivate = function deactivate() {
                    self.close();
                    self.setTextboxValue("");
                    self.setActiveItem(null);
                    self.setActiveOption(null);
                    self.setCaret(self.items.length);
                    self.refreshState();
                    dest && dest.focus && dest.focus();
                    self.ignoreFocus = false;
                    self.trigger("blur")
                };
                self.ignoreFocus = true;
                if (self.settings.create && self.settings.createOnBlur) {
                    self.createItem(null, false, deactivate)
                } else {
                    deactivate()
                }
            },
            onOptionHover: function onOptionHover(e) {
                if (this.ignoreHover) return;
                this.setActiveOption(e.currentTarget, false)
            },
            onOptionSelect: function onOptionSelect(e) {
                var value, $target, $option, self = this;
                if (e.preventDefault) {
                    e.preventDefault();
                    e.stopPropagation()
                }
                $target = $(e.currentTarget);
                if ($target.hasClass("create")) {
                    self.createItem(null, function() {
                        if (self.settings.closeAfterSelect) {
                            self.close()
                        }
                    })
                } else {
                    value = $target.attr("data-value");
                    if (typeof value !== "undefined") {
                        self.lastQuery = null;
                        self.setTextboxValue("");
                        self.addItem(value);
                        if (self.settings.closeAfterSelect) {
                            self.close()
                        } else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {
                            self.setActiveOption(self.getOption(value))
                        }
                    }
                }
            },
            onItemSelect: function onItemSelect(e) {
                var self = this;
                if (self.isLocked) return;
                if (self.settings.mode === "multi") {
                    e.preventDefault();
                    self.setActiveItem(e.currentTarget, e)
                }
            },
            load: function load(fn) {
                var self = this;
                var $wrapper = self.$wrapper.addClass(self.settings.loadingClass);
                self.loading++;
                fn.apply(self, [function(results) {
                    self.loading = Math.max(self.loading - 1, 0);
                    if (results && results.length) {
                        self.addOption(results);
                        self.refreshOptions(self.isFocused && !self.isInputHidden)
                    }
                    if (!self.loading) {
                        $wrapper.removeClass(self.settings.loadingClass)
                    }
                    self.trigger("load", results)
                }])
            },
            setTextboxValue: function setTextboxValue(value) {
                var $input = this.$control_input;
                var changed = $input.val() !== value;
                if (changed) {
                    $input.val(value).triggerHandler("update");
                    this.lastValue = value
                }
            },
            getValue: function getValue() {
                if (this.tagType === TAG_SELECT && this.$input.attr("multiple")) {
                    return this.items
                } else {
                    return this.items.join(this.settings.delimiter)
                }
            },
            setValue: function setValue(value, silent) {
                var events = silent ? [] : ["change"];
                debounce_events(this, events, function() {
                    this.clear(silent);
                    this.addItems(value, silent)
                })
            },
            setActiveItem: function setActiveItem($item, e) {
                var self = this;
                var eventName;
                var i, idx, begin, end, item, swap;
                var $last;
                if (self.settings.mode === "single") return;
                $item = $($item);
                if (!$item.length) {
                    $(self.$activeItems).removeClass("active");
                    self.$activeItems = [];
                    if (self.isFocused) {
                        self.showInput()
                    }
                    return
                }
                eventName = e && e.type.toLowerCase();
                if (eventName === "mousedown" && self.isShiftDown && self.$activeItems.length) {
                    $last = self.$control.children(".active:last");
                    begin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);
                    end = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);
                    if (begin > end) {
                        swap = begin;
                        begin = end;
                        end = swap
                    }
                    for (i = begin; i <= end; i++) {
                        item = self.$control[0].childNodes[i];
                        if (self.$activeItems.indexOf(item) === -1) {
                            $(item).addClass("active");
                            self.$activeItems.push(item)
                        }
                    }
                    e.preventDefault()
                } else if (eventName === "mousedown" && self.isCtrlDown || eventName === "keydown" && this.isShiftDown) {
                    if ($item.hasClass("active")) {
                        idx = self.$activeItems.indexOf($item[0]);
                        self.$activeItems.splice(idx, 1);
                        $item.removeClass("active")
                    } else {
                        self.$activeItems.push($item.addClass("active")[0])
                    }
                } else {
                    $(self.$activeItems).removeClass("active");
                    self.$activeItems = [$item.addClass("active")[0]]
                }
                self.hideInput();
                if (!this.isFocused) {
                    self.focus()
                }
            },
            setActiveOption: function setActiveOption($option, scroll, animate) {
                var height_menu, height_item, y;
                var scroll_top, scroll_bottom;
                var self = this;
                if (self.$activeOption) self.$activeOption.removeClass("active");
                self.$activeOption = null;
                $option = $($option);
                if (!$option.length) return;
                self.$activeOption = $option.addClass("active");
                if (scroll || !isset(scroll)) {
                    height_menu = self.$dropdown_content.height();
                    height_item = self.$activeOption.outerHeight(true);
                    scroll = self.$dropdown_content.scrollTop() || 0;
                    y = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;
                    scroll_top = y;
                    scroll_bottom = y - height_menu + height_item;
                    if (y + height_item > height_menu + scroll) {
                        self.$dropdown_content.stop().animate({
                            scrollTop: scroll_bottom
                        }, animate ? self.settings.scrollDuration : 0)
                    } else if (y < scroll) {
                        self.$dropdown_content.stop().animate({
                            scrollTop: scroll_top
                        }, animate ? self.settings.scrollDuration : 0)
                    }
                }
            },
            selectAll: function selectAll() {
                var self = this;
                if (self.settings.mode === "single") return;
                self.$activeItems = Array.prototype.slice.apply(self.$control.children(":not(input)").addClass("active"));
                if (self.$activeItems.length) {
                    self.hideInput();
                    self.close()
                }
                self.focus()
            },
            hideInput: function hideInput() {
                var self = this;
                self.setTextboxValue("");
                self.$control_input.css({
                    opacity: 0,
                    position: "absolute",
                    left: self.rtl ? 1e4 : -1e4
                });
                self.isInputHidden = true
            },
            showInput: function showInput() {
                this.$control_input.css({
                    opacity: 1,
                    position: "relative",
                    left: 0
                });
                this.isInputHidden = false
            },
            focus: function focus() {
                var self = this;
                if (self.isDisabled) return;
                self.ignoreFocus = true;
                self.$control_input[0].focus();
                window.setTimeout(function() {
                    self.ignoreFocus = false;
                    self.onFocus()
                }, 0)
            },
            blur: function blur(dest) {
                this.$control_input[0].blur();
                this.onBlur(null, dest)
            },
            getScoreFunction: function getScoreFunction(query) {
                return this.sifter.getScoreFunction(query, this.getSearchOptions())
            },
            getSearchOptions: function getSearchOptions() {
                var settings = this.settings;
                var sort = settings.sortField;
                if (typeof sort === "string") {
                    sort = [{
                        field: sort
                    }]
                }
                return {
                    fields: settings.searchField,
                    conjunction: settings.searchConjunction,
                    sort: sort
                }
            },
            search: function search(query) {
                var i, value, score, result, calculateScore;
                var self = this;
                var settings = self.settings;
                var options = this.getSearchOptions();
                if (settings.score) {
                    calculateScore = self.settings.score.apply(this, [query]);
                    if (typeof calculateScore !== "function") {
                        throw new Error('Selectize "score" setting must be a function that returns a function')
                    }
                }
                if (query !== self.lastQuery) {
                    self.lastQuery = query;
                    result = self.sifter.search(query, $.extend(options, {
                        score: calculateScore
                    }));
                    self.currentResults = result
                } else {
                    result = $.extend(true, {}, self.currentResults)
                }
                if (settings.hideSelected) {
                    for (i = result.items.length - 1; i >= 0; i--) {
                        if (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {
                            result.items.splice(i, 1)
                        }
                    }
                }
                return result
            },
            refreshOptions: function refreshOptions(triggerDropdown) {
                var i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;
                var $active, $active_before, $create;
                if (typeof triggerDropdown === "undefined") {
                    triggerDropdown = true
                }
                var self = this;
                var query = $.trim(self.$control_input.val());
                var results = self.search(query);
                var $dropdown_content = self.$dropdown_content;
                var active_before = self.$activeOption && hash_key(self.$activeOption.attr("data-value"));
                n = results.items.length;
                if (typeof self.settings.maxOptions === "number") {
                    n = Math.min(n, self.settings.maxOptions)
                }
                groups = {};
                groups_order = [];
                for (i = 0; i < n; i++) {
                    option = self.options[results.items[i].id];
                    option_html = self.render("option", option);
                    optgroup = option[self.settings.optgroupField] || "";
                    optgroups = $.isArray(optgroup) ? optgroup : [optgroup];
                    for (j = 0, k = optgroups && optgroups.length; j < k; j++) {
                        optgroup = optgroups[j];
                        if (!self.optgroups.hasOwnProperty(optgroup)) {
                            optgroup = ""
                        }
                        if (!groups.hasOwnProperty(optgroup)) {
                            groups[optgroup] = document.createDocumentFragment();
                            groups_order.push(optgroup)
                        }
                        groups[optgroup].appendChild(option_html)
                    }
                }
                if (this.settings.lockOptgroupOrder) {
                    groups_order.sort(function(a, b) {
                        var a_order = self.optgroups[a].$order || 0;
                        var b_order = self.optgroups[b].$order || 0;
                        return a_order - b_order
                    })
                }
                html = document.createDocumentFragment();
                for (i = 0, n = groups_order.length; i < n; i++) {
                    optgroup = groups_order[i];
                    if (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {
                        html_children = document.createDocumentFragment();
                        html_children.appendChild(self.render("optgroup_header", self.optgroups[optgroup]));
                        html_children.appendChild(groups[optgroup]);
                        html.appendChild(self.render("optgroup", $.extend({}, self.optgroups[optgroup], {
                            html: domToString(html_children),
                            dom: html_children
                        })))
                    } else {
                        html.appendChild(groups[optgroup])
                    }
                }
                $dropdown_content.html(html);
                if (self.settings.highlight && results.query.length && results.tokens.length) {
                    $dropdown_content.removeHighlight();
                    for (i = 0, n = results.tokens.length; i < n; i++) {
                        highlight($dropdown_content, results.tokens[i].regex)
                    }
                }
                if (!self.settings.hideSelected) {
                    for (i = 0, n = self.items.length; i < n; i++) {
                        self.getOption(self.items[i]).addClass("selected")
                    }
                }
                has_create_option = self.canCreate(query);
                if (has_create_option) {
                    $dropdown_content.prepend(self.render("option_create", {
                        input: query
                    }));
                    $create = $($dropdown_content[0].childNodes[0])
                }
                self.hasOptions = results.items.length > 0 || has_create_option;
                if (self.hasOptions) {
                    if (results.items.length > 0) {
                        $active_before = active_before && self.getOption(active_before);
                        if ($active_before && $active_before.length) {
                            $active = $active_before
                        } else if (self.settings.mode === "single" && self.items.length) {
                            $active = self.getOption(self.items[0])
                        }
                        if (!$active || !$active.length) {
                            if ($create && !self.settings.addPrecedence) {
                                $active = self.getAdjacentOption($create, 1)
                            } else {
                                $active = $dropdown_content.find("[data-selectable]:first")
                            }
                        }
                    } else {
                        $active = $create
                    }
                    self.setActiveOption($active);
                    if (triggerDropdown && !self.isOpen) {
                        self.open()
                    }
                } else {
                    self.setActiveOption(null);
                    if (triggerDropdown && self.isOpen) {
                        self.close()
                    }
                }
            },
            addOption: function addOption(data) {
                var i, n, value, self = this;
                if ($.isArray(data)) {
                    for (i = 0, n = data.length; i < n; i++) {
                        self.addOption(data[i])
                    }
                    return
                }
                if (value = self.registerOption(data)) {
                    self.userOptions[value] = true;
                    self.lastQuery = null;
                    self.trigger("option_add", value, data)
                }
            },
            registerOption: function registerOption(data) {
                var key = hash_key(data[this.settings.valueField]);
                if (typeof key === "undefined" || key === null || this.options.hasOwnProperty(key)) return false;
                data.$order = data.$order || ++this.order;
                this.options[key] = data;
                return key
            },
            registerOptionGroup: function registerOptionGroup(data) {
                var key = hash_key(data[this.settings.optgroupValueField]);
                if (!key) return false;
                data.$order = data.$order || ++this.order;
                this.optgroups[key] = data;
                return key
            },
            addOptionGroup: function addOptionGroup(id, data) {
                data[this.settings.optgroupValueField] = id;
                if (id = this.registerOptionGroup(data)) {
                    this.trigger("optgroup_add", id, data)
                }
            },
            removeOptionGroup: function removeOptionGroup(id) {
                if (this.optgroups.hasOwnProperty(id)) {
                    delete this.optgroups[id];
                    this.renderCache = {};
                    this.trigger("optgroup_remove", id)
                }
            },
            clearOptionGroups: function clearOptionGroups() {
                this.optgroups = {};
                this.renderCache = {};
                this.trigger("optgroup_clear")
            },
            updateOption: function updateOption(value, data) {
                var self = this;
                var $item, $item_new;
                var value_new, index_item, cache_items, cache_options, order_old;
                value = hash_key(value);
                value_new = hash_key(data[self.settings.valueField]);
                if (value === null) return;
                if (!self.options.hasOwnProperty(value)) return;
                if (typeof value_new !== "string") throw new Error("Value must be set in option data");
                order_old = self.options[value].$order;
                if (value_new !== value) {
                    delete self.options[value];
                    index_item = self.items.indexOf(value);
                    if (index_item !== -1) {
                        self.items.splice(index_item, 1, value_new)
                    }
                }
                data.$order = data.$order || order_old;
                self.options[value_new] = data;
                cache_items = self.renderCache["item"];
                cache_options = self.renderCache["option"];
                if (cache_items) {
                    delete cache_items[value];
                    delete cache_items[value_new]
                }
                if (cache_options) {
                    delete cache_options[value];
                    delete cache_options[value_new]
                }
                if (self.items.indexOf(value_new) !== -1) {
                    $item = self.getItem(value);
                    $item_new = $(self.render("item", data));
                    if ($item.hasClass("active")) $item_new.addClass("active");
                    $item.replaceWith($item_new)
                }
                self.lastQuery = null;
                if (self.isOpen) {
                    self.refreshOptions(false)
                }
            },
            removeOption: function removeOption(value, silent) {
                var self = this;
                value = hash_key(value);
                var cache_items = self.renderCache["item"];
                var cache_options = self.renderCache["option"];
                if (cache_items) delete cache_items[value];
                if (cache_options) delete cache_options[value];
                delete self.userOptions[value];
                delete self.options[value];
                self.lastQuery = null;
                self.trigger("option_remove", value);
                self.removeItem(value, silent)
            },
            clearOptions: function clearOptions() {
                var self = this;
                self.loadedSearches = {};
                self.userOptions = {};
                self.renderCache = {};
                self.options = self.sifter.items = {};
                self.lastQuery = null;
                self.trigger("option_clear");
                self.clear()
            },
            getOption: function getOption(value) {
                return this.getElementWithValue(value, this.$dropdown_content.find("[data-selectable]"))
            },
            getAdjacentOption: function getAdjacentOption($option, direction) {
                var $options = this.$dropdown.find("[data-selectable]");
                var index = $options.index($option) + direction;
                return index >= 0 && index < $options.length ? $options.eq(index) : $()
            },
            getElementWithValue: function getElementWithValue(value, $els) {
                value = hash_key(value);
                if (typeof value !== "undefined" && value !== null) {
                    for (var i = 0, n = $els.length; i < n; i++) {
                        if ($els[i].getAttribute("data-value") === value) {
                            return $($els[i])
                        }
                    }
                }
                return $()
            },
            getItem: function getItem(value) {
                return this.getElementWithValue(value, this.$control.children())
            },
            addItems: function addItems(values, silent) {
                var items = $.isArray(values) ? values : [values];
                for (var i = 0, n = items.length; i < n; i++) {
                    this.isPending = i < n - 1;
                    this.addItem(items[i], silent)
                }
            },
            addItem: function addItem(value, silent) {
                var events = silent ? [] : ["change"];
                debounce_events(this, events, function() {
                    var $item, $option, $options;
                    var self = this;
                    var inputMode = self.settings.mode;
                    var i, active, value_next, wasFull;
                    value = hash_key(value);
                    if (self.items.indexOf(value) !== -1) {
                        if (inputMode === "single") self.close();
                        return
                    }
                    if (!self.options.hasOwnProperty(value)) return;
                    if (inputMode === "single") self.clear(silent);
                    if (inputMode === "multi" && self.isFull()) return;
                    $item = $(self.render("item", self.options[value]));
                    wasFull = self.isFull();
                    self.items.splice(self.caretPos, 0, value);
                    self.insertAtCaret($item);
                    if (!self.isPending || !wasFull && self.isFull()) {
                        self.refreshState()
                    }
                    if (self.isSetup) {
                        $options = self.$dropdown_content.find("[data-selectable]");
                        if (!self.isPending) {
                            $option = self.getOption(value);
                            value_next = self.getAdjacentOption($option, 1).attr("data-value");
                            self.refreshOptions(self.isFocused && inputMode !== "single");
                            if (value_next) {
                                self.setActiveOption(self.getOption(value_next))
                            }
                        }
                        if (!$options.length || self.isFull()) {
                            self.close()
                        } else {
                            self.positionDropdown()
                        }
                        self.updatePlaceholder();
                        self.trigger("item_add", value, $item);
                        self.updateOriginalInput({
                            silent: silent
                        })
                    }
                })
            },
            removeItem: function removeItem(value, silent) {
                var self = this;
                var $item, i, idx;
                $item = value instanceof $ ? value : self.getItem(value);
                value = hash_key($item.attr("data-value"));
                i = self.items.indexOf(value);
                if (i !== -1) {
                    $item.remove();
                    if ($item.hasClass("active")) {
                        idx = self.$activeItems.indexOf($item[0]);
                        self.$activeItems.splice(idx, 1)
                    }
                    self.items.splice(i, 1);
                    self.lastQuery = null;
                    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {
                        self.removeOption(value, silent)
                    }
                    if (i < self.caretPos) {
                        self.setCaret(self.caretPos - 1)
                    }
                    self.refreshState();
                    self.updatePlaceholder();
                    self.updateOriginalInput({
                        silent: silent
                    });
                    self.positionDropdown();
                    self.trigger("item_remove", value, $item)
                }
            },
            createItem: function createItem(input, triggerDropdown) {
                var self = this;
                var caret = self.caretPos;
                input = input || $.trim(self.$control_input.val() || "");
                var callback = arguments[arguments.length - 1];
                if (typeof callback !== "function") callback = function callback() {};
                if (typeof triggerDropdown !== "boolean") {
                    triggerDropdown = true
                }
                if (!self.canCreate(input)) {
                    callback();
                    return false
                }
                self.lock();
                var setup = typeof self.settings.create === "function" ? this.settings.create : function(input) {
                    var data = {};
                    data[self.settings.labelField] = input;
                    data[self.settings.valueField] = input;
                    return data
                };
                var create = once(function(data) {
                    self.unlock();
                    if (!data || (typeof data === "undefined" ? "undefined" : _typeof(data)) !== "object") return callback();
                    var value = hash_key(data[self.settings.valueField]);
                    if (typeof value !== "string") return callback();
                    self.setTextboxValue("");
                    self.addOption(data);
                    self.setCaret(caret);
                    self.addItem(value);
                    self.refreshOptions(triggerDropdown && self.settings.mode !== "single");
                    callback(data)
                });
                var output = setup.apply(this, [input, create]);
                if (typeof output !== "undefined") {
                    create(output)
                }
                return true
            },
            refreshItems: function refreshItems() {
                this.lastQuery = null;
                if (this.isSetup) {
                    this.addItem(this.items)
                }
                this.refreshState();
                this.updateOriginalInput()
            },
            refreshState: function refreshState() {
                this.refreshValidityState();
                this.refreshClasses()
            },
            refreshValidityState: function refreshValidityState() {
                if (!this.isRequired) return false;
                var invalid = !this.items.length;
                this.isInvalid = invalid;
                this.$control_input.prop("required", invalid);
                this.$input.prop("required", !invalid)
            },
            refreshClasses: function refreshClasses() {
                var self = this;
                var isFull = self.isFull();
                var isLocked = self.isLocked;
                self.$wrapper.toggleClass("rtl", self.rtl);
                self.$control.toggleClass("focus", self.isFocused).toggleClass("disabled", self.isDisabled).toggleClass("required", self.isRequired).toggleClass("invalid", self.isInvalid).toggleClass("locked", isLocked).toggleClass("full", isFull).toggleClass("not-full", !isFull).toggleClass("input-active", self.isFocused && !self.isInputHidden).toggleClass("dropdown-active", self.isOpen).toggleClass("has-options", !$.isEmptyObject(self.options)).toggleClass("has-items", self.items.length > 0);
                self.$control_input.data("grow", !isFull && !isLocked)
            },
            isFull: function isFull() {
                return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems
            },
            updateOriginalInput: function updateOriginalInput(opts) {
                var i, n, options, label, self = this;
                opts = opts || {};
                if (self.tagType === TAG_SELECT) {
                    options = [];
                    for (i = 0, n = self.items.length; i < n; i++) {
                        label = self.options[self.items[i]][self.settings.labelField] || "";
                        options.push('<option value="' + escape_html(self.items[i]) + '" selected="selected">' + escape_html(label) + "</option>")
                    }
                    if (!options.length && !this.$input.attr("multiple")) {
                        options.push('<option value="" selected="selected"></option>')
                    }
                    self.$input.html(options.join(""))
                } else {
                    self.$input.val(self.getValue());
                    self.$input.attr("value", self.$input.val())
                }
                if (self.isSetup) {
                    if (!opts.silent) {
                        self.trigger("change", self.$input.val())
                    }
                }
            },
            updatePlaceholder: function updatePlaceholder() {
                if (!this.settings.placeholder) return;
                var $input = this.$control_input;
                if (this.items.length) {
                    $input.removeAttr("placeholder")
                } else {
                    $input.attr("placeholder", this.settings.placeholder)
                }
                $input.triggerHandler("update", {
                    force: true
                })
            },
            open: function open() {
                var self = this;
                if (self.isLocked || self.isOpen || self.settings.mode === "multi" && self.isFull()) return;
                self.focus();
                self.isOpen = true;
                self.refreshState();
                self.$dropdown.css({
                    visibility: "hidden",
                    display: "block"
                });
                self.positionDropdown();
                self.$dropdown.css({
                    visibility: "visible"
                });
                self.trigger("dropdown_open", self.$dropdown)
            },
            close: function close() {
                var self = this;
                var trigger = self.isOpen;
                if (self.settings.mode === "single" && self.items.length) {
                    self.hideInput();
                    self.$control_input.blur()
                }
                self.isOpen = false;
                self.$dropdown.hide();
                self.setActiveOption(null);
                self.refreshState();
                if (trigger) self.trigger("dropdown_close", self.$dropdown)
            },
            positionDropdown: function positionDropdown() {
                var $control = this.$control;
                var offset = this.settings.dropdownParent === "body" ? $control.offset() : $control.position();
                offset.top += $control.outerHeight(true);
                this.$dropdown.css({
                    width: $control.outerWidth(),
                    top: offset.top,
                    left: offset.left
                })
            },
            clear: function clear(silent) {
                var self = this;
                if (!self.items.length) return;
                self.$control.children(":not(input)").remove();
                self.items = [];
                self.lastQuery = null;
                self.setCaret(0);
                self.setActiveItem(null);
                self.updatePlaceholder();
                self.updateOriginalInput({
                    silent: silent
                });
                self.refreshState();
                self.showInput();
                self.trigger("clear")
            },
            insertAtCaret: function insertAtCaret($el) {
                var caret = Math.min(this.caretPos, this.items.length);
                if (caret === 0) {
                    this.$control.prepend($el)
                } else {
                    $(this.$control[0].childNodes[caret]).before($el)
                }
                this.setCaret(caret + 1)
            },
            deleteSelection: function deleteSelection(e) {
                var i, n, direction, selection, values, caret, option_select, $option_select, $tail;
                var self = this;
                direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;
                selection = getSelection(self.$control_input[0]);
                if (self.$activeOption && !self.settings.hideSelected) {
                    option_select = self.getAdjacentOption(self.$activeOption, -1).attr("data-value")
                }
                values = [];
                if (self.$activeItems.length) {
                    $tail = self.$control.children(".active:" + (direction > 0 ? "last" : "first"));
                    caret = self.$control.children(":not(input)").index($tail);
                    if (direction > 0) {
                        caret++
                    }
                    for (i = 0, n = self.$activeItems.length; i < n; i++) {
                        values.push($(self.$activeItems[i]).attr("data-value"))
                    }
                    if (e) {
                        e.preventDefault();
                        e.stopPropagation()
                    }
                } else if ((self.isFocused || self.settings.mode === "single") && self.items.length) {
                    if (direction < 0 && selection.start === 0 && selection.length === 0) {
                        values.push(self.items[self.caretPos - 1])
                    } else if (direction > 0 && selection.start === self.$control_input.val().length) {
                        values.push(self.items[self.caretPos])
                    }
                }
                if (!values.length || typeof self.settings.onDelete === "function" && self.settings.onDelete.apply(self, [values]) === false) {
                    return false
                }
                if (typeof caret !== "undefined") {
                    self.setCaret(caret)
                }
                while (values.length) {
                    self.removeItem(values.pop())
                }
                self.showInput();
                self.positionDropdown();
                self.refreshOptions(true);
                if (option_select) {
                    $option_select = self.getOption(option_select);
                    if ($option_select.length) {
                        self.setActiveOption($option_select)
                    }
                }
                return true
            },
            advanceSelection: function advanceSelection(direction, e) {
                var tail, selection, idx, valueLength, cursorAtEdge, $tail;
                var self = this;
                if (direction === 0) return;
                if (self.rtl) direction *= -1;
                tail = direction > 0 ? "last" : "first";
                selection = getSelection(self.$control_input[0]);
                if (self.isFocused && !self.isInputHidden) {
                    valueLength = self.$control_input.val().length;
                    cursorAtEdge = direction < 0 ? selection.start === 0 && selection.length === 0 : selection.start === valueLength;
                    if (cursorAtEdge && !valueLength) {
                        self.advanceCaret(direction, e)
                    }
                } else {
                    $tail = self.$control.children(".active:" + tail);
                    if ($tail.length) {
                        idx = self.$control.children(":not(input)").index($tail);
                        self.setActiveItem(null);
                        self.setCaret(direction > 0 ? idx + 1 : idx)
                    }
                }
            },
            advanceCaret: function advanceCaret(direction, e) {
                var self = this,
                    fn, $adj;
                if (direction === 0) return;
                fn = direction > 0 ? "next" : "prev";
                if (self.isShiftDown) {
                    $adj = self.$control_input[fn]();
                    if ($adj.length) {
                        self.hideInput();
                        self.setActiveItem($adj);
                        e && e.preventDefault()
                    }
                } else {
                    self.setCaret(self.caretPos + direction)
                }
            },
            setCaret: function setCaret(i) {
                var self = this;
                if (self.settings.mode === "single") {
                    i = self.items.length
                } else {
                    i = Math.max(0, Math.min(self.items.length, i))
                }
                if (!self.isPending) {
                    var j, n, fn, $children, $child;
                    $children = self.$control.children(":not(input)");
                    for (j = 0, n = $children.length; j < n; j++) {
                        $child = $($children[j]).detach();
                        if (j < i) {
                            self.$control_input.before($child)
                        } else {
                            self.$control.append($child)
                        }
                    }
                }
                self.caretPos = i
            },
            lock: function lock() {
                this.close();
                this.isLocked = true;
                this.refreshState()
            },
            unlock: function unlock() {
                this.isLocked = false;
                this.refreshState()
            },
            disable: function disable() {
                var self = this;
                self.$input.prop("disabled", true);
                self.$control_input.prop("disabled", true).prop("tabindex", -1);
                self.isDisabled = true;
                self.lock()
            },
            enable: function enable() {
                var self = this;
                self.$input.prop("disabled", false);
                self.$control_input.prop("disabled", false).prop("tabindex", self.tabIndex);
                self.isDisabled = false;
                self.unlock()
            },
            destroy: function destroy() {
                var self = this;
                var eventNS = self.eventNS;
                var revertSettings = self.revertSettings;
                self.trigger("destroy");
                self.off();
                self.$wrapper.remove();
                self.$dropdown.remove();
                self.$input.html("").append(revertSettings.$children).removeAttr("tabindex").removeClass("selectized").attr({
                    tabindex: revertSettings.tabindex
                }).show();
                self.$control_input.removeData("grow");
                self.$input.removeData("selectize");
                $(window).off(eventNS);
                $(document).off(eventNS);
                $(document.body).off(eventNS);
                delete self.$input[0].selectize
            },
            render: function render(templateName, data) {
                var value, id, label;
                var html = "";
                var cache = false;
                var self = this;
                var regex_tag = /^[\t \r\n]*<([a-z][a-z0-9\-_]*(?:\:[a-z][a-z0-9\-_]*)?)/i;
                if (templateName === "option" || templateName === "item") {
                    value = hash_key(data[self.settings.valueField]);
                    cache = !!value
                }
                if (cache) {
                    if (!isset(self.renderCache[templateName])) {
                        self.renderCache[templateName] = {}
                    }
                    if (self.renderCache[templateName].hasOwnProperty(value)) {
                        return self.renderCache[templateName][value]
                    }
                }
                html = $(self.settings.render[templateName].apply(this, [data, escape_html]));
                if (templateName === "option" || templateName === "option_create") {
                    html.attr("data-selectable", "")
                } else if (templateName === "optgroup") {
                    id = data[self.settings.optgroupValueField] || "";
                    html.attr("data-group", id)
                }
                if (templateName === "option" || templateName === "item") {
                    html.attr("data-value", value || "")
                }
                if (cache) {
                    self.renderCache[templateName][value] = html[0]
                }
                return html[0]
            },
            clearCache: function clearCache(templateName) {
                var self = this;
                if (typeof templateName === "undefined") {
                    self.renderCache = {}
                } else {
                    delete self.renderCache[templateName]
                }
            },
            canCreate: function canCreate(input) {
                var self = this;
                if (!self.settings.create) return false;
                var filter = self.settings.createFilter;
                return input.length && (typeof filter !== "function" || filter.apply(self, [input])) && (typeof filter !== "string" || new RegExp(filter).test(input)) && (!(filter instanceof RegExp) || filter.test(input))
            }
        });
        Selectize.count = 0;
        Selectize.defaults = {
            options: [],
            optgroups: [],
            plugins: [],
            delimiter: ",",
            splitOn: null,
            persist: true,
            diacritics: true,
            create: false,
            createOnBlur: false,
            createFilter: null,
            highlight: true,
            openOnFocus: true,
            maxOptions: 1e3,
            maxItems: null,
            hideSelected: null,
            addPrecedence: false,
            selectOnTab: false,
            preload: false,
            allowEmptyOption: false,
            closeAfterSelect: false,
            scrollDuration: 60,
            loadThrottle: 300,
            loadingClass: "loading",
            dataAttr: "data-data",
            optgroupField: "optgroup",
            valueField: "value",
            labelField: "text",
            optgroupLabelField: "label",
            optgroupValueField: "value",
            lockOptgroupOrder: false,
            sortField: "$order",
            searchField: ["text"],
            searchConjunction: "and",
            mode: null,
            wrapperClass: "selectize-control",
            inputClass: "selectize-input",
            dropdownClass: "selectize-dropdown",
            dropdownContentClass: "selectize-dropdown-content",
            dropdownParent: null,
            copyClassesToDropdown: true,
            render: {}
        };
        $.fn.selectize = function(settings_user) {
            var defaults = $.fn.selectize.defaults;
            var settings = $.extend({}, defaults, settings_user);
            var attr_data = settings.dataAttr;
            var field_label = settings.labelField;
            var field_value = settings.valueField;
            var field_optgroup = settings.optgroupField;
            var field_optgroup_label = settings.optgroupLabelField;
            var field_optgroup_value = settings.optgroupValueField;
            var init_textbox = function init_textbox($input, settings_element) {
                var i, n, values, option;
                var data_raw = $input.attr(attr_data);
                if (!data_raw) {
                    var value = $.trim($input.val() || "");
                    if (!settings.allowEmptyOption && !value.length) return;
                    values = value.split(settings.delimiter);
                    for (i = 0, n = values.length; i < n; i++) {
                        option = {};
                        option[field_label] = values[i];
                        option[field_value] = values[i];
                        settings_element.options.push(option)
                    }
                    settings_element.items = values
                } else {
                    settings_element.options = JSON.parse(data_raw);
                    for (i = 0, n = settings_element.options.length; i < n; i++) {
                        settings_element.items.push(settings_element.options[i][field_value])
                    }
                }
            };
            var init_select = function init_select($input, settings_element) {
                var i, n, tagName, $children, order = 0;
                var options = settings_element.options;
                var optionsMap = {};
                var readData = function readData($el) {
                    var data = attr_data && $el.attr(attr_data);
                    if (typeof data === "string" && data.length) {
                        return JSON.parse(data)
                    }
                    return null
                };
                var addOption = function addOption($option, group) {
                    $option = $($option);
                    var value = hash_key($option.val());
                    if (!value && !settings.allowEmptyOption) return;
                    if (optionsMap.hasOwnProperty(value)) {
                        if (group) {
                            var arr = optionsMap[value][field_optgroup];
                            if (!arr) {
                                optionsMap[value][field_optgroup] = group
                            } else if (!$.isArray(arr)) {
                                optionsMap[value][field_optgroup] = [arr, group]
                            } else {
                                arr.push(group)
                            }
                        }
                        return
                    }
                    var option = readData($option) || {};
                    option[field_label] = option[field_label] || $option.text();
                    option[field_value] = option[field_value] || value;
                    option[field_optgroup] = option[field_optgroup] || group;
                    optionsMap[value] = option;
                    options.push(option);
                    if ($option.is(":selected")) {
                        settings_element.items.push(value)
                    }
                };
                var addGroup = function addGroup($optgroup) {
                    var i, n, id, optgroup, $options;
                    $optgroup = $($optgroup);
                    id = $optgroup.attr("label");
                    if (id) {
                        optgroup = readData($optgroup) || {};
                        optgroup[field_optgroup_label] = id;
                        optgroup[field_optgroup_value] = id;
                        settings_element.optgroups.push(optgroup)
                    }
                    $options = $("option", $optgroup);
                    for (i = 0, n = $options.length; i < n; i++) {
                        addOption($options[i], id)
                    }
                };
                settings_element.maxItems = $input.attr("multiple") ? null : 1;
                $children = $input.children();
                for (i = 0, n = $children.length; i < n; i++) {
                    tagName = $children[i].tagName.toLowerCase();
                    if (tagName === "optgroup") {
                        addGroup($children[i])
                    } else if (tagName === "option") {
                        addOption($children[i])
                    }
                }
            };
            return this.each(function() {
                if (this.selectize) return;
                var instance;
                var $input = $(this);
                var tag_name = this.tagName.toLowerCase();
                var placeholder = $input.attr("placeholder") || $input.attr("data-placeholder");
                if (!placeholder && !settings.allowEmptyOption) {
                    placeholder = $input.children('option[value=""]').text()
                }
                var settings_element = {
                    placeholder: placeholder,
                    options: [],
                    optgroups: [],
                    items: []
                };
                if (tag_name === "select") {
                    init_select($input, settings_element)
                } else {
                    init_textbox($input, settings_element)
                }
                instance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user))
            })
        };
        $.fn.selectize.defaults = Selectize.defaults;
        $.fn.selectize.support = {
            validity: SUPPORTS_VALIDITY_API
        };
        Selectize.define("drag_drop", function(options) {
            if (!$.fn.sortable) throw new Error('The "drag_drop" plugin requires jQuery UI "sortable".');
            if (this.settings.mode !== "multi") return;
            var self = this;
            self.lock = function() {
                var original = self.lock;
                return function() {
                    var sortable = self.$control.data("sortable");
                    if (sortable) sortable.disable();
                    return original.apply(self, arguments)
                }
            }();
            self.unlock = function() {
                var original = self.unlock;
                return function() {
                    var sortable = self.$control.data("sortable");
                    if (sortable) sortable.enable();
                    return original.apply(self, arguments)
                }
            }();
            self.setup = function() {
                var original = self.setup;
                return function() {
                    original.apply(this, arguments);
                    var $control = self.$control.sortable({
                        items: "[data-value]",
                        forcePlaceholderSize: true,
                        disabled: self.isLocked,
                        start: function start(e, ui) {
                            ui.placeholder.css("width", ui.helper.css("width"));
                            $control.css({
                                overflow: "visible"
                            })
                        },
                        stop: function stop() {
                            $control.css({
                                overflow: "hidden"
                            });
                            var active = self.$activeItems ? self.$activeItems.slice() : null;
                            var values = [];
                            $control.children("[data-value]").each(function() {
                                values.push($(this).attr("data-value"))
                            });
                            self.setValue(values);
                            self.setActiveItem(active)
                        }
                    })
                }
            }()
        });
        Selectize.define("dropdown_header", function(options) {
            var self = this;
            options = $.extend({
                title: "Untitled",
                headerClass: "selectize-dropdown-header",
                titleRowClass: "selectize-dropdown-header-title",
                labelClass: "selectize-dropdown-header-label",
                closeClass: "selectize-dropdown-header-close",
                html: function html(data) {
                    return '<div class="' + data.headerClass + '">' + '<div class="' + data.titleRowClass + '">' + '<span class="' + data.labelClass + '">' + data.title + "</span>" + '<a href="javascript:void(0)" class="' + data.closeClass + '">&times;</a>' + "</div>" + "</div>"
                }
            }, options);
            self.setup = function() {
                var original = self.setup;
                return function() {
                    original.apply(self, arguments);
                    self.$dropdown_header = $(options.html(options));
                    self.$dropdown.prepend(self.$dropdown_header)
                }
            }()
        });
        Selectize.define("optgroup_columns", function(options) {
            var self = this;
            options = $.extend({
                equalizeWidth: true,
                equalizeHeight: true
            }, options);
            this.getAdjacentOption = function($option, direction) {
                var $options = $option.closest("[data-group]").find("[data-selectable]");
                var index = $options.index($option) + direction;
                return index >= 0 && index < $options.length ? $options.eq(index) : $()
            };
            this.onKeyDown = function() {
                var original = self.onKeyDown;
                return function(e) {
                    var index, $option, $options, $optgroup;
                    if (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {
                        self.ignoreHover = true;
                        $optgroup = this.$activeOption.closest("[data-group]");
                        index = $optgroup.find("[data-selectable]").index(this.$activeOption);
                        if (e.keyCode === KEY_LEFT) {
                            $optgroup = $optgroup.prev("[data-group]")
                        } else {
                            $optgroup = $optgroup.next("[data-group]")
                        }
                        $options = $optgroup.find("[data-selectable]");
                        $option = $options.eq(Math.min($options.length - 1, index));
                        if ($option.length) {
                            this.setActiveOption($option)
                        }
                        return
                    }
                    return original.apply(this, arguments)
                }
            }();
            var getScrollbarWidth = function getScrollbarWidth() {
                var div;
                var width = getScrollbarWidth.width;
                var doc = document;
                if (typeof width === "undefined") {
                    div = doc.createElement("div");
                    div.innerHTML = '<div style="width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;"><div style="width:1px;height:100px;"></div></div>';
                    div = div.firstChild;
                    doc.body.appendChild(div);
                    width = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;
                    doc.body.removeChild(div)
                }
                return width
            };
            var equalizeSizes = function equalizeSizes() {
                var i, n, height_max, width, width_last, width_parent, $optgroups;
                $optgroups = $("[data-group]", self.$dropdown_content);
                n = $optgroups.length;
                if (!n || !self.$dropdown_content.width()) return;
                if (options.equalizeHeight) {
                    height_max = 0;
                    for (i = 0; i < n; i++) {
                        height_max = Math.max(height_max, $optgroups.eq(i).height())
                    }
                    $optgroups.css({
                        height: height_max
                    })
                }
                if (options.equalizeWidth) {
                    width_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();
                    width = Math.round(width_parent / n);
                    $optgroups.css({
                        width: width
                    });
                    if (n > 1) {
                        width_last = width_parent - width * (n - 1);
                        $optgroups.eq(n - 1).css({
                            width: width_last
                        })
                    }
                }
            };
            if (options.equalizeHeight || options.equalizeWidth) {
                hook.after(this, "positionDropdown", equalizeSizes);
                hook.after(this, "refreshOptions", equalizeSizes)
            }
        });
        Selectize.define("remove_button", function(options) {
            options = $.extend({
                label: "&times;",
                title: "Remove",
                className: "remove",
                append: true
            }, options);
            var singleClose = function singleClose(thisRef, options) {
                options.className = "remove-single";
                var self = thisRef;
                var html = '<a href="javascript:void(0)" class="' + options.className + '" tabindex="-1" title="' + escape_html(options.title) + '">' + options.label + "</a>";
                var append = function append(html_container, html_element) {
                    return html_container + html_element
                };
                thisRef.setup = function() {
                    var original = self.setup;
                    return function() {
                        if (options.append) {
                            var id = $(self.$input.context).attr("id");
                            var selectizer = $("#" + id);
                            var render_item = self.settings.render.item;
                            self.settings.render.item = function(data) {
                                return append(render_item.apply(thisRef, arguments), html)
                            }
                        }
                        original.apply(thisRef, arguments);
                        thisRef.$control.on("click", "." + options.className, function(e) {
                            e.preventDefault();
                            if (self.isLocked) return;
                            self.clear()
                        })
                    }
                }()
            };
            var multiClose = function multiClose(thisRef, options) {
                var self = thisRef;
                var html = '<a href="javascript:void(0)" class="' + options.className + '" tabindex="-1" title="' + escape_html(options.title) + '">' + options.label + "</a>";
                var append = function append(html_container, html_element) {
                    var pos = html_container.search(/(<\/[^>]+>\s*)$/);
                    return html_container.substring(0, pos) + html_element + html_container.substring(pos)
                };
                thisRef.setup = function() {
                    var original = self.setup;
                    return function() {
                        if (options.append) {
                            var render_item = self.settings.render.item;
                            self.settings.render.item = function(data) {
                                return append(render_item.apply(thisRef, arguments), html)
                            }
                        }
                        original.apply(thisRef, arguments);
                        thisRef.$control.on("click", "." + options.className, function(e) {
                            e.preventDefault();
                            if (self.isLocked) return;
                            var $item = $(e.currentTarget).parent();
                            self.setActiveItem($item);
                            if (self.deleteSelection()) {
                                self.setCaret(self.items.length)
                            }
                        })
                    }
                }()
            };
            if (this.settings.mode === "single") {
                singleClose(this, options);
                return
            } else {
                multiClose(this, options)
            }
        });
        Selectize.define("restore_on_backspace", function(options) {
            var self = this;
            options.text = options.text || function(option) {
                return option[this.settings.labelField]
            };
            this.onKeyDown = function() {
                var original = self.onKeyDown;
                return function(e) {
                    var index, option;
                    if (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === "" && !this.$activeItems.length) {
                        index = this.caretPos - 1;
                        if (index >= 0 && index < this.items.length) {
                            option = this.options[this.items[index]];
                            if (this.deleteSelection(e)) {
                                this.setTextboxValue(options.text.apply(this, [option]));
                                this.refreshOptions(true)
                            }
                            e.preventDefault();
                            return
                        }
                    }
                    return original.apply(this, arguments)
                }
            }()
        });
        return Selectize
    })
}, function(module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    (function(global, factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, module], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else if (typeof exports !== "undefined" && typeof module !== "undefined") {
            factory(exports, module)
        } else {
            var mod = {
                exports: {}
            };
            factory(mod.exports, mod);
            global.autosize = mod.exports
        }
    })(undefined, function(exports, module) {
        "use strict";
        var map = typeof Map === "function" ? new Map : function() {
            var keys = [];
            var values = [];
            return {
                has: function has(key) {
                    return keys.indexOf(key) > -1
                },
                get: function get(key) {
                    return values[keys.indexOf(key)]
                },
                set: function set(key, value) {
                    if (keys.indexOf(key) === -1) {
                        keys.push(key);
                        values.push(value)
                    }
                },
                delete: function _delete(key) {
                    var index = keys.indexOf(key);
                    if (index > -1) {
                        keys.splice(index, 1);
                        values.splice(index, 1)
                    }
                }
            }
        }();
        var createEvent = function createEvent(name) {
            return new Event(name, {
                bubbles: true
            })
        };
        try {
            new Event("test")
        } catch (e) {
            createEvent = function createEvent(name) {
                var evt = document.createEvent("Event");
                evt.initEvent(name, true, false);
                return evt
            }
        }

        function assign(ta) {
            if (!ta || !ta.nodeName || ta.nodeName !== "TEXTAREA" || map.has(ta)) return;
            var heightOffset = null;
            var clientWidth = ta.clientWidth;
            var cachedHeight = null;

            function init() {
                var style = window.getComputedStyle(ta, null);
                if (style.resize === "vertical") {
                    ta.style.resize = "none"
                } else if (style.resize === "both") {
                    ta.style.resize = "horizontal"
                }
                if (style.boxSizing === "content-box") {
                    heightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom))
                } else {
                    heightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth)
                }
                if (isNaN(heightOffset)) {
                    heightOffset = 0
                }
                update()
            }

            function changeOverflow(value) {
                {
                    var width = ta.style.width;
                    ta.style.width = "0px";
                    ta.offsetWidth;
                    ta.style.width = width
                }
                ta.style.overflowY = value
            }

            function getParentOverflows(el) {
                var arr = [];
                while (el && el.parentNode && el.parentNode instanceof Element) {
                    if (el.parentNode.scrollTop) {
                        arr.push({
                            node: el.parentNode,
                            scrollTop: el.parentNode.scrollTop
                        })
                    }
                    el = el.parentNode
                }
                return arr
            }

            function resize() {
                var originalHeight = ta.style.height;
                var overflows = getParentOverflows(ta);
                var docTop = document.documentElement && document.documentElement.scrollTop;
                ta.style.height = "";
                var endHeight = ta.scrollHeight + heightOffset;
                if (ta.scrollHeight === 0) {
                    ta.style.height = originalHeight;
                    return
                }
                ta.style.height = endHeight + "px";
                clientWidth = ta.clientWidth;
                overflows.forEach(function(el) {
                    el.node.scrollTop = el.scrollTop
                });
                if (docTop) {
                    document.documentElement.scrollTop = docTop
                }
            }

            function update() {
                resize();
                var styleHeight = Math.round(parseFloat(ta.style.height));
                var computed = window.getComputedStyle(ta, null);
                var actualHeight = computed.boxSizing === "content-box" ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;
                if (actualHeight !== styleHeight) {
                    if (computed.overflowY === "hidden") {
                        changeOverflow("scroll");
                        resize();
                        actualHeight = computed.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight
                    }
                } else {
                    if (computed.overflowY !== "hidden") {
                        changeOverflow("hidden");
                        resize();
                        actualHeight = computed.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight
                    }
                }
                if (cachedHeight !== actualHeight) {
                    cachedHeight = actualHeight;
                    var evt = createEvent("autosize:resized");
                    try {
                        ta.dispatchEvent(evt)
                    } catch (err) {}
                }
            }
            var pageResize = function pageResize() {
                if (ta.clientWidth !== clientWidth) {
                    update()
                }
            };
            var destroy = function(style) {
                window.removeEventListener("resize", pageResize, false);
                ta.removeEventListener("input", update, false);
                ta.removeEventListener("keyup", update, false);
                ta.removeEventListener("autosize:destroy", destroy, false);
                ta.removeEventListener("autosize:update", update, false);
                Object.keys(style).forEach(function(key) {
                    ta.style[key] = style[key]
                });
                map["delete"](ta)
            }.bind(ta, {
                height: ta.style.height,
                resize: ta.style.resize,
                overflowY: ta.style.overflowY,
                overflowX: ta.style.overflowX,
                wordWrap: ta.style.wordWrap
            });
            ta.addEventListener("autosize:destroy", destroy, false);
            if ("onpropertychange" in ta && "oninput" in ta) {
                ta.addEventListener("keyup", update, false)
            }
            window.addEventListener("resize", pageResize, false);
            ta.addEventListener("input", update, false);
            ta.addEventListener("autosize:update", update, false);
            ta.style.overflowX = "hidden";
            ta.style.wordWrap = "break-word";
            map.set(ta, {
                destroy: destroy,
                update: update
            });
            init()
        }

        function destroy(ta) {
            var methods = map.get(ta);
            if (methods) {
                methods.destroy()
            }
        }

        function update(ta) {
            var methods = map.get(ta);
            if (methods) {
                methods.update()
            }
        }
        var autosize = null;
        if (typeof window === "undefined" || typeof window.getComputedStyle !== "function") {
            autosize = function autosize(el) {
                return el
            };
            autosize.destroy = function(el) {
                return el
            };
            autosize.update = function(el) {
                return el
            }
        } else {
            autosize = function autosize(el, options) {
                if (el) {
                    Array.prototype.forEach.call(el.length ? el : [el], function(x) {
                        return assign(x, options)
                    })
                }
                return el
            };
            autosize.destroy = function(el) {
                if (el) {
                    Array.prototype.forEach.call(el.length ? el : [el], destroy)
                }
                return el
            };
            autosize.update = function(el) {
                if (el) {
                    Array.prototype.forEach.call(el.length ? el : [el], update)
                }
                return el
            }
        }
        module.exports = autosize
    })
}, function(module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var require;
    var require;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
        return typeof obj
    } : function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function(f) {
        if ((false ? "undefined" : _typeof(exports)) === "object" && typeof module !== "undefined") {
            module.exports = f()
        } else if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = f, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else {
            var g;
            if (typeof window !== "undefined") {
                g = window
            } else if (typeof global !== "undefined") {
                g = global
            } else if (typeof self !== "undefined") {
                g = self
            } else {
                g = this
            }
            g.enquire = f()
        }
    })(function() {
        var define, module, exports;
        return function e(t, n, r) {
            function s(o, u) {
                if (!n[o]) {
                    if (!t[o]) {
                        var a = typeof require == "function" && require;
                        if (!u && a) return require(o, !0);
                        if (i) return i(o, !0);
                        var f = new Error("Cannot find module '" + o + "'");
                        throw f.code = "MODULE_NOT_FOUND", f
                    }
                    var l = n[o] = {
                        exports: {}
                    };
                    t[o][0].call(l.exports, function(e) {
                        var n = t[o][1][e];
                        return s(n ? n : e)
                    }, l, l.exports, e, t, n, r)
                }
                return n[o].exports
            }
            var i = typeof require == "function" && require;
            for (var o = 0; o < r.length; o++) {
                s(r[o])
            }
            return s
        }({
            1: [function(require, module, exports) {
                var QueryHandler = require(3);
                var each = require(4).each;

                function MediaQuery(query, isUnconditional) {
                    this.query = query;
                    this.isUnconditional = isUnconditional;
                    this.handlers = [];
                    this.mql = window.matchMedia(query);
                    var self = this;
                    this.listener = function(mql) {
                        self.mql = mql.currentTarget || mql;
                        self.assess()
                    };
                    this.mql.addListener(this.listener)
                }
                MediaQuery.prototype = {
                    constuctor: MediaQuery,
                    addHandler: function addHandler(handler) {
                        var qh = new QueryHandler(handler);
                        this.handlers.push(qh);
                        this.matches() && qh.on()
                    },
                    removeHandler: function removeHandler(handler) {
                        var handlers = this.handlers;
                        each(handlers, function(h, i) {
                            if (h.equals(handler)) {
                                h.destroy();
                                return !handlers.splice(i, 1)
                            }
                        })
                    },
                    matches: function matches() {
                        return this.mql.matches || this.isUnconditional
                    },
                    clear: function clear() {
                        each(this.handlers, function(handler) {
                            handler.destroy()
                        });
                        this.mql.removeListener(this.listener);
                        this.handlers.length = 0
                    },
                    assess: function assess() {
                        var action = this.matches() ? "on" : "off";
                        each(this.handlers, function(handler) {
                            handler[action]()
                        })
                    }
                };
                module.exports = MediaQuery
            }, {
                3: 3,
                4: 4
            }],
            2: [function(require, module, exports) {
                var MediaQuery = require(1);
                var Util = require(4);
                var each = Util.each;
                var isFunction = Util.isFunction;
                var isArray = Util.isArray;

                function MediaQueryDispatch() {
                    if (!window.matchMedia) {
                        throw new Error("matchMedia not present, legacy browsers require a polyfill")
                    }
                    this.queries = {};
                    this.browserIsIncapable = !window.matchMedia("only all").matches
                }
                MediaQueryDispatch.prototype = {
                    constructor: MediaQueryDispatch,
                    register: function register(q, options, shouldDegrade) {
                        var queries = this.queries,
                            isUnconditional = shouldDegrade && this.browserIsIncapable;
                        if (!queries[q]) {
                            queries[q] = new MediaQuery(q, isUnconditional)
                        }
                        if (isFunction(options)) {
                            options = {
                                match: options
                            }
                        }
                        if (!isArray(options)) {
                            options = [options]
                        }
                        each(options, function(handler) {
                            if (isFunction(handler)) {
                                handler = {
                                    match: handler
                                }
                            }
                            queries[q].addHandler(handler)
                        });
                        return this
                    },
                    unregister: function unregister(q, handler) {
                        var query = this.queries[q];
                        if (query) {
                            if (handler) {
                                query.removeHandler(handler)
                            } else {
                                query.clear();
                                delete this.queries[q]
                            }
                        }
                        return this
                    }
                };
                module.exports = MediaQueryDispatch
            }, {
                1: 1,
                4: 4
            }],
            3: [function(require, module, exports) {
                function QueryHandler(options) {
                    this.options = options;
                    !options.deferSetup && this.setup()
                }
                QueryHandler.prototype = {
                    constructor: QueryHandler,
                    setup: function setup() {
                        if (this.options.setup) {
                            this.options.setup()
                        }
                        this.initialised = true
                    },
                    on: function on() {
                        !this.initialised && this.setup();
                        this.options.match && this.options.match()
                    },
                    off: function off() {
                        this.options.unmatch && this.options.unmatch()
                    },
                    destroy: function destroy() {
                        this.options.destroy ? this.options.destroy() : this.off()
                    },
                    equals: function equals(target) {
                        return this.options === target || this.options.match === target
                    }
                };
                module.exports = QueryHandler
            }, {}],
            4: [function(require, module, exports) {
                function each(collection, fn) {
                    var i = 0,
                        length = collection.length,
                        cont;
                    for (i; i < length; i++) {
                        cont = fn(collection[i], i);
                        if (cont === false) {
                            break
                        }
                    }
                }

                function isArray(target) {
                    return Object.prototype.toString.apply(target) === "[object Array]"
                }

                function isFunction(target) {
                    return typeof target === "function"
                }
                module.exports = {
                    isFunction: isFunction,
                    isArray: isArray,
                    each: each
                }
            }, {}],
            5: [function(require, module, exports) {
                var MediaQueryDispatch = require(2);
                module.exports = new MediaQueryDispatch
            }, {
                2: 2
            }]
        }, {}, [5])(5)
    })
}, function(module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    (function(factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else {
            factory(jQuery)
        }
    })(function($) {
        $.ui = $.ui || {};
        var version = $.ui.version = "1.12.1";
        var widgetUuid = 0;
        var widgetSlice = Array.prototype.slice;
        $.cleanData = function(orig) {
            return function(elems) {
                var events, elem, i;
                for (i = 0;
                    (elem = elems[i]) != null; i++) {
                    try {
                        events = $._data(elem, "events");
                        if (events && events.remove) {
                            $(elem).triggerHandler("remove")
                        }
                    } catch (e) {}
                }
                orig(elems)
            }
        }($.cleanData);
        $.widget = function(name, base, prototype) {
            var existingConstructor, constructor, basePrototype;
            var proxiedPrototype = {};
            var namespace = name.split(".")[0];
            name = name.split(".")[1];
            var fullName = namespace + "-" + name;
            if (!prototype) {
                prototype = base;
                base = $.Widget
            }
            if ($.isArray(prototype)) {
                prototype = $.extend.apply(null, [{}].concat(prototype))
            }
            $.expr[":"][fullName.toLowerCase()] = function(elem) {
                return !!$.data(elem, fullName)
            };
            $[namespace] = $[namespace] || {};
            existingConstructor = $[namespace][name];
            constructor = $[namespace][name] = function(options, element) {
                if (!this._createWidget) {
                    return new constructor(options, element)
                }
                if (arguments.length) {
                    this._createWidget(options, element)
                }
            };
            $.extend(constructor, existingConstructor, {
                version: prototype.version,
                _proto: $.extend({}, prototype),
                _childConstructors: []
            });
            basePrototype = new base;
            basePrototype.options = $.widget.extend({}, basePrototype.options);
            $.each(prototype, function(prop, value) {
                if (!$.isFunction(value)) {
                    proxiedPrototype[prop] = value;
                    return
                }
                proxiedPrototype[prop] = function() {
                    function _super() {
                        return base.prototype[prop].apply(this, arguments)
                    }

                    function _superApply(args) {
                        return base.prototype[prop].apply(this, args)
                    }
                    return function() {
                        var __super = this._super;
                        var __superApply = this._superApply;
                        var returnValue;
                        this._super = _super;
                        this._superApply = _superApply;
                        returnValue = value.apply(this, arguments);
                        this._super = __super;
                        this._superApply = __superApply;
                        return returnValue
                    }
                }()
            });
            constructor.prototype = $.widget.extend(basePrototype, {
                widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix || name : name
            }, proxiedPrototype, {
                constructor: constructor,
                namespace: namespace,
                widgetName: name,
                widgetFullName: fullName
            });
            if (existingConstructor) {
                $.each(existingConstructor._childConstructors, function(i, child) {
                    var childPrototype = child.prototype;
                    $.widget(childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto)
                });
                delete existingConstructor._childConstructors
            } else {
                base._childConstructors.push(constructor)
            }
            $.widget.bridge(name, constructor);
            return constructor
        };
        $.widget.extend = function(target) {
            var input = widgetSlice.call(arguments, 1);
            var inputIndex = 0;
            var inputLength = input.length;
            var key;
            var value;
            for (; inputIndex < inputLength; inputIndex++) {
                for (key in input[inputIndex]) {
                    value = input[inputIndex][key];
                    if (input[inputIndex].hasOwnProperty(key) && value !== undefined) {
                        if ($.isPlainObject(value)) {
                            target[key] = $.isPlainObject(target[key]) ? $.widget.extend({}, target[key], value) : $.widget.extend({}, value)
                        } else {
                            target[key] = value
                        }
                    }
                }
            }
            return target
        };
        $.widget.bridge = function(name, object) {
            var fullName = object.prototype.widgetFullName || name;
            $.fn[name] = function(options) {
                var isMethodCall = typeof options === "string";
                var args = widgetSlice.call(arguments, 1);
                var returnValue = this;
                if (isMethodCall) {
                    if (!this.length && options === "instance") {
                        returnValue = undefined
                    } else {
                        this.each(function() {
                            var methodValue;
                            var instance = $.data(this, fullName);
                            if (options === "instance") {
                                returnValue = instance;
                                return false
                            }
                            if (!instance) {
                                return $.error("cannot call methods on " + name + " prior to initialization; " + "attempted to call method '" + options + "'")
                            }
                            if (!$.isFunction(instance[options]) || options.charAt(0) === "_") {
                                return $.error("no such method '" + options + "' for " + name + " widget instance")
                            }
                            methodValue = instance[options].apply(instance, args);
                            if (methodValue !== instance && methodValue !== undefined) {
                                returnValue = methodValue && methodValue.jquery ? returnValue.pushStack(methodValue.get()) : methodValue;
                                return false
                            }
                        })
                    }
                } else {
                    if (args.length) {
                        options = $.widget.extend.apply(null, [options].concat(args))
                    }
                    this.each(function() {
                        var instance = $.data(this, fullName);
                        if (instance) {
                            instance.option(options || {});
                            if (instance._init) {
                                instance._init()
                            }
                        } else {
                            $.data(this, fullName, new object(options, this))
                        }
                    })
                }
                return returnValue
            }
        };
        $.Widget = function() {};
        $.Widget._childConstructors = [];
        $.Widget.prototype = {
            widgetName: "widget",
            widgetEventPrefix: "",
            defaultElement: "<div>",
            options: {
                classes: {},
                disabled: false,
                create: null
            },
            _createWidget: function _createWidget(options, element) {
                element = $(element || this.defaultElement || this)[0];
                this.element = $(element);
                this.uuid = widgetUuid++;
                this.eventNamespace = "." + this.widgetName + this.uuid;
                this.bindings = $();
                this.hoverable = $();
                this.focusable = $();
                this.classesElementLookup = {};
                if (element !== this) {
                    $.data(element, this.widgetFullName, this);
                    this._on(true, this.element, {
                        remove: function remove(event) {
                            if (event.target === element) {
                                this.destroy()
                            }
                        }
                    });
                    this.document = $(element.style ? element.ownerDocument : element.document || element);
                    this.window = $(this.document[0].defaultView || this.document[0].parentWindow)
                }
                this.options = $.widget.extend({}, this.options, this._getCreateOptions(), options);
                this._create();
                if (this.options.disabled) {
                    this._setOptionDisabled(this.options.disabled)
                }
                this._trigger("create", null, this._getCreateEventData());
                this._init()
            },
            _getCreateOptions: function _getCreateOptions() {
                return {}
            },
            _getCreateEventData: $.noop,
            _create: $.noop,
            _init: $.noop,
            destroy: function destroy() {
                var that = this;
                this._destroy();
                $.each(this.classesElementLookup, function(key, value) {
                    that._removeClass(value, key)
                });
                this.element.off(this.eventNamespace).removeData(this.widgetFullName);
                this.widget().off(this.eventNamespace).removeAttr("aria-disabled");
                this.bindings.off(this.eventNamespace)
            },
            _destroy: $.noop,
            widget: function widget() {
                return this.element
            },
            option: function option(key, value) {
                var options = key;
                var parts;
                var curOption;
                var i;
                if (arguments.length === 0) {
                    return $.widget.extend({}, this.options)
                }
                if (typeof key === "string") {
                    options = {};
                    parts = key.split(".");
                    key = parts.shift();
                    if (parts.length) {
                        curOption = options[key] = $.widget.extend({}, this.options[key]);
                        for (i = 0; i < parts.length - 1; i++) {
                            curOption[parts[i]] = curOption[parts[i]] || {};
                            curOption = curOption[parts[i]]
                        }
                        key = parts.pop();
                        if (arguments.length === 1) {
                            return curOption[key] === undefined ? null : curOption[key]
                        }
                        curOption[key] = value
                    } else {
                        if (arguments.length === 1) {
                            return this.options[key] === undefined ? null : this.options[key]
                        }
                        options[key] = value
                    }
                }
                this._setOptions(options);
                return this
            },
            _setOptions: function _setOptions(options) {
                var key;
                for (key in options) {
                    this._setOption(key, options[key])
                }
                return this
            },
            _setOption: function _setOption(key, value) {
                if (key === "classes") {
                    this._setOptionClasses(value)
                }
                this.options[key] = value;
                if (key === "disabled") {
                    this._setOptionDisabled(value)
                }
                return this
            },
            _setOptionClasses: function _setOptionClasses(value) {
                var classKey, elements, currentElements;
                for (classKey in value) {
                    currentElements = this.classesElementLookup[classKey];
                    if (value[classKey] === this.options.classes[classKey] || !currentElements || !currentElements.length) {
                        continue
                    }
                    elements = $(currentElements.get());
                    this._removeClass(currentElements, classKey);
                    elements.addClass(this._classes({
                        element: elements,
                        keys: classKey,
                        classes: value,
                        add: true
                    }))
                }
            },
            _setOptionDisabled: function _setOptionDisabled(value) {
                this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!value);
                if (value) {
                    this._removeClass(this.hoverable, null, "ui-state-hover");
                    this._removeClass(this.focusable, null, "ui-state-focus")
                }
            },
            enable: function enable() {
                return this._setOptions({
                    disabled: false
                })
            },
            disable: function disable() {
                return this._setOptions({
                    disabled: true
                })
            },
            _classes: function _classes(options) {
                var full = [];
                var that = this;
                options = $.extend({
                    element: this.element,
                    classes: this.options.classes || {}
                }, options);

                function processClassString(classes, checkOption) {
                    var current, i;
                    for (i = 0; i < classes.length; i++) {
                        current = that.classesElementLookup[classes[i]] || $();
                        if (options.add) {
                            current = $($.unique(current.get().concat(options.element.get())))
                        } else {
                            current = $(current.not(options.element).get())
                        }
                        that.classesElementLookup[classes[i]] = current;
                        full.push(classes[i]);
                        if (checkOption && options.classes[classes[i]]) {
                            full.push(options.classes[classes[i]])
                        }
                    }
                }
                this._on(options.element, {
                    remove: "_untrackClassesElement"
                });
                if (options.keys) {
                    processClassString(options.keys.match(/\S+/g) || [], true)
                }
                if (options.extra) {
                    processClassString(options.extra.match(/\S+/g) || [])
                }
                return full.join(" ")
            },
            _untrackClassesElement: function _untrackClassesElement(event) {
                var that = this;
                $.each(that.classesElementLookup, function(key, value) {
                    if ($.inArray(event.target, value) !== -1) {
                        that.classesElementLookup[key] = $(value.not(event.target).get())
                    }
                })
            },
            _removeClass: function _removeClass(element, keys, extra) {
                return this._toggleClass(element, keys, extra, false)
            },
            _addClass: function _addClass(element, keys, extra) {
                return this._toggleClass(element, keys, extra, true)
            },
            _toggleClass: function _toggleClass(element, keys, extra, add) {
                add = typeof add === "boolean" ? add : extra;
                var shift = typeof element === "string" || element === null,
                    options = {
                        extra: shift ? keys : extra,
                        keys: shift ? element : keys,
                        element: shift ? this.element : element,
                        add: add
                    };
                options.element.toggleClass(this._classes(options), add);
                return this
            },
            _on: function _on(suppressDisabledCheck, element, handlers) {
                var delegateElement;
                var instance = this;
                if (typeof suppressDisabledCheck !== "boolean") {
                    handlers = element;
                    element = suppressDisabledCheck;
                    suppressDisabledCheck = false
                }
                if (!handlers) {
                    handlers = element;
                    element = this.element;
                    delegateElement = this.widget()
                } else {
                    element = delegateElement = $(element);
                    this.bindings = this.bindings.add(element)
                }
                $.each(handlers, function(event, handler) {
                    function handlerProxy() {
                        if (!suppressDisabledCheck && (instance.options.disabled === true || $(this).hasClass("ui-state-disabled"))) {
                            return
                        }
                        return (typeof handler === "string" ? instance[handler] : handler).apply(instance, arguments)
                    }
                    if (typeof handler !== "string") {
                        handlerProxy.guid = handler.guid = handler.guid || handlerProxy.guid || $.guid++
                    }
                    var match = event.match(/^([\w:-]*)\s*(.*)$/);
                    var eventName = match[1] + instance.eventNamespace;
                    var selector = match[2];
                    if (selector) {
                        delegateElement.on(eventName, selector, handlerProxy)
                    } else {
                        element.on(eventName, handlerProxy)
                    }
                })
            },
            _off: function _off(element, eventName) {
                eventName = (eventName || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
                element.off(eventName).off(eventName);
                this.bindings = $(this.bindings.not(element).get());
                this.focusable = $(this.focusable.not(element).get());
                this.hoverable = $(this.hoverable.not(element).get())
            },
            _delay: function _delay(handler, delay) {
                function handlerProxy() {
                    return (typeof handler === "string" ? instance[handler] : handler).apply(instance, arguments)
                }
                var instance = this;
                return setTimeout(handlerProxy, delay || 0)
            },
            _hoverable: function _hoverable(element) {
                this.hoverable = this.hoverable.add(element);
                this._on(element, {
                    mouseenter: function mouseenter(event) {
                        this._addClass($(event.currentTarget), null, "ui-state-hover")
                    },
                    mouseleave: function mouseleave(event) {
                        this._removeClass($(event.currentTarget), null, "ui-state-hover")
                    }
                })
            },
            _focusable: function _focusable(element) {
                this.focusable = this.focusable.add(element);
                this._on(element, {
                    focusin: function focusin(event) {
                        this._addClass($(event.currentTarget), null, "ui-state-focus")
                    },
                    focusout: function focusout(event) {
                        this._removeClass($(event.currentTarget), null, "ui-state-focus")
                    }
                })
            },
            _trigger: function _trigger(type, event, data) {
                var prop, orig;
                var callback = this.options[type];
                data = data || {};
                event = $.Event(event);
                event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase();
                event.target = this.element[0];
                orig = event.originalEvent;
                if (orig) {
                    for (prop in orig) {
                        if (!(prop in event)) {
                            event[prop] = orig[prop]
                        }
                    }
                }
                this.element.trigger(event, data);
                return !($.isFunction(callback) && callback.apply(this.element[0], [event].concat(data)) === false || event.isDefaultPrevented())
            }
        };
        $.each({
            show: "fadeIn",
            hide: "fadeOut"
        }, function(method, defaultEffect) {
            $.Widget.prototype["_" + method] = function(element, options, callback) {
                if (typeof options === "string") {
                    options = {
                        effect: options
                    }
                }
                var hasOptions;
                var effectName = !options ? method : options === true || typeof options === "number" ? defaultEffect : options.effect || defaultEffect;
                options = options || {};
                if (typeof options === "number") {
                    options = {
                        duration: options
                    }
                }
                hasOptions = !$.isEmptyObject(options);
                options.complete = callback;
                if (options.delay) {
                    element.delay(options.delay)
                }
                if (hasOptions && $.effects && $.effects.effect[effectName]) {
                    element[method](options)
                } else if (effectName !== method && element[effectName]) {
                    element[effectName](options.duration, options.easing, callback)
                } else {
                    element.queue(function(next) {
                        $(this)[method]();
                        if (callback) {
                            callback.call(element[0])
                        }
                        next()
                    })
                }
            }
        });
        var widget = $.widget;
        var keycode = $.ui.keyCode = {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        };
        var ie = $.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
        var mouseHandled = false;
        $(document).on("mouseup", function() {
            mouseHandled = false
        });
        var widgetsMouse = $.widget("ui.mouse", {
            version: "1.12.1",
            options: {
                cancel: "input, textarea, button, select, option",
                distance: 1,
                delay: 0
            },
            _mouseInit: function _mouseInit() {
                var that = this;
                this.element.on("mousedown." + this.widgetName, function(event) {
                    return that._mouseDown(event)
                }).on("click." + this.widgetName, function(event) {
                    if (true === $.data(event.target, that.widgetName + ".preventClickEvent")) {
                        $.removeData(event.target, that.widgetName + ".preventClickEvent");
                        event.stopImmediatePropagation();
                        return false
                    }
                });
                this.started = false
            },
            _mouseDestroy: function _mouseDestroy() {
                this.element.off("." + this.widgetName);
                if (this._mouseMoveDelegate) {
                    this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate)
                }
            },
            _mouseDown: function _mouseDown(event) {
                if (mouseHandled) {
                    return
                }
                this._mouseMoved = false;
                this._mouseStarted && this._mouseUp(event);
                this._mouseDownEvent = event;
                var that = this,
                    btnIsLeft = event.which === 1,
                    elIsCancel = typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false;
                if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
                    return true
                }
                this.mouseDelayMet = !this.options.delay;
                if (!this.mouseDelayMet) {
                    this._mouseDelayTimer = setTimeout(function() {
                        that.mouseDelayMet = true
                    }, this.options.delay)
                }
                if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
                    this._mouseStarted = this._mouseStart(event) !== false;
                    if (!this._mouseStarted) {
                        event.preventDefault();
                        return true
                    }
                }
                if (true === $.data(event.target, this.widgetName + ".preventClickEvent")) {
                    $.removeData(event.target, this.widgetName + ".preventClickEvent")
                }
                this._mouseMoveDelegate = function(event) {
                    return that._mouseMove(event)
                };
                this._mouseUpDelegate = function(event) {
                    return that._mouseUp(event)
                };
                this.document.on("mousemove." + this.widgetName, this._mouseMoveDelegate).on("mouseup." + this.widgetName, this._mouseUpDelegate);
                event.preventDefault();
                mouseHandled = true;
                return true
            },
            _mouseMove: function _mouseMove(event) {
                if (this._mouseMoved) {
                    if ($.ui.ie && (!document.documentMode || document.documentMode < 9) && !event.button) {
                        return this._mouseUp(event)
                    } else if (!event.which) {
                        if (event.originalEvent.altKey || event.originalEvent.ctrlKey || event.originalEvent.metaKey || event.originalEvent.shiftKey) {
                            this.ignoreMissingWhich = true
                        } else if (!this.ignoreMissingWhich) {
                            return this._mouseUp(event)
                        }
                    }
                }
                if (event.which || event.button) {
                    this._mouseMoved = true
                }
                if (this._mouseStarted) {
                    this._mouseDrag(event);
                    return event.preventDefault()
                }
                if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
                    this._mouseStarted = this._mouseStart(this._mouseDownEvent, event) !== false;
                    this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event)
                }
                return !this._mouseStarted
            },
            _mouseUp: function _mouseUp(event) {
                this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate);
                if (this._mouseStarted) {
                    this._mouseStarted = false;
                    if (event.target === this._mouseDownEvent.target) {
                        $.data(event.target, this.widgetName + ".preventClickEvent", true)
                    }
                    this._mouseStop(event)
                }
                if (this._mouseDelayTimer) {
                    clearTimeout(this._mouseDelayTimer);
                    delete this._mouseDelayTimer
                }
                this.ignoreMissingWhich = false;
                mouseHandled = false;
                event.preventDefault()
            },
            _mouseDistanceMet: function _mouseDistanceMet(event) {
                return Math.max(Math.abs(this._mouseDownEvent.pageX - event.pageX), Math.abs(this._mouseDownEvent.pageY - event.pageY)) >= this.options.distance
            },
            _mouseDelayMet: function _mouseDelayMet() {
                return this.mouseDelayMet
            },
            _mouseStart: function _mouseStart() {},
            _mouseDrag: function _mouseDrag() {},
            _mouseStop: function _mouseStop() {},
            _mouseCapture: function _mouseCapture() {
                return true
            }
        });
        var widgetsSlider = $.widget("ui.slider", $.ui.mouse, {
            version: "1.12.1",
            widgetEventPrefix: "slide",
            options: {
                animate: false,
                classes: {
                    "ui-slider": "ui-corner-all",
                    "ui-slider-handle": "ui-corner-all",
                    "ui-slider-range": "ui-corner-all ui-widget-header"
                },
                distance: 0,
                max: 100,
                min: 0,
                orientation: "horizontal",
                range: false,
                step: 1,
                value: 0,
                values: null,
                change: null,
                slide: null,
                start: null,
                stop: null
            },
            numPages: 5,
            _create: function _create() {
                this._keySliding = false;
                this._mouseSliding = false;
                this._animateOff = true;
                this._handleIndex = null;
                this._detectOrientation();
                this._mouseInit();
                this._calculateNewMax();
                this._addClass("ui-slider ui-slider-" + this.orientation, "ui-widget ui-widget-content");
                this._refresh();
                this._animateOff = false
            },
            _refresh: function _refresh() {
                this._createRange();
                this._createHandles();
                this._setupEvents();
                this._refreshValue()
            },
            _createHandles: function _createHandles() {
                var i, handleCount, options = this.options,
                    existingHandles = this.element.find(".ui-slider-handle"),
                    handle = "<span tabindex='0'></span>",
                    handles = [];
                handleCount = options.values && options.values.length || 1;
                if (existingHandles.length > handleCount) {
                    existingHandles.slice(handleCount).remove();
                    existingHandles = existingHandles.slice(0, handleCount)
                }
                for (i = existingHandles.length; i < handleCount; i++) {
                    handles.push(handle)
                }
                this.handles = existingHandles.add($(handles.join("")).appendTo(this.element));
                this._addClass(this.handles, "ui-slider-handle", "ui-state-default");
                this.handle = this.handles.eq(0);
                this.handles.each(function(i) {
                    $(this).data("ui-slider-handle-index", i).attr("tabIndex", 0)
                })
            },
            _createRange: function _createRange() {
                var options = this.options;
                if (options.range) {
                    if (options.range === true) {
                        if (!options.values) {
                            options.values = [this._valueMin(), this._valueMin()]
                        } else if (options.values.length && options.values.length !== 2) {
                            options.values = [options.values[0], options.values[0]]
                        } else if ($.isArray(options.values)) {
                            options.values = options.values.slice(0)
                        }
                    }
                    if (!this.range || !this.range.length) {
                        this.range = $("<div>").appendTo(this.element);
                        this._addClass(this.range, "ui-slider-range")
                    } else {
                        this._removeClass(this.range, "ui-slider-range-min ui-slider-range-max");
                        this.range.css({
                            left: "",
                            bottom: ""
                        })
                    }
                    if (options.range === "min" || options.range === "max") {
                        this._addClass(this.range, "ui-slider-range-" + options.range)
                    }
                } else {
                    if (this.range) {
                        this.range.remove()
                    }
                    this.range = null
                }
            },
            _setupEvents: function _setupEvents() {
                this._off(this.handles);
                this._on(this.handles, this._handleEvents);
                this._hoverable(this.handles);
                this._focusable(this.handles)
            },
            _destroy: function _destroy() {
                this.handles.remove();
                if (this.range) {
                    this.range.remove()
                }
                this._mouseDestroy()
            },
            _mouseCapture: function _mouseCapture(event) {
                var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle, that = this,
                    o = this.options;
                if (o.disabled) {
                    return false
                }
                this.elementSize = {
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight()
                };
                this.elementOffset = this.element.offset();
                position = {
                    x: event.pageX,
                    y: event.pageY
                };
                normValue = this._normValueFromMouse(position);
                distance = this._valueMax() - this._valueMin() + 1;
                this.handles.each(function(i) {
                    var thisDistance = Math.abs(normValue - that.values(i));
                    if (distance > thisDistance || distance === thisDistance && (i === that._lastChangedValue || that.values(i) === o.min)) {
                        distance = thisDistance;
                        closestHandle = $(this);
                        index = i
                    }
                });
                allowed = this._start(event, index);
                if (allowed === false) {
                    return false
                }
                this._mouseSliding = true;
                this._handleIndex = index;
                this._addClass(closestHandle, null, "ui-state-active");
                closestHandle.trigger("focus");
                offset = closestHandle.offset();
                mouseOverHandle = !$(event.target).parents().addBack().is(".ui-slider-handle");
                this._clickOffset = mouseOverHandle ? {
                    left: 0,
                    top: 0
                } : {
                    left: event.pageX - offset.left - closestHandle.width() / 2,
                    top: event.pageY - offset.top - closestHandle.height() / 2 - (parseInt(closestHandle.css("borderTopWidth"), 10) || 0) - (parseInt(closestHandle.css("borderBottomWidth"), 10) || 0) + (parseInt(closestHandle.css("marginTop"), 10) || 0)
                };
                if (!this.handles.hasClass("ui-state-hover")) {
                    this._slide(event, index, normValue)
                }
                this._animateOff = true;
                return true
            },
            _mouseStart: function _mouseStart() {
                return true
            },
            _mouseDrag: function _mouseDrag(event) {
                var position = {
                        x: event.pageX,
                        y: event.pageY
                    },
                    normValue = this._normValueFromMouse(position);
                this._slide(event, this._handleIndex, normValue);
                return false
            },
            _mouseStop: function _mouseStop(event) {
                this._removeClass(this.handles, null, "ui-state-active");
                this._mouseSliding = false;
                this._stop(event, this._handleIndex);
                this._change(event, this._handleIndex);
                this._handleIndex = null;
                this._clickOffset = null;
                this._animateOff = false;
                return false
            },
            _detectOrientation: function _detectOrientation() {
                this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal"
            },
            _normValueFromMouse: function _normValueFromMouse(position) {
                var pixelTotal, pixelMouse, percentMouse, valueTotal, valueMouse;
                if (this.orientation === "horizontal") {
                    pixelTotal = this.elementSize.width;
                    pixelMouse = position.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)
                } else {
                    pixelTotal = this.elementSize.height;
                    pixelMouse = position.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)
                }
                percentMouse = pixelMouse / pixelTotal;
                if (percentMouse > 1) {
                    percentMouse = 1
                }
                if (percentMouse < 0) {
                    percentMouse = 0
                }
                if (this.orientation === "vertical") {
                    percentMouse = 1 - percentMouse
                }
                valueTotal = this._valueMax() - this._valueMin();
                valueMouse = this._valueMin() + percentMouse * valueTotal;
                return this._trimAlignValue(valueMouse)
            },
            _uiHash: function _uiHash(index, value, values) {
                var uiHash = {
                    handle: this.handles[index],
                    handleIndex: index,
                    value: value !== undefined ? value : this.value()
                };
                if (this._hasMultipleValues()) {
                    uiHash.value = value !== undefined ? value : this.values(index);
                    uiHash.values = values || this.values()
                }
                return uiHash
            },
            _hasMultipleValues: function _hasMultipleValues() {
                return this.options.values && this.options.values.length
            },
            _start: function _start(event, index) {
                return this._trigger("start", event, this._uiHash(index))
            },
            _slide: function _slide(event, index, newVal) {
                var allowed, otherVal, currentValue = this.value(),
                    newValues = this.values();
                if (this._hasMultipleValues()) {
                    otherVal = this.values(index ? 0 : 1);
                    currentValue = this.values(index);
                    if (this.options.values.length === 2 && this.options.range === true) {
                        newVal = index === 0 ? Math.min(otherVal, newVal) : Math.max(otherVal, newVal)
                    }
                    newValues[index] = newVal
                }
                if (newVal === currentValue) {
                    return
                }
                allowed = this._trigger("slide", event, this._uiHash(index, newVal, newValues));
                if (allowed === false) {
                    return
                }
                if (this._hasMultipleValues()) {
                    this.values(index, newVal)
                } else {
                    this.value(newVal)
                }
            },
            _stop: function _stop(event, index) {
                this._trigger("stop", event, this._uiHash(index))
            },
            _change: function _change(event, index) {
                if (!this._keySliding && !this._mouseSliding) {
                    this._lastChangedValue = index;
                    this._trigger("change", event, this._uiHash(index))
                }
            },
            value: function value(newValue) {
                if (arguments.length) {
                    this.options.value = this._trimAlignValue(newValue);
                    this._refreshValue();
                    this._change(null, 0);
                    return
                }
                return this._value()
            },
            values: function values(index, newValue) {
                var vals, newValues, i;
                if (arguments.length > 1) {
                    this.options.values[index] = this._trimAlignValue(newValue);
                    this._refreshValue();
                    this._change(null, index);
                    return
                }
                if (arguments.length) {
                    if ($.isArray(arguments[0])) {
                        vals = this.options.values;
                        newValues = arguments[0];
                        for (i = 0; i < vals.length; i += 1) {
                            vals[i] = this._trimAlignValue(newValues[i]);
                            this._change(null, i)
                        }
                        this._refreshValue()
                    } else {
                        if (this._hasMultipleValues()) {
                            return this._values(index)
                        } else {
                            return this.value()
                        }
                    }
                } else {
                    return this._values()
                }
            },
            _setOption: function _setOption(key, value) {
                var i, valsLength = 0;
                if (key === "range" && this.options.range === true) {
                    if (value === "min") {
                        this.options.value = this._values(0);
                        this.options.values = null
                    } else if (value === "max") {
                        this.options.value = this._values(this.options.values.length - 1);
                        this.options.values = null
                    }
                }
                if ($.isArray(this.options.values)) {
                    valsLength = this.options.values.length
                }
                this._super(key, value);
                switch (key) {
                    case "orientation":
                        this._detectOrientation();
                        this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-" + this.orientation);
                        this._refreshValue();
                        if (this.options.range) {
                            this._refreshRange(value)
                        }
                        this.handles.css(value === "horizontal" ? "bottom" : "left", "");
                        break;
                    case "value":
                        this._animateOff = true;
                        this._refreshValue();
                        this._change(null, 0);
                        this._animateOff = false;
                        break;
                    case "values":
                        this._animateOff = true;
                        this._refreshValue();
                        for (i = valsLength - 1; i >= 0; i--) {
                            this._change(null, i)
                        }
                        this._animateOff = false;
                        break;
                    case "step":
                    case "min":
                    case "max":
                        this._animateOff = true;
                        this._calculateNewMax();
                        this._refreshValue();
                        this._animateOff = false;
                        break;
                    case "range":
                        this._animateOff = true;
                        this._refresh();
                        this._animateOff = false;
                        break
                }
            },
            _setOptionDisabled: function _setOptionDisabled(value) {
                this._super(value);
                this._toggleClass(null, "ui-state-disabled", !!value)
            },
            _value: function _value() {
                var val = this.options.value;
                val = this._trimAlignValue(val);
                return val
            },
            _values: function _values(index) {
                var val, vals, i;
                if (arguments.length) {
                    val = this.options.values[index];
                    val = this._trimAlignValue(val);
                    return val
                } else if (this._hasMultipleValues()) {
                    vals = this.options.values.slice();
                    for (i = 0; i < vals.length; i += 1) {
                        vals[i] = this._trimAlignValue(vals[i])
                    }
                    return vals
                } else {
                    return []
                }
            },
            _trimAlignValue: function _trimAlignValue(val) {
                if (val <= this._valueMin()) {
                    return this._valueMin()
                }
                if (val >= this._valueMax()) {
                    return this._valueMax()
                }
                var step = this.options.step > 0 ? this.options.step : 1,
                    valModStep = (val - this._valueMin()) % step,
                    alignValue = val - valModStep;
                if (Math.abs(valModStep) * 2 >= step) {
                    alignValue += valModStep > 0 ? step : -step
                }
                return parseFloat(alignValue.toFixed(5))
            },
            _calculateNewMax: function _calculateNewMax() {
                var max = this.options.max,
                    min = this._valueMin(),
                    step = this.options.step,
                    aboveMin = Math.round((max - min) / step) * step;
                max = aboveMin + min;
                if (max > this.options.max) {
                    max -= step
                }
                this.max = parseFloat(max.toFixed(this._precision()))
            },
            _precision: function _precision() {
                var precision = this._precisionOf(this.options.step);
                if (this.options.min !== null) {
                    precision = Math.max(precision, this._precisionOf(this.options.min))
                }
                return precision
            },
            _precisionOf: function _precisionOf(num) {
                var str = num.toString(),
                    decimal = str.indexOf(".");
                return decimal === -1 ? 0 : str.length - decimal - 1
            },
            _valueMin: function _valueMin() {
                return this.options.min
            },
            _valueMax: function _valueMax() {
                return this.max
            },
            _refreshRange: function _refreshRange(orientation) {
                if (orientation === "vertical") {
                    this.range.css({
                        width: "",
                        left: ""
                    })
                }
                if (orientation === "horizontal") {
                    this.range.css({
                        height: "",
                        bottom: ""
                    })
                }
            },
            _refreshValue: function _refreshValue() {
                var lastValPercent, valPercent, value, valueMin, valueMax, oRange = this.options.range,
                    o = this.options,
                    that = this,
                    animate = !this._animateOff ? o.animate : false,
                    _set = {};
                if (this._hasMultipleValues()) {
                    this.handles.each(function(i) {
                        valPercent = (that.values(i) - that._valueMin()) / (that._valueMax() - that._valueMin()) * 100;
                        _set[that.orientation === "horizontal" ? "left" : "bottom"] = valPercent + "%";
                        $(this).stop(1, 1)[animate ? "animate" : "css"](_set, o.animate);
                        if (that.options.range === true) {
                            if (that.orientation === "horizontal") {
                                if (i === 0) {
                                    that.range.stop(1, 1)[animate ? "animate" : "css"]({
                                        left: valPercent + "%"
                                    }, o.animate)
                                }
                                if (i === 1) {
                                    that.range[animate ? "animate" : "css"]({
                                        width: valPercent - lastValPercent + "%"
                                    }, {
                                        queue: false,
                                        duration: o.animate
                                    })
                                }
                            } else {
                                if (i === 0) {
                                    that.range.stop(1, 1)[animate ? "animate" : "css"]({
                                        bottom: valPercent + "%"
                                    }, o.animate)
                                }
                                if (i === 1) {
                                    that.range[animate ? "animate" : "css"]({
                                        height: valPercent - lastValPercent + "%"
                                    }, {
                                        queue: false,
                                        duration: o.animate
                                    })
                                }
                            }
                        }
                        lastValPercent = valPercent
                    })
                } else {
                    value = this.value();
                    valueMin = this._valueMin();
                    valueMax = this._valueMax();
                    valPercent = valueMax !== valueMin ? (value - valueMin) / (valueMax - valueMin) * 100 : 0;
                    _set[this.orientation === "horizontal" ? "left" : "bottom"] = valPercent + "%";
                    this.handle.stop(1, 1)[animate ? "animate" : "css"](_set, o.animate);
                    if (oRange === "min" && this.orientation === "horizontal") {
                        this.range.stop(1, 1)[animate ? "animate" : "css"]({
                            width: valPercent + "%"
                        }, o.animate)
                    }
                    if (oRange === "max" && this.orientation === "horizontal") {
                        this.range.stop(1, 1)[animate ? "animate" : "css"]({
                            width: 100 - valPercent + "%"
                        }, o.animate)
                    }
                    if (oRange === "min" && this.orientation === "vertical") {
                        this.range.stop(1, 1)[animate ? "animate" : "css"]({
                            height: valPercent + "%"
                        }, o.animate)
                    }
                    if (oRange === "max" && this.orientation === "vertical") {
                        this.range.stop(1, 1)[animate ? "animate" : "css"]({
                            height: 100 - valPercent + "%"
                        }, o.animate)
                    }
                }
            },
            _handleEvents: {
                keydown: function keydown(event) {
                    var allowed, curVal, newVal, step, index = $(event.target).data("ui-slider-handle-index");
                    switch (event.keyCode) {
                        case $.ui.keyCode.HOME:
                        case $.ui.keyCode.END:
                        case $.ui.keyCode.PAGE_UP:
                        case $.ui.keyCode.PAGE_DOWN:
                        case $.ui.keyCode.UP:
                        case $.ui.keyCode.RIGHT:
                        case $.ui.keyCode.DOWN:
                        case $.ui.keyCode.LEFT:
                            event.preventDefault();
                            if (!this._keySliding) {
                                this._keySliding = true;
                                this._addClass($(event.target), null, "ui-state-active");
                                allowed = this._start(event, index);
                                if (allowed === false) {
                                    return
                                }
                            }
                            break
                    }
                    step = this.options.step;
                    if (this._hasMultipleValues()) {
                        curVal = newVal = this.values(index)
                    } else {
                        curVal = newVal = this.value()
                    }
                    switch (event.keyCode) {
                        case $.ui.keyCode.HOME:
                            newVal = this._valueMin();
                            break;
                        case $.ui.keyCode.END:
                            newVal = this._valueMax();
                            break;
                        case $.ui.keyCode.PAGE_UP:
                            newVal = this._trimAlignValue(curVal + (this._valueMax() - this._valueMin()) / this.numPages);
                            break;
                        case $.ui.keyCode.PAGE_DOWN:
                            newVal = this._trimAlignValue(curVal - (this._valueMax() - this._valueMin()) / this.numPages);
                            break;
                        case $.ui.keyCode.UP:
                        case $.ui.keyCode.RIGHT:
                            if (curVal === this._valueMax()) {
                                return
                            }
                            newVal = this._trimAlignValue(curVal + step);
                            break;
                        case $.ui.keyCode.DOWN:
                        case $.ui.keyCode.LEFT:
                            if (curVal === this._valueMin()) {
                                return
                            }
                            newVal = this._trimAlignValue(curVal - step);
                            break
                    }
                    this._slide(event, index, newVal)
                },
                keyup: function keyup(event) {
                    var index = $(event.target).data("ui-slider-handle-index");
                    if (this._keySliding) {
                        this._keySliding = false;
                        this._stop(event, index);
                        this._change(event, index);
                        this._removeClass($(event.target), null, "ui-state-active")
                    }
                }
            }
        })
    })
}, function(module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
        return typeof obj
    } : function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function(global, factory) {
        (false ? "undefined" : _typeof(exports)) === "object" && typeof module !== "undefined" ? module.exports = factory() : true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.StickySidebar = factory()
    })(undefined, function() {
        "use strict";
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor)
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor
            }
        }();

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function")
            }
        }
        var StickySidebar = function() {
            var EVENT_KEY = ".stickySidebar";
            var DEFAULTS = {
                topSpacing: 0,
                bottomSpacing: 0,
                containerSelector: false,
                innerWrapperSelector: ".inner-wrapper-sticky",
                stickyClass: "is-affixed",
                resizeSensor: true,
                minWidth: false
            };
            var StickySidebar = function() {
                function StickySidebar(sidebar) {
                    var _this = this;
                    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    _classCallCheck(this, StickySidebar);
                    this.options = StickySidebar.extend(DEFAULTS, options);
                    this.sidebar = "string" === typeof sidebar ? document.querySelector(sidebar) : sidebar;
                    if ("undefined" === typeof this.sidebar) throw new Error("There is no specific sidebar element.");
                    this.sidebarInner = false;
                    this.container = this.sidebar.parentElement;
                    this.affixedType = "STATIC";
                    this.direction = "down";
                    this.support = {
                        transform: false,
                        transform3d: false
                    };
                    this._initialized = false;
                    this._breakpoint = false;
                    this._resizeListeners = [];
                    this.dimensions = {
                        translateY: 0,
                        topSpacing: 0,
                        bottomSpacing: 0,
                        sidebarHeight: 0,
                        sidebarWidth: 0,
                        containerTop: 0,
                        containerHeight: 0,
                        viewportHeight: 0,
                        viewportTop: 0,
                        lastViewportTop: 0
                    };
                    ["handleEvent"].forEach(function(method) {
                        _this[method] = _this[method].bind(_this)
                    });
                    this.initialize()
                }
                _createClass(StickySidebar, [{
                    key: "initialize",
                    value: function initialize() {
                        var _this2 = this;
                        this._setSupportFeatures();
                        if (this.options.innerWrapperSelector) {
                            this.sidebarInner = this.sidebar.querySelector(this.options.innerWrapperSelector);
                            if (null === this.sidebarInner) this.sidebarInner = false
                        }
                        if (!this.sidebarInner) {
                            var wrapper = document.createElement("div");
                            wrapper.setAttribute("class", "inner-wrapper-sticky");
                            this.sidebar.appendChild(wrapper);
                            while (this.sidebar.firstChild != wrapper) {
                                wrapper.appendChild(this.sidebar.firstChild)
                            }
                            this.sidebarInner = this.sidebar.querySelector(".inner-wrapper-sticky")
                        }
                        if (this.options.containerSelector) {
                            var containers = document.querySelectorAll(this.options.containerSelector);
                            containers = Array.prototype.slice.call(containers);
                            containers.forEach(function(container, item) {
                                if (!container.contains(_this2.sidebar)) return;
                                _this2.container = container
                            });
                            if (!containers.length) throw new Error("The container does not contains on the sidebar.")
                        }
                        if ("function" !== typeof this.options.topSpacing) this.options.topSpacing = parseInt(this.options.topSpacing) || 0;
                        if ("function" !== typeof this.options.bottomSpacing) this.options.bottomSpacing = parseInt(this.options.bottomSpacing) || 0;
                        this._widthBreakpoint();
                        this.calcDimensions();
                        this.stickyPosition();
                        this.bindEvents();
                        this._initialized = true
                    }
                }, {
                    key: "bindEvents",
                    value: function bindEvents() {
                        window.addEventListener("resize", this, {
                            passive: true
                        });
                        window.addEventListener("scroll", this, {
                            passive: true
                        });
                        this.sidebar.addEventListener("update" + EVENT_KEY, this);
                        if (this.options.resizeSensor && "undefined" !== typeof ResizeSensor) {
                            new ResizeSensor(this.sidebarInner, this.handleEvent);
                            new ResizeSensor(this.container, this.handleEvent)
                        }
                    }
                }, {
                    key: "handleEvent",
                    value: function handleEvent(event) {
                        this.updateSticky(event)
                    }
                }, {
                    key: "calcDimensions",
                    value: function calcDimensions() {
                        if (this._breakpoint) return;
                        var dims = this.dimensions;
                        dims.containerTop = StickySidebar.offsetRelative(this.container).top;
                        dims.containerHeight = this.container.clientHeight;
                        dims.containerBottom = dims.containerTop + dims.containerHeight;
                        dims.sidebarHeight = this.sidebarInner.offsetHeight;
                        dims.sidebarWidth = this.sidebar.offsetWidth;
                        dims.viewportHeight = window.innerHeight;
                        this._calcDimensionsWithScroll()
                    }
                }, {
                    key: "_calcDimensionsWithScroll",
                    value: function _calcDimensionsWithScroll() {
                        var dims = this.dimensions;
                        dims.sidebarLeft = StickySidebar.offsetRelative(this.sidebar).left;
                        dims.viewportTop = document.documentElement.scrollTop || document.body.scrollTop;
                        dims.viewportBottom = dims.viewportTop + dims.viewportHeight;
                        dims.viewportLeft = document.documentElement.scrollLeft || document.body.scrollLeft;
                        dims.topSpacing = this.options.topSpacing;
                        dims.bottomSpacing = this.options.bottomSpacing;
                        if ("function" === typeof dims.topSpacing) dims.topSpacing = parseInt(dims.topSpacing(this.sidebar)) || 0;
                        if ("function" === typeof dims.bottomSpacing) dims.bottomSpacing = parseInt(dims.bottomSpacing(this.sidebar)) || 0
                    }
                }, {
                    key: "isSidebarFitsViewport",
                    value: function isSidebarFitsViewport() {
                        return this.dimensions.sidebarHeight < this.dimensions.viewportHeight
                    }
                }, {
                    key: "observeScrollDir",
                    value: function observeScrollDir() {
                        var dims = this.dimensions;
                        if (dims.lastViewportTop === dims.viewportTop) return;
                        var furthest = "down" === this.direction ? Math.min : Math.max;
                        if (dims.viewportTop === furthest(dims.viewportTop, dims.lastViewportTop)) this.direction = "down" === this.direction ? "up" : "down"
                    }
                }, {
                    key: "getAffixType",
                    value: function getAffixType() {
                        var dims = this.dimensions,
                            affixType = false;
                        this._calcDimensionsWithScroll();
                        var sidebarBottom = dims.sidebarHeight + dims.containerTop;
                        var colliderTop = dims.viewportTop + dims.topSpacing;
                        var colliderBottom = dims.viewportBottom - dims.bottomSpacing;
                        if ("up" === this.direction) {
                            if (colliderTop <= dims.containerTop) {
                                dims.translateY = 0;
                                affixType = "STATIC"
                            } else if (colliderTop <= dims.translateY + dims.containerTop) {
                                dims.translateY = colliderTop - dims.containerTop;
                                affixType = "VIEWPORT-TOP"
                            } else if (!this.isSidebarFitsViewport() && dims.containerTop <= colliderTop) {
                                affixType = "VIEWPORT-UNBOTTOM"
                            }
                        } else {
                            if (this.isSidebarFitsViewport()) {
                                if (dims.sidebarHeight + colliderTop >= dims.containerBottom) {
                                    dims.translateY = dims.containerBottom - sidebarBottom;
                                    affixType = "CONTAINER-BOTTOM"
                                } else if (colliderTop >= dims.containerTop) {
                                    dims.translateY = colliderTop - dims.containerTop;
                                    affixType = "VIEWPORT-TOP"
                                }
                            } else {
                                if (dims.containerBottom <= colliderBottom) {
                                    dims.translateY = dims.containerBottom - sidebarBottom;
                                    affixType = "CONTAINER-BOTTOM"
                                } else if (sidebarBottom + dims.translateY <= colliderBottom) {
                                    dims.translateY = colliderBottom - sidebarBottom;
                                    affixType = "VIEWPORT-BOTTOM"
                                } else if (dims.containerTop + dims.translateY <= colliderTop) {
                                    affixType = "VIEWPORT-UNBOTTOM"
                                }
                            }
                        }
                        dims.translateY = Math.max(0, dims.translateY);
                        dims.translateY = Math.min(dims.containerHeight, dims.translateY);
                        dims.lastViewportTop = dims.viewportTop;
                        return affixType
                    }
                }, {
                    key: "_getStyle",
                    value: function _getStyle(affixType) {
                        if ("undefined" === typeof affixType) return;
                        var style = {
                            inner: {},
                            outer: {}
                        };
                        var dims = this.dimensions;
                        switch (affixType) {
                            case "VIEWPORT-TOP":
                                style.inner = {
                                    position: "fixed",
                                    top: this.options.topSpacing,
                                    left: dims.sidebarLeft - dims.viewportLeft,
                                    width: dims.sidebarWidth
                                };
                                break;
                            case "VIEWPORT-BOTTOM":
                                style.inner = {
                                    position: "fixed",
                                    top: "auto",
                                    left: dims.sidebarLeft,
                                    bottom: this.options.bottomSpacing,
                                    width: dims.sidebarWidth
                                };
                                break;
                            case "CONTAINER-BOTTOM":
                            case "VIEWPORT-UNBOTTOM":
                                var translate = this._getTranslate(0, dims.translateY + "px");
                                if (translate) style.inner = {
                                    transform: translate
                                };
                                else style.inner = {
                                    position: "absolute",
                                    top: dims.translateY,
                                    width: dims.sidebarWidth
                                };
                                break
                        }
                        switch (affixType) {
                            case "VIEWPORT-TOP":
                            case "VIEWPORT-BOTTOM":
                            case "VIEWPORT-UNBOTTOM":
                            case "CONTAINER-BOTTOM":
                                style.outer = {
                                    height: dims.sidebarHeight,
                                    position: "relative"
                                };
                                break
                        }
                        style.outer = StickySidebar.extend({
                            height: "",
                            position: ""
                        }, style.outer);
                        style.inner = StickySidebar.extend({
                            position: "relative",
                            top: "",
                            left: "",
                            bottom: "",
                            width: "",
                            transform: this._getTranslate()
                        }, style.inner);
                        return style
                    }
                }, {
                    key: "stickyPosition",
                    value: function stickyPosition(force) {
                        if (this._breakpoint) return;
                        force = force || false;
                        var affixType = this.getAffixType();
                        var style = this._getStyle(affixType);
                        if ((this.affixedType != affixType || force) && affixType) {
                            var affixEvent = "affix." + affixType.toLowerCase().replace("viewport-", "") + EVENT_KEY;
                            StickySidebar.eventTrigger(this.sidebar, affixEvent);
                            if ("STATIC" === affixType) StickySidebar.removeClass(this.sidebar, this.options.stickyClass);
                            else StickySidebar.addClass(this.sidebar, this.options.stickyClass);
                            for (var key in style.outer) {
                                this.sidebar.style[key] = style.outer[key]
                            }
                            for (var _key in style.inner) {
                                var _unit2 = "number" === typeof style.inner[_key] ? "px" : "";
                                this.sidebarInner.style[_key] = style.inner[_key] + _unit2
                            }
                            var affixedEvent = "affixed." + affixType.toLowerCase().replace("viewport", "") + EVENT_KEY;
                            StickySidebar.eventTrigger(this.sidebar, affixedEvent)
                        } else {
                            if (this._initialized) this.sidebarInner.style.left = style.inner.left
                        }
                        this.affixedType = affixType
                    }
                }, {
                    key: "_widthBreakpoint",
                    value: function _widthBreakpoint() {
                        if (window.innerWidth <= this.options.minWidth) {
                            this._breakpoint = true;
                            this.affixedType = "STATIC";
                            this.sidebar.removeAttribute("style");
                            StickySidebar.removeClass(this.sidebar, this.options.stickyClass);
                            this.sidebarInner.removeAttribute("style")
                        } else {
                            this._breakpoint = false
                        }
                    }
                }, {
                    key: "updateSticky",
                    value: function updateSticky() {
                        var _this3 = this;
                        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        if (this._running) return;
                        this._running = true;
                        (function(eventType) {
                            requestAnimationFrame(function() {
                                switch (eventType) {
                                    case "scroll":
                                        _this3._calcDimensionsWithScroll();
                                        _this3.observeScrollDir();
                                        _this3.stickyPosition();
                                        break;
                                    case "resize":
                                    default:
                                        _this3._widthBreakpoint();
                                        _this3.calcDimensions();
                                        _this3.stickyPosition(true);
                                        break
                                }
                                _this3._running = false
                            })
                        })(event.type)
                    }
                }, {
                    key: "_setSupportFeatures",
                    value: function _setSupportFeatures() {
                        var support = this.support;
                        support.transform = StickySidebar.supportTransform();
                        support.transform3d = StickySidebar.supportTransform(true)
                    }
                }, {
                    key: "_getTranslate",
                    value: function _getTranslate() {
                        var y = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
                        var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
                        var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
                        if (this.support.transform3d) return "translate3d(" + y + ", " + x + ", " + z + ")";
                        else if (this.support.translate) return "translate(" + y + ", " + x + ")";
                        else return false
                    }
                }, {
                    key: "destroy",
                    value: function destroy() {
                        window.removeEventListener("resize", this);
                        window.removeEventListener("scroll", this);
                        this.sidebar.classList.remove(this.options.stickyClass);
                        this.sidebar.style.minHeight = "";
                        this.sidebar.removeEventListener("update" + EVENT_KEY, this);
                        var styleReset = {
                            inner: {},
                            outer: {}
                        };
                        styleReset.inner = {
                            position: "",
                            top: "",
                            left: "",
                            bottom: "",
                            width: "",
                            transform: ""
                        };
                        styleReset.outer = {
                            height: "",
                            position: ""
                        };
                        for (var key in styleReset.outer) {
                            this.sidebar.style[key] = styleReset.outer[key]
                        }
                        for (var _key2 in styleReset.inner) {
                            this.sidebarInner.style[_key2] = styleReset.inner[_key2]
                        }
                        if (this.options.resizeSensor && "undefined" !== typeof ResizeSensor) {
                            ResizeSensor.detach(this.sidebarInner, this.handleEvent);
                            ResizeSensor.detach(this.container, this.handleEvent)
                        }
                    }
                }], [{
                    key: "supportTransform",
                    value: function supportTransform(transform3d) {
                        var result = false,
                            property = transform3d ? "perspective" : "transform",
                            upper = property.charAt(0).toUpperCase() + property.slice(1),
                            prefixes = ["Webkit", "Moz", "O", "ms"],
                            support = document.createElement("support"),
                            style = support.style;
                        (property + " " + prefixes.join(upper + " ") + upper).split(" ").forEach(function(property, i) {
                            if (style[property] !== undefined) {
                                result = property;
                                return false
                            }
                        });
                        return result
                    }
                }, {
                    key: "eventTrigger",
                    value: function eventTrigger(element, eventName, data) {
                        try {
                            var event = new CustomEvent(eventName, {
                                detail: data
                            })
                        } catch (e) {
                            var event = document.createEvent("CustomEvent");
                            event.initCustomEvent(eventName, true, true, data)
                        }
                        element.dispatchEvent(event)
                    }
                }, {
                    key: "extend",
                    value: function extend(defaults, options) {
                        var results = {};
                        for (var key in defaults) {
                            if ("undefined" !== typeof options[key]) results[key] = options[key];
                            else results[key] = defaults[key]
                        }
                        return results
                    }
                }, {
                    key: "offsetRelative",
                    value: function offsetRelative(element) {
                        var result = {
                            left: 0,
                            top: 0
                        };
                        do {
                            var offsetTop = element.offsetTop;
                            var offsetLeft = element.offsetLeft;
                            if (!isNaN(offsetTop)) result.top += offsetTop;
                            if (!isNaN(offsetLeft)) result.left += offsetLeft
                        } while (element = element.offsetParent);
                        return result
                    }
                }, {
                    key: "addClass",
                    value: function addClass(element, className) {
                        if (!StickySidebar.hasClass(element, className)) {
                            if (element.classList) element.classList.add(className);
                            else element.className += " " + className
                        }
                    }
                }, {
                    key: "removeClass",
                    value: function removeClass(element, className) {
                        if (StickySidebar.hasClass(element, className)) {
                            if (element.classList) element.classList.remove(className);
                            else element.className = element.className.replace(new RegExp("(^|\\b)" + className.split(" ").join("|") + "(\\b|$)", "gi"), " ")
                        }
                    }
                }, {
                    key: "hasClass",
                    value: function hasClass(element, className) {
                        if (element.classList) return element.classList.contains(className);
                        else return new RegExp("(^| )" + className + "( |$)", "gi").test(element.className)
                    }
                }]);
                return StickySidebar
            }();
            return StickySidebar
        }();
        window.StickySidebar = StickySidebar;
        return StickySidebar
    })
}, function(module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
        return typeof obj
    } : function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function(root, factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === "object") {
            module.exports = factory(require, exports, module)
        } else {
            root.Tether = factory()
        }
    })(undefined, function(require, exports, module) {
        "use strict";
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor)
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor
            }
        }();

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function")
            }
        }
        var TetherBase = undefined;
        if (typeof TetherBase === "undefined") {
            TetherBase = {
                modules: []
            }
        }
        var zeroElement = null;

        function getActualBoundingClientRect(node) {
            var boundingRect = node.getBoundingClientRect();
            var rect = {};
            for (var k in boundingRect) {
                rect[k] = boundingRect[k]
            }
            if (node.ownerDocument !== document) {
                var _frameElement = node.ownerDocument.defaultView.frameElement;
                if (_frameElement) {
                    var frameRect = getActualBoundingClientRect(_frameElement);
                    rect.top += frameRect.top;
                    rect.bottom += frameRect.top;
                    rect.left += frameRect.left;
                    rect.right += frameRect.left
                }
            }
            return rect
        }

        function getScrollParents(el) {
            var computedStyle = getComputedStyle(el) || {};
            var position = computedStyle.position;
            var parents = [];
            if (position === "fixed") {
                return [el]
            }
            var parent = el;
            while ((parent = parent.parentNode) && parent && parent.nodeType === 1) {
                var style = undefined;
                try {
                    style = getComputedStyle(parent)
                } catch (err) {}
                if (typeof style === "undefined" || style === null) {
                    parents.push(parent);
                    return parents
                }
                var _style = style;
                var overflow = _style.overflow;
                var overflowX = _style.overflowX;
                var overflowY = _style.overflowY;
                if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {
                    if (position !== "absolute" || ["relative", "absolute", "fixed"].indexOf(style.position) >= 0) {
                        parents.push(parent)
                    }
                }
            }
            parents.push(el.ownerDocument.body);
            if (el.ownerDocument !== document) {
                parents.push(el.ownerDocument.defaultView)
            }
            return parents
        }
        var uniqueId = function() {
            var id = 0;
            return function() {
                return ++id
            }
        }();
        var zeroPosCache = {};
        var getOrigin = function getOrigin() {
            var node = zeroElement;
            if (!node || !document.body.contains(node)) {
                node = document.createElement("div");
                node.setAttribute("data-tether-id", uniqueId());
                extend(node.style, {
                    top: 0,
                    left: 0,
                    position: "absolute"
                });
                document.body.appendChild(node);
                zeroElement = node
            }
            var id = node.getAttribute("data-tether-id");
            if (typeof zeroPosCache[id] === "undefined") {
                zeroPosCache[id] = getActualBoundingClientRect(node);
                defer(function() {
                    delete zeroPosCache[id]
                })
            }
            return zeroPosCache[id]
        };

        function removeUtilElements() {
            if (zeroElement) {
                document.body.removeChild(zeroElement)
            }
            zeroElement = null
        }

        function getBounds(el) {
            var doc = undefined;
            if (el === document) {
                doc = document;
                el = document.documentElement
            } else {
                doc = el.ownerDocument
            }
            var docEl = doc.documentElement;
            var box = getActualBoundingClientRect(el);
            var origin = getOrigin();
            box.top -= origin.top;
            box.left -= origin.left;
            if (typeof box.width === "undefined") {
                box.width = document.body.scrollWidth - box.left - box.right
            }
            if (typeof box.height === "undefined") {
                box.height = document.body.scrollHeight - box.top - box.bottom
            }
            box.top = box.top - docEl.clientTop;
            box.left = box.left - docEl.clientLeft;
            box.right = doc.body.clientWidth - box.width - box.left;
            box.bottom = doc.body.clientHeight - box.height - box.top;
            return box
        }

        function getOffsetParent(el) {
            return el.offsetParent || document.documentElement
        }
        var _scrollBarSize = null;

        function getScrollBarSize() {
            if (_scrollBarSize) {
                return _scrollBarSize
            }
            var inner = document.createElement("div");
            inner.style.width = "100%";
            inner.style.height = "200px";
            var outer = document.createElement("div");
            extend(outer.style, {
                position: "absolute",
                top: 0,
                left: 0,
                pointerEvents: "none",
                visibility: "hidden",
                width: "200px",
                height: "150px",
                overflow: "hidden"
            });
            outer.appendChild(inner);
            document.body.appendChild(outer);
            var widthContained = inner.offsetWidth;
            outer.style.overflow = "scroll";
            var widthScroll = inner.offsetWidth;
            if (widthContained === widthScroll) {
                widthScroll = outer.clientWidth
            }
            document.body.removeChild(outer);
            var width = widthContained - widthScroll;
            _scrollBarSize = {
                width: width,
                height: width
            };
            return _scrollBarSize
        }

        function extend() {
            var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
            var args = [];
            Array.prototype.push.apply(args, arguments);
            args.slice(1).forEach(function(obj) {
                if (obj) {
                    for (var key in obj) {
                        if ({}.hasOwnProperty.call(obj, key)) {
                            out[key] = obj[key]
                        }
                    }
                }
            });
            return out
        }

        function removeClass(el, name) {
            if (typeof el.classList !== "undefined") {
                name.split(" ").forEach(function(cls) {
                    if (cls.trim()) {
                        el.classList.remove(cls)
                    }
                })
            } else {
                var regex = new RegExp("(^| )" + name.split(" ").join("|") + "( |$)", "gi");
                var className = getClassName(el).replace(regex, " ");
                setClassName(el, className)
            }
        }

        function addClass(el, name) {
            if (typeof el.classList !== "undefined") {
                name.split(" ").forEach(function(cls) {
                    if (cls.trim()) {
                        el.classList.add(cls)
                    }
                })
            } else {
                removeClass(el, name);
                var cls = getClassName(el) + (" " + name);
                setClassName(el, cls)
            }
        }

        function hasClass(el, name) {
            if (typeof el.classList !== "undefined") {
                return el.classList.contains(name)
            }
            var className = getClassName(el);
            return new RegExp("(^| )" + name + "( |$)", "gi").test(className)
        }

        function getClassName(el) {
            if (el.className instanceof el.ownerDocument.defaultView.SVGAnimatedString) {
                return el.className.baseVal
            }
            return el.className
        }

        function setClassName(el, className) {
            el.setAttribute("class", className)
        }

        function updateClasses(el, add, all) {
            all.forEach(function(cls) {
                if (add.indexOf(cls) === -1 && hasClass(el, cls)) {
                    removeClass(el, cls)
                }
            });
            add.forEach(function(cls) {
                if (!hasClass(el, cls)) {
                    addClass(el, cls)
                }
            })
        }
        var deferred = [];
        var defer = function defer(fn) {
            deferred.push(fn)
        };
        var flush = function flush() {
            var fn = undefined;
            while (fn = deferred.pop()) {
                fn()
            }
        };
        var Evented = function() {
            function Evented() {
                _classCallCheck(this, Evented)
            }
            _createClass(Evented, [{
                key: "on",
                value: function on(event, handler, ctx) {
                    var once = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];
                    if (typeof this.bindings === "undefined") {
                        this.bindings = {}
                    }
                    if (typeof this.bindings[event] === "undefined") {
                        this.bindings[event] = []
                    }
                    this.bindings[event].push({
                        handler: handler,
                        ctx: ctx,
                        once: once
                    })
                }
            }, {
                key: "once",
                value: function once(event, handler, ctx) {
                    this.on(event, handler, ctx, true)
                }
            }, {
                key: "off",
                value: function off(event, handler) {
                    if (typeof this.bindings === "undefined" || typeof this.bindings[event] === "undefined") {
                        return
                    }
                    if (typeof handler === "undefined") {
                        delete this.bindings[event]
                    } else {
                        var i = 0;
                        while (i < this.bindings[event].length) {
                            if (this.bindings[event][i].handler === handler) {
                                this.bindings[event].splice(i, 1)
                            } else {
                                ++i
                            }
                        }
                    }
                }
            }, {
                key: "trigger",
                value: function trigger(event) {
                    if (typeof this.bindings !== "undefined" && this.bindings[event]) {
                        var i = 0;
                        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                            args[_key - 1] = arguments[_key]
                        }
                        while (i < this.bindings[event].length) {
                            var _bindings$event$i = this.bindings[event][i];
                            var handler = _bindings$event$i.handler;
                            var ctx = _bindings$event$i.ctx;
                            var once = _bindings$event$i.once;
                            var context = ctx;
                            if (typeof context === "undefined") {
                                context = this
                            }
                            handler.apply(context, args);
                            if (once) {
                                this.bindings[event].splice(i, 1)
                            } else {
                                ++i
                            }
                        }
                    }
                }
            }]);
            return Evented
        }();
        TetherBase.Utils = {
            getActualBoundingClientRect: getActualBoundingClientRect,
            getScrollParents: getScrollParents,
            getBounds: getBounds,
            getOffsetParent: getOffsetParent,
            extend: extend,
            addClass: addClass,
            removeClass: removeClass,
            hasClass: hasClass,
            updateClasses: updateClasses,
            defer: defer,
            flush: flush,
            uniqueId: uniqueId,
            Evented: Evented,
            getScrollBarSize: getScrollBarSize,
            removeUtilElements: removeUtilElements
        };
        "use strict";
        var _slicedToArray = function() {
            function sliceIterator(arr, i) {
                var _arr = [];
                var _n = true;
                var _d = false;
                var _e = undefined;
                try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break
                    }
                } catch (err) {
                    _d = true;
                    _e = err
                } finally {
                    try {
                        if (!_n && _i["return"]) _i["return"]()
                    } finally {
                        if (_d) throw _e
                    }
                }
                return _arr
            }
            return function(arr, i) {
                if (Array.isArray(arr)) {
                    return arr
                } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i)
                } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }
        }();
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor)
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor
            }
        }();
        var _get = function get(_x6, _x7, _x8) {
            var _again = true;
            _function: while (_again) {
                var object = _x6,
                    property = _x7,
                    receiver = _x8;
                _again = false;
                if (object === null) object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === undefined) {
                    var parent = Object.getPrototypeOf(object);
                    if (parent === null) {
                        return undefined
                    } else {
                        _x6 = parent;
                        _x7 = property;
                        _x8 = receiver;
                        _again = true;
                        desc = parent = undefined;
                        continue _function
                    }
                } else if ("value" in desc) {
                    return desc.value
                } else {
                    var getter = desc.get;
                    if (getter === undefined) {
                        return undefined
                    }
                    return getter.call(receiver)
                }
            }
        };

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function")
            }
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)))
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass
        }
        if (typeof TetherBase === "undefined") {
            throw new Error("You must include the utils.js file before tether.js")
        }
        var _TetherBase$Utils = TetherBase.Utils;
        var getScrollParents = _TetherBase$Utils.getScrollParents;
        var getBounds = _TetherBase$Utils.getBounds;
        var getOffsetParent = _TetherBase$Utils.getOffsetParent;
        var extend = _TetherBase$Utils.extend;
        var addClass = _TetherBase$Utils.addClass;
        var removeClass = _TetherBase$Utils.removeClass;
        var updateClasses = _TetherBase$Utils.updateClasses;
        var defer = _TetherBase$Utils.defer;
        var flush = _TetherBase$Utils.flush;
        var getScrollBarSize = _TetherBase$Utils.getScrollBarSize;
        var removeUtilElements = _TetherBase$Utils.removeUtilElements;

        function within(a, b) {
            var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];
            return a + diff >= b && b >= a - diff
        }
        var transformKey = function() {
            if (typeof document === "undefined") {
                return ""
            }
            var el = document.createElement("div");
            var transforms = ["transform", "WebkitTransform", "OTransform", "MozTransform", "msTransform"];
            for (var i = 0; i < transforms.length; ++i) {
                var key = transforms[i];
                if (el.style[key] !== undefined) {
                    return key
                }
            }
        }();
        var tethers = [];
        var position = function position() {
            tethers.forEach(function(tether) {
                tether.position(false)
            });
            flush()
        };

        function now() {
            if (typeof performance !== "undefined" && typeof performance.now !== "undefined") {
                return performance.now()
            }
            return +new Date
        }(function() {
            var lastCall = null;
            var lastDuration = null;
            var pendingTimeout = null;
            var tick = function tick() {
                if (typeof lastDuration !== "undefined" && lastDuration > 16) {
                    lastDuration = Math.min(lastDuration - 16, 250);
                    pendingTimeout = setTimeout(tick, 250);
                    return
                }
                if (typeof lastCall !== "undefined" && now() - lastCall < 10) {
                    return
                }
                if (pendingTimeout != null) {
                    clearTimeout(pendingTimeout);
                    pendingTimeout = null
                }
                lastCall = now();
                position();
                lastDuration = now() - lastCall
            };
            if (typeof window !== "undefined" && typeof window.addEventListener !== "undefined") {
                ["resize", "scroll", "touchmove"].forEach(function(event) {
                    window.addEventListener(event, tick)
                })
            }
        })();
        var MIRROR_LR = {
            center: "center",
            left: "right",
            right: "left"
        };
        var MIRROR_TB = {
            middle: "middle",
            top: "bottom",
            bottom: "top"
        };
        var OFFSET_MAP = {
            top: 0,
            left: 0,
            middle: "50%",
            center: "50%",
            bottom: "100%",
            right: "100%"
        };
        var autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {
            var left = attachment.left;
            var top = attachment.top;
            if (left === "auto") {
                left = MIRROR_LR[relativeToAttachment.left]
            }
            if (top === "auto") {
                top = MIRROR_TB[relativeToAttachment.top]
            }
            return {
                left: left,
                top: top
            }
        };
        var attachmentToOffset = function attachmentToOffset(attachment) {
            var left = attachment.left;
            var top = attachment.top;
            if (typeof OFFSET_MAP[attachment.left] !== "undefined") {
                left = OFFSET_MAP[attachment.left]
            }
            if (typeof OFFSET_MAP[attachment.top] !== "undefined") {
                top = OFFSET_MAP[attachment.top]
            }
            return {
                left: left,
                top: top
            }
        };

        function addOffset() {
            var out = {
                top: 0,
                left: 0
            };
            for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {
                offsets[_key] = arguments[_key]
            }
            offsets.forEach(function(_ref) {
                var top = _ref.top;
                var left = _ref.left;
                if (typeof top === "string") {
                    top = parseFloat(top, 10)
                }
                if (typeof left === "string") {
                    left = parseFloat(left, 10)
                }
                out.top += top;
                out.left += left
            });
            return out
        }

        function offsetToPx(offset, size) {
            if (typeof offset.left === "string" && offset.left.indexOf("%") !== -1) {
                offset.left = parseFloat(offset.left, 10) / 100 * size.width
            }
            if (typeof offset.top === "string" && offset.top.indexOf("%") !== -1) {
                offset.top = parseFloat(offset.top, 10) / 100 * size.height
            }
            return offset
        }
        var parseOffset = function parseOffset(value) {
            var _value$split = value.split(" ");
            var _value$split2 = _slicedToArray(_value$split, 2);
            var top = _value$split2[0];
            var left = _value$split2[1];
            return {
                top: top,
                left: left
            }
        };
        var parseAttachment = parseOffset;
        var TetherClass = function(_Evented) {
            _inherits(TetherClass, _Evented);

            function TetherClass(options) {
                var _this = this;
                _classCallCheck(this, TetherClass);
                _get(Object.getPrototypeOf(TetherClass.prototype), "constructor", this).call(this);
                this.position = this.position.bind(this);
                tethers.push(this);
                this.history = [];
                this.setOptions(options, false);
                TetherBase.modules.forEach(function(module) {
                    if (typeof module.initialize !== "undefined") {
                        module.initialize.call(_this)
                    }
                });
                this.position()
            }
            _createClass(TetherClass, [{
                key: "getClass",
                value: function getClass() {
                    var key = arguments.length <= 0 || arguments[0] === undefined ? "" : arguments[0];
                    var classes = this.options.classes;
                    if (typeof classes !== "undefined" && classes[key]) {
                        return this.options.classes[key]
                    } else if (this.options.classPrefix) {
                        return this.options.classPrefix + "-" + key
                    } else {
                        return key
                    }
                }
            }, {
                key: "setOptions",
                value: function setOptions(options) {
                    var _this2 = this;
                    var pos = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
                    var defaults = {
                        offset: "0 0",
                        targetOffset: "0 0",
                        targetAttachment: "auto auto",
                        classPrefix: "tether"
                    };
                    this.options = extend(defaults, options);
                    var _options = this.options;
                    var element = _options.element;
                    var target = _options.target;
                    var targetModifier = _options.targetModifier;
                    this.element = element;
                    this.target = target;
                    this.targetModifier = targetModifier;
                    if (this.target === "viewport") {
                        this.target = document.body;
                        this.targetModifier = "visible"
                    } else if (this.target === "scroll-handle") {
                        this.target = document.body;
                        this.targetModifier = "scroll-handle"
                    }["element", "target"].forEach(function(key) {
                        if (typeof _this2[key] === "undefined") {
                            throw new Error("Tether Error: Both element and target must be defined")
                        }
                        if (typeof _this2[key].jquery !== "undefined") {
                            _this2[key] = _this2[key][0]
                        } else if (typeof _this2[key] === "string") {
                            _this2[key] = document.querySelector(_this2[key])
                        }
                    });
                    addClass(this.element, this.getClass("element"));
                    if (!(this.options.addTargetClasses === false)) {
                        addClass(this.target, this.getClass("target"))
                    }
                    if (!this.options.attachment) {
                        throw new Error("Tether Error: You must provide an attachment")
                    }
                    this.targetAttachment = parseAttachment(this.options.targetAttachment);
                    this.attachment = parseAttachment(this.options.attachment);
                    this.offset = parseOffset(this.options.offset);
                    this.targetOffset = parseOffset(this.options.targetOffset);
                    if (typeof this.scrollParents !== "undefined") {
                        this.disable()
                    }
                    if (this.targetModifier === "scroll-handle") {
                        this.scrollParents = [this.target]
                    } else {
                        this.scrollParents = getScrollParents(this.target)
                    }
                    if (!(this.options.enabled === false)) {
                        this.enable(pos)
                    }
                }
            }, {
                key: "getTargetBounds",
                value: function getTargetBounds() {
                    if (typeof this.targetModifier !== "undefined") {
                        if (this.targetModifier === "visible") {
                            if (this.target === document.body) {
                                return {
                                    top: pageYOffset,
                                    left: pageXOffset,
                                    height: innerHeight,
                                    width: innerWidth
                                }
                            } else {
                                var bounds = getBounds(this.target);
                                var out = {
                                    height: bounds.height,
                                    width: bounds.width,
                                    top: bounds.top,
                                    left: bounds.left
                                };
                                out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));
                                out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));
                                out.height = Math.min(innerHeight, out.height);
                                out.height -= 2;
                                out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));
                                out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));
                                out.width = Math.min(innerWidth, out.width);
                                out.width -= 2;
                                if (out.top < pageYOffset) {
                                    out.top = pageYOffset
                                }
                                if (out.left < pageXOffset) {
                                    out.left = pageXOffset
                                }
                                return out
                            }
                        } else if (this.targetModifier === "scroll-handle") {
                            var bounds = undefined;
                            var target = this.target;
                            if (target === document.body) {
                                target = document.documentElement;
                                bounds = {
                                    left: pageXOffset,
                                    top: pageYOffset,
                                    height: innerHeight,
                                    width: innerWidth
                                }
                            } else {
                                bounds = getBounds(target)
                            }
                            var style = getComputedStyle(target);
                            var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf("scroll") >= 0 || this.target !== document.body;
                            var scrollBottom = 0;
                            if (hasBottomScroll) {
                                scrollBottom = 15
                            }
                            var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;
                            var out = {
                                width: 15,
                                height: height * .975 * (height / target.scrollHeight),
                                left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15
                            };
                            var fitAdj = 0;
                            if (height < 408 && this.target === document.body) {
                                fitAdj = -11e-5 * Math.pow(height, 2) - .00727 * height + 22.58
                            }
                            if (this.target !== document.body) {
                                out.height = Math.max(out.height, 24)
                            }
                            var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);
                            out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);
                            if (this.target === document.body) {
                                out.height = Math.max(out.height, 24)
                            }
                            return out
                        }
                    } else {
                        return getBounds(this.target)
                    }
                }
            }, {
                key: "clearCache",
                value: function clearCache() {
                    this._cache = {}
                }
            }, {
                key: "cache",
                value: function cache(k, getter) {
                    if (typeof this._cache === "undefined") {
                        this._cache = {}
                    }
                    if (typeof this._cache[k] === "undefined") {
                        this._cache[k] = getter.call(this)
                    }
                    return this._cache[k]
                }
            }, {
                key: "enable",
                value: function enable() {
                    var _this3 = this;
                    var pos = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];
                    if (!(this.options.addTargetClasses === false)) {
                        addClass(this.target, this.getClass("enabled"))
                    }
                    addClass(this.element, this.getClass("enabled"));
                    this.enabled = true;
                    this.scrollParents.forEach(function(parent) {
                        if (parent !== _this3.target.ownerDocument) {
                            parent.addEventListener("scroll", _this3.position)
                        }
                    });
                    if (pos) {
                        this.position()
                    }
                }
            }, {
                key: "disable",
                value: function disable() {
                    var _this4 = this;
                    removeClass(this.target, this.getClass("enabled"));
                    removeClass(this.element, this.getClass("enabled"));
                    this.enabled = false;
                    if (typeof this.scrollParents !== "undefined") {
                        this.scrollParents.forEach(function(parent) {
                            parent.removeEventListener("scroll", _this4.position)
                        })
                    }
                }
            }, {
                key: "destroy",
                value: function destroy() {
                    var _this5 = this;
                    this.disable();
                    tethers.forEach(function(tether, i) {
                        if (tether === _this5) {
                            tethers.splice(i, 1)
                        }
                    });
                    if (tethers.length === 0) {
                        removeUtilElements()
                    }
                }
            }, {
                key: "updateAttachClasses",
                value: function updateAttachClasses(elementAttach, targetAttach) {
                    var _this6 = this;
                    elementAttach = elementAttach || this.attachment;
                    targetAttach = targetAttach || this.targetAttachment;
                    var sides = ["left", "top", "bottom", "right", "middle", "center"];
                    if (typeof this._addAttachClasses !== "undefined" && this._addAttachClasses.length) {
                        this._addAttachClasses.splice(0, this._addAttachClasses.length)
                    }
                    if (typeof this._addAttachClasses === "undefined") {
                        this._addAttachClasses = []
                    }
                    var add = this._addAttachClasses;
                    if (elementAttach.top) {
                        add.push(this.getClass("element-attached") + "-" + elementAttach.top)
                    }
                    if (elementAttach.left) {
                        add.push(this.getClass("element-attached") + "-" + elementAttach.left)
                    }
                    if (targetAttach.top) {
                        add.push(this.getClass("target-attached") + "-" + targetAttach.top)
                    }
                    if (targetAttach.left) {
                        add.push(this.getClass("target-attached") + "-" + targetAttach.left)
                    }
                    var all = [];
                    sides.forEach(function(side) {
                        all.push(_this6.getClass("element-attached") + "-" + side);
                        all.push(_this6.getClass("target-attached") + "-" + side)
                    });
                    defer(function() {
                        if (!(typeof _this6._addAttachClasses !== "undefined")) {
                            return
                        }
                        updateClasses(_this6.element, _this6._addAttachClasses, all);
                        if (!(_this6.options.addTargetClasses === false)) {
                            updateClasses(_this6.target, _this6._addAttachClasses, all)
                        }
                        delete _this6._addAttachClasses
                    })
                }
            }, {
                key: "position",
                value: function position() {
                    var _this7 = this;
                    var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];
                    if (!this.enabled) {
                        return
                    }
                    this.clearCache();
                    var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);
                    this.updateAttachClasses(this.attachment, targetAttachment);
                    var elementPos = this.cache("element-bounds", function() {
                        return getBounds(_this7.element)
                    });
                    var width = elementPos.width;
                    var height = elementPos.height;
                    if (width === 0 && height === 0 && typeof this.lastSize !== "undefined") {
                        var _lastSize = this.lastSize;
                        width = _lastSize.width;
                        height = _lastSize.height
                    } else {
                        this.lastSize = {
                            width: width,
                            height: height
                        }
                    }
                    var targetPos = this.cache("target-bounds", function() {
                        return _this7.getTargetBounds()
                    });
                    var targetSize = targetPos;
                    var offset = offsetToPx(attachmentToOffset(this.attachment), {
                        width: width,
                        height: height
                    });
                    var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);
                    var manualOffset = offsetToPx(this.offset, {
                        width: width,
                        height: height
                    });
                    var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);
                    offset = addOffset(offset, manualOffset);
                    targetOffset = addOffset(targetOffset, manualTargetOffset);
                    var left = targetPos.left + targetOffset.left - offset.left;
                    var top = targetPos.top + targetOffset.top - offset.top;
                    for (var i = 0; i < TetherBase.modules.length; ++i) {
                        var _module2 = TetherBase.modules[i];
                        var ret = _module2.position.call(this, {
                            left: left,
                            top: top,
                            targetAttachment: targetAttachment,
                            targetPos: targetPos,
                            elementPos: elementPos,
                            offset: offset,
                            targetOffset: targetOffset,
                            manualOffset: manualOffset,
                            manualTargetOffset: manualTargetOffset,
                            scrollbarSize: scrollbarSize,
                            attachment: this.attachment
                        });
                        if (ret === false) {
                            return false
                        } else if (typeof ret === "undefined" || (typeof ret === "undefined" ? "undefined" : _typeof(ret)) !== "object") {
                            continue
                        } else {
                            top = ret.top;
                            left = ret.left
                        }
                    }
                    var next = {
                        page: {
                            top: top,
                            left: left
                        },
                        viewport: {
                            top: top - pageYOffset,
                            bottom: pageYOffset - top - height + innerHeight,
                            left: left - pageXOffset,
                            right: pageXOffset - left - width + innerWidth
                        }
                    };
                    var doc = this.target.ownerDocument;
                    var win = doc.defaultView;
                    var scrollbarSize = undefined;
                    if (win.innerHeight > doc.documentElement.clientHeight) {
                        scrollbarSize = this.cache("scrollbar-size", getScrollBarSize);
                        next.viewport.bottom -= scrollbarSize.height
                    }
                    if (win.innerWidth > doc.documentElement.clientWidth) {
                        scrollbarSize = this.cache("scrollbar-size", getScrollBarSize);
                        next.viewport.right -= scrollbarSize.width
                    }
                    if (["", "static"].indexOf(doc.body.style.position) === -1 || ["", "static"].indexOf(doc.body.parentElement.style.position) === -1) {
                        next.page.bottom = doc.body.scrollHeight - top - height;
                        next.page.right = doc.body.scrollWidth - left - width
                    }
                    if (typeof this.options.optimizations !== "undefined" && this.options.optimizations.moveElement !== false && !(typeof this.targetModifier !== "undefined")) {
                        (function() {
                            var offsetParent = _this7.cache("target-offsetparent", function() {
                                return getOffsetParent(_this7.target)
                            });
                            var offsetPosition = _this7.cache("target-offsetparent-bounds", function() {
                                return getBounds(offsetParent)
                            });
                            var offsetParentStyle = getComputedStyle(offsetParent);
                            var offsetParentSize = offsetPosition;
                            var offsetBorder = {};
                            ["Top", "Left", "Bottom", "Right"].forEach(function(side) {
                                offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle["border" + side + "Width"])
                            });
                            offsetPosition.right = doc.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;
                            offsetPosition.bottom = doc.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;
                            if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {
                                if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {
                                    var scrollTop = offsetParent.scrollTop;
                                    var scrollLeft = offsetParent.scrollLeft;
                                    next.offset = {
                                        top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,
                                        left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left
                                    }
                                }
                            }
                        })()
                    }
                    this.move(next);
                    this.history.unshift(next);
                    if (this.history.length > 3) {
                        this.history.pop()
                    }
                    if (flushChanges) {
                        flush()
                    }
                    return true
                }
            }, {
                key: "move",
                value: function move(pos) {
                    var _this8 = this;
                    if (!(typeof this.element.parentNode !== "undefined")) {
                        return
                    }
                    var same = {};
                    for (var type in pos) {
                        same[type] = {};
                        for (var key in pos[type]) {
                            var found = false;
                            for (var i = 0; i < this.history.length; ++i) {
                                var point = this.history[i];
                                if (typeof point[type] !== "undefined" && !within(point[type][key], pos[type][key])) {
                                    found = true;
                                    break
                                }
                            }
                            if (!found) {
                                same[type][key] = true
                            }
                        }
                    }
                    var css = {
                        top: "",
                        left: "",
                        right: "",
                        bottom: ""
                    };
                    var transcribe = function transcribe(_same, _pos) {
                        var hasOptimizations = typeof _this8.options.optimizations !== "undefined";
                        var gpu = hasOptimizations ? _this8.options.optimizations.gpu : null;
                        if (gpu !== false) {
                            var yPos = undefined,
                                xPos = undefined;
                            if (_same.top) {
                                css.top = 0;
                                yPos = _pos.top
                            } else {
                                css.bottom = 0;
                                yPos = -_pos.bottom
                            }
                            if (_same.left) {
                                css.left = 0;
                                xPos = _pos.left
                            } else {
                                css.right = 0;
                                xPos = -_pos.right
                            }
                            if (window.matchMedia) {
                                var retina = window.matchMedia("only screen and (min-resolution: 1.3dppx)").matches || window.matchMedia("only screen and (-webkit-min-device-pixel-ratio: 1.3)").matches;
                                if (!retina) {
                                    xPos = Math.round(xPos);
                                    yPos = Math.round(yPos)
                                }
                            }
                            css[transformKey] = "translateX(" + xPos + "px) translateY(" + yPos + "px)";
                            if (transformKey !== "msTransform") {
                                css[transformKey] += " translateZ(0)"
                            }
                        } else {
                            if (_same.top) {
                                css.top = _pos.top + "px"
                            } else {
                                css.bottom = _pos.bottom + "px"
                            }
                            if (_same.left) {
                                css.left = _pos.left + "px"
                            } else {
                                css.right = _pos.right + "px"
                            }
                        }
                    };
                    var moved = false;
                    if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {
                        css.position = "absolute";
                        transcribe(same.page, pos.page)
                    } else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {
                        css.position = "fixed";
                        transcribe(same.viewport, pos.viewport)
                    } else if (typeof same.offset !== "undefined" && same.offset.top && same.offset.left) {
                        (function() {
                            css.position = "absolute";
                            var offsetParent = _this8.cache("target-offsetparent", function() {
                                return getOffsetParent(_this8.target)
                            });
                            if (getOffsetParent(_this8.element) !== offsetParent) {
                                defer(function() {
                                    _this8.element.parentNode.removeChild(_this8.element);
                                    offsetParent.appendChild(_this8.element)
                                })
                            }
                            transcribe(same.offset, pos.offset);
                            moved = true
                        })()
                    } else {
                        css.position = "absolute";
                        transcribe({
                            top: true,
                            left: true
                        }, pos.page)
                    }
                    if (!moved) {
                        if (this.options.bodyElement) {
                            this.options.bodyElement.appendChild(this.element)
                        } else {
                            var offsetParentIsBody = true;
                            var currentNode = this.element.parentNode;
                            while (currentNode && currentNode.nodeType === 1 && currentNode.tagName !== "BODY") {
                                if (getComputedStyle(currentNode).position !== "static") {
                                    offsetParentIsBody = false;
                                    break
                                }
                                currentNode = currentNode.parentNode
                            }
                            if (!offsetParentIsBody) {
                                this.element.parentNode.removeChild(this.element);
                                this.element.ownerDocument.body.appendChild(this.element)
                            }
                        }
                    }
                    var writeCSS = {};
                    var write = false;
                    for (var key in css) {
                        var val = css[key];
                        var elVal = this.element.style[key];
                        if (elVal !== val) {
                            write = true;
                            writeCSS[key] = val
                        }
                    }
                    if (write) {
                        defer(function() {
                            extend(_this8.element.style, writeCSS);
                            _this8.trigger("repositioned")
                        })
                    }
                }
            }]);
            return TetherClass
        }(Evented);
        TetherClass.modules = [];
        TetherBase.position = position;
        var Tether = extend(TetherClass, TetherBase);
        "use strict";
        var _slicedToArray = function() {
            function sliceIterator(arr, i) {
                var _arr = [];
                var _n = true;
                var _d = false;
                var _e = undefined;
                try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break
                    }
                } catch (err) {
                    _d = true;
                    _e = err
                } finally {
                    try {
                        if (!_n && _i["return"]) _i["return"]()
                    } finally {
                        if (_d) throw _e
                    }
                }
                return _arr
            }
            return function(arr, i) {
                if (Array.isArray(arr)) {
                    return arr
                } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i)
                } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }
        }();
        var _TetherBase$Utils = TetherBase.Utils;
        var getBounds = _TetherBase$Utils.getBounds;
        var extend = _TetherBase$Utils.extend;
        var updateClasses = _TetherBase$Utils.updateClasses;
        var defer = _TetherBase$Utils.defer;
        var BOUNDS_FORMAT = ["left", "top", "right", "bottom"];

        function getBoundingRect(tether, to) {
            if (to === "scrollParent") {
                to = tether.scrollParents[0]
            } else if (to === "window") {
                to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset]
            }
            if (to === document) {
                to = to.documentElement
            }
            if (typeof to.nodeType !== "undefined") {
                (function() {
                    var node = to;
                    var size = getBounds(to);
                    var pos = size;
                    var style = getComputedStyle(to);
                    to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];
                    if (node.ownerDocument !== document) {
                        var win = node.ownerDocument.defaultView;
                        to[0] += win.pageXOffset;
                        to[1] += win.pageYOffset;
                        to[2] += win.pageXOffset;
                        to[3] += win.pageYOffset
                    }
                    BOUNDS_FORMAT.forEach(function(side, i) {
                        side = side[0].toUpperCase() + side.substr(1);
                        if (side === "Top" || side === "Left") {
                            to[i] += parseFloat(style["border" + side + "Width"])
                        } else {
                            to[i] -= parseFloat(style["border" + side + "Width"])
                        }
                    })
                })()
            }
            return to
        }
        TetherBase.modules.push({
            position: function position(_ref) {
                var _this = this;
                var top = _ref.top;
                var left = _ref.left;
                var targetAttachment = _ref.targetAttachment;
                if (!this.options.constraints) {
                    return true
                }
                var _cache = this.cache("element-bounds", function() {
                    return getBounds(_this.element)
                });
                var height = _cache.height;
                var width = _cache.width;
                if (width === 0 && height === 0 && typeof this.lastSize !== "undefined") {
                    var _lastSize = this.lastSize;
                    width = _lastSize.width;
                    height = _lastSize.height
                }
                var targetSize = this.cache("target-bounds", function() {
                    return _this.getTargetBounds()
                });
                var targetHeight = targetSize.height;
                var targetWidth = targetSize.width;
                var allClasses = [this.getClass("pinned"), this.getClass("out-of-bounds")];
                this.options.constraints.forEach(function(constraint) {
                    var outOfBoundsClass = constraint.outOfBoundsClass;
                    var pinnedClass = constraint.pinnedClass;
                    if (outOfBoundsClass) {
                        allClasses.push(outOfBoundsClass)
                    }
                    if (pinnedClass) {
                        allClasses.push(pinnedClass)
                    }
                });
                allClasses.forEach(function(cls) {
                    ["left", "top", "right", "bottom"].forEach(function(side) {
                        allClasses.push(cls + "-" + side)
                    })
                });
                var addClasses = [];
                var tAttachment = extend({}, targetAttachment);
                var eAttachment = extend({}, this.attachment);
                this.options.constraints.forEach(function(constraint) {
                    var to = constraint.to;
                    var attachment = constraint.attachment;
                    var pin = constraint.pin;
                    if (typeof attachment === "undefined") {
                        attachment = ""
                    }
                    var changeAttachX = undefined,
                        changeAttachY = undefined;
                    if (attachment.indexOf(" ") >= 0) {
                        var _attachment$split = attachment.split(" ");
                        var _attachment$split2 = _slicedToArray(_attachment$split, 2);
                        changeAttachY = _attachment$split2[0];
                        changeAttachX = _attachment$split2[1]
                    } else {
                        changeAttachX = changeAttachY = attachment
                    }
                    var bounds = getBoundingRect(_this, to);
                    if (changeAttachY === "target" || changeAttachY === "both") {
                        if (top < bounds[1] && tAttachment.top === "top") {
                            top += targetHeight;
                            tAttachment.top = "bottom"
                        }
                        if (top + height > bounds[3] && tAttachment.top === "bottom") {
                            top -= targetHeight;
                            tAttachment.top = "top"
                        }
                    }
                    if (changeAttachY === "together") {
                        if (tAttachment.top === "top") {
                            if (eAttachment.top === "bottom" && top < bounds[1]) {
                                top += targetHeight;
                                tAttachment.top = "bottom";
                                top += height;
                                eAttachment.top = "top"
                            } else if (eAttachment.top === "top" && top + height > bounds[3] && top - (height - targetHeight) >= bounds[1]) {
                                top -= height - targetHeight;
                                tAttachment.top = "bottom";
                                eAttachment.top = "bottom"
                            }
                        }
                        if (tAttachment.top === "bottom") {
                            if (eAttachment.top === "top" && top + height > bounds[3]) {
                                top -= targetHeight;
                                tAttachment.top = "top";
                                top -= height;
                                eAttachment.top = "bottom"
                            } else if (eAttachment.top === "bottom" && top < bounds[1] && top + (height * 2 - targetHeight) <= bounds[3]) {
                                top += height - targetHeight;
                                tAttachment.top = "top";
                                eAttachment.top = "top"
                            }
                        }
                        if (tAttachment.top === "middle") {
                            if (top + height > bounds[3] && eAttachment.top === "top") {
                                top -= height;
                                eAttachment.top = "bottom"
                            } else if (top < bounds[1] && eAttachment.top === "bottom") {
                                top += height;
                                eAttachment.top = "top"
                            }
                        }
                    }
                    if (changeAttachX === "target" || changeAttachX === "both") {
                        if (left < bounds[0] && tAttachment.left === "left") {
                            left += targetWidth;
                            tAttachment.left = "right"
                        }
                        if (left + width > bounds[2] && tAttachment.left === "right") {
                            left -= targetWidth;
                            tAttachment.left = "left"
                        }
                    }
                    if (changeAttachX === "together") {
                        if (left < bounds[0] && tAttachment.left === "left") {
                            if (eAttachment.left === "right") {
                                left += targetWidth;
                                tAttachment.left = "right";
                                left += width;
                                eAttachment.left = "left"
                            } else if (eAttachment.left === "left") {
                                left += targetWidth;
                                tAttachment.left = "right";
                                left -= width;
                                eAttachment.left = "right"
                            }
                        } else if (left + width > bounds[2] && tAttachment.left === "right") {
                            if (eAttachment.left === "left") {
                                left -= targetWidth;
                                tAttachment.left = "left";
                                left -= width;
                                eAttachment.left = "right"
                            } else if (eAttachment.left === "right") {
                                left -= targetWidth;
                                tAttachment.left = "left";
                                left += width;
                                eAttachment.left = "left"
                            }
                        } else if (tAttachment.left === "center") {
                            if (left + width > bounds[2] && eAttachment.left === "left") {
                                left -= width;
                                eAttachment.left = "right"
                            } else if (left < bounds[0] && eAttachment.left === "right") {
                                left += width;
                                eAttachment.left = "left"
                            }
                        }
                    }
                    if (changeAttachY === "element" || changeAttachY === "both") {
                        if (top < bounds[1] && eAttachment.top === "bottom") {
                            top += height;
                            eAttachment.top = "top"
                        }
                        if (top + height > bounds[3] && eAttachment.top === "top") {
                            top -= height;
                            eAttachment.top = "bottom"
                        }
                    }
                    if (changeAttachX === "element" || changeAttachX === "both") {
                        if (left < bounds[0]) {
                            if (eAttachment.left === "right") {
                                left += width;
                                eAttachment.left = "left"
                            } else if (eAttachment.left === "center") {
                                left += width / 2;
                                eAttachment.left = "left"
                            }
                        }
                        if (left + width > bounds[2]) {
                            if (eAttachment.left === "left") {
                                left -= width;
                                eAttachment.left = "right"
                            } else if (eAttachment.left === "center") {
                                left -= width / 2;
                                eAttachment.left = "right"
                            }
                        }
                    }
                    if (typeof pin === "string") {
                        pin = pin.split(",").map(function(p) {
                            return p.trim()
                        })
                    } else if (pin === true) {
                        pin = ["top", "left", "right", "bottom"]
                    }
                    pin = pin || [];
                    var pinned = [];
                    var oob = [];
                    if (top < bounds[1]) {
                        if (pin.indexOf("top") >= 0) {
                            top = bounds[1];
                            pinned.push("top")
                        } else {
                            oob.push("top")
                        }
                    }
                    if (top + height > bounds[3]) {
                        if (pin.indexOf("bottom") >= 0) {
                            top = bounds[3] - height;
                            pinned.push("bottom")
                        } else {
                            oob.push("bottom")
                        }
                    }
                    if (left < bounds[0]) {
                        if (pin.indexOf("left") >= 0) {
                            left = bounds[0];
                            pinned.push("left")
                        } else {
                            oob.push("left")
                        }
                    }
                    if (left + width > bounds[2]) {
                        if (pin.indexOf("right") >= 0) {
                            left = bounds[2] - width;
                            pinned.push("right")
                        } else {
                            oob.push("right")
                        }
                    }
                    if (pinned.length) {
                        (function() {
                            var pinnedClass = undefined;
                            if (typeof _this.options.pinnedClass !== "undefined") {
                                pinnedClass = _this.options.pinnedClass
                            } else {
                                pinnedClass = _this.getClass("pinned")
                            }
                            addClasses.push(pinnedClass);
                            pinned.forEach(function(side) {
                                addClasses.push(pinnedClass + "-" + side)
                            })
                        })()
                    }
                    if (oob.length) {
                        (function() {
                            var oobClass = undefined;
                            if (typeof _this.options.outOfBoundsClass !== "undefined") {
                                oobClass = _this.options.outOfBoundsClass
                            } else {
                                oobClass = _this.getClass("out-of-bounds")
                            }
                            addClasses.push(oobClass);
                            oob.forEach(function(side) {
                                addClasses.push(oobClass + "-" + side)
                            })
                        })()
                    }
                    if (pinned.indexOf("left") >= 0 || pinned.indexOf("right") >= 0) {
                        eAttachment.left = tAttachment.left = false
                    }
                    if (pinned.indexOf("top") >= 0 || pinned.indexOf("bottom") >= 0) {
                        eAttachment.top = tAttachment.top = false
                    }
                    if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {
                        _this.updateAttachClasses(eAttachment, tAttachment);
                        _this.trigger("update", {
                            attachment: eAttachment,
                            targetAttachment: tAttachment
                        })
                    }
                });
                defer(function() {
                    if (!(_this.options.addTargetClasses === false)) {
                        updateClasses(_this.target, addClasses, allClasses)
                    }
                    updateClasses(_this.element, addClasses, allClasses)
                });
                return {
                    top: top,
                    left: left
                }
            }
        });
        "use strict";
        var _TetherBase$Utils = TetherBase.Utils;
        var getBounds = _TetherBase$Utils.getBounds;
        var updateClasses = _TetherBase$Utils.updateClasses;
        var defer = _TetherBase$Utils.defer;
        TetherBase.modules.push({
            position: function position(_ref) {
                var _this = this;
                var top = _ref.top;
                var left = _ref.left;
                var _cache = this.cache("element-bounds", function() {
                    return getBounds(_this.element)
                });
                var height = _cache.height;
                var width = _cache.width;
                var targetPos = this.getTargetBounds();
                var bottom = top + height;
                var right = left + width;
                var abutted = [];
                if (top <= targetPos.bottom && bottom >= targetPos.top) {
                    ["left", "right"].forEach(function(side) {
                        var targetPosSide = targetPos[side];
                        if (targetPosSide === left || targetPosSide === right) {
                            abutted.push(side)
                        }
                    })
                }
                if (left <= targetPos.right && right >= targetPos.left) {
                    ["top", "bottom"].forEach(function(side) {
                        var targetPosSide = targetPos[side];
                        if (targetPosSide === top || targetPosSide === bottom) {
                            abutted.push(side)
                        }
                    })
                }
                var allClasses = [];
                var addClasses = [];
                var sides = ["left", "top", "right", "bottom"];
                allClasses.push(this.getClass("abutted"));
                sides.forEach(function(side) {
                    allClasses.push(_this.getClass("abutted") + "-" + side)
                });
                if (abutted.length) {
                    addClasses.push(this.getClass("abutted"))
                }
                abutted.forEach(function(side) {
                    addClasses.push(_this.getClass("abutted") + "-" + side)
                });
                defer(function() {
                    if (!(_this.options.addTargetClasses === false)) {
                        updateClasses(_this.target, addClasses, allClasses)
                    }
                    updateClasses(_this.element, addClasses, allClasses)
                });
                return true
            }
        });
        "use strict";
        var _slicedToArray = function() {
            function sliceIterator(arr, i) {
                var _arr = [];
                var _n = true;
                var _d = false;
                var _e = undefined;
                try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break
                    }
                } catch (err) {
                    _d = true;
                    _e = err
                } finally {
                    try {
                        if (!_n && _i["return"]) _i["return"]()
                    } finally {
                        if (_d) throw _e
                    }
                }
                return _arr
            }
            return function(arr, i) {
                if (Array.isArray(arr)) {
                    return arr
                } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i)
                } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }
        }();
        TetherBase.modules.push({
            position: function position(_ref) {
                var top = _ref.top;
                var left = _ref.left;
                if (!this.options.shift) {
                    return
                }
                var shift = this.options.shift;
                if (typeof this.options.shift === "function") {
                    shift = this.options.shift.call(this, {
                        top: top,
                        left: left
                    })
                }
                var shiftTop = undefined,
                    shiftLeft = undefined;
                if (typeof shift === "string") {
                    shift = shift.split(" ");
                    shift[1] = shift[1] || shift[0];
                    var _shift = shift;
                    var _shift2 = _slicedToArray(_shift, 2);
                    shiftTop = _shift2[0];
                    shiftLeft = _shift2[1];
                    shiftTop = parseFloat(shiftTop, 10);
                    shiftLeft = parseFloat(shiftLeft, 10)
                } else {
                    shiftTop = shift.top;
                    shiftLeft = shift.left
                }
                top += shiftTop;
                left += shiftLeft;
                return {
                    top: top,
                    left: left
                }
            }
        });
        return Tether
    })
}, function(module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    (function(define) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function($) {
            return function() {
                var $container;
                var listener;
                var toastId = 0;
                var toastType = {
                    error: "error",
                    info: "info",
                    success: "success",
                    warning: "warning"
                };
                var toastr = {
                    clear: clear,
                    remove: remove,
                    error: error,
                    getContainer: getContainer,
                    info: info,
                    options: {},
                    subscribe: subscribe,
                    success: success,
                    version: "2.1.3",
                    warning: warning
                };
                var previousToast;
                return toastr;

                function error(message, title, optionsOverride) {
                    return notify({
                        type: toastType.error,
                        iconClass: getOptions().iconClasses.error,
                        message: message,
                        optionsOverride: optionsOverride,
                        title: title
                    })
                }

                function getContainer(options, create) {
                    if (!options) {
                        options = getOptions()
                    }
                    $container = $("#" + options.containerId);
                    if ($container.length) {
                        return $container
                    }
                    if (create) {
                        $container = createContainer(options)
                    }
                    return $container
                }

                function info(message, title, optionsOverride) {
                    return notify({
                        type: toastType.info,
                        iconClass: getOptions().iconClasses.info,
                        message: message,
                        optionsOverride: optionsOverride,
                        title: title
                    })
                }

                function subscribe(callback) {
                    listener = callback
                }

                function success(message, title, optionsOverride) {
                    return notify({
                        type: toastType.success,
                        iconClass: getOptions().iconClasses.success,
                        message: message,
                        optionsOverride: optionsOverride,
                        title: title
                    })
                }

                function warning(message, title, optionsOverride) {
                    return notify({
                        type: toastType.warning,
                        iconClass: getOptions().iconClasses.warning,
                        message: message,
                        optionsOverride: optionsOverride,
                        title: title
                    })
                }

                function clear($toastElement, clearOptions) {
                    var options = getOptions();
                    if (!$container) {
                        getContainer(options)
                    }
                    if (!clearToast($toastElement, options, clearOptions)) {
                        clearContainer(options)
                    }
                }

                function remove($toastElement) {
                    var options = getOptions();
                    if (!$container) {
                        getContainer(options)
                    }
                    if ($toastElement && $(":focus", $toastElement).length === 0) {
                        removeToast($toastElement);
                        return
                    }
                    if ($container.children().length) {
                        $container.remove()
                    }
                }

                function clearContainer(options) {
                    var toastsToClear = $container.children();
                    for (var i = toastsToClear.length - 1; i >= 0; i--) {
                        clearToast($(toastsToClear[i]), options)
                    }
                }

                function clearToast($toastElement, options, clearOptions) {
                    var force = clearOptions && clearOptions.force ? clearOptions.force : false;
                    if ($toastElement && (force || $(":focus", $toastElement).length === 0)) {
                        $toastElement[options.hideMethod]({
                            duration: options.hideDuration,
                            easing: options.hideEasing,
                            complete: function complete() {
                                removeToast($toastElement)
                            }
                        });
                        return true
                    }
                    return false
                }

                function createContainer(options) {
                    $container = $("<div/>").attr("id", options.containerId).addClass(options.positionClass);
                    $container.appendTo($(options.target));
                    return $container
                }

                function getDefaults() {
                    return {
                        tapToDismiss: true,
                        toastClass: "toast",
                        containerId: "toast-container",
                        debug: false,
                        showMethod: "fadeIn",
                        showDuration: 300,
                        showEasing: "swing",
                        onShown: undefined,
                        hideMethod: "fadeOut",
                        hideDuration: 1e3,
                        hideEasing: "swing",
                        onHidden: undefined,
                        closeMethod: false,
                        closeDuration: false,
                        closeEasing: false,
                        closeOnHover: true,
                        extendedTimeOut: 1e3,
                        iconClasses: {
                            error: "toast-error",
                            info: "toast-info",
                            success: "toast-success",
                            warning: "toast-warning"
                        },
                        iconClass: "toast-info",
                        positionClass: "toast-top-right",
                        timeOut: 5e3,
                        titleClass: "toast-title",
                        messageClass: "toast-message",
                        escapeHtml: false,
                        target: "body",
                        closeHtml: '<button type="button">&times;</button>',
                        closeClass: "toast-close-button",
                        newestOnTop: true,
                        preventDuplicates: false,
                        progressBar: false,
                        progressClass: "toast-progress",
                        rtl: false
                    }
                }

                function publish(args) {
                    if (!listener) {
                        return
                    }
                    listener(args)
                }

                function notify(map) {
                    var options = getOptions();
                    var iconClass = map.iconClass || options.iconClass;
                    if (typeof map.optionsOverride !== "undefined") {
                        options = $.extend(options, map.optionsOverride);
                        iconClass = map.optionsOverride.iconClass || iconClass
                    }
                    if (shouldExit(options, map)) {
                        return
                    }
                    toastId++;
                    $container = getContainer(options, true);
                    var intervalId = null;
                    var $toastElement = $("<div/>");
                    var $titleElement = $("<div/>");
                    var $messageElement = $("<div/>");
                    var $progressElement = $("<div/>");
                    var $closeElement = $(options.closeHtml);
                    var progressBar = {
                        intervalId: null,
                        hideEta: null,
                        maxHideTime: null
                    };
                    var response = {
                        toastId: toastId,
                        state: "visible",
                        startTime: new Date,
                        options: options,
                        map: map
                    };
                    personalizeToast();
                    displayToast();
                    handleEvents();
                    publish(response);
                    if (options.debug && console) {
                        console.log(response)
                    }
                    return $toastElement;

                    function escapeHtml(source) {
                        if (source == null) {
                            source = ""
                        }
                        return source.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
                    }

                    function personalizeToast() {
                        setIcon();
                        setTitle();
                        setMessage();
                        setCloseButton();
                        setProgressBar();
                        setRTL();
                        setSequence();
                        setAria()
                    }

                    function setAria() {
                        var ariaValue = "";
                        switch (map.iconClass) {
                            case "toast-success":
                            case "toast-info":
                                ariaValue = "polite";
                                break;
                            default:
                                ariaValue = "assertive"
                        }
                        $toastElement.attr("aria-live", ariaValue)
                    }

                    function handleEvents() {
                        if (options.closeOnHover) {
                            $toastElement.hover(stickAround, delayedHideToast)
                        }
                        if (!options.onclick && options.tapToDismiss) {
                            $toastElement.click(hideToast)
                        }
                        if (options.closeButton && $closeElement) {
                            $closeElement.click(function(event) {
                                if (event.stopPropagation) {
                                    event.stopPropagation()
                                } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {
                                    event.cancelBubble = true
                                }
                                if (options.onCloseClick) {
                                    options.onCloseClick(event)
                                }
                                hideToast(true)
                            })
                        }
                        if (options.onclick) {
                            $toastElement.click(function(event) {
                                options.onclick(event);
                                hideToast()
                            })
                        }
                    }

                    function displayToast() {
                        $toastElement.hide();
                        $toastElement[options.showMethod]({
                            duration: options.showDuration,
                            easing: options.showEasing,
                            complete: options.onShown
                        });
                        if (options.timeOut > 0) {
                            intervalId = setTimeout(hideToast, options.timeOut);
                            progressBar.maxHideTime = parseFloat(options.timeOut);
                            progressBar.hideEta = (new Date).getTime() + progressBar.maxHideTime;
                            if (options.progressBar) {
                                progressBar.intervalId = setInterval(updateProgress, 10)
                            }
                        }
                    }

                    function setIcon() {
                        if (map.iconClass) {
                            $toastElement.addClass(options.toastClass).addClass(iconClass)
                        }
                    }

                    function setSequence() {
                        if (options.newestOnTop) {
                            $container.prepend($toastElement)
                        } else {
                            $container.append($toastElement)
                        }
                    }

                    function setTitle() {
                        if (map.title) {
                            var suffix = map.title;
                            if (options.escapeHtml) {
                                suffix = escapeHtml(map.title)
                            }
                            $titleElement.append(suffix).addClass(options.titleClass);
                            $toastElement.append($titleElement)
                        }
                    }

                    function setMessage() {
                        if (map.message) {
                            var suffix = map.message;
                            if (options.escapeHtml) {
                                suffix = escapeHtml(map.message)
                            }
                            $messageElement.append(suffix).addClass(options.messageClass);
                            $toastElement.append($messageElement)
                        }
                    }

                    function setCloseButton() {
                        if (options.closeButton) {
                            $closeElement.addClass(options.closeClass).attr("role", "button");
                            $toastElement.prepend($closeElement)
                        }
                    }

                    function setProgressBar() {
                        if (options.progressBar) {
                            $progressElement.addClass(options.progressClass);
                            $toastElement.prepend($progressElement)
                        }
                    }

                    function setRTL() {
                        if (options.rtl) {
                            $toastElement.addClass("rtl")
                        }
                    }

                    function shouldExit(options, map) {
                        if (options.preventDuplicates) {
                            if (map.message === previousToast) {
                                return true
                            } else {
                                previousToast = map.message
                            }
                        }
                        return false
                    }

                    function hideToast(override) {
                        var method = override && options.closeMethod !== false ? options.closeMethod : options.hideMethod;
                        var duration = override && options.closeDuration !== false ? options.closeDuration : options.hideDuration;
                        var easing = override && options.closeEasing !== false ? options.closeEasing : options.hideEasing;
                        if ($(":focus", $toastElement).length && !override) {
                            return
                        }
                        clearTimeout(progressBar.intervalId);
                        return $toastElement[method]({
                            duration: duration,
                            easing: easing,
                            complete: function complete() {
                                removeToast($toastElement);
                                clearTimeout(intervalId);
                                if (options.onHidden && response.state !== "hidden") {
                                    options.onHidden()
                                }
                                response.state = "hidden";
                                response.endTime = new Date;
                                publish(response)
                            }
                        })
                    }

                    function delayedHideToast() {
                        if (options.timeOut > 0 || options.extendedTimeOut > 0) {
                            intervalId = setTimeout(hideToast, options.extendedTimeOut);
                            progressBar.maxHideTime = parseFloat(options.extendedTimeOut);
                            progressBar.hideEta = (new Date).getTime() + progressBar.maxHideTime
                        }
                    }

                    function stickAround() {
                        clearTimeout(intervalId);
                        progressBar.hideEta = 0;
                        $toastElement.stop(true, true)[options.showMethod]({
                            duration: options.showDuration,
                            easing: options.showEasing
                        })
                    }

                    function updateProgress() {
                        var percentage = (progressBar.hideEta - (new Date).getTime()) / progressBar.maxHideTime * 100;
                        $progressElement.width(percentage + "%")
                    }
                }

                function getOptions() {
                    return $.extend({}, getDefaults(), toastr.options)
                }

                function removeToast($toastElement) {
                    if (!$container) {
                        $container = getContainer()
                    }
                    if ($toastElement.is(":visible")) {
                        return
                    }
                    $toastElement.remove();
                    $toastElement = null;
                    if ($container.children().length === 0) {
                        $container.remove();
                        previousToast = undefined
                    }
                }
            }()
        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
    })(__webpack_require__(36))
}, function(module, exports) {
    module.exports = function() {
        throw new Error("define cannot be used indirect")
    }
}]);
const captchaPlugin = {
    install: function(Vue, options) {
        Vue.prototype.$captchaIsOn = function(type) {
            const settings = this.$store.getters["cartStore/getCaptchaSettings"]();
            return settings.forms[type] && (this.captcha.setting === "on" || this.captcha.setting === "offloggedin" && !(this.$store.getters["cartStore/getClient"]()["id"] > 0))
        };
        Vue.prototype.$captchaCheck = function(type) {
            return new Promise((resolve, reject) => {
                const settings = this.$store.getters["cartStore/getCaptchaSettings"]();
                if (!settings.setting || settings.setting == "offloggedin" && this.$store.getters["cartStore/getClient"]()["id"]) {
                    resolve();
                    return
                }
                if (settings.type === "recaptcha" && typeof grecaptcha !== "undefined") {
                    grecaptcha.reset()
                }
                captchaHelper.captchaType = type;
                captchaHelper.onSuccessCallback = resolve;
                captchaHelper.onFailCallback = reject;
                if (settings.type === "invisible") {
                    const self = this;
                    captchaHelper.callbackEvent = function() {
                        self.$store.dispatch("cartStore/confirmCaptcha", {
                            token: csrfToken,
                            code: document.getElementById("g-recaptcha-response").value,
                            type: captchaHelper.captchaType
                        }).then(response => {
                            captchaHelper.runSuccessCallback(response);
                            grecaptcha.reset();
                            $("#captchaContainerModal").modal("hide");
                            $("#captchaContainerModal").html("")
                        })
                    }
                }
                captchaHelper.initCaptcha()
            })
        }
    }
};
$("body").attr("id", "layers-body");

function mgLoadPageContoler() {
    new Promise(function(resolve, reject) {
        var ret = mgJsComponentHandler.registerComponents();
        if (ret || !ret) {
            resolve(ret)
        }
    }).then(function(resault) {
        var appContainers = document.getElementsByClassName("vue-app-main-container");
        ret = mgEventHandler.runCallback("AppsPreLoad", null, {
            appContainers: appContainers
        });
        return ret
    }).then(function(resault) {
        var appContainers = document.getElementsByClassName("vue-app-main-container");
        for (var i = 0; i < appContainers.length; i++) {
            mgPageControler = new mgVuePageControler(appContainers[i].id);
            mgPageControler.vinit()
        }
    })
}
if (document.readyState == "complete") {
    mgLoadPageContoler()
} else {
    document.onreadystatechange = function() {
        if (document.readyState === "interactive") {
            mgLoadPageContoler()
        }
    }
}
var mgUrlParser = {
    url: null,
    getCurrentUrl: function() {
        if (!this.url) {
            if (window.location.href.indexOf("#") > 0) {
                this.url = window.location.href.substr(0, window.location.href.indexOf("#"))
            } else {
                this.url = window.location.href
            }
        }
        return this.url
    }
};
var mgJsComponentHandler = {
    defaultComponentJs: {},
    customComponentJs: {},
    defaultBasedComponents: {},
    addDefaultComponent: function(componentId, componentObj) {
        this.defaultComponentJs[componentId] = componentObj
    },
    getDefaultComponent: function(componentId) {
        if (this.defaultComponentJs.hasOwnProperty(componentId)) {
            return this.defaultComponentJs[componentId]
        } else {
            return false
        }
    },
    addCustomComponent: function(componentId, componentObj) {
        this.customComponentJs[componentId] = componentObj
    },
    addComponentByDefaultTemplate: function(componentId, templateId) {
        this.defaultBasedComponents[componentId] = templateId
    },
    registerComponents: function() {
        this.registerDefaultComponents();
        this.registerCustomComponents()
    },
    registerCustomComponents: function() {
        for (var key in this.customComponentJs) {
            if (!this.customComponentJs.hasOwnProperty(key)) {
                continue
            }
            var componentObj = this.customComponentJs[key];
            Vue.component("mg-component-body-" + key, componentObj)
        }
    },
    registerDefaultComponents: function() {
        for (var key in this.defaultBasedComponents) {
            if (!this.defaultBasedComponents.hasOwnProperty(key)) {
                continue
            }
            if (this.defaultComponentJs.hasOwnProperty(this.defaultBasedComponents[key])) {
                var componentObj = Object.assign({}, this.defaultComponentJs[this.defaultBasedComponents[key]]);
                componentObj.template = componentObj.template + "-" + key;
                Vue.component("mg-component-body-" + key, componentObj)
            } else {
                console.log("No default component " + this.defaultBasedComponents[key] + " found")
            }
        }
    },
    registerNowCustomComponent: function(componentId, componentObj) {
        Vue.component("mg-component-body-" + componentId, componentObj)
    },
    registerNowByDefaultTemplate: function(componentId, templateName) {
        if (this.defaultComponentJs.hasOwnProperty(templateName)) {
            var componentObj = Object.assign({}, this.defaultComponentJs[templateName]);
            componentObj.template = componentObj.template + "-" + componentId;
            Vue.component("mg-component-body-" + componentId, componentObj)
        } else {
            console.log("No default component " + templateName + " found")
        }
    },
    returnByDefaultTemplate: function(componentId, templateName) {
        if (this.defaultComponentJs.hasOwnProperty(templateName)) {
            var componentObj = Object.assign({}, this.defaultComponentJs[templateName]);
            componentObj.template = componentObj.template + "-" + componentId;
            return {
                name: "mg-component-body-" + componentId,
                obj: componentObj
            }
        } else {
            console.log("No default component " + templateName + " found");
            return null
        }
    },
    extendRegisterByDefaultTemplate: function(componentId, templateName) {
        if (this.defaultComponentJs.hasOwnProperty(templateName) && typeof $("#" + componentId) !== "undefined") {
            var componentObj = Object.assign({}, this.defaultComponentJs[templateName]);
            componentObj.template = componentObj.template + "-" + componentId;
            var renderComponent = Vue.extend(componentObj);
            (new renderComponent).$mount("#" + componentId)
        } else if ($("#" + componentId).length === 0) {
            console.log("No component item " + componentId + " found");
            return null
        } else {
            console.log("No default component " + templateName + " found");
            return null
        }
    }
};
var mgEventCallback = {
    objectId: null,
    eventType: null,
    callbackFunction: null,
    order: 1e3,
    generateEvent: function(id, eventType, callbackFunction, order) {
        if ((id === null || typeof id === "string") && typeof eventType === "string" && typeof callbackFunction === "function") {
            this.objectId = id;
            this.eventType = eventType;
            this.callbackFunction = callbackFunction;
            this.order = !order || typeof order !== "number" ? 1e3 : order;
            return this
        } else {
            return null
        }
    },
    runEventCallback: function(objectId, params) {
        return this.callbackFunction(objectId, params)
    }
};
var mgEventHandler = {
    callbacks: {},
    on: function(eventType, id, callbackFunction, order) {
        var tmpCall = mgEventCallback.generateEvent(id, eventType, callbackFunction, order);
        var tempId = Object.keys(this.callbacks).length;
        this.callbacks["call_" + tempId] = Object.assign({}, tmpCall)
    },
    runCallback: async function(eventType, id, callbackParams) {
        var callbackList = [];
        var self = this;
        for (var key in this.callbacks) {
            if (!this.callbacks.hasOwnProperty(key)) {
                continue
            }
            var tmpCallback = Object.assign({}, this.callbacks[key]);
            if (tmpCallback.eventType !== eventType || tmpCallback.objectId !== null && tmpCallback.objectId !== id) {
                continue
            } else if (tmpCallback.objectId !== null && tmpCallback.objectId === id) {
                callbackList.push(tmpCallback)
            } else {
                callbackList.push(tmpCallback)
            }
        }
        callbackList.sort(function(a, b) {
            return a.order - b.order
        });
        for (var key in callbackList) {
            if (!callbackList.hasOwnProperty(key)) {
                continue
            }
            await self.getPromise(callbackList[key], id, callbackParams).then(function() {})
        }
    },
    getPromise: function(calbackObj, id, callbackParams) {
        return new Promise(function(resolve, reject) {
            var ret = calbackObj.runEventCallback(id, callbackParams);
            if (ret || !ret) {
                resolve()
            }
        })
    }
};

function mgVuePageControler(controlerId) {
    this.baseLoaderUrl = mgUrlParser.getCurrentUrl();
    this.vueLoaderId = controlerId;
    this.vueLoader = false, this.vinit = function() {
        var self = this;
        Vue.use(Vuex);
        Vue.use(captchaPlugin);
        Vue.use($cookies);
        Vue.mixin({
            methods: {
                debounce(func, delay = 300) {
                    return function() {
                        const context = this;
                        const args = arguments;
                        clearTimeout(this.debounceTimer);
                        this.debounceTimer = setTimeout(() => func.apply(context, args), delay)
                    }
                },
                handleNavTouchScroll(slider, container) {
                    let isDown = false;
                    let startX;
                    let navItemsWidth = 0;
                    $(slider).on("mousedown", e => {
                        e.preventDefault();
                        isDown = true;
                        $(slider).find(".nav-item").each((index, item) => {
                            navItemsWidth += $(item).outerWidth(true)
                        });
                        startX = e.pageX + $(slider).scrollLeft()
                    });
                    $(slider).on("mouseleave", e => {
                        e.preventDefault();
                        isDown = false
                    });
                    $(slider).on("mouseup", e => {
                        e.preventDefault();
                        isDown = false;
                        if (this.isSliderMoving) {
                            setTimeout(() => {
                                this.isSliderMoving = false
                            }, 100)
                        }
                    });
                    $(slider).on("mousemove", e => {
                        if (!isDown) return;
                        if (navItemsWidth > $(container).width()) {
                            this.isSliderMoving = true;
                            e.preventDefault();
                            const x = e.pageX - $(slider).scrollLeft();
                            $(slider).scrollLeft(startX - e.pageX)
                        } else {
                            this.isSliderMoving = false
                        }
                    })
                }
            }
        });
        self.vueLoader = new Vue(self.getVueAppInits());
        Vue.use(VueInlineSvg.InlineSvgPlugin)
    }, this.getVueAppInits = function() {
        var vAppId = this.vueLoaderId;
        var newVueAppConfig = mgDefauleVueObject;
        newVueAppConfig.el = "#" + vAppId;
        newVueAppConfig.data.targetId = vAppId;
        newVueAppConfig.data.targetUrl = mgUrlParser.getCurrentUrl();
        newVueAppConfig.store = new Vuex.Store({
            state: {
                componentsData: {}
            },
            getters: {
                getComponentData: state => (componentName, optionName, optionGroup) => {
                    if (typeof state.componentsData[componentName] === "undefined") {
                        return null
                    } else if (typeof optionGroup !== "undefined") {
                        if (typeof state.componentsData[componentName][optionGroup] === "undefined") {
                            return null
                        } else {
                            return state.componentsData[componentName][optionGroup][optionName]
                        }
                    } else {
                        if (typeof state.componentsData[componentName][optionName] === "undefined") {
                            return null
                        } else {
                            return state.componentsData[componentName][optionName]
                        }
                    }
                }
            },
            mutations: {
                updateComponentData(state, valueDetails) {
                    if (typeof state.componentsData[valueDetails.componentName] === "undefined") {
                        state.componentsData[valueDetails.componentName] = {}
                    }
                    if (typeof valueDetails.optionGroup !== "undefined" && typeof state.componentsData[valueDetails.componentName][valueDetails.optionGroup] === "undefined") {
                        state.componentsData[valueDetails.componentName][valueDetails.optionGroup] = {};
                        if (typeof state.componentsData[valueDetails.componentName][valueDetails.optionGroup][valueDetails.optionName] === "undefined") {
                            state.componentsData[valueDetails.componentName][valueDetails.optionGroup][valueDetails.optionName] = valueDetails.optionValue
                        }
                    }
                    if (typeof valueDetails.optionGroup === "undefined") {
                        state.componentsData[valueDetails.componentName][valueDetails.optionName] = valueDetails.optionValue
                    } else {
                        state.componentsData[valueDetails.componentName][valueDetails.optionGroup][valueDetails.optionName] = valueDetails.optionValue
                    }
                }
            }
        });
        return newVueAppConfig
    }, this.modalData = {};
    this.modalInstance = null;
    this.modalAppContainerId = controlerId + "_modal";
    this.initModal = function(id, namespace, index, event, dataLoaded) {
        var self = this;
        self.modalData.id = id;
        self.modalData.namespace = namespace;
        self.modalData.index = index;
        self.modalData.event = event;
        self.modalData.dataLoaded = dataLoaded.htmlData;
        jQuery("#" + self.modalAppContainerId).html(dataLoaded.htmlData);
        if (typeof dataLoaded.registrations !== "undefined") {
            $("#loadedTemplates").html(dataLoaded.template);
            for (var key in dataLoaded.registrations) {
                if (!dataLoaded.registrations.hasOwnProperty(key)) {
                    continue
                }
                mgJsComponentHandler.registerNowByDefaultTemplate(key.toLowerCase(), dataLoaded.registrations[key])
            }
        }
        self.modalInstance = new Vue(self.getVueModalAppInits());
        mgEventHandler.runCallback("ModalLoaded", self.modalData.id, {
            containerId: self.modalAppContainerId,
            modalInstance: self.modalInstance
        })
    }, this.destructApp = function() {
        var self = this;
        self.vueLoader.$destroy();
        self.vueLoader = null;
        self = null
    };
    this.destructModal = function() {
        var self = this;
        var modalId = self.modalData.id;
        self.modalInstance.$destroy();
        self.modalInstance = null;
        self.modalData.id = null;
        self.modalData.namespace = null;
        self.modalData.index = null;
        self.modalData.event = null;
        self.modalData.dataLoaded = null;
        jQuery("#" + self.modalAppContainerId).html("");
        mgEventHandler.runCallback("ModalClosed", modalId, {})
    };
    this.reloadVueModal = function() {
        $("#mgModalContainer").append('<div id="mg-full-modal-wrapper" class="lu-preloader-container lu-preloader-container--full-screen lu-preloader-container--overlay" v-show="1"><div class="lu-preloader lu-preloader--sm"></div></div>');
        var self = this;
        var tempData = self.modalData;
        self.modalInstance.$destroy();
        self.vueLoader.reloadModalContent(tempData.event, tempData.id, tempData.namespace, tempData.index, null)
    };
    this.getVueModalAppInits = function() {
        var self = this;
        var vmAppId = self.modalAppContainerId;
        var newVuemAppConfig = mgDefauleVueModalObject;
        newVuemAppConfig.el = "#" + vmAppId;
        newVuemAppConfig.data.targetId = self.modalData.id;
        newVuemAppConfig.data.targetUrl = mgUrlParser.getCurrentUrl();
        return newVuemAppConfig
    };
    this.initModalAdditions = function() {
        initModalSelects();
        initModalSwitchEvents();
        initModalTooltips()
    };
    this.closeModal = function(event) {
        var clickedEl = document.elementFromPoint(event.clientX, event.clientY);
        if ($(clickedEl).hasClass("lu-modal") && $(clickedEl).hasClass("show")) {
            if (typeof event.explicitOriginalTarget !== "undefined" && $(event.explicitOriginalTarget).hasClass("lu-modal") && $(event.explicitOriginalTarget).hasClass("show")) {
                this.destructModal()
            } else if (event.clientX === event.layerX) {
                this.destructModal()
            }
        }
    }
}
var mgIntegrationHelper = {
    getIngegrationInsertType: function(isIntegration) {
        var allowedInsertTypes = ["full", "content", "mc_content"];
        var intParam = $(isIntegration).attr("mg-integration-insert-type");
        if (allowedInsertTypes.includes(intParam)) {
            return intParam
        } else {
            return "full"
        }
    },
    getIngegrationCode: function(selector, integrationInsertType) {
        if (integrationInsertType === "full") {
            return $(selector).parents(".mg-integration-container").children("#layers").first()[0].outerHTML
        } else if (integrationInsertType === "mc_content") {
            return $(selector)[0].innerHTML
        } else {
            return $(selector)[0].outerHTML
        }
    },
    removeOldContainer: function(selector, integrationInsertType, integrationTarget) {
        return $(selector)[0].remove()
    },
    afterInsertActions: function(selector, integrationInsertType, integrationTarget) {
        if (integrationInsertType === "full") {
            var modalContId = $("#" + $(selector).attr("id") + "_modal");
            $(integrationTarget).find(modalContId).first().remove()
        }
    }
};
mgEventHandler.on("AppsPreLoad", null, function(id, params) {
    if (typeof params.appContainers !== "undefined") {
        for (let key in params.appContainers) {
            if (!params.appContainers.hasOwnProperty(key)) {
                continue
            }
            let isIntegration = $(params.appContainers[key]).parents(".mg-integration-container");
            if (isIntegration.length === 1) {
                let integrationInsertType = mgIntegrationHelper.getIngegrationInsertType(isIntegration);
                let tempIntCode = mgIntegrationHelper.getIngegrationCode(params.appContainers[key], integrationInsertType);
                let integrationType = $(isIntegration).attr("mg-integration-type");
                let integrationTarget = $(isIntegration).attr("mg-integration-target");
                if (integrationType === "append") {
                    mgIntegrationHelper.removeOldContainer(params.appContainers[key], integrationInsertType, integrationTarget);
                    $(integrationTarget).append(tempIntCode);
                    mgIntegrationHelper.afterInsertActions(params.appContainers[key], integrationInsertType, integrationTarget)
                } else if (integrationType === "replace") {
                    mgIntegrationHelper.removeOldContainer(params.appContainers[key], integrationInsertType, integrationTarget);
                    $(integrationTarget).replaceWith(tempIntCode);
                    mgIntegrationHelper.afterInsertActions(params.appContainers[key], integrationInsertType, integrationTarget)
                } else if (integrationType === "after") {
                    mgIntegrationHelper.removeOldContainer(params.appContainers[key], integrationInsertType, integrationTarget);
                    $(integrationTarget).after(tempIntCode);
                    mgIntegrationHelper.afterInsertActions(params.appContainers[key], integrationInsertType, integrationTarget)
                } else if (integrationType === "before") {
                    mgIntegrationHelper.removeOldContainer(params.appContainers[key], integrationInsertType, integrationTarget);
                    $(integrationTarget).before(tempIntCode);
                    mgIntegrationHelper.afterInsertActions(params.appContainers[key], integrationInsertType, integrationTarget)
                } else if (integrationType === "prepend") {
                    mgIntegrationHelper.removeOldContainer(params.appContainers[key], integrationInsertType, integrationTarget);
                    $(integrationTarget).prepend(tempIntCode);
                    mgIntegrationHelper.afterInsertActions(params.appContainers[key], integrationInsertType, integrationTarget)
                } else if (integrationType === "custom") {
                    let contId = $(params.appContainers[key]).attr("id");
                    let integrationFunction = $(isIntegration).attr("mg-integration-function");
                    if (integrationFunction && typeof window[integrationFunction] === "function") {
                        window[integrationFunction](integrationTarget, contId, params.appContainers[key])
                    }
                }
            }
        }
    }
}, 3e3);
var mgDefauleVueModalObject = {
    el: null,
    data: {
        targetId: null,
        targetUrl: null,
        pageLoading: false,
        returnedData: null,
        loading: false,
        loaderComponent: '<div class="row"><i class="dataTables_processing"></i></div>',
        sSearch: null,
        showModal: false,
        htmlContent: "",
        modalBodyContainer: "mg-modal-body",
        refreshingState: [],
        massActionIds: null,
        massActionTargetCont: null,
        pagePreLoader: null,
        destroyComponent: false,
        modalInstance: null,
        mgNewModalContainerName: "mg-component-body-empty-modal",
        mgNewModalJsObj: null,
        mgNewModalvIf: false,
        appActionBlockingState: false
    },
    created: function() {
        var self = this;
        self.$nextTick(function() {
            initModalSelects();
            initModalSwitchEvents();
            initModalTooltips();
            initModalTaggers()
        })
    },
    methods: {
        selectChangeAction: function($event) {
            mgEventHandler.runCallback("SelectFieldValueChanged", $event.target.name, {
                data: $event.target
            })
        },
        closeModal: function() {
            mgPageControler.destructModal()
        },
        rendKey: function(lenth) {
            if (!lenth) {
                lenth = 6
            }
            var randKey = "";
            var avChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            for (var i = 0; i < lenth; i++) {
                randKey += avChars.charAt(Math.floor(Math.random() * avChars.length))
            }
            return randKey
        },
        vloadData: function(params) {
            var self = this;
            self.refreshUrl();
            for (var propertyName in params) {
                self.addUrlComponent(propertyName, params[propertyName])
            }
            self.addUrlComponent("ajax", "1");
            return $.get(self.targetUrl, function(data) {
                data = data.data;
                if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                    window[data.callBackFunction](data)
                }
            }, "json").fail(function() {
                console.log("Action Failed")
            })
        },
        addUrlComponent: function($name, $value) {
            var self = this;
            self.targetUrl += (self.targetUrl.indexOf("?") !== -1 ? "&" : "?") + $name + "=" + encodeURIComponent($value)
        },
        updateUrlParam: function(key, value, event) {
            var self = this;
            value = self.updateValueByAttrs(key, value, event);
            if (self.targetUrl.indexOf(key) === -1) {
                self.addUrlComponent(key, value)
            } else {
                var baseUrlParts = self.targetUrl.split("?");
                var currentUrlParams = baseUrlParts[1].split("&");
                for (i = 0; i < currentUrlParams.length; i++) {
                    if (currentUrlParams[i].indexOf(key) === 0) {
                        if (value === "") {
                            currentUrlParams.splice(i, 1)
                        } else {
                            currentUrlParams[i] = key + "=" + value
                        }
                    }
                }
                var updatedUrlParams = currentUrlParams.join("&");
                self.targetUrl = baseUrlParts[0] + "?" + updatedUrlParams
            }
        },
        updateValueByAttrs: function(key, value, event) {
            if (value.indexOf(":") !== 0) {
                return value
            } else {
                if ($(event.target).attr("data-" + key)) {
                    return $(event.target).attr("data-" + key)
                } else if ($(event.target).parents("a").first().attr("data-" + key)) {
                    return $(event.target).parents("a").first().attr("data-" + key)
                } else if ($(event.target).parents("button").first().attr("data-" + key)) {
                    return $(event.target).parents("button").first().attr("data-" + key)
                } else {
                    return value
                }
            }
        },
        refreshUrl: function() {
            var self = this;
            self.targetUrl = mgUrlParser.getCurrentUrl();
            if (self.targetUrl.indexOf("#") > 0) {
                self.targetUrl = self.targetUrl.substr(0, self.targetUrl.indexOf("#"))
            }
        },
        loadModal: function(event, targetId, namespace, index, params, addSpinner) {
            var self = this;
            if (self.appActionBlockingState) {
                return true
            }
            self.appActionBlockingState = true;
            self.htmlContent = "<div></div>";
            self.showSpinner(event);
            self.refreshUrl();
            self.initRefreshActions(event, targetId);
            self.initMassActions(event);
            self.addUrlComponent("loadData", targetId);
            self.addUrlComponent("namespace", namespace);
            if (params && params.length > 0) {
                for (i = 0; i < params.length; i++) {
                    self.addUrlComponent(params[i].name, params[i].value)
                }
            }
            self.addUrlComponent("index", index);
            self.addUrlComponent("mgformtype", "read");
            self.getActionId(event);
            self.addUrlComponent("ajax", "1");
            $.get(self.targetUrl, function(data) {
                data = data.data;
                if (data.status === "success") {
                    self.htmlContent = data.htmlData;
                    self.destroyComponent = true;
                    mgPageControler.initModal(targetId, namespace, index, event, self.htmlContent)
                }
                self.$nextTick(function() {
                    if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                        window[data.callBackFunction](data, targetId, event)
                    }
                });
                self.hideSpinner(event);
                self.appActionBlockingState = false
            }, "json").fail(function() {
                console.log("Action Failed");
                self.hideSpinner(event);
                self.appActionBlockingState = false
            });
            self.refreshUrl()
        },
        showSpinner: function(event) {
            var self = this;
            var spinnerTarget = self.getSpinerTarget(event);
            if (spinnerTarget.length > 0 || $(spinnerTarget).tagName === "I") {
                var isBtnIcon = $(spinnerTarget).hasClass("lu-btn__icon");
                $(spinnerTarget).attr("originall-button-icon", $(spinnerTarget).attr("class"));
                $(spinnerTarget).removeAttr("class");
                $(spinnerTarget).attr("class", (isBtnIcon ? "lu-btn__icon " : "") + "lu-btn__icon lu-preloader lu-preloader--sm")
            } else {
                self.addSpinner(event)
            }
        },
        hideSpinner: function(event) {
            var self = this;
            var spinnerTarget = self.getSpinerTarget(event);
            if ($(event.target).attr("originall-button-content")) {
                self.removeSpinner(event)
            } else if (spinnerTarget.length > 0 || $(spinnerTarget).tagName === "I") {
                $(spinnerTarget).removeAttr("class");
                $(spinnerTarget).attr("class", $(spinnerTarget).attr("originall-button-icon"));
                $(spinnerTarget).removeAttr("originall-button-icon")
            }
        },
        removeSpinner: function(event) {
            $(event.target).html($(event.target).attr("originall-button-content"));
            $(event.target).removeAttr("originall-button-content")
        },
        addSpinner: function(event) {
            var elWidth = $(event.target).width();
            var spinnerClass = $(event.target).hasClass("lu-btn--success") ? "lu-preloader-success" : $(event.target).hasClass("lu-btn--danger") ? "lu-preloader-danger" : "";
            $(event.target).attr("originall-button-content", $(event.target).html());
            $(event.target).html('<span class="lu-btn__icon temp-button-loader" style="margin: 0 0 0 0 !important; width: ' + elWidth + 'px;"><i class="lu-preloader lu-preloader--sm ' + spinnerClass + '"></i></span>')
        },
        getSpinerParent: function(event) {
            if ($(event.target)[0].tagName === "A" || $(event.target)[0].tagName === "BUTTON") {
                return $(event.target)[0]
            } else if ($(event.target)[0].parents("button").first()) {
                return $(event.target)[0].parents("button").first()
            } else if ($(event.target)[0].parents("a").first()) {
                return $(event.target)[0].parents("a").first()
            } else {
                return null
            }
        },
        getSpinerTarget: function(event) {
            if ($(event.target)[0].tagName === "I") {
                return $(event.target)
            } else if ($(event.target)[0].tagName === "SPAN") {
                var aParents = $(event.target).parents("a");
                return aParents.length === 0 ? $(event.target).parents("button").first().find("i").first() : $(event.target).parents("a").first().find("i").first()
            } else if ($(event.target)[0].tagName === "A") {
                return $(event.target).find("i").first()
            } else if ($(event.target)[0].tagName === "BUTTON") {
                return $(event.target).find("i").first()
            } else {
                return null
            }
        },
        initMassActions: function(event) {
            var self = this;
            self.cleanMassActions();
            if ($(event.target).parents(".lu-t-c__mass-actions").length === 0) {
                return
            }
            self.addUrlComponent("isMassAction", "1");
            var tableContainer = $(event.target).parents(".vueDatatableTable").first().attr("id");
            self.massActionTargetCont = tableContainer;
            self.massActionIds = collectTableMassActionsData(tableContainer)
        },
        addMassActionsToData: function(formData) {
            if (mgPageControler.vueLoader.massActionIds) {
                for (var key in mgPageControler.vueLoader.massActionIds) {
                    if (!mgPageControler.vueLoader.massActionIds.hasOwnProperty(key)) {
                        continue
                    }
                    formData.set("massActions[" + key + "]", mgPageControler.vueLoader.massActionIds[key])
                }
                return formData
            } else {
                return formData
            }
        },
        cleanMassActions: function() {
            var self = this;
            if (self.massActionIds || self.massActionTargetCont) {
                self.massActionIds = null;
                self.$nextTick(function() {
                    self.massActionTargetCont = null
                })
            }
        },
        addRefreshActions: function(targetId) {
            var self = this;
            self.refreshingState.push(targetId)
        },
        initRefreshActions: function(event, targetId) {
            var self = this;
            var menuReloading = ["addGroupButton", "editGroupButton", "deleteGroupButton"];
            if (menuReloading.indexOf(targetId) > -1) {
                self.refreshingState = ["mg-category-menu"];
                return
            }
            var tableContainer = $(event.target).parents(".vueDatatableTable").first();
            self.refreshingState = [$(tableContainer).attr("id")]
        },
        runRefreshActions: function(ids, data) {
            var self = this;
            var rfIds = ids && ids.length > 0 ? ids : self.refreshingState;
            var customParams = data && typeof data.customParams !== undefined ? data.customParams : null;
            if (rfIds && rfIds.length > 0) {
                $.each(rfIds, function(index, Id) {
                    var targetId = Id;
                    self.$nextTick(function() {
                        self.$emit("reloadMgData", targetId, customParams)
                    })
                })
            }
        },
        cleanRefreshActionsState: function() {
            var self = this;
            self.refreshingState = []
        },
        getActionId: function(event) {
            var self = this;
            var tableActions = $(event.target).parents("td.mgTableActions");
            var widgetActionComponent = $(event.target).parents("div.widgetActionComponent");
            if ($(tableActions).length === 1) {
                var row = $(tableActions[0]).parent("tr");
                var actionElementId = $(row).attr("actionid");
                if (actionElementId) {
                    self.addUrlComponent("actionElementId", actionElementId)
                }
            } else if (widgetActionComponent.length === 1) {
                var actionElementId = widgetActionComponent.first().attr("actionid");
                if (actionElementId) {
                    self.addUrlComponent("actionElementId", actionElementId)
                }
            }
        },
        submitForm: function(targetId, event) {
            if (!event && targetId) {
                event = targetId;
                targetId = "mgModalContainer"
            }
            event.preventDefault();
            var self = this;
            if (self.appActionBlockingState) {
                return true
            }
            self.appActionBlockingState = true;
            var formTargetId = $("#" + targetId)[0].tagName === "FORM" ? targetId : $("#" + targetId).find("form").attr("id");
            if (formTargetId) {
                self.showSpinner(event);
                var formCont = new mgFormControler(formTargetId);
                var formData = formCont.getFieldsData();
                formData = self.addMassActionsToData(formData);
                self.refreshUrl();
                self.addUrlComponent("loadData", formTargetId);
                self.addUrlComponent("namespace", getItemNamespace(formTargetId));
                self.addUrlComponent("index", getItemIndex(formTargetId));
                self.addUrlComponent("ajax", "1");
                self.addUrlComponent("mgformtype", $("#" + formTargetId).attr("mgformtype"));
                $.ajax({
                    type: "POST",
                    url: self.targetUrl,
                    data: formData,
                    processData: false,
                    contentType: false
                }).done(function(data) {
                    data = data.data;
                    self.hideSpinner(event);
                    self.$nextTick(function() {
                        if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                            window[data.callBackFunction](data, targetId, event)
                        }
                    });
                    if (data.status === "success") {
                        self.showModal = false;
                        if (data.callbackEvent && data.callbackEvent.name) {
                            mgEventHandler.runCallback(data.callbackEvent.name, targetId, data.callbackEvent.params)
                        }
                        mgPageControler.vueLoader.runRefreshActions(data && typeof data.refreshIds !== undefined ? data.refreshIds : null, data);
                        self.cleanMassActions();
                        self.addAlert(data.status, data.message);
                        formCont.updateFieldsValidationMessages([]);
                        self.closeModal()
                    } else if (data.rawData !== undefined && data.rawData.FormValidationErrors !== undefined) {
                        formCont.updateFieldsValidationMessages(data.rawData.FormValidationErrors)
                    } else {
                        formCont.updateFieldsValidationMessages([]);
                        self.handleErrorMessage(data)
                    }
                    self.appActionBlockingState = false
                }).fail(function(jqXHR, textStatus, errorThrown) {
                    self.hideSpinner(event);
                    self.handleServerError(jqXHR, textStatus, errorThrown);
                    self.appActionBlockingState = false
                })
            } else {}
        },
        handleErrorMessage: function(data) {
            var self = this;
            self.addAlert(data.status, data.message ? data.message : typeof data.data !== "undefined" ? (typeof data.data.errorCode !== "undefined" ? "Error Code: " + data.data.errorCode + " <br> " : "") + (typeof data.data.errorToken !== "undefined" ? "Error Token: " + data.data.errorToken + " <br> " : "") + (typeof data.data.errorTime !== "undefined" ? "Error Time: " + data.data.errorTime + " <br> " : "") + (typeof data.data.errorMessage !== "undefined" ? "Message: " + data.data.errorMessage : "") : "");
            if (typeof data.data !== "undefined" && typeof data.data.errorCode !== "undefined") {
                console.log(data.data)
            }
        },
        handleServerError: function(jqXHR, textStatus, errorThrown) {
            var self = this;
            if (jqXHR.responseText.indexOf('id="mg-sh-h-492318-64534" value="') > 0) {
                var errTokenStart = jqXHR.responseText.indexOf("mg-sh-h-492318-64534") + 20;
                var errTokenEnd = jqXHR.responseText.indexOf("mg-sh-h-492318-64534-end");
                var errToken = jqXHR.responseText.substr(errTokenStart, errTokenEnd - errTokenStart);
                errToken = errToken.replace("value=", "").replace(/\"/g, "").replace(/\s/g, "");
                self.addAlert("error", "Unexpected Error. <br>Error Token: " + errToken);
                console.log("Action Failed. Error Token: " + errToken)
            } else {
                console.log("Action Failed")
            }
        },
        reloadModalContent: function(elId) {
            var self = this;
            $("#mgModalContainer").append('<div class="preloader-container preloader-container--full-screen preloader-container--overlay" v-show="loading"><div class="preloader preloader--sm"></div></div>');
            self.refreshUrl();
            mgPageControler.vueLoader.vueLoader.initRefreshActions(mgPageControler.vueLoader.tempModalData["event"], mgPageControler.vueLoader.tempModalData["loadData"]);
            self.initMassActions(mgPageControler.vueLoader.tempModalData["event"]);
            self.addUrlComponent("loadData", mgPageControler.vueLoader.tempModalData["loadData"]);
            self.addUrlComponent("namespace", mgPageControler.vueLoader.tempModalData["namespace"]);
            self.addUrlComponent("index", mgPageControler.vueLoader.tempModalData["index"]);
            self.addUrlComponent("mgformtype", "reload");
            self.getActionId(cthis.tempModalData["event"]);
            self.getActionId(mgPageControler.vueLoader.tempModalData["event"]);
            self.addUrlComponent("ajax", "1");
            var formData = [];
            if ($("#mgModalContainer").find("form").length > 0) {
                var formTargetId = $("#mgModalContainer").find("form").first().attr("id");
                var formCont = new mgFormControler(formTargetId);
                var formData = formCont.getFieldsData()
            }
            $.post(self.targetUrl, formData).done(function(data) {
                data = data.data;
                if (data.status === "success") {
                    cthis.initVueModal("vueModalContainer", data.htmlData)
                }
            }, "json").fail(function() {
                console.log("Action Failed")
            });
            self.refreshUrl()
        },
        initReloadModal: function() {
            mgPageControler.reloadVueModal("vueModalContainer")
        },
        ajaxAction: function(event, targetId, namespace, index, postData) {
            var self = this;
            self.refreshUrl();
            self.initRefreshActions(event, targetId);
            self.addUrlComponent("loadData", targetId);
            self.addUrlComponent("namespace", namespace);
            self.addUrlComponent("index", index);
            self.getActionId(event);
            self.addUrlComponent("ajax", "1");
            $.post(self.targetUrl, postData).done(function(data) {
                data = data.data;
                self.addAlert(data.status, data.message);
                self.$nextTick(function() {
                    if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                        window[data.callBackFunction](data, targetId, event)
                    }
                });
                if (data.status === "success") {}
            }, "json");
            self.refreshUrl()
        },
        updateSorting: function(order, loadData, namespace) {
            var self = this;
            self.refreshUrl();
            self.addUrlComponent("loadData", loadData);
            self.addUrlComponent("namespace", namespace);
            self.addUrlComponent("ajax", "1");
            self.addUrlComponent("mgformtype", "reorder");
            var formData = {
                order: order
            };
            $.post(self.targetUrl, {
                formData: formData
            }).done(function(data) {
                data = data.data;
                self.addAlert(data.status, data.message);
                self.pageLoading = false;
                self.$nextTick(function() {
                    if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                        window[data.callBackFunction](data, loadData)
                    }
                });
                if (data.status === "success") {} else {}
            })
        },
        addAlert: function(type, message) {
            type = type === "error" ? "danger" : type;
            layers.alert.create({
                $alertPosition: "right-top",
                $alertStatus: type,
                $alertBody: message,
                $alertTimeout: 1e4
            })
        },
        makeCustomAction: function(functionName, params, event, namespace, index) {
            var self = this;
            if (functionName && typeof mgPageControler.vueLoader[functionName] === "function") {
                mgPageControler.vueLoader[functionName](self, params, event, namespace, index)
            } else if (functionName && typeof window[functionName] === "function") {
                window[functionName](self, params, event, namespace, index)
            }
        },
        redirect: function(event, params, targetBlank) {
            var self = this;
            var tempUrl = self.targetUrl;
            if (params.rawUrl !== undefined) {
                self.targetUrl = params.rawUrl
            }
            if (params.actionElementId !== undefined) {
                self.getActionId(event)
            }
            $.each(params, function(key, value) {
                if (key === "rawUrl" || key === "actionElementId") {
                    return false
                } else {
                    self.updateUrlParam(key.replace("__", "-"), value, event)
                }
            });
            if (targetBlank) {
                window.open(self.targetUrl, "_blank")
            } else {
                window.location = self.targetUrl
            }
        },
        submitFormByEvent: function(event) {
            var self = this;
            self.submitForm($(event.target).parents("form").first().attr("id"), event)
        },
        submitFormByField: function(event) {
            if ($(event.target)[0].tagName !== "TEXTAREA") {
                var modal = $(event.target).parents("#mgModalContainer").first();
                if (modal.length > 0) {
                    if ($(modal).find(".lu-btn--success.submitForm, .lu-btn--danger.submitForm").last().length > 0) {
                        const eventn = new Event("click");
                        document.querySelector("#mgModalContainer .lu-btn--success.submitForm, #mgModalContainer .lu-btn--danger.submitForm").dispatchEvent(eventn)
                    }
                }
            }
        }
    }
};
var mgDefauleVueObject = {
    el: null,
    data: {
        targetId: null,
        targetUrl: null,
        pageLoading: false,
        returnedData: null,
        loading: false,
        loaderComponent: '<div class="row"><i class="dataTables_processing"></i></div>',
        sSearch: null,
        showModal: false,
        htmlContent: "",
        modalBodyContainer: "mg-modal-body",
        refreshingState: [],
        massActionIds: null,
        massActionTargetCont: null,
        pagePreLoader: null,
        destroyComponent: false,
        modalInstance: null,
        mgNewModalContainerName: "mg-component-body-empty-modal",
        mgNewModalJsObj: null,
        mgNewModalvIf: false,
        appActionBlockingState: false
    },
    created: function() {
        var self = this;
        self.$on("restartRefreshingState", self.cleanRefreshActionsState());
        self.$nextTick(function() {
            initContainerSelects("layers")
        });
        mgEventHandler.runCallback("AppCreated", self.targetId, {
            instance: self
        })
    },
    methods: {
        selectChangeAction: function($event) {
            mgEventHandler.runCallback("SelectFieldValueChanged", $event.target.name, {
                data: $event.target
            })
        },
        rendKey: function(lenth) {
            if (!lenth) {
                lenth = 6
            }
            var randKey = "";
            var avChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            for (var i = 0; i < lenth; i++) {
                randKey += avChars.charAt(Math.floor(Math.random() * avChars.length))
            }
            return randKey
        },
        vloadData: function(params, forceRawData) {
            var self = this;
            var returnType = forceRawData ? "text" : "json";
            self.refreshUrl();
            for (var propertyName in params) {
                self.addUrlComponent(propertyName, params[propertyName])
            }
            self.addUrlComponent("ajax", "1");
            return $.get(self.targetUrl, function(data) {
                if (!forceRawData) {
                    data = data.data;
                    if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                        window[data.callBackFunction](data)
                    }
                }
            }, returnType).fail(function(jqXHR, textStatus, errorThrown) {
                console.log("Action Failed")
            })
        },
        addUrlComponent: function($name, $value) {
            var self = this;
            if (typeof $value === "object") {
                for (var key in $value) {
                    if (!$value.hasOwnProperty(key)) {
                        continue
                    }
                    self.targetUrl += (self.targetUrl.indexOf("?") !== -1 ? "&" : "?") + $name + "[" + key + "]" + "=" + encodeURIComponent($value[key])
                }
            } else {
                self.targetUrl += (self.targetUrl.indexOf("?") !== -1 ? "&" : "?") + $name + "=" + encodeURIComponent($value)
            }
        },
        updateUrlParam: function(key, value, event) {
            var self = this;
            value = self.updateValueByAttrs(key, value, event);
            if (self.targetUrl.indexOf(key) === -1) {
                self.addUrlComponent(key, value)
            } else {
                var baseUrlParts = self.targetUrl.split("?");
                var currentUrlParams = baseUrlParts[1].split("&");
                for (i = 0; i < currentUrlParams.length; i++) {
                    if (currentUrlParams[i].indexOf(key) === 0) {
                        if (value === "") {
                            currentUrlParams.splice(i, 1)
                        } else {
                            currentUrlParams[i] = key + "=" + value
                        }
                    }
                }
                var updatedUrlParams = currentUrlParams.join("&");
                self.targetUrl = baseUrlParts[0] + "?" + updatedUrlParams
            }
        },
        updateValueByAttrs: function(key, value, event) {
            if (value.indexOf(":") !== 0) {
                return value
            } else {
                if ($(event.target).attr("data-" + key)) {
                    return $(event.target).attr("data-" + key)
                } else if ($(event.target).parents("a").first().attr("data-" + key)) {
                    return $(event.target).parents("a").first().attr("data-" + key)
                } else if ($(event.target).parents("button").first().attr("data-" + key)) {
                    return $(event.target).parents("button").first().attr("data-" + key)
                } else {
                    return value
                }
            }
        },
        refreshUrl: function() {
            var self = this;
            self.targetUrl = mgUrlParser.getCurrentUrl();
            if (self.targetUrl.indexOf("#") > 0) {
                self.targetUrl = self.targetUrl.substr(0, self.targetUrl.indexOf("#"))
            }
        },
        loadModal: function(event, targetId, namespace, index, params, addSpinner) {
            event.preventDefault();
            event.stopImmediatePropagation();
            var self = this;
            if (self.appActionBlockingState) {
                return true
            }
            self.appActionBlockingState = true;
            self.htmlContent = "<div></div>";
            if (addSpinner) {
                self.showSpinner(event)
            }
            self.refreshUrl();
            self.initRefreshActions(event, targetId);
            self.initMassActions(event);
            self.addUrlComponent("loadData", targetId);
            self.addUrlComponent("namespace", namespace);
            if (params && params.length > 0) {
                for (i = 0; i < params.length; i++) {
                    self.addUrlComponent(params[i].name, params[i].value)
                }
            }
            self.addUrlComponent("index", index);
            self.addUrlComponent("mgformtype", "read");
            self.getActionId(event);
            self.addUrlComponent("ajax", "1");
            var request = $.get(self.targetUrl, function(data) {
                data = data.data;
                if (data.status === "success") {
                    self.htmlContent = data.rawData.htmlData;
                    mgPageControler.initModal(targetId, namespace, index, event, data.rawData)
                } else {
                    self.handleErrorMessage(data);
                    mgEventHandler.runCallback("ModalLoadFailed", targetId, {
                        respData: data
                    })
                }
                self.$nextTick(function() {
                    if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                        window[data.callBackFunction](data, targetId, event)
                    }
                });
                if (addSpinner) {
                    self.hideSpinner(event)
                }
                self.appActionBlockingState = false
            }, "json").fail(function(jqXHR, textStatus, errorThrown) {
                if (addSpinner) {
                    self.hideSpinner(event)
                }
                self.appActionBlockingState = false;
                self.handleServerError(jqXHR, textStatus, errorThrown);
                mgEventHandler.runCallback("ModalLoadFailed", targetId, {
                    jqXHR: jqXHR,
                    textStatus: textStatus,
                    errorThrown: errorThrown
                })
            });
            self.refreshUrl();
            return request
        },
        showSpinner: function(event) {
            var self = this;
            var spinnerTarget = self.getSpinerTarget(event);
            if (spinnerTarget && spinnerTarget.length > 0 || $(spinnerTarget).tagName === "I") {
                var isBtnIcon = $(spinnerTarget).hasClass("lu-btn__icon");
                $(spinnerTarget).attr("originall-button-icon", $(spinnerTarget).attr("class"));
                $(spinnerTarget).removeAttr("class");
                $(spinnerTarget).attr("class", (isBtnIcon ? "lu-btn__icon " : "") + "lu-btn__icon lu-preloader lu-preloader--sm")
            } else {
                self.addSpinner(event)
            }
        },
        reloadModalContent: function(event, targetId, namespace, index, params, addSpinner) {
            var self = this;
            $("#mgModalContainer").append('<div class="preloader-container preloader-container--full-screen preloader-container--overlay" v-show="loading"><div class="preloader preloader--sm"></div></div>');
            self.refreshUrl();
            self.initRefreshActions(event, targetId);
            self.initMassActions(targetId);
            self.addUrlComponent("loadData", targetId);
            self.addUrlComponent("namespace", namespace);
            self.addUrlComponent("index", index);
            self.addUrlComponent("mgformtype", "reload");
            self.getActionId(event);
            self.addUrlComponent("ajax", "1");
            var formData = [];
            if ($("#mgModalContainer").find("form").length > 0) {
                var formTargetId = $("#mgModalContainer").find("form").first().attr("id");
                var formCont = new mgFormControler(formTargetId);
                var formData = formCont.getFieldsData()
            }
            $.post(self.targetUrl, formData).done(function(data) {
                data = data.data;
                if (data.status === "success") {
                    self.htmlContent = data.rawData.htmlData;
                    self.destroyComponent = true;
                    mgPageControler.initModal(targetId, namespace, index, event, data.rawData)
                } else {
                    self.handleErrorMessage(data);
                    $("#mgModalContainer #mg-full-modal-wrapper").remove()
                }
                self.$nextTick(function() {
                    if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                        window[data.callBackFunction](data, targetId, event)
                    }
                })
            }, "json").fail(function() {
                console.log("Action Failed")
            });
            self.refreshUrl()
        },
        hideSpinner: function(event) {
            var self = this;
            var spinnerTarget = self.getSpinerTarget(event);
            if ($(event.target).attr("originall-button-content")) {
                self.removeSpinner(event)
            } else if (spinnerTarget && spinnerTarget.length > 0 || $(spinnerTarget).tagName === "I") {
                $(spinnerTarget).removeAttr("class");
                $(spinnerTarget).attr("class", $(spinnerTarget).attr("originall-button-icon"));
                $(spinnerTarget).removeAttr("originall-button-icon")
            }
        },
        removeSpinner: function(event) {
            $(event.target).html($(event.target).attr("originall-button-content"));
            $(event.target).removeAttr("originall-button-content")
        },
        addSpinner: function(event) {
            var elWidth = $(event.target).width();
            var spinnerClass = $(event.target).hasClass("lu-btn--success") ? "lu-preloader-success" : $(event.target).hasClass("lu-btn--danger") ? "lu-preloader-danger" : "";
            $(event.target).attr("originall-button-content", $(event.target).html());
            $(event.target).html('<span class="lu-btn__icon lu-temp-button-loader" style="margin: 0 0 0 0 !important; width: ' + elWidth + 'px;"><i class="lu-btn__icon lu-preloader lu-preloader--sm ' + spinnerClass + '"></i></span>')
        },
        getSpinerParent: function(event) {
            if ($(event.target)[0].tagName === "A" || $(event.target)[0].tagName === "BUTTON") {
                return $(event.target)[0]
            } else if ($(event.target)[0].parents("button").first()) {
                return $(event.target)[0].parents("button").first()
            } else if ($(event.target)[0].parents("a").first()) {
                return $(event.target)[0].parents("a").first()
            } else {
                return null
            }
        },
        getSpinerTarget: function(event) {
            if ($(event.target)[0].tagName === "I") {
                return $(event.target)
            } else if ($(event.target)[0].tagName === "SPAN") {
                var aParents = $(event.target).parents("a");
                return aParents.length === 0 ? $(event.target).parents("button").first().find("i").first() : $(event.target).parents("a").first().find("i").first()
            } else if ($(event.target)[0].tagName === "A") {
                return $(event.target).find("i").first()
            } else if ($(event.target)[0].tagName === "BUTTON") {
                return $(event.target).find("i").first()
            } else {
                return null
            }
        },
        initMassActions: function(event) {
            var self = this;
            self.cleanMassActions();
            if ($(event.target).parents(".lu-t-c__mass-actions").length === 0) {
                return
            }
            self.addUrlComponent("isMassAction", "1");
            var tableContainer = $(event.target).parents(".vueDatatableTable").first().attr("id");
            self.massActionTargetCont = tableContainer;
            self.massActionIds = collectTableMassActionsData(tableContainer)
        },
        addMassActionsToData: function(formData) {
            var self = this;
            if (self.massActionIds) {
                for (var key in self.massActionIds) {
                    if (!self.massActionIds.hasOwnProperty(key)) {
                        continue
                    }
                    formData.set("massActions[" + key + "]", self.massActionIds[key])
                }
                return formData
            } else {
                return formData
            }
        },
        cleanMassActions: function() {
            var self = this;
            if (self.massActionIds || self.massActionTargetCont) {
                self.massActionIds = null;
                self.$nextTick(function() {
                    self.massActionTargetCont = null
                })
            }
        },
        addRefreshActions: function(targetId) {
            var self = this;
            self.refreshingState.push(targetId)
        },
        initRefreshActions: function(event, targetId) {
            var self = this;
            var menuReloading = ["addGroupButton", "editGroupButton", "deleteGroupButton"];
            if (menuReloading.indexOf(targetId) > -1) {
                self.refreshingState = ["mg-category-menu"];
                return
            }
            var tableContainer = $(event.target).parents(".vueDatatableTable").first();
            self.refreshingState = [$(tableContainer).attr("id")]
        },
        runRefreshActions: function(ids, data) {
            var self = this;
            var rfIds = ids && ids.length > 0 ? ids : self.refreshingState;
            var customParams = data && typeof data.customParams !== undefined ? data.customParams : null;
            if (rfIds && rfIds.length > 0) {
                $.each(rfIds, function(index, Id) {
                    var targetId = Id;
                    self.$nextTick(function() {
                        self.$emit("reloadMgData", targetId, customParams)
                    })
                })
            }
        },
        cleanRefreshActionsState: function() {
            var self = this;
            self.refreshingState = []
        },
        getActionId: function(event) {
            var self = this;
            var tableActions = $(event.target).parents("td.mgTableActions");
            var widgetActionComponent = $(event.target).parents("div.widgetActionComponent");
            if ($(tableActions).length === 1) {
                var row = $(tableActions[0]).parent("tr");
                var actionElementId = $(row).attr("actionid");
                if (actionElementId) {
                    self.addUrlComponent("actionElementId", actionElementId)
                }
            } else if (widgetActionComponent.length === 1) {
                var actionElementId = widgetActionComponent.first().attr("actionid");
                if (actionElementId) {
                    self.addUrlComponent("actionElementId", actionElementId)
                }
            }
        },
        submitForm: function(targetId, event) {
            event.preventDefault();
            var self = this;
            if (self.appActionBlockingState) {
                return true
            }
            self.appActionBlockingState = true;
            var formTargetId = $("#" + targetId)[0].tagName === "FORM" ? targetId : $("#" + targetId).find("form").attr("id");
            if (formTargetId) {
                self.showSpinner(event);
                var formCont = new mgFormControler(formTargetId);
                var formData = formCont.getFieldsData();
                formData = self.addMassActionsToData(formData);
                self.refreshUrl();
                self.addUrlComponent("loadData", formTargetId);
                self.addUrlComponent("namespace", getItemNamespace(formTargetId));
                self.addUrlComponent("index", getItemIndex(formTargetId));
                self.addUrlComponent("ajax", "1");
                self.addUrlComponent("mgformtype", $("#" + formTargetId).attr("mgformtype"));
                $.ajax({
                    type: "POST",
                    url: self.targetUrl,
                    data: formData,
                    processData: false,
                    contentType: false
                }).done(function(data) {
                    data = data.data;
                    self.hideSpinner(event);
                    self.$nextTick(function() {
                        if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                            window[data.callBackFunction](data, targetId, event)
                        }
                    });
                    if (data.status === "success") {
                        self.showModal = false;
                        if (data.callbackEvent && data.callbackEvent.name) {
                            mgEventHandler.runCallback(data.callbackEvent.name, targetId, data.callbackEvent.params)
                        }
                        self.runRefreshActions(data && typeof data.refreshIds !== undefined ? data.refreshIds : null, data);
                        self.cleanMassActions();
                        self.addAlert(data.status, data.message);
                        formCont.updateFieldsValidationMessages([])
                    } else if (data.rawData !== undefined && data.rawData.FormValidationErrors !== undefined) {
                        formCont.updateFieldsValidationMessages(data.rawData.FormValidationErrors)
                    } else {
                        formCont.updateFieldsValidationMessages([]);
                        self.handleErrorMessage(data)
                    }
                    self.appActionBlockingState = false
                }).fail(function(jqXHR, textStatus, errorThrown) {
                    self.hideSpinner(event);
                    self.handleServerError(jqXHR, textStatus, errorThrown);
                    self.appActionBlockingState = false
                })
            } else {}
        },
        handleErrorMessage: function(data) {
            var self = this;
            self.addAlert(data.status, data.message ? data.message : typeof data.data !== "undefined" ? (typeof data.data.errorCode !== "undefined" ? "Error Code: " + data.data.errorCode + " <br> " : "") + (typeof data.data.errorToken !== "undefined" ? "Error Token: " + data.data.errorToken + " <br> " : "") + (typeof data.data.errorTime !== "undefined" ? "Error Time: " + data.data.errorTime + " <br> " : "") + (typeof data.data.errorMessage !== "undefined" ? "Message: " + data.data.errorMessage : "") : "");
            if (typeof data.data !== "undefined" && typeof data.data.errorCode !== "undefined") {
                console.log(data.data)
            }
        },
        handleServerError: function(jqXHR, textStatus, errorThrown) {
            var self = this;
            if (jqXHR.responseText.indexOf('id="mg-sh-h-492318-64534" value="') > 0) {
                var errTokenStart = jqXHR.responseText.indexOf("mg-sh-h-492318-64534") + 20;
                var errTokenEnd = jqXHR.responseText.indexOf("mg-sh-h-492318-64534-end");
                var errToken = jqXHR.responseText.substr(errTokenStart, errTokenEnd - errTokenStart);
                errToken = errToken.replace("value=", "").replace(/\"/g, "").replace(/\s/g, "");
                self.addAlert("error", "Unexpected Error. <br>Error Token: " + errToken);
                console.log("Action Failed. Error Token: " + errToken)
            } else {
                console.log("Action Failed")
            }
        },
        ajaxAction: function(event, targetId, namespace, index, postData) {
            var self = this;
            self.refreshUrl();
            self.initRefreshActions(event, targetId);
            self.addUrlComponent("loadData", targetId);
            self.addUrlComponent("namespace", namespace);
            self.addUrlComponent("index", index);
            self.getActionId(event);
            self.addUrlComponent("ajax", "1");
            $.post(self.targetUrl, postData).done(function(data) {
                data = data.data;
                self.addAlert(data.status, data.message);
                self.$nextTick(function() {
                    if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                        window[data.callBackFunction](data, targetId, event)
                    }
                });
                if (data.status === "success") {}
            }, "json");
            self.refreshUrl()
        },
        updateSorting: function(order, loadData, namespace) {
            var self = this;
            self.refreshUrl();
            self.addUrlComponent("loadData", loadData);
            self.addUrlComponent("namespace", namespace);
            self.addUrlComponent("ajax", "1");
            self.addUrlComponent("mgformtype", "reorder");
            var formData = {
                order: order
            };
            $.post(self.targetUrl, {
                formData: formData
            }).done(function(data) {
                data = data.data;
                self.addAlert(data.status, data.message);
                self.pageLoading = false;
                self.$nextTick(function() {
                    if (data.callBackFunction && typeof window[data.callBackFunction] === "function") {
                        window[data.callBackFunction](data, loadData)
                    }
                });
                if (data.status === "success") {} else {}
            })
        },
        addAlert: function(type, message) {
            type = type === "error" ? "danger" : type;
            layers.alert.create({
                $alertPosition: "right-top",
                $alertStatus: type,
                $alertBody: message,
                $alertTimeout: 1e4
            })
        },
        makeCustomAction: function(functionName, params, event, namespace, index) {
            var self = this;
            if (functionName && typeof mgPageControler.vueLoader[functionName] === "function") {
                mgPageControler.vueLoader[functionName](self, params, event, namespace, index)
            } else if (functionName && typeof window[functionName] === "function") {
                window[functionName](self, params, event, namespace, index)
            }
        },
        redirect: function(event, params, targetBlank) {
            var self = this;
            var tempUrl = self.targetUrl;
            if (params.rawUrl !== undefined) {
                self.targetUrl = params.rawUrl
            }
            if (params.actionElementId !== undefined) {
                self.getActionId(event)
            }
            $.each(params, function(key, value) {
                if (key === "rawUrl" || key === "actionElementId") {
                    return false
                } else {
                    self.updateUrlParam(key.replace("__", "-"), value, event)
                }
            });
            if (targetBlank) {
                window.open(self.targetUrl, "_blank")
            } else {
                window.location = self.targetUrl
            }
        },
        submitFormByEvent: function(event) {
            var self = this;
            self.submitForm($(event.target).parents("form").first().attr("id"), event)
        },
        submitFormByField: function(event) {}
    }
};
if (typeof mgDtAjaxCpWrappers === "undefined") {
    var mgDtAjaxCpWrappers = {
        ajaxComponents: {},
        updateInProgress: false,
        registerAjaxComponent: function(object) {
            var self = this;
            var tmpAjaxObj = {
                obj: object,
                status: "notStarted"
            };
            self.ajaxComponents[object.component_id] = tmpAjaxObj;
            setTimeout(function() {
                self.loadAjaxData()
            }, 100)
        },
        loadAjaxData: async function() {
            var self = this;
            if (self.updateInProgress) {
                return true
            }
            self.updateInProgress = true;
            for (var key in self.ajaxComponents) {
                if (!self.ajaxComponents.hasOwnProperty(key)) {
                    continue
                }
                if (self.ajaxComponents[key].status !== "notStarted") {
                    continue
                }
                await self.getPromise(key).then(function() {
                    self.ajaxComponents[key].status = "completed"
                })
            }
        },
        getPromise: function(key) {
            var self = this;
            return new Promise(function(resolve, reject) {
                self.ajaxComponents[key].obj.loadAjaxData().then(function(data) {
                    resolve()
                })
            })
        },
        getUnloadedKey: function() {
            var self = this;
            for (var key in self.ajaxComponents) {
                if (!self.ajaxComponents.hasOwnProperty(key)) {
                    continue
                }
                if (self.ajaxComponents[key].status === "notStarted") {
                    return key
                }
            }
            return false
        }
    }
}
mgJsComponentHandler.addDefaultComponent("dt-ajax-field", {
    template: "#t-dt-ajax-field",
    data: function() {
        return {
            component_id: null,
            component_namespace: null,
            component_index: null,
            wrapper_id: null,
            loading_async: null,
            loading_lang: null,
            data: {},
            loading_state: true
        }
    },
    mounted: function() {
        var self = this;
        var wrapper = $(self.$el).parent();
        self.wrapper_id = $(wrapper).attr("id");
        self.component_id = $(wrapper).attr("component_id");
        self.component_namespace = $(wrapper).attr("component_namespace");
        self.component_index = $(wrapper).attr("component_index");
        self.loading_lang = $(wrapper).attr("loading_lang");
        self.loading_async = $(wrapper).attr("loading_async");
        initTooltipsForDatatables(self.wrapper_id);
        self.initAjaxCp()
    },
    methods: {
        initAjaxCp: function() {
            var self = this;
            if (self.loading_async) {
                mgDtAjaxCpWrappers.registerAjaxComponent(this)
            } else {
                self.loadAjaxData()
            }
        },
        loadAjaxData: function() {
            var self = this;
            self.loading_state = true;
            var requestParams = {
                loadData: self.component_id,
                namespace: self.component_namespace,
                index: self.component_index
            };
            var response = mgPageControler.vueLoader.vloadData(requestParams);
            return response.done(function(data) {
                self.data = data.data.rawData;
                self.loading_state = false
            })
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-ajax-select", {
    template: "#t-mg-ajax-select",
    props: ["component_id", "component_namespace", "component_index", "reload_fields_ids", "is_multiple", "hide_by_default_if_no_data"],
    data: function() {
        return {
            options: [],
            selected: null,
            selectInstance: null
        }
    },
    created: function() {
        var self = this;
        for (var key in self.reload_fields_ids) {
            if (!self.reload_fields_ids.hasOwnProperty(key)) {
                continue
            }
            mgEventHandler.on("SelectFieldValueChanged", self.reload_fields_ids[key], function(id, params) {
                self.loadAjaxData()
            })
        }
        self.$nextTick(function() {
            self.initSelect();
            self.loadAjaxData()
        })
    },
    methods: {
        initSelect: function() {
            var self = this;
            if ($("#" + self.component_id).hasClass("selectized")) {
                var selectizedInstance = $("#" + self.component_id).selectize();
                selectizedInstance[0].selectize.destroy()
            }
            var selSelect = $("#" + self.component_id).selectize({
                valueField: "key",
                labelField: "value",
                searchField: "value",
                create: false,
                plugins: ["remove_button"],
                options: self.options,
                items: self.selected
            });
            self.selectInstance = selSelect[0].selectize;
            self.selectInstance.on("change", function(value) {
                self.selectChangeAction()
            })
        },
        loadAjaxData: function() {
            var self = this;
            self.addLoader();
            var loadFormData = false;
            for (var key in self.reload_fields_ids) {
                if (!self.reload_fields_ids.hasOwnProperty(key)) {
                    continue
                }
                if (self.reload_fields_ids[key] !== "" && self.reload_fields_ids) {
                    loadFormData = true;
                    break
                }
            }
            if (loadFormData) {
                var tmpForm = $("select[name='" + self.component_id + "']").parents("form").first();
                var tmpFormId = $(tmpForm).attr("id");
                var tmpFormDataHandler = new mgFormControler(tmpFormId);
                var formData = tmpFormDataHandler.getFieldsData();
                if (typeof formData.formData !== "undefined") {
                    formData = formData.formData
                }
            } else {
                var formData = {}
            }
            var requestParams = {
                loadData: self.component_id,
                namespace: self.component_namespace,
                index: self.component_index
            };
            for (var key in formData) {
                if (!formData.hasOwnProperty(key)) {
                    continue
                }
                requestParams[key] = formData[key]
            }
            var response = mgPageControler.vueLoader.vloadData(requestParams);
            return response.done(function(data) {
                self.options = [];
                for (var key in data.data.rawData.options) {
                    if (!data.data.rawData.options.hasOwnProperty(key)) {
                        continue
                    }
                    var tmpOpt = {};
                    tmpOpt[key] = data.data.rawData.options[key];
                    self.options.push({}[key] = data.data.rawData.options[key])
                }
                self.selected = typeof data.data.rawData.selected === "string" ? [data.data.rawData.selected] : data.data.rawData.selected;
                self.$nextTick(function() {
                    self.showSelectIfHidden()
                });
                self.$nextTick(function() {
                    self.initSelect()
                });
                self.removeLoader()
            }).fail(function() {
                self.removeLoader();
                self.$nextTick(function() {
                    self.initSelect()
                });
                mgEventHandler.runCallback("SelectFieldDataLoaded", self.component_id, {
                    instance: self,
                    data: data.data.rawData
                })
            })
        },
        showSelectIfHidden: function() {
            var self = this;
            if (self.hide_by_default_if_no_data && self.options.length > 0) {
                if ($("#" + self.component_id).parents(".lu-form-group").first().length > 0) {
                    $("#" + self.component_id).parents(".lu-form-group").first().removeAttr("hidden")
                }
            }
        },
        selectChangeAction: function() {
            mgEventHandler.runCallback("SelectFieldValueChanged", this.component_id, {
                data: this
            })
        },
        addLoader: function() {
            var selectizeLoader = '<div class="lu-preloader lu-preloader--sm mg-selectize-loader"></div>';
            $("#" + this.component_id).parent().find(".selectize-input").first().append(selectizeLoader)
        },
        removeLoader: function() {
            $("#" + this.component_id).parent().find(".mg-selectize-loader").remove()
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-ajax-select-rs", {
    template: "#t-mg-ajax-select-rs",
    props: ["component_id", "component_namespace", "component_index", "reload_fields_ids", "hide_by_default_if_no_data", "def_opt_key", "def_opt_val"],
    data: function() {
        return {
            options: [],
            selected: null,
            selectInstance: null
        }
    },
    created: function() {
        var self = this;
        self.$nextTick(function() {
            self.initSelect()
        });
        for (var key in self.reload_fields_ids) {
            if (!self.reload_fields_ids.hasOwnProperty(key)) {
                continue
            }
            mgEventHandler.on("SelectFieldValueChanged", self.reload_fields_ids[key], function(id, params) {
                self.loadAjaxData()
            })
        }
    },
    methods: {
        initSelect: function() {
            var self = this;
            if ($("#" + self.component_id).hasClass("selectized")) {
                var selectizedInstance = $("#" + self.component_id).selectize();
                selectizedInstance[0].selectize.destroy()
            }
            var selSelect = $("#" + self.component_id).selectize({
                valueField: "key",
                labelField: "value",
                searchField: "value",
                plugins: ["remove_button"],
                options: self.options,
                load: function(query, callback) {
                    if (!query.length) {
                        return callback([])
                    } else {
                        var tmpres = self.loadAjaxData(query);
                        tmpres.done(function(data) {
                            setTimeout(function() {
                                callback(self.options)
                            }, 100)
                        })
                    }
                }
            });
            self.selectInstance = selSelect[0].selectize;
            self.selectInstance.on("change", function(value) {
                self.selectChangeAction()
            });
            if (self.def_opt_key && self.def_opt_val) {
                self.selectInstance.addOption({
                    key: self.def_opt_key,
                    value: self.def_opt_val
                });
                self.selectInstance.addItem(self.def_opt_key, true);
                self.selectInstance.refreshOptions(false)
            }
        },
        loadAjaxData: function(query) {
            var self = this;
            self.loading_state = true;
            var loadFormData = false;
            for (var key in self.reload_fields_ids) {
                if (!self.reload_fields_ids.hasOwnProperty(key)) {
                    continue
                }
                if (self.reload_fields_ids[key] !== "" && self.reload_fields_ids) {
                    loadFormData = true;
                    break
                }
            }
            if (loadFormData) {
                var tmpForm = $("select[name='" + self.component_id + "']").parents("form").first();
                var tmpFormId = $(tmpForm).attr("id");
                var tmpFormDataHandler = new mgFormControler(tmpFormId);
                var formData = tmpFormDataHandler.getFieldsData();
                if (typeof formData.formData !== "undefined") {
                    formData = formData.formData
                }
            } else {
                var formData = {}
            }
            var requestParams = {
                loadData: self.component_id,
                namespace: self.component_namespace,
                index: self.component_index,
                searchQuery: query
            };
            for (var key in formData) {
                if (!formData.hasOwnProperty(key)) {
                    continue
                }
                requestParams[key] = formData[key]
            }
            var response = mgPageControler.vueLoader.vloadData(requestParams);
            return response.done(function(data) {
                self.options = [];
                for (var key in data.data.rawData.options) {
                    if (!data.data.rawData.options.hasOwnProperty(key)) {
                        continue
                    }
                    var tmpOpt = {};
                    tmpOpt[key] = data.data.rawData.options[key];
                    self.options.push({}[key] = data.data.rawData.options[key])
                }
                self.$nextTick(function() {
                    self.showSelectIfHidden()
                })
            }).fail(function() {})
        },
        showSelectIfHidden: function() {
            var self = this;
            if (self.hide_by_default_if_no_data && self.options.length > 0) {
                if ($("#" + self.component_id).parents(".lu-form-group").first().length > 0) {
                    $("#" + self.component_id).parents(".lu-form-group").first().removeAttr("hidden")
                }
            }
        },
        selectChangeAction: function() {
            mgEventHandler.runCallback("SelectFieldValueChanged", this.component_id, {
                data: this
            })
        }
    }
});
mgJsComponentHandler.addDefaultComponent("category-empty-container", {
    template: "#category-menu",
    data: function() {
        return {
            contentLoading: true
        }
    }
});
mgJsComponentHandler.addComponentByDefaultTemplate("empty-menu-cont", "category-empty-container");
mgJsComponentHandler.addDefaultComponent("category-menu", {
    template: "#mg-category-menu",
    data: function() {
        var self = this;
        return {
            tableWrapperId: "mg-category-menu",
            returnedData: [],
            targetid: null,
            menuLoading: false,
            sSearch: null,
            dataContent: "",
            showModal: false,
            contentContainerName: "mg-component-body-empty-menu-cont",
            modalBodyContainer: "mg-modal-body",
            showSearch: false,
            showNoGroups: false,
            activeGroupId: null
        }
    },
    props: ["makeCustomAction", "toggleFormSection", "component_id"],
    mounted: function() {
        this.loadCategories(this.loadCategories)
    },
    created: function() {
        var self = this;
        self.$parent.$root.$on("reloadMgData", this.updateMgData)
    },
    methods: {
        updateMgData: function(toReloadId, customParams) {
            var self = this;
            self.activeGroupId = customParams && typeof customParams.activeGroupId !== undefined ? customParams.activeGroupId : null;
            if (self.component_id === toReloadId) {
                self.loadCategories(true);
                self.$nextTick(function() {
                    self.$emit("restartRefreshingState")
                })
            }
        },
        reloadMenuContent: function(categoryId, namespace, index) {
            if ($("#groupList").attr("isBeingSorted")) {
                $("#groupList").removeAttr("isBeingSorted");
                return
            }
            var self = this;
            self.contentContainerName = "mg-component-body-empty-menu-cont";
            var resp = self.$parent.$options.methods.vloadData({
                loadData: categoryId,
                namespace: namespace,
                index: index
            });
            resp.done(function(data) {
                var data = data.data.rawData;
                $("#loadedTemplates").append(data.template);
                for (var key in data.registrations) {
                    if (!data.registrations.hasOwnProperty(key)) {
                        continue
                    }
                    mgJsComponentHandler.registerNowByDefaultTemplate(key.toLowerCase(), data.registrations[key])
                }
                $("#groupList").find("li.is-active").removeClass("is-active");
                $("#groupList").find("#" + categoryId).addClass("is-active");
                self.contentContainerName = "mg-templatecontainer";
                Vue.component("mg-templatecontainer", {
                    template: data.htmlData,
                    created: function() {
                        var self = this;
                        self.$nextTick(function() {
                            initContainerSelects("itemContentContainer");
                            initContainerTooltips("itemContentContainer")
                        })
                    },
                    methods: {
                        submitForm: function(targetId, event) {
                            mgPageControler.vueLoader.submitForm(targetId, event)
                        },
                        loadModal: function(event, targetId, namespace, index, params, addSpinner) {
                            mgPageControler.vueLoader.loadModal(event, targetId, namespace, index, params, addSpinner)
                        },
                        selectChangeAction: function($event) {
                            mgPageControler.vueLoader.selectChangeAction($event)
                        },
                        makeCustomAction: function(functionName, params, event, namespace, index) {
                            mgPageControler.vueLoader.makeCustomAction(functionName, params, event, namespace, index)
                        }
                    }
                });
                mgPageControler.vueLoader.$nextTick(function() {
                    $("#itemContentContainer [data-content-slider]").luContentSlider()
                });
                self.$nextTick(function() {
                    tldCategoriesSortableController();
                    mgEventHandler.runCallback("CategoryMenuContentDataLoaded", self.component_id, {
                        data: data,
                        categoryMenu: self
                    })
                })
            })
        },
        searchDataEnter: function(event) {
            event.preventDefault();
            this.searchData(event)
        },
        searchData: function() {
            this.loadCategories()
        },
        hideSearch: function() {
            var self = this;
            if (self.sSearch) {
                self.sSearch = null;
                self.loadCategories()
            }
        },
        loadCategories: function(callback) {
            var self = this;
            self.menuLoading = true;
            self.targetid = self.$el.attributes.getNamedItem("targetid").value;
            var reqParams = {
                loadData: self.targetid,
                namespace: getItemNamespace(self.targetid),
                index: getItemIndex(self.targetid)
            };
            if (self.sSearch !== null) {
                reqParams.sSearch = self.sSearch
            }
            var resp = self.$parent.$options.methods.vloadData(reqParams);
            resp.done(function(data) {
                self.returnedData = data.data.rawData;
                self.menuLoading = false;
                if (typeof data.data.rawData != "undefined" && data.data.rawData.length > 0) {
                    if (callback) {
                        if (self.activeGroupId) {
                            for (var key in data.data.rawData) {
                                if (!data.data.rawData.hasOwnProperty(key)) {
                                    continue
                                } else {
                                    if (data.data.rawData[key].elId === self.activeGroupId) {
                                        self.activeGroupId = null;
                                        self.reloadMenuContent(data.data.rawData[key].elId, data.data.rawData[key].namespace, data.data.rawData[key].id);
                                        break
                                    }
                                }
                            }
                        } else {
                            self.reloadMenuContent(data.data.rawData[0].elId, data.data.rawData[0].namespace, data.data.rawData[0].id)
                        }
                    }
                    self.showNoGroups = false
                } else {
                    self.showNoGroups = true
                }
                self.$nextTick(function() {
                    tldCategoriesSortableController()
                })
            })
        },
        loadModal: function(event, targetId, namespace, index, params, addSpinner) {
            event.stopImmediatePropagation();
            mgPageControler.vueLoader.loadModal(event, targetId, namespace, index, params, addSpinner)
        },
        submitForm: function(event) {
            mgPageControler.vueLoader.submitForm("itemContentContainer", event)
        },
        toggleSearch: function() {
            this.showSearch = !this.showSearch
        }
    }
});
mgJsComponentHandler.addDefaultComponent("ds-copy-on-click", {
    template: "#t-ds-copy-on-click",
    data: function() {
        return {
            wrapper_id: null,
            text_to_copy: null,
            confirmation_lang: null
        }
    },
    mounted: function() {
        var self = this;
        var wrapper = $(self.$el).parent();
        self.wrapper_id = $(wrapper).attr("id");
        self.component_id = $(wrapper).attr("component_id");
        self.text_to_copy = $(wrapper).attr("text_to_copy");
        self.confirmation_lang = $(wrapper).attr("confirmation_lang");
        initTooltipsForDatatables(self.wrapper_id)
    },
    methods: {
        copyTextToClipboard: function() {
            var self = this;
            initTooltipsForDatatables(self.wrapper_id);
            var copyText = document.getElementById("cp_txt_" + self.component_id);
            copyText.select();
            document.execCommand("copy");
            mgPageControler.vueLoader.addAlert("success", self.confirmation_lang)
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-datatable", {
    template: "#t-mg-datatable",
    props: ["component_id", "component_namespace", "component_index", "autoload_data_after_created", "start_length"],
    data: function() {
        return {
            dataRows: [],
            length: 10,
            iSortCol_0: "",
            sSortDir_0: "",
            addTimeout: false,
            sSearch: false,
            sSearchPrevious: false,
            dataShowing: 0,
            dataTo: 0,
            dataFrom: 0,
            curPage: 1,
            allPages: 1,
            pagesMap: [],
            loading: false,
            show: true,
            showModal: false,
            noData: false,
            onOffSwitchEnabled: false,
            children: [],
            searchEnabled: true
        }
    },
    created: function() {
        var self = this;
        self.length = self.start_length;
        this.addTimeout = true;
        if (this.autoload_data_after_created) {
            this.updateProjects()
        }
        this.$parent.$root.$on("reloadMgData", this.updateMgData);
        mgEventHandler.on("DatatableFilterUpdated", self.component_id, function(id, params) {
            self.checkRequiredFilters()
        });
        this.$nextTick(function() {
            this.checkRequiredFilters()
        })
    },
    updated: function() {
        var self = this;
        initMassActionsOnDatatables(self.component_id);
        initTooltipsForDatatables(self.component_id)
    },
    methods: {
        checkRequiredFilters: function() {
            var requiredFilters = this.$store.getters.getComponentData(this.component_id, "requiredFilters");
            if (typeof requiredFilters === "object") {
                this.searchEnabled = true;
                for (var key in requiredFilters) {
                    if (!requiredFilters.hasOwnProperty(key)) {
                        continue
                    }
                    if (requiredFilters[key] === true) {
                        this.searchEnabled = false
                    }
                }
            }
        },
        updateMgData: function(toReloadId) {
            var self = this;
            if (self.component_id === toReloadId) {
                self.updateProjects();
                self.$nextTick(function() {
                    self.$emit("restartRefreshingState")
                })
            }
        },
        updateProjects: function() {
            var self = this;
            self.loading = true;
            var resp = self.$parent.$root.$options.methods.vloadData({
                loadData: self.component_id,
                namespace: self.component_namespace,
                index: self.component_index,
                iDisplayLength: self.length,
                iDisplayStart: self.dataShowing,
                sSearch: self.sSearch !== false ? self.sSearch : "",
                iSortCol_0: self.iSortCol_0,
                sSortDir_0: self.sSortDir_0,
                filters: self.getFilters()
            });
            resp.done(function(data) {
                if (data.data.status === "error") {
                    self.noData = true;
                    mgPageControler.vueLoader.handleErrorMessage(data.data)
                } else {
                    var actionData = data.data.rawData;
                    data = data.data.rawData.recordsSet;
                    if (typeof data.records == "undefined") {
                        data.records = []
                    }
                    if (data.records.length === 0 && self.dataShowing > 0) {
                        self.dataShowing = 0;
                        return self.updateProjects()
                    }
                    self.dataRows = data.records;
                    self.runCalbacks(actionData);
                    mgEventHandler.runCallback("DatatableDataLoaded", self.component_id, {
                        data: data.records,
                        datatable: self
                    });
                    self.dataShowing = data.offset;
                    self.dataTo = data.records.length + data.offset;
                    self.dataFrom = data.fullDataLenght;
                    self.addTimeout = false;
                    if (self.addTimeout === true) {
                        setTimeout(self.updateProjects, 6e4);
                        self.addTimeout = false
                    }
                    self.noData = data.records.length > 0 ? false : true
                }
                self.updatePagination();
                self.loading = false
            }).fail(function(jqXHR, textStatus, errorThrown) {
                self.loading = false;
                self.dataRows = [];
                self.noData = true;
                mgEventHandler.runCallback("DatatableDataLoadingFailed", self.component_id, {
                    jqXHR: jqXHR,
                    textStatus: textStatus,
                    errorThrown: errorThrown
                });
                mgPageControler.vueLoader.handleServerError(jqXHR, textStatus, errorThrown)
            });
            uncheckSelectAllCheck(self.tableWrapperId)
        },
        runCalbacks: function(data) {
            var self = this;
            if (typeof data.recordsSet !== "undefined" && typeof data.recordsSet.records !== "undefined" && data.recordsSet.records.length > 0) {
                $("#loadedTemplates").append(data.template);
                self.$nextTick(function() {
                    for (var key in data.registrations) {
                        mgJsComponentHandler.extendRegisterByDefaultTemplate(key.toLowerCase(), data.registrations[key])
                    }
                })
            }
        },
        updateLength: function(event) {
            var self = this;
            var btnTarget = typeof $(event.target).attr("data-length") === "undefined" ? $(event.target).parent() : $(event.target);
            self.length = $(btnTarget).attr("data-length");
            self.dataShowing = 0;
            $(btnTarget).parent().children(".active").removeClass("active");
            $(btnTarget).addClass("active");
            self.updateProjects()
        },
        updateSorting: function(event) {
            var self = this;
            var sortTarget = $(event.target)[0].tagName === "TH" ? $(event.target) : $(event.target).parents("th").first();
            self.iSortCol_0 = $(sortTarget).attr("name");
            self.dataShowing = 0;
            var currentDir = self.getSortDir($(sortTarget), true);
            $(event.target).parents("tr").first().children(".sorting_asc, .sorting_desc").addClass("sorting").removeClass("sorting_asc").removeClass("sorting_desc");
            $(sortTarget).removeClass("sorting").removeClass("sorting_asc").removeClass("sorting_desc").addClass(self.reverseSort(currentDir));
            self.sSortDir_0 = self.getSortDir($(sortTarget), false);
            self.updateProjects()
        },
        reverseSort: function(sort) {
            var sortingType = "sorting_asc";
            if (sort === "sorting_asc") {
                sortingType = "sorting_desc"
            }
            return sortingType
        },
        getSortDir: function(elem, rawClass) {
            var sorts = ["sorting_asc", "sorting_desc", "sorting"];
            var sorting = "";
            $.each(sorts, function(key, sort) {
                if ($(elem).hasClass(sort) === true) {
                    sorting = rawClass ? sort : sort.replace("sorting_", "").replace("sorting", "");
                    return sorting
                }
            });
            return sorting
        },
        searchDataEnter: function(event) {
            event.preventDefault();
            this.searchData(event)
        },
        searchData: function(event) {
            var self = this;
            self.sSearch = $(event.target).val() === "" ? false : $(event.target).val();
            if (self.sSearch !== false) {
                if (self.sSearchPrevious !== false && self.sSearchPrevious !== self.sSearch) {
                    self.dataShowing = 0
                }
                self.sSearchPrevious = self.sSearch
            } else {
                self.sSearchPrevious = false
            }
            self.updateProjects()
        },
        updatePagination: function() {
            var self = this;
            self.curPage = parseInt(self.dataShowing) / parseInt(self.length) + 1;
            var tempPages = parseInt(parseInt(self.dataFrom) / parseInt(self.length));
            self.allPages = parseInt(tempPages + (parseInt(self.length) * tempPages < parseInt(self.dataFrom) ? 1 : 0));
            self.updatePagesMap()
        },
        updatePagesMap: function() {
            var self = this;
            if (self.allPages === 1) {
                self.pagesMap = [1];
                return
            }
            self.pagesMap = [self.curPage - 5, self.curPage - 4, self.curPage - 3, self.curPage - 2, self.curPage - 1, self.curPage, self.curPage + 1, self.curPage + 2, self.curPage + 3, self.curPage + 4, self.curPage + 5];
            for (i = 0; i < self.pagesMap.length; i++) {
                if (self.pagesMap[i] < 0 || self.pagesMap[i] > self.allPages) {
                    self.pagesMap[i] = null
                }
            }
            if (self.pagesMap.indexOf(self.allPages) === -1) {
                self.pagesMap[self.pagesMap.length - 1] = self.allPages
            }
            if (self.pagesMap.indexOf(1) === -1) {
                self.pagesMap[0] = 1
            }
            if (self.allPages > 7 && self.curPage > 4) {
                self.pagesMap[self.pagesMap.indexOf(Math.min(self.curPage - 1 > 1 ? self.curPage - 1 : self.curPage, self.curPage - 2 > 1 ? self.curPage - 2 : self.curPage, self.curPage - 3 > 1 ? self.curPage - 3 : self.curPage, self.curPage - 4 > 1 ? self.curPage - 4 : self.curPage))] = "..."
            }
            for (i = self.pagesMap.length - 1; i > self.pagesMap.indexOf(self.curPage); i--) {
                if (i === 8 && self.pagesMap[i] === self.curPage + 3 && self.pagesMap[i] !== self.allPages) {
                    self.pagesMap[i] = null
                }
            }
            if (self.allPages > 7 && 4 <= self.allPages - self.curPage) {
                self.pagesMap[self.pagesMap.indexOf(self.allPages) - 1] = "..."
            }
        },
        changePage: function(event) {
            var self = this;
            if ($(event.target).parent().hasClass("disabled") === false && $(event.target).hasClass("disabled") === false) {
                var newPageNumber = $(event.target).attr("data-dt-idx");
                self.dataShowing = (newPageNumber < 1 ? 0 : newPageNumber - 1) * parseInt(self.length);
                self.updateProjects()
            }
        },
        rowDrow: function(name, DataRow, customFunctionName) {
            if (window[customFunctionName] === undefined) {
                return DataRow[name]
            } else {
                return window[customFunctionName](name, DataRow)
            }
        },
        loadModal: function(event, targetId, namespace, index, params, addSpinner) {
            mgPageControler.vueLoader.loadModal(event, targetId, typeof namespace !== "undefined" ? namespace : getItemNamespace(targetId), typeof index !== "undefined" ? index : getItemIndex(targetId), params, addSpinner)
        },
        onOffSwitch: function(event, targetId) {
            var switchPostData = $(event.target).is(":checked") ? {
                value: "on"
            } : {
                value: "off"
            };
            mgPageControler.vueLoader.ajaxAction(event, targetId, getItemNamespace(targetId), getItemIndex(targetId), switchPostData)
        },
        redirect: function(event, params, targetBlank) {
            mgPageControler.vueLoader.redirect(event, params, targetBlank)
        },
        getFilters: function() {
            return this.$store.getters.getComponentData(this.component_id, "filters")
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-dt-select-filter", {
    template: "#t-mg-dt-select-filter",
    props: ["component_id", "component_namespace", "component_index", "parent_id"],
    data: function() {
        return {
            options: [],
            selected: null,
            selectInstance: null
        }
    },
    created: function() {
        var self = this;
        self.$nextTick(function() {
            self.initSelect()
        })
    },
    methods: {
        initSelect: function() {
            var self = this;
            var selSelect = $("#" + self.component_id).selectize({});
            self.selectInstance = selSelect[0].selectize;
            self.selectInstance.on("change", function(value) {
                self.$store.commit("updateComponentData", {
                    componentName: self.parent_id,
                    optionName: self.component_id,
                    optionGroup: "filters",
                    optionValue: value
                });
                self.selectChangeAction()
            });
            self.$store.commit("updateComponentData", {
                componentName: self.parent_id,
                optionName: self.component_id,
                optionGroup: "filters",
                optionValue: self.selectInstance.getValue()
            })
        },
        selectChangeAction: function() {
            mgEventHandler.runCallback("SelectFieldValueChanged", this.component_id, {
                data: this
            })
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-dt-text-filter", {
    template: "#t-mg-dt-text-filter",
    props: ["component_id", "component_namespace", "component_index", "parent_id", "required_to_search", "filter_value"],
    data: function() {
        return {
            filterValue: null
        }
    },
    created: function() {
        this.initComponent()
    },
    methods: {
        initComponent: function() {
            this.filterValue = this.filter_value;
            if (this.required_to_search) {
                this.$store.commit("updateComponentData", {
                    componentName: this.parent_id,
                    optionName: this.component_id,
                    optionGroup: "requiredFilters",
                    optionValue: this.isValueValid() ? false : true
                })
            }
            this.$store.commit("updateComponentData", {
                componentName: this.parent_id,
                optionName: this.component_id,
                optionGroup: "filters",
                optionValue: this.filterValue
            })
        },
        updateFilterValue: function(event) {
            this.filterValue = event.target.value;
            this.$store.commit("updateComponentData", {
                componentName: this.parent_id,
                optionName: this.component_id,
                optionGroup: "filters",
                optionValue: this.filterValue
            });
            if (this.required_to_search) {
                this.$store.commit("updateComponentData", {
                    componentName: this.parent_id,
                    optionName: this.component_id,
                    optionGroup: "requiredFilters",
                    optionValue: this.isValueValid() ? false : true
                })
            }
            this.$nextTick(function() {
                mgEventHandler.runCallback("DatatableFilterUpdated", this.parent_id, {
                    data: this
                })
            })
        },
        isValueValid: function() {
            if ($.trim(this.filterValue) !== "") {
                return true
            } else {
                return false
            }
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-details-widget", {
    template: "#t-mg-details-widget",
    props: ["component_id", "component_namespace", "component_index"],
    data: function() {
        return {
            data: false,
            title: "",
            loading_state: false
        }
    },
    created: function() {
        var self = this;
        self.$nextTick(function() {
            self.loadAjaxData()
        })
    },
    methods: {
        loadAjaxData: function() {
            var self = this;
            self.loading_state = true;
            var requestParams = {
                loadData: self.component_id,
                namespace: self.component_namespace,
                index: self.component_index
            };
            var response = mgPageControler.vueLoader.vloadData(requestParams);
            return response.done(function(data) {
                self.data = data.data.rawData.data;
                self.title = data.data.rawData.title;
                self.loading_state = false
            }).fail(function() {
                self.loading_state = false
            })
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-dropdawn-btn-wrapper", {
    template: "#t-mg-dropdawn-btn-wrapper",
    props: ["component_id", "component_namespace", "component_index"],
    data: function() {
        return {
            dropOpen: false
        }
    },
    created: function() {},
    methods: {
        toogleDropdawn: function(event) {
            var self = this;
            self.dropOpen = !self.dropOpen
        },
        hideDrop: function(event) {
            var self = this;
            self.dropOpen = false;
            self.$nextTick(function() {
                var clickedEl = document.elementFromPoint(event.clientX, event.clientY);
                if (!$(clickedEl).hasClass("mg-drop-target-btn") && $(clickedEl).parents(".mg-drop-target-btn").length === 0) {
                    $(clickedEl).click()
                }
            })
        },
        notHideDrop: function(event) {
            event.preventDefault();
            event.stopPropagation();
            var self = this;
            self.dropOpen = true
        },
        loadModal: function(event, targetId, namespace, index) {
            mgPageControler.vueLoader.loadModal(event, targetId, typeof namespace !== "undefined" ? namespace : getItemNamespace(targetId), typeof index !== "undefined" ? index : getItemIndex(targetId))
        },
        makeCustomAction: function(functionName, params, event, namespace, index) {
            mgPageControler.vueLoader.makeCustomAction(functionName, params, event, namespace, index)
        },
        redirect: function(event, params, targetBlank) {
            mgPageControler.vueLoader.redirect(event, params, targetBlank)
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-graph", {
    template: "#t-mg-graph",
    props: ["component_id", "component_namespace", "component_index", "settings_key"],
    data: function() {
        return {
            loading: false,
            chart: null,
            type: "",
            isRestart: false,
            data: {},
            parseData: "{}",
            options: {},
            filter: {},
            parseFilter: "{}"
        }
    },
    created: function() {
        var self = this;
        self.updateProjects();
        self.$parent.$root.$on("reloadMgData", self.updateMgData)
    },
    mounted: function() {
        var self = this
    },
    methods: {
        updateMgData: function(toReloadId) {
            var self = this;
            if ("graph_" + self.component_id === toReloadId && !self.settings_key) {
                self.updateProjects();
                self.$nextTick(function() {
                    self.$emit("restartRefreshingState")
                })
            } else if ("graph_rl_" + self.settings_key === toReloadId && self.settings_key) {
                self.updateProjects();
                self.$nextTick(function() {
                    self.$emit("restartRefreshingState")
                })
            } else if ("graph_" + self.component_id === toReloadId && self.settings_key && toReloadId !== "graph_rl_" + self.settings_key) {
                mgPageControler.vueLoader.runRefreshActions(["graph_rl_" + self.settings_key])
            }
        },
        createChart: function() {
            var self = this;
            if (self.chart == null || self.isRestart === true) {
                self.$nextTick(function() {
                    self.isRestart = false;
                    var ctx = document.getElementById("canv_" + self.component_id);
                    self.fixDataStructure();
                    self.$nextTick(function() {
                        self.chart = new Chart(ctx, {
                            type: self.type,
                            data: {
                                datasets: self.data.datasets
                            },
                            options: self.options
                        });
                        self.reloadChart()
                    })
                })
            }
        },
        updateProjects: function() {
            var self = this;
            self.loading = true;
            var request = this.$parent.$root.$options.methods.vloadData({
                loadData: self.component_id,
                namespace: self.component_namespace,
                index: self.component_index
            }, true);
            request.done(function(data) {
                data = JSON.parse(data);
                if (data.data && data.data.rawData) {
                    data = data.data.rawData;
                    if (data.type) {
                        self.type = data.type
                    }
                    if (data.data) {
                        self.parseData = JSON.stringify(data.dataParse);
                        self.data = data.data
                    }
                    if (data.options) {
                        self.options = data.options
                    }
                    if (data.filter) {
                        self.filter = data.filter;
                        self.parseFilter = JSON.stringify(data.filter)
                    }
                }
                self.$nextTick(function() {
                    if (!self.chart) {
                        self.createChart()
                    } else {
                        self.reloadChart()
                    }
                    self.loading = false
                })
            }).fail(function() {})
        },
        reloadChart: function() {
            var self = this;
            if (self.chart) {
                self.fixDataStructure();
                self.chart.options = self.options;
                self.chart.data.datasets = self.data.datasets;
                self.chart.update()
            }
        },
        restartChart: function() {
            var self = this;
            self.isRestart = true;
            self.createChart()
        },
        loadModal: function(event, targetId, namespace, index, params, addSpinner) {
            var self = this;
            var params = [];
            params.push({
                name: "customParams",
                value: self.parseData
            });
            params.push({
                name: "defaultFilter",
                value: self.parseFilter
            });
            mgPageControler.vueLoader.loadModal(event, targetId, typeof namespace !== "undefined" ? namespace : getItemNamespace(targetId), index, params, addSpinner)
        },
        onOffSwitch: function(event, targetId) {
            var switchPostData = $(event.target).is(":checked") ? {
                value: "on"
            } : {
                value: "off"
            };
            mgPageControler.vueLoader.ajaxAction(event, targetId, getItemNamespace(targetId), getItemIndex(targetId), switchPostData)
        },
        makeCustomAction: function(functionName, params, event, namespace, index) {
            mgPageControler.vueLoader.makeCustomAction(functionName, params, event, namespace, index)
        },
        redirect: function(event, params) {
            mgPageControler.vueLoader.redirect(event, params)
        },
        fixDataStructure: function() {
            var self = this;
            var varsToBeConverted = ["backgroundColor", "borderColor", "data", "hoverBackgroundColor", "hoverBorderColor", "pointBackgroundColor", "pointBorderColor", "pointHoverBackgroundColor", "pointHoverBorderColor"];
            for (var key in self.data.datasets) {
                if (!self.data.datasets.hasOwnProperty(key)) {
                    continue
                }
                var tmpObj = self.data.datasets[key];
                for (var convKey in varsToBeConverted) {
                    if (typeof tmpObj[varsToBeConverted[convKey]] === "object") {
                        self.data.datasets[key][varsToBeConverted[convKey]] = Object.values(tmpObj[varsToBeConverted[convKey]])
                    } else if (typeof tmpObj[varsToBeConverted[convKey]] !== "undefined") {
                        self.data.datasets[key][varsToBeConverted[convKey]] = tmpObj[varsToBeConverted[convKey]]
                    } else {}
                }
            }
            if (typeof self.data.labels !== "undefined") {
                self.options.labels = Object.values(self.data.labels)
            }
            if (typeof self.options.scales !== "undefined" && typeof self.options.scales.xAxes !== "undefined") {
                self.options.scales.xAxes[0].labels = Object.values(self.data.labels)
            }
            if (typeof self.options.scales !== "undefined" && typeof self.options.scales.xAxes !== "undefined" && typeof self.options.scales.xAxes[0] !== "undefined" && typeof self.options.scales.xAxes[0].ticks !== "undefined" && typeof self.options.scales.xAxes[0].ticks.callback !== "undefined") {
                if (typeof self.options.scales.xAxes[0].ticks.callbackFN === "undefined") {
                    self.options.scales.xAxes[0].ticks.callbackFN = self.options.scales.xAxes[0].ticks.callback
                }
                var tmpCallbackName = self.options.scales.xAxes[0].ticks.callbackFN;
                var tmpCallbackFunction = window[tmpCallbackName];
                self.options.scales.xAxes[0].ticks.callback = tmpCallbackFunction
            }
            if (typeof self.options.scales !== "undefined" && typeof self.options.scales.yAxes !== "undefined" && typeof self.options.scales.yAxes[0] !== "undefined" && typeof self.options.scales.yAxes[0].ticks !== "undefined" && typeof self.options.scales.yAxes[0].ticks.callback !== "undefined") {
                if (typeof self.options.scales.yAxes[0].ticks.callbackFN === "undefined") {
                    self.options.scales.yAxes[0].ticks.callbackFN = self.options.scales.yAxes[0].ticks.callback
                }
                var tmpCallbackName = self.options.scales.yAxes[0].ticks.callbackFN;
                var tmpCallbackFunction = window[tmpCallbackName];
                self.options.scales.yAxes[0].ticks.callback = tmpCallbackFunction
            }
            if (typeof self.options.tooltips !== "undefined" && typeof self.options.tooltips.callbacks !== "undefined" && typeof self.options.tooltips.callbacks.label !== "undefined") {
                if (typeof self.options.tooltips.callbacks.labelCallbackFN === "undefined") {
                    self.options.tooltips.callbacks.labelCallbackFN = self.options.tooltips.callbacks.label
                }
                var tmpCallbackName = self.options.tooltips.callbacks.labelCallbackFN;
                var tmpCallbackFunction = window[tmpCallbackName];
                self.options.tooltips.callbacks.label = tmpCallbackFunction
            }
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-pass-gen", {
    template: "#t-mg-pass-gen",
    props: ["component_id", "component_namespace", "component_index", "component_default_p"],
    data: function() {
        return {
            password: null
        }
    },
    mounted: function() {
        var self = this;
        self.password = self.component_default_p
    },
    methods: {
        generatePass: function() {
            var self = this;
            self.password = mgPageControler.vueLoader.rendKey(10)
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-passtoogle", {
    template: "#t-mg-passtoogle",
    data: function() {
        return {
            wrapper_id: null,
            text_to_copy: null,
            confirmation_lang: null,
            passwordShow: false
        }
    },
    mounted: function() {
        var self = this;
        var wrapper = $(self.$el).parent();
        self.wrapper_id = $(wrapper).attr("id");
        self.component_id = $(wrapper).attr("component_id");
        self.text_to_copy = $(wrapper).attr("text_to_copy");
        self.confirmation_lang = $(wrapper).attr("confirmation_lang")
    },
    methods: {}
});
mgJsComponentHandler.addDefaultComponent("mg-ajax-sidebar", {
    template: "#t-mg-ajax-sidebar",
    props: ["component_id", "component_namespace", "component_index"],
    data: function() {
        return {
            items: [],
            event: null,
            sidebarLoading: true
        }
    },
    created: function() {
        var self = this;
        self.$nextTick(function() {
            self.loadAjaxData()
        })
    },
    methods: {
        runClickAction: function($event, actionData) {
            var self = this;
            self.event = $event;
            if (typeof mgPageControler.vueLoader[actionData.action] === "function") {
                mgPageControler.vueLoader[actionData.action](self.parseParam(actionData.params[0]), self.parseParam(actionData.params[1]), self.parseParam(actionData.params[2]), self.parseParam(actionData.params[3]), self.parseParam(actionData.params[4]))
            } else if (typeof window[actionData.action] === "function") {
                window[actionData.action](self.parseParam(actionData.params[0]), self.parseParam(actionData.params[1]), self.parseParam(actionData.params[2]), self.parseParam(actionData.params[3]), self.parseParam(actionData.params[4]))
            } else {
                console.log("Action Failed")
            }
        },
        parseParam: function(param) {
            var self = this;
            if (param === "$event") {
                return self.event
            }
            return param
        },
        loadAjaxData: function() {
            var self = this;
            self.loading_state = true;
            var requestParams = {
                loadData: self.component_id,
                namespace: self.component_namespace,
                index: self.component_index
            };
            var response = mgPageControler.vueLoader.vloadData(requestParams);
            return response.done(function(data) {
                self.items = data.data.rawData;
                self.sidebarLoading = false
            }).fail(function() {
                self.sidebarLoading = false
            })
        }
    }
});
(function() {
    var defaultConfig = {
        expires: "1d",
        path: "; path=/",
        domain: "",
        secure: "",
        sameSite: "; SameSite=Lax"
    };
    var VueCookies = {
        install: function(Vue) {
            Vue.prototype.$cookies = this;
            Vue.$cookies = this
        },
        config: function(expireTimes, path, domain, secure, sameSite) {
            defaultConfig.expires = expireTimes ? expireTimes : "1d";
            defaultConfig.path = path ? "; path=" + path : "; path=/";
            defaultConfig.domain = domain ? "; domain=" + domain : "";
            defaultConfig.secure = secure ? "; Secure" : "";
            defaultConfig.sameSite = sameSite ? "; SameSite=" + sameSite : "; SameSite=Lax"
        },
        get: function(key) {
            var value = decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*" + encodeURIComponent(key).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=\\s*([^;]*).*$)|^.*$"), "$1")) || null;
            if (value && value.substring(0, 1) === "{" && value.substring(value.length - 1, value.length) === "}") {
                try {
                    value = JSON.parse(value)
                } catch (e) {
                    return value
                }
            }
            return value
        },
        set: function(key, value, expireTimes, path, domain, secure, sameSite) {
            if (!key) {
                throw new Error("Cookie name is not find in first argument.")
            } else if (/^(?:expires|max\-age|path|domain|secure|SameSite)$/i.test(key)) {
                throw new Error('Cookie key name illegality, Cannot be set to ["expires","max-age","path","domain","secure","SameSite"]\t current key name: ' + key)
            }
            if (value && value.constructor === Object) {
                value = JSON.stringify(value)
            }
            var _expires = "";
            expireTimes = expireTimes == undefined ? defaultConfig.expires : expireTimes;
            if (expireTimes && expireTimes != 0) {
                switch (expireTimes.constructor) {
                    case Number:
                        if (expireTimes === Infinity || expireTimes === -1) _expires = "; expires=Fri, 31 Dec 9999 23:59:59 GMT";
                        else _expires = "; max-age=" + expireTimes;
                        break;
                    case String:
                        if (/^(?:\d+(y|m|d|h|min|s))$/i.test(expireTimes)) {
                            var _expireTime = expireTimes.replace(/^(\d+)(?:y|m|d|h|min|s)$/i, "$1");
                            switch (expireTimes.replace(/^(?:\d+)(y|m|d|h|min|s)$/i, "$1").toLowerCase()) {
                                case "m":
                                    _expires = "; max-age=" + +_expireTime * 2592e3;
                                    break;
                                case "d":
                                    _expires = "; max-age=" + +_expireTime * 86400;
                                    break;
                                case "h":
                                    _expires = "; max-age=" + +_expireTime * 3600;
                                    break;
                                case "min":
                                    _expires = "; max-age=" + +_expireTime * 60;
                                    break;
                                case "s":
                                    _expires = "; max-age=" + _expireTime;
                                    break;
                                case "y":
                                    _expires = "; max-age=" + +_expireTime * 31104e3;
                                    break;
                                default:
                                    new Error('unknown exception of "set operation"')
                            }
                        } else {
                            _expires = "; expires=" + expireTimes
                        }
                        break;
                    case Date:
                        _expires = "; expires=" + expireTimes.toUTCString();
                        break
                }
            }
            document.cookie = encodeURIComponent(key) + "=" + encodeURIComponent(value) + _expires + (domain ? "; domain=" + domain : defaultConfig.domain) + (path ? "; path=" + path : defaultConfig.path) + (secure == undefined ? defaultConfig.secure : secure ? "; Secure" : "") + (sameSite == undefined ? defaultConfig.sameSite : sameSite ? "; SameSite=" + sameSite : "");
            return this
        },
        remove: function(key, path, domain) {
            if (!key || !this.isKey(key)) {
                return false
            }
            document.cookie = encodeURIComponent(key) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT" + (domain ? "; domain=" + domain : defaultConfig.domain) + (path ? "; path=" + path : defaultConfig.path) + "; SameSite=Lax";
            return this
        },
        isKey: function(key) {
            return new RegExp("(?:^|;\\s*)" + encodeURIComponent(key).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=").test(document.cookie)
        },
        keys: function() {
            if (!document.cookie) return [];
            var _keys = document.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g, "").split(/\s*(?:\=[^;]*)?;\s*/);
            for (var _index = 0; _index < _keys.length; _index++) {
                _keys[_index] = decodeURIComponent(_keys[_index])
            }
            return _keys
        }
    };
    if (typeof exports == "object") {
        module.exports = VueCookies
    } else if (typeof define == "function" && define.amd) {
        define([], function() {
            return VueCookies
        })
    } else if (window.Vue) {
        Vue.use(VueCookies)
    }
    if (typeof window !== "undefined") {
        window.$cookies = VueCookies
    }
})();

function getItemNamespace(t) {
    return jQuery("#" + t).attr("namespace")
}

function getItemIndex(t) {
    return jQuery("#" + t).attr("index")
}

function initMassActionsOnDatatables(t) {
    $("#" + t + " [data-check-container]").luCheckAll({
        onCheck: function(t, e) {
            var n = t.find(".lu-t-c__mass-actions");
            n.find(".lu-value").html(e), e > 0 ? n.addClass("is-open") : n.removeClass("is-open")
        }
    })
}

function collectTableMassActionsData(t) {
    var e = {};
    return $("#" + t + " [data-check-container] tbody input:checkbox.table-mass-action-check:enabled:checked").each(function(t, n) {
        e[t] = $(this).val()
    }), e
}

function uncheckSelectAllCheck(t) {
    closeAllSelectMassActions()
}

function closeAllSelectMassActions() {
    $(".lu-t-c__mass-actions").removeClass("is-open"), $(".table-mass-action-check").prop("checked", !1), $("thead input:checkbox:enabled").prop("checked", !1)
}

function initTooltipsForDatatables(t) {
    $("#" + t + ' [data-toggle="lu-tooltip"], [data-tooltip]').luTooltip({})
}

function initModalSelects() {
    initContainerSelects("mgModalContainer")
}

function initContainerSelects(t) {
    $("#" + t + " select:not(.ajax,.raw-select)").each(function() {
        if ($(this).attr("bi-event-change")) {
            var t = $(this).attr("bi-event-change");
            $(this).selectize({
                plugins: ["remove_button"],
                onItemAdd: function(e) {
                    "initReloadModal" === t ? mgPageControler.modalInstance.initReloadModal() : t && "function" == typeof mgPageControler[t] ? setTimeout(function() {
                        mgPageControler[t]()
                    }, 500) : t && "function" == typeof mgPageControler.vueLoader[t] ? setTimeout(function() {
                        mgPageControler.vueLoader[t]()
                    }, 500) : t && "function" == typeof window[t] && setTimeout(function() {
                        window[t]()
                    }, 500)
                }
            })
        } else $(this).luSelect({})
    })
}

function initModalSwitchEvents() {
    $("#mgModalContainer :checkbox").each(function() {
        if ($(this).attr("bi-event-change")) {
            var t = $(this).attr("bi-event-change");
            $(this).change(function() {
                t && "function" == typeof mgPageControler[t] ? setTimeout(function() {
                    mgPageControler[t]()
                }, 500) : t && "function" == typeof mgPageControler.vueLoader[t] ? setTimeout(function() {
                    mgPageControler.vueLoader[t]()
                }, 500) : t && "function" == typeof window[t] && setTimeout(function() {
                    window[t]()
                }, 500)
            })
        }
    })
}

function initModalTooltips() {
    initContainerTooltips("mgModalContainer")
}

function initContainerTooltips(t) {
    $("#" + t + ' [data-toggle="lu-tooltip"], [data-tooltip]').luTooltip({})
}

function mgFormControler(t) {
    this.fields = null, this.data = {}, this.formId = t, this.formElement = null, this.formDataObj = null, this.loadFormFields = function() {
        var t = this;
        jQuery("#" + this.formId).find("input,select,textarea").each(function() {
            if (!jQuery(this).is(":disabled")) {
                var e = jQuery(this).attr("name"),
                    n = null;
                if (void 0 !== e) {
                    var r = jQuery(this).attr("type");
                    "checkbox" === r ? (n = "off", jQuery("#" + t.formId).find('input[name="' + e + '"]').each(function() {
                        jQuery(this).is(":checked") && (n = jQuery(this).val())
                    })) : "radio" === r ? jQuery(this).is(":checked") && (n = jQuery(this).val()) : n = "file" === r ? {
                        type: "file",
                        value: jQuery(this).val()
                    } : jQuery(this).val(), null !== n && ((result = /([a-zA-Z_0-9]+)\[([a-zA-Z_0-9]+)\]\[([a-zA-Z_0-9]+)\]/g.exec(e)) ? (void 0 === t.data[result[1]] && (t.data[result[1]] = {}), void 0 === t.data[result[1]][result[2]] && (t.data[result[1]][result[2]] = {}), t.data[result[1]][result[2]][result[3]] = n) : (result = /([a-zA-Z_0-9]+)\[([a-zA-Z_0-9]+)\]/g.exec(e)) ? (void 0 === t.data[result[1]] && (t.data[result[1]] = {}), t.data[result[1]][result[2]] = n) : t.data[e] = n)
                }
            }
        })
    }, this.getFieldsData = function() {
        this.formElement = null, this.formDataObj = null, this.loadFormFields();
        var t = new FormData;
        for (var e in this.data)
            if (this.data.hasOwnProperty(e)) {
                var n = this.data[e];
                if (e.indexOf("[") > 0) var r = "formData[" + e.substring(0, e.indexOf("[")) + "]" + e.substring(e.indexOf("["));
                else r = "formData[" + e + "]";
                "object" == typeof n ? "file" === n.type ? this.addFieldData(t, e, r, n) : this.addIteratedData(t, r, n) : t.set(r, n)
            }
        return t
    }, this.addFieldData = function(t, e, n, r) {
        this.formElement || (this.formElement = document.querySelector("#" + this.formId), this.formDataObj = new FormData(this.formElement)), "object" != typeof(r = this.formDataObj.get(e)) ? t.set(n, r) : t.set(n, r, r.name)
    }, this.addIteratedData = function(t, e, n) {
        for (var r in n) n.hasOwnProperty(r) && ("object" == typeof n[r] ? this.addIteratedData(t, e + "[" + r + "]", n[r]) : t.set(e + "[" + r + "]", n[r]))
    }, this.updateFieldsValidationMessages = function(t) {
        jQuery("#" + this.formId).find("input,select,textarea").each(function() {
            if (!jQuery(this).is(":disabled")) {
                var e = jQuery(this).attr("name");
                if (void 0 !== e && void 0 !== t[e]) {
                    jQuery(this).parents(".lu-form-group").first().hasClass("lu-is-error") || jQuery(this).parents(".lu-form-group").first().addClass("lu-is-error");
                    var n = jQuery(this).parents(".lu-form-group").first().children(".lu-form-feedback");
                    jQuery(n).length > 0 && (jQuery(n).html(t[e].slice(-1)[0]), jQuery(n).attr("hidden") && jQuery(n).removeAttr("hidden"))
                } else void 0 !== e && (jQuery(this).parents(".lu-form-group").first().hasClass("lu-is-error") && jQuery(this).parents(".lu-form-group").first().removeClass("lu-is-error"), n = jQuery(this).parents(".lu-form-group").first().children(".lu-form-feedback"), jQuery(n).length > 0 && (jQuery(n).html(""), jQuery(n).attr("hidden") || jQuery(n).attr("hidden", "hidden")))
            }
        })
    }
}

function tldCategoriesSortableController() {
    var t = 0;
    $("#groupList.vSortable").hasClass("ui-sortable") || $("#groupList.vSortable").sortable({
        items: "li:not(.lu-nav--sub li, .sortable-disabled)",
        start: function(t, e) {
            $(e.item).find("ul").hide(), $("#groupList").attr("isBeingSorted", "true")
        },
        stop: function(e, n) {
            var r = [];
            $("#groupList .nav__item").each(function(t, e) {
                if (!$(e).hasClass("ui-sortable-placeholder")) {
                    var n = $(e).attr("actionid");
                    r.push(n)
                }
            }), mgPageControler.vueLoader.updateSorting(r, "addCategoryForm", "ModulesGarden_LagomOrderForm_App_UI_Widget_DoeTldConfigComponents_CategoryForms_AddCategoryForm"), $(n.item).css("height", t), $(n.item).find("a").css("height", 32), $(n.item).find("ul").show()
        },
        sort: function(t, e) {
            $("#groupList").sortable("refreshPositions")
        },
        helper: function(e, n) {
            return t = $(n).css("height"), $(n).css("height", 32), n
        }
    }), $("#groupList.vSortable .nav--sub").sortable({
        stop: function(t, e) {
            var n = [];
            $(this).find(".nav__item").each(function(t, e) {
                if (!$(e).hasClass("ui-sortable-placeholder")) {
                    var r = $(e).attr("actionid");
                    n.push(r)
                }
            }), mgPageControler.vueLoader.updateSorting(n, "addCategoryForm", "ModulesGarden_LagomOrderForm_App_UI_Widget_DoeTldConfigComponents_CategoryForms_AddCategoryForm")
        }
    }), $("#itemContentContainer tbody.vSortable").sortable({
        stop: function(t, e) {
            var n = [];
            $("#itemContentContainer tbody").find("tr").each(function(t, e) {
                if (!$(e).hasClass("ui-sortable-placeholder")) {
                    var r = $(e).attr("actionid");
                    n.push(r)
                }
            }), mgPageControler.vueLoader.updateSorting(n, "assignTldForm", "ModulesGarden_LagomOrderForm_App_UI_Widget_DoeTldConfigComponents_CategoryForms_AssignTldForm")
        },
        helper: function(t, e) {
            var n = e.children(),
                r = e.clone();
            return r.children().each(function(t) {
                $(this).width(n.eq(t).width() + 100)
            }), r
        }
    })
}

function custAction1(t, e, n) {
    console.log("custAction1", t, e, n)
}

function custAction2(t, e, n) {
    console.log("custAction2", t, e, n)
}

function mgEmptyToPause(t, e) {
    return e[t] && "" !== e[t] ? e[t] : "-"
}

function newCall(t) {
    console.log(t)
}

function buildOptionTag(t, e, n, r) {
    var o = document.createElement("option");
    return o.text = t, o.value = e, n && o.setAttribute("selected", "selected"), r && o.setAttribute("disabled", "disabled"), o
}

function initTaggersForContainer(t) {
    jQuery("#" + t + " .lu-tagger").each(function() {
        jQuery(this).hasClass("selectize-input") || $(this).selectize({
            plugins: ["restore_on_backspace"],
            delimiter: ",",
            persist: !1,
            create: function(t) {
                return {
                    value: t,
                    text: t
                }
            }
        })
    })
}

function initModalTaggers() {
    initTaggersForContainer("mgModalContainer")
}

function initAppTaggers() {
    initTaggersForContainer("layers")
}! function(t) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = t();
    else if ("function" == typeof define && define.amd) define([], t);
    else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).Qs = t()
    }
}(function() {
    return function() {
        function t(e, n, r) {
            function o(a, s) {
                if (!n[a]) {
                    if (!e[a]) {
                        var c = "function" == typeof require && require;
                        if (!s && c) return c(a, !0);
                        if (i) return i(a, !0);
                        var u = new Error("Cannot find module '" + a + "'");
                        throw u.code = "MODULE_NOT_FOUND", u
                    }
                    var l = n[a] = {
                        exports: {}
                    };
                    e[a][0].call(l.exports, function(t) {
                        return o(e[a][1][t] || t)
                    }, l, l.exports, t, e, n, r)
                }
                return n[a].exports
            }
            for (var i = "function" == typeof require && require, a = 0; a < r.length; a++) o(r[a]);
            return o
        }
        return t
    }()({
        1: [function(t, e, n) {
            "use strict";
            var r = String.prototype.replace,
                o = /%20/g,
                i = t("./utils"),
                a = {
                    RFC1738: "RFC1738",
                    RFC3986: "RFC3986"
                };
            e.exports = i.assign({
                default: a.RFC3986,
                formatters: {
                    RFC1738: function(t) {
                        return r.call(t, o, "+")
                    },
                    RFC3986: function(t) {
                        return String(t)
                    }
                }
            }, a)
        }, {
            "./utils": 5
        }],
        2: [function(t, e, n) {
            "use strict";
            var r = t("./stringify"),
                o = t("./parse"),
                i = t("./formats");
            e.exports = {
                formats: i,
                parse: o,
                stringify: r
            }
        }, {
            "./formats": 1,
            "./parse": 3,
            "./stringify": 4
        }],
        3: [function(t, e, n) {
            "use strict";
            var r = t("./utils"),
                o = Object.prototype.hasOwnProperty,
                i = Array.isArray,
                a = {
                    allowDots: !1,
                    allowPrototypes: !1,
                    arrayLimit: 20,
                    charset: "utf-8",
                    charsetSentinel: !1,
                    comma: !1,
                    decoder: r.decode,
                    delimiter: "&",
                    depth: 5,
                    ignoreQueryPrefix: !1,
                    interpretNumericEntities: !1,
                    parameterLimit: 1e3,
                    parseArrays: !0,
                    plainObjects: !1,
                    strictNullHandling: !1
                },
                s = function(t) {
                    return t.replace(/&#(\d+);/g, function(t, e) {
                        return String.fromCharCode(parseInt(e, 10))
                    })
                },
                c = function(t, e) {
                    var n, c = {},
                        u = e.ignoreQueryPrefix ? t.replace(/^\?/, "") : t,
                        l = e.parameterLimit === 1 / 0 ? void 0 : e.parameterLimit,
                        f = u.split(e.delimiter, l),
                        p = -1,
                        d = e.charset;
                    if (e.charsetSentinel)
                        for (n = 0; n < f.length; ++n) 0 === f[n].indexOf("utf8=") && ("utf8=%E2%9C%93" === f[n] ? d = "utf-8" : "utf8=%26%2310003%3B" === f[n] && (d = "iso-8859-1"), p = n, n = f.length);
                    for (n = 0; n < f.length; ++n)
                        if (n !== p) {
                            var h, v, m = f[n],
                                g = m.indexOf("]="),
                                y = -1 === g ? m.indexOf("=") : g + 1; - 1 === y ? (h = e.decoder(m, a.decoder, d, "key"), v = e.strictNullHandling ? null : "") : (h = e.decoder(m.slice(0, y), a.decoder, d, "key"), v = e.decoder(m.slice(y + 1), a.decoder, d, "value")), v && e.interpretNumericEntities && "iso-8859-1" === d && (v = s(v)), v && "string" == typeof v && e.comma && v.indexOf(",") > -1 && (v = v.split(",")), m.indexOf("[]=") > -1 && (v = i(v) ? [v] : v), o.call(c, h) ? c[h] = r.combine(c[h], v) : c[h] = v
                        }
                    return c
                },
                u = function(t, e, n) {
                    for (var r = e, o = t.length - 1; o >= 0; --o) {
                        var i, a = t[o];
                        if ("[]" === a && n.parseArrays) i = [].concat(r);
                        else {
                            i = n.plainObjects ? Object.create(null) : {};
                            var s = "[" === a.charAt(0) && "]" === a.charAt(a.length - 1) ? a.slice(1, -1) : a,
                                c = parseInt(s, 10);
                            n.parseArrays || "" !== s ? !isNaN(c) && a !== s && String(c) === s && c >= 0 && n.parseArrays && c <= n.arrayLimit ? (i = [])[c] = r : i[s] = r : i = {
                                0: r
                            }
                        }
                        r = i
                    }
                    return r
                },
                l = function(t, e, n) {
                    if (t) {
                        var r = n.allowDots ? t.replace(/\.([^.[]+)/g, "[$1]") : t,
                            i = /(\[[^[\]]*])/,
                            a = /(\[[^[\]]*])/g,
                            s = n.depth > 0 && i.exec(r),
                            c = s ? r.slice(0, s.index) : r,
                            l = [];
                        if (c) {
                            if (!n.plainObjects && o.call(Object.prototype, c) && !n.allowPrototypes) return;
                            l.push(c)
                        }
                        for (var f = 0; n.depth > 0 && null !== (s = a.exec(r)) && f < n.depth;) {
                            if (f += 1, !n.plainObjects && o.call(Object.prototype, s[1].slice(1, -1)) && !n.allowPrototypes) return;
                            l.push(s[1])
                        }
                        return s && l.push("[" + r.slice(s.index) + "]"), u(l, e, n)
                    }
                },
                f = function(t) {
                    if (!t) return a;
                    if (null !== t.decoder && void 0 !== t.decoder && "function" != typeof t.decoder) throw new TypeError("Decoder has to be a function.");
                    if (void 0 !== t.charset && "utf-8" !== t.charset && "iso-8859-1" !== t.charset) throw new Error("The charset option must be either utf-8, iso-8859-1, or undefined");
                    var e = void 0 === t.charset ? a.charset : t.charset;
                    return {
                        allowDots: void 0 === t.allowDots ? a.allowDots : !!t.allowDots,
                        allowPrototypes: "boolean" == typeof t.allowPrototypes ? t.allowPrototypes : a.allowPrototypes,
                        arrayLimit: "number" == typeof t.arrayLimit ? t.arrayLimit : a.arrayLimit,
                        charset: e,
                        charsetSentinel: "boolean" == typeof t.charsetSentinel ? t.charsetSentinel : a.charsetSentinel,
                        comma: "boolean" == typeof t.comma ? t.comma : a.comma,
                        decoder: "function" == typeof t.decoder ? t.decoder : a.decoder,
                        delimiter: "string" == typeof t.delimiter || r.isRegExp(t.delimiter) ? t.delimiter : a.delimiter,
                        depth: "number" == typeof t.depth || !1 === t.depth ? +t.depth : a.depth,
                        ignoreQueryPrefix: !0 === t.ignoreQueryPrefix,
                        interpretNumericEntities: "boolean" == typeof t.interpretNumericEntities ? t.interpretNumericEntities : a.interpretNumericEntities,
                        parameterLimit: "number" == typeof t.parameterLimit ? t.parameterLimit : a.parameterLimit,
                        parseArrays: !1 !== t.parseArrays,
                        plainObjects: "boolean" == typeof t.plainObjects ? t.plainObjects : a.plainObjects,
                        strictNullHandling: "boolean" == typeof t.strictNullHandling ? t.strictNullHandling : a.strictNullHandling
                    }
                };
            e.exports = function(t, e) {
                var n = f(e);
                if ("" === t || null === t || void 0 === t) return n.plainObjects ? Object.create(null) : {};
                for (var o = "string" == typeof t ? c(t, n) : t, i = n.plainObjects ? Object.create(null) : {}, a = Object.keys(o), s = 0; s < a.length; ++s) {
                    var u = a[s],
                        p = l(u, o[u], n);
                    i = r.merge(i, p, n)
                }
                return r.compact(i)
            }
        }, {
            "./utils": 5
        }],
        4: [function(t, e, n) {
            "use strict";
            var r = t("./utils"),
                o = t("./formats"),
                i = Object.prototype.hasOwnProperty,
                a = {
                    brackets: function(t) {
                        return t + "[]"
                    },
                    comma: "comma",
                    indices: function(t, e) {
                        return t + "[" + e + "]"
                    },
                    repeat: function(t) {
                        return t
                    }
                },
                s = Array.isArray,
                c = Array.prototype.push,
                u = function(t, e) {
                    c.apply(t, s(e) ? e : [e])
                },
                l = Date.prototype.toISOString,
                f = o.default,
                p = {
                    addQueryPrefix: !1,
                    allowDots: !1,
                    charset: "utf-8",
                    charsetSentinel: !1,
                    delimiter: "&",
                    encode: !0,
                    encoder: r.encode,
                    encodeValuesOnly: !1,
                    format: f,
                    formatter: o.formatters[f],
                    indices: !1,
                    serializeDate: function(t) {
                        return l.call(t)
                    },
                    skipNulls: !1,
                    strictNullHandling: !1
                },
                d = function(t) {
                    return "string" == typeof t || "number" == typeof t || "boolean" == typeof t || "symbol" == typeof t || "bigint" == typeof t
                },
                h = function t(e, n, o, i, a, c, l, f, h, v, m, g, y) {
                    var b = e;
                    if ("function" == typeof l ? b = l(n, b) : b instanceof Date ? b = v(b) : "comma" === o && s(b) && (b = b.join(",")), null === b) {
                        if (i) return c && !g ? c(n, p.encoder, y, "key") : n;
                        b = ""
                    }
                    if (d(b) || r.isBuffer(b)) return c ? [m(g ? n : c(n, p.encoder, y, "key")) + "=" + m(c(b, p.encoder, y, "value"))] : [m(n) + "=" + m(String(b))];
                    var _ = [];
                    if (void 0 === b) return _;
                    var w;
                    if (s(l)) w = l;
                    else {
                        var x = Object.keys(b);
                        w = f ? x.sort(f) : x
                    }
                    for (var C = 0; C < w.length; ++C) {
                        var S = w[C];
                        a && null === b[S] || (s(b) ? u(_, t(b[S], "function" == typeof o ? o(n, S) : n, o, i, a, c, l, f, h, v, m, g, y)) : u(_, t(b[S], n + (h ? "." + S : "[" + S + "]"), o, i, a, c, l, f, h, v, m, g, y)))
                    }
                    return _
                },
                v = function(t) {
                    if (!t) return p;
                    if (null !== t.encoder && void 0 !== t.encoder && "function" != typeof t.encoder) throw new TypeError("Encoder has to be a function.");
                    var e = t.charset || p.charset;
                    if (void 0 !== t.charset && "utf-8" !== t.charset && "iso-8859-1" !== t.charset) throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
                    var n = o.default;
                    if (void 0 !== t.format) {
                        if (!i.call(o.formatters, t.format)) throw new TypeError("Unknown format option provided.");
                        n = t.format
                    }
                    var r = o.formatters[n],
                        a = p.filter;
                    return ("function" == typeof t.filter || s(t.filter)) && (a = t.filter), {
                        addQueryPrefix: "boolean" == typeof t.addQueryPrefix ? t.addQueryPrefix : p.addQueryPrefix,
                        allowDots: void 0 === t.allowDots ? p.allowDots : !!t.allowDots,
                        charset: e,
                        charsetSentinel: "boolean" == typeof t.charsetSentinel ? t.charsetSentinel : p.charsetSentinel,
                        delimiter: void 0 === t.delimiter ? p.delimiter : t.delimiter,
                        encode: "boolean" == typeof t.encode ? t.encode : p.encode,
                        encoder: "function" == typeof t.encoder ? t.encoder : p.encoder,
                        encodeValuesOnly: "boolean" == typeof t.encodeValuesOnly ? t.encodeValuesOnly : p.encodeValuesOnly,
                        filter: a,
                        formatter: r,
                        serializeDate: "function" == typeof t.serializeDate ? t.serializeDate : p.serializeDate,
                        skipNulls: "boolean" == typeof t.skipNulls ? t.skipNulls : p.skipNulls,
                        sort: "function" == typeof t.sort ? t.sort : null,
                        strictNullHandling: "boolean" == typeof t.strictNullHandling ? t.strictNullHandling : p.strictNullHandling
                    }
                };
            e.exports = function(t, e) {
                var n, r = t,
                    o = v(e);
                "function" == typeof o.filter ? r = (0, o.filter)("", r) : s(o.filter) && (n = o.filter);
                var i = [];
                if ("object" != typeof r || null === r) return "";
                var c;
                c = e && e.arrayFormat in a ? e.arrayFormat : e && "indices" in e ? e.indices ? "indices" : "repeat" : "indices";
                var l = a[c];
                n || (n = Object.keys(r)), o.sort && n.sort(o.sort);
                for (var f = 0; f < n.length; ++f) {
                    var p = n[f];
                    o.skipNulls && null === r[p] || u(i, h(r[p], p, l, o.strictNullHandling, o.skipNulls, o.encode ? o.encoder : null, o.filter, o.sort, o.allowDots, o.serializeDate, o.formatter, o.encodeValuesOnly, o.charset))
                }
                var d = i.join(o.delimiter),
                    m = !0 === o.addQueryPrefix ? "?" : "";
                return o.charsetSentinel && ("iso-8859-1" === o.charset ? m += "utf8=%26%2310003%3B&" : m += "utf8=%E2%9C%93&"), d.length > 0 ? m + d : ""
            }
        }, {
            "./formats": 1,
            "./utils": 5
        }],
        5: [function(t, e, n) {
            "use strict";
            var r = Object.prototype.hasOwnProperty,
                o = Array.isArray,
                i = function() {
                    for (var t = [], e = 0; e < 256; ++e) t.push("%" + ((e < 16 ? "0" : "") + e.toString(16)).toUpperCase());
                    return t
                }(),
                a = function(t) {
                    for (; t.length > 1;) {
                        var e = t.pop(),
                            n = e.obj[e.prop];
                        if (o(n)) {
                            for (var r = [], i = 0; i < n.length; ++i) void 0 !== n[i] && r.push(n[i]);
                            e.obj[e.prop] = r
                        }
                    }
                },
                s = function(t, e) {
                    for (var n = e && e.plainObjects ? Object.create(null) : {}, r = 0; r < t.length; ++r) void 0 !== t[r] && (n[r] = t[r]);
                    return n
                },
                c = function t(e, n, i) {
                    if (!n) return e;
                    if ("object" != typeof n) {
                        if (o(e)) e.push(n);
                        else {
                            if (!e || "object" != typeof e) return [e, n];
                            (i && (i.plainObjects || i.allowPrototypes) || !r.call(Object.prototype, n)) && (e[n] = !0)
                        }
                        return e
                    }
                    if (!e || "object" != typeof e) return [e].concat(n);
                    var a = e;
                    return o(e) && !o(n) && (a = s(e, i)), o(e) && o(n) ? (n.forEach(function(n, o) {
                        if (r.call(e, o)) {
                            var a = e[o];
                            a && "object" == typeof a && n && "object" == typeof n ? e[o] = t(a, n, i) : e.push(n)
                        } else e[o] = n
                    }), e) : Object.keys(n).reduce(function(e, o) {
                        var a = n[o];
                        return r.call(e, o) ? e[o] = t(e[o], a, i) : e[o] = a, e
                    }, a)
                },
                u = function(t, e) {
                    return Object.keys(e).reduce(function(t, n) {
                        return t[n] = e[n], t
                    }, t)
                },
                l = function(t, e, n) {
                    var r = t.replace(/\+/g, " ");
                    if ("iso-8859-1" === n) return r.replace(/%[0-9a-f]{2}/gi, unescape);
                    try {
                        return decodeURIComponent(r)
                    } catch (t) {
                        return r
                    }
                },
                f = function(t, e, n) {
                    if (0 === t.length) return t;
                    var r = t;
                    if ("symbol" == typeof t ? r = Symbol.prototype.toString.call(t) : "string" != typeof t && (r = String(t)), "iso-8859-1" === n) return escape(r).replace(/%u[0-9a-f]{4}/gi, function(t) {
                        return "%26%23" + parseInt(t.slice(2), 16) + "%3B"
                    });
                    for (var o = "", a = 0; a < r.length; ++a) {
                        var s = r.charCodeAt(a);
                        45 === s || 46 === s || 95 === s || 126 === s || s >= 48 && s <= 57 || s >= 65 && s <= 90 || s >= 97 && s <= 122 ? o += r.charAt(a) : s < 128 ? o += i[s] : s < 2048 ? o += i[192 | s >> 6] + i[128 | 63 & s] : s < 55296 || s >= 57344 ? o += i[224 | s >> 12] + i[128 | s >> 6 & 63] + i[128 | 63 & s] : (a += 1, s = 65536 + ((1023 & s) << 10 | 1023 & r.charCodeAt(a)), o += i[240 | s >> 18] + i[128 | s >> 12 & 63] + i[128 | s >> 6 & 63] + i[128 | 63 & s])
                    }
                    return o
                },
                p = function(t) {
                    for (var e = [{
                            obj: {
                                o: t
                            },
                            prop: "o"
                        }], n = [], r = 0; r < e.length; ++r)
                        for (var o = e[r], i = o.obj[o.prop], s = Object.keys(i), c = 0; c < s.length; ++c) {
                            var u = s[c],
                                l = i[u];
                            "object" == typeof l && null !== l && -1 === n.indexOf(l) && (e.push({
                                obj: i,
                                prop: u
                            }), n.push(l))
                        }
                    return a(e), t
                },
                d = function(t) {
                    return "[object RegExp]" === Object.prototype.toString.call(t)
                },
                h = function(t) {
                    return !(!t || "object" != typeof t) && !!(t.constructor && t.constructor.isBuffer && t.constructor.isBuffer(t))
                },
                v = function(t, e) {
                    return [].concat(t, e)
                };
            e.exports = {
                arrayToObject: s,
                assign: u,
                combine: v,
                compact: p,
                decode: l,
                encode: f,
                isBuffer: h,
                isRegExp: d,
                merge: c
            }
        }, {}]
    }, {}, [2])(2)
}),
function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.axios = e() : t.axios = e()
}(this, function() {
    return function(t) {
        function e(r) {
            if (n[r]) return n[r].exports;
            var o = n[r] = {
                exports: {},
                id: r,
                loaded: !1
            };
            return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports
        }
        var n = {};
        return e.m = t, e.c = n, e.p = "", e(0)
    }([function(t, e, n) {
        t.exports = n(1)
    }, function(t, e, n) {
        "use strict";

        function r(t) {
            var e = new a(t),
                n = i(a.prototype.request, e);
            return o.extend(n, a.prototype, e), o.extend(n, e), n
        }
        var o = n(2),
            i = n(3),
            a = n(4),
            s = n(23),
            c = r(n(10));
        c.Axios = a, c.create = function(t) {
            return r(s(c.defaults, t))
        }, c.Cancel = n(24), c.CancelToken = n(25), c.isCancel = n(9), c.all = function(t) {
            return Promise.all(t)
        }, c.spread = n(26), t.exports = c, t.exports.default = c
    }, function(t, e, n) {
        "use strict";

        function r(t) {
            return "[object Array]" === $.call(t)
        }

        function o(t) {
            return void 0 === t
        }

        function i(t) {
            return null !== t && !o(t) && null !== t.constructor && !o(t.constructor) && "function" == typeof t.constructor.isBuffer && t.constructor.isBuffer(t)
        }

        function a(t) {
            return "[object ArrayBuffer]" === $.call(t)
        }

        function s(t) {
            return "undefined" != typeof FormData && t instanceof FormData
        }

        function c(t) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : t && t.buffer && t.buffer instanceof ArrayBuffer
        }

        function u(t) {
            return "string" == typeof t
        }

        function l(t) {
            return "number" == typeof t
        }

        function f(t) {
            return null !== t && "object" == typeof t
        }

        function p(t) {
            return "[object Date]" === $.call(t)
        }

        function d(t) {
            return "[object File]" === $.call(t)
        }

        function h(t) {
            return "[object Blob]" === $.call(t)
        }

        function v(t) {
            return "[object Function]" === $.call(t)
        }

        function m(t) {
            return f(t) && v(t.pipe)
        }

        function g(t) {
            return "undefined" != typeof URLSearchParams && t instanceof URLSearchParams
        }

        function y(t) {
            return t.replace(/^\s*/, "").replace(/\s*$/, "")
        }

        function b() {
            return ("undefined" == typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && "undefined" != typeof window && "undefined" != typeof document
        }

        function _(t, e) {
            if (null !== t && void 0 !== t)
                if ("object" != typeof t && (t = [t]), r(t))
                    for (var n = 0, o = t.length; n < o; n++) e.call(null, t[n], n, t);
                else
                    for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && e.call(null, t[i], i, t)
        }

        function w() {
            function t(t, n) {
                "object" == typeof e[n] && "object" == typeof t ? e[n] = w(e[n], t) : e[n] = t
            }
            for (var e = {}, n = 0, r = arguments.length; n < r; n++) _(arguments[n], t);
            return e
        }

        function x() {
            function t(t, n) {
                "object" == typeof e[n] && "object" == typeof t ? e[n] = x(e[n], t) : e[n] = "object" == typeof t ? x({}, t) : t
            }
            for (var e = {}, n = 0, r = arguments.length; n < r; n++) _(arguments[n], t);
            return e
        }

        function C(t, e, n) {
            return _(e, function(e, r) {
                t[r] = n && "function" == typeof e ? S(e, n) : e
            }), t
        }
        var S = n(3),
            $ = Object.prototype.toString;
        t.exports = {
            isArray: r,
            isArrayBuffer: a,
            isBuffer: i,
            isFormData: s,
            isArrayBufferView: c,
            isString: u,
            isNumber: l,
            isObject: f,
            isUndefined: o,
            isDate: p,
            isFile: d,
            isBlob: h,
            isFunction: v,
            isStream: m,
            isURLSearchParams: g,
            isStandardBrowserEnv: b,
            forEach: _,
            merge: w,
            deepMerge: x,
            extend: C,
            trim: y
        }
    }, function(t, e) {
        "use strict";
        t.exports = function(t, e) {
            return function() {
                for (var n = new Array(arguments.length), r = 0; r < n.length; r++) n[r] = arguments[r];
                return t.apply(e, n)
            }
        }
    }, function(t, e, n) {
        "use strict";

        function r(t) {
            this.defaults = t, this.interceptors = {
                request: new a,
                response: new a
            }
        }
        var o = n(2),
            i = n(5),
            a = n(6),
            s = n(7),
            c = n(23);
        r.prototype.request = function(t) {
            "string" == typeof t ? (t = arguments[1] || {}, t.url = arguments[0]) : t = t || {}, (t = c(this.defaults, t)).method ? t.method = t.method.toLowerCase() : this.defaults.method ? t.method = this.defaults.method.toLowerCase() : t.method = "get";
            var e = [s, void 0],
                n = Promise.resolve(t);
            for (this.interceptors.request.forEach(function(t) {
                    e.unshift(t.fulfilled, t.rejected)
                }), this.interceptors.response.forEach(function(t) {
                    e.push(t.fulfilled, t.rejected)
                }); e.length;) n = n.then(e.shift(), e.shift());
            return n
        }, r.prototype.getUri = function(t) {
            return t = c(this.defaults, t), i(t.url, t.params, t.paramsSerializer).replace(/^\?/, "")
        }, o.forEach(["delete", "get", "head", "options"], function(t) {
            r.prototype[t] = function(e, n) {
                return this.request(o.merge(n || {}, {
                    method: t,
                    url: e
                }))
            }
        }), o.forEach(["post", "put", "patch"], function(t) {
            r.prototype[t] = function(e, n, r) {
                return this.request(o.merge(r || {}, {
                    method: t,
                    url: e,
                    data: n
                }))
            }
        }), t.exports = r
    }, function(t, e, n) {
        "use strict";

        function r(t) {
            return encodeURIComponent(t).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
        }
        var o = n(2);
        t.exports = function(t, e, n) {
            if (!e) return t;
            var i;
            if (n) i = n(e);
            else if (o.isURLSearchParams(e)) i = e.toString();
            else {
                var a = [];
                o.forEach(e, function(t, e) {
                    null !== t && void 0 !== t && (o.isArray(t) ? e += "[]" : t = [t], o.forEach(t, function(t) {
                        o.isDate(t) ? t = t.toISOString() : o.isObject(t) && (t = JSON.stringify(t)), a.push(r(e) + "=" + r(t))
                    }))
                }), i = a.join("&")
            }
            if (i) {
                var s = t.indexOf("#"); - 1 !== s && (t = t.slice(0, s)), t += (-1 === t.indexOf("?") ? "?" : "&") + i
            }
            return t
        }
    }, function(t, e, n) {
        "use strict";

        function r() {
            this.handlers = []
        }
        var o = n(2);
        r.prototype.use = function(t, e) {
            return this.handlers.push({
                fulfilled: t,
                rejected: e
            }), this.handlers.length - 1
        }, r.prototype.eject = function(t) {
            this.handlers[t] && (this.handlers[t] = null)
        }, r.prototype.forEach = function(t) {
            o.forEach(this.handlers, function(e) {
                null !== e && t(e)
            })
        }, t.exports = r
    }, function(t, e, n) {
        "use strict";

        function r(t) {
            t.cancelToken && t.cancelToken.throwIfRequested()
        }
        var o = n(2),
            i = n(8),
            a = n(9),
            s = n(10);
        t.exports = function(t) {
            return r(t), t.headers = t.headers || {}, t.data = i(t.data, t.headers, t.transformRequest), t.headers = o.merge(t.headers.common || {}, t.headers[t.method] || {}, t.headers), o.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function(e) {
                delete t.headers[e]
            }), (t.adapter || s.adapter)(t).then(function(e) {
                return r(t), e.data = i(e.data, e.headers, t.transformResponse), e
            }, function(e) {
                return a(e) || (r(t), e && e.response && (e.response.data = i(e.response.data, e.response.headers, t.transformResponse))), Promise.reject(e)
            })
        }
    }, function(t, e, n) {
        "use strict";
        var r = n(2);
        t.exports = function(t, e, n) {
            return r.forEach(n, function(n) {
                t = n(t, e)
            }), t
        }
    }, function(t, e) {
        "use strict";
        t.exports = function(t) {
            return !(!t || !t.__CANCEL__)
        }
    }, function(t, e, n) {
        "use strict";

        function r(t, e) {
            !o.isUndefined(t) && o.isUndefined(t["Content-Type"]) && (t["Content-Type"] = e)
        }
        var o = n(2),
            i = n(11),
            a = {
                "Content-Type": "application/x-www-form-urlencoded"
            },
            s = {
                adapter: function() {
                    var t;
                    return "undefined" != typeof XMLHttpRequest ? t = n(12) : "undefined" != typeof process && "[object process]" === Object.prototype.toString.call(process) && (t = n(12)), t
                }(),
                transformRequest: [function(t, e) {
                    return i(e, "Accept"), i(e, "Content-Type"), o.isFormData(t) || o.isArrayBuffer(t) || o.isBuffer(t) || o.isStream(t) || o.isFile(t) || o.isBlob(t) ? t : o.isArrayBufferView(t) ? t.buffer : o.isURLSearchParams(t) ? (r(e, "application/x-www-form-urlencoded;charset=utf-8"), t.toString()) : o.isObject(t) ? (r(e, "application/json;charset=utf-8"), JSON.stringify(t)) : t
                }],
                transformResponse: [function(t) {
                    if ("string" == typeof t) try {
                        t = JSON.parse(t)
                    } catch (t) {}
                    return t
                }],
                timeout: 0,
                xsrfCookieName: "XSRF-TOKEN",
                xsrfHeaderName: "X-XSRF-TOKEN",
                maxContentLength: -1,
                validateStatus: function(t) {
                    return t >= 200 && t < 300
                }
            };
        s.headers = {
            common: {
                Accept: "application/json, text/plain, */*"
            }
        }, o.forEach(["delete", "get", "head"], function(t) {
            s.headers[t] = {}
        }), o.forEach(["post", "put", "patch"], function(t) {
            s.headers[t] = o.merge(a)
        }), t.exports = s
    }, function(t, e, n) {
        "use strict";
        var r = n(2);
        t.exports = function(t, e) {
            r.forEach(t, function(n, r) {
                r !== e && r.toUpperCase() === e.toUpperCase() && (t[e] = n, delete t[r])
            })
        }
    }, function(t, e, n) {
        "use strict";
        var r = n(2),
            o = n(13),
            i = n(5),
            a = n(16),
            s = n(19),
            c = n(20),
            u = n(14);
        t.exports = function(t) {
            return new Promise(function(e, l) {
                var f = t.data,
                    p = t.headers;
                r.isFormData(f) && delete p["Content-Type"];
                var d = new XMLHttpRequest;
                if (t.auth) {
                    var h = t.auth.username || "",
                        v = t.auth.password || "";
                    p.Authorization = "Basic " + btoa(h + ":" + v)
                }
                var m = a(t.baseURL, t.url);
                if (d.open(t.method.toUpperCase(), i(m, t.params, t.paramsSerializer), !0), d.timeout = t.timeout, d.onreadystatechange = function() {
                        if (d && 4 === d.readyState && (0 !== d.status || d.responseURL && 0 === d.responseURL.indexOf("file:"))) {
                            var n = "getAllResponseHeaders" in d ? s(d.getAllResponseHeaders()) : null,
                                r = {
                                    data: t.responseType && "text" !== t.responseType ? d.response : d.responseText,
                                    status: d.status,
                                    statusText: d.statusText,
                                    headers: n,
                                    config: t,
                                    request: d
                                };
                            o(e, l, r), d = null
                        }
                    }, d.onabort = function() {
                        d && (l(u("Request aborted", t, "ECONNABORTED", d)), d = null)
                    }, d.onerror = function() {
                        l(u("Network Error", t, null, d)), d = null
                    }, d.ontimeout = function() {
                        var e = "timeout of " + t.timeout + "ms exceeded";
                        t.timeoutErrorMessage && (e = t.timeoutErrorMessage), l(u(e, t, "ECONNABORTED", d)), d = null
                    }, r.isStandardBrowserEnv()) {
                    var g = n(22),
                        y = (t.withCredentials || c(m)) && t.xsrfCookieName ? g.read(t.xsrfCookieName) : void 0;
                    y && (p[t.xsrfHeaderName] = y)
                }
                if ("setRequestHeader" in d && r.forEach(p, function(t, e) {
                        void 0 === f && "content-type" === e.toLowerCase() ? delete p[e] : d.setRequestHeader(e, t)
                    }), r.isUndefined(t.withCredentials) || (d.withCredentials = !!t.withCredentials), t.responseType) try {
                    d.responseType = t.responseType
                } catch (e) {
                    if ("json" !== t.responseType) throw e
                }
                "function" == typeof t.onDownloadProgress && d.addEventListener("progress", t.onDownloadProgress), "function" == typeof t.onUploadProgress && d.upload && d.upload.addEventListener("progress", t.onUploadProgress), t.cancelToken && t.cancelToken.promise.then(function(t) {
                    d && (d.abort(), l(t), d = null)
                }), void 0 === f && (f = null), d.send(f)
            })
        }
    }, function(t, e, n) {
        "use strict";
        var r = n(14);
        t.exports = function(t, e, n) {
            var o = n.config.validateStatus;
            !o || o(n.status) ? t(n) : e(r("Request failed with status code " + n.status, n.config, null, n.request, n))
        }
    }, function(t, e, n) {
        "use strict";
        var r = n(15);
        t.exports = function(t, e, n, o, i) {
            var a = new Error(t);
            return r(a, e, n, o, i)
        }
    }, function(t, e) {
        "use strict";
        t.exports = function(t, e, n, r, o) {
            return t.config = e, n && (t.code = n), t.request = r, t.response = o, t.isAxiosError = !0, t.toJSON = function() {
                return {
                    message: this.message,
                    name: this.name,
                    description: this.description,
                    number: this.number,
                    fileName: this.fileName,
                    lineNumber: this.lineNumber,
                    columnNumber: this.columnNumber,
                    stack: this.stack,
                    config: this.config,
                    code: this.code
                }
            }, t
        }
    }, function(t, e, n) {
        "use strict";
        var r = n(17),
            o = n(18);
        t.exports = function(t, e) {
            return t && !r(e) ? o(t, e) : e
        }
    }, function(t, e) {
        "use strict";
        t.exports = function(t) {
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t)
        }
    }, function(t, e) {
        "use strict";
        t.exports = function(t, e) {
            return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t
        }
    }, function(t, e, n) {
        "use strict";
        var r = n(2),
            o = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
        t.exports = function(t) {
            var e, n, i, a = {};
            return t ? (r.forEach(t.split("\n"), function(t) {
                if (i = t.indexOf(":"), e = r.trim(t.substr(0, i)).toLowerCase(), n = r.trim(t.substr(i + 1)), e) {
                    if (a[e] && o.indexOf(e) >= 0) return;
                    a[e] = "set-cookie" === e ? (a[e] ? a[e] : []).concat([n]) : a[e] ? a[e] + ", " + n : n
                }
            }), a) : a
        }
    }, function(t, e, n) {
        "use strict";
        var r = n(2),
            o = n(21);
        t.exports = r.isStandardBrowserEnv() ? function() {
            function t(t) {
                var e = t;
                if (o(t)) throw new Error("URL contains XSS injection attempt");
                return n && (i.setAttribute("href", e), e = i.href), i.setAttribute("href", e), {
                    href: i.href,
                    protocol: i.protocol ? i.protocol.replace(/:$/, "") : "",
                    host: i.host,
                    search: i.search ? i.search.replace(/^\?/, "") : "",
                    hash: i.hash ? i.hash.replace(/^#/, "") : "",
                    hostname: i.hostname,
                    port: i.port,
                    pathname: "/" === i.pathname.charAt(0) ? i.pathname : "/" + i.pathname
                }
            }
            var e, n = /(msie|trident)/i.test(navigator.userAgent),
                i = document.createElement("a");
            return e = t(window.location.href),
                function(n) {
                    var o = r.isString(n) ? t(n) : n;
                    return o.protocol === e.protocol && o.host === e.host
                }
        }() : function() {
            return function() {
                return !0
            }
        }()
    }, function(t, e) {
        "use strict";
        t.exports = function(t) {
            return /(\b)(on\w+)=|javascript|(<\s*)(\/*)script/gi.test(t)
        }
    }, function(t, e, n) {
        "use strict";
        var r = n(2);
        t.exports = r.isStandardBrowserEnv() ? function() {
            return {
                write: function(t, e, n, o, i, a) {
                    var s = [];
                    s.push(t + "=" + encodeURIComponent(e)), r.isNumber(n) && s.push("expires=" + new Date(n).toGMTString()), r.isString(o) && s.push("path=" + o), r.isString(i) && s.push("domain=" + i), !0 === a && s.push("secure"), document.cookie = s.join("; ")
                },
                read: function(t) {
                    var e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
                    return e ? decodeURIComponent(e[3]) : null
                },
                remove: function(t) {
                    this.write(t, "", Date.now() - 864e5)
                }
            }
        }() : function() {
            return {
                write: function() {},
                read: function() {
                    return null
                },
                remove: function() {}
            }
        }()
    }, function(t, e, n) {
        "use strict";
        var r = n(2);
        t.exports = function(t, e) {
            e = e || {};
            var n = {},
                o = ["url", "method", "params", "data"],
                i = ["headers", "auth", "proxy"],
                a = ["baseURL", "url", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "maxContentLength", "validateStatus", "maxRedirects", "httpAgent", "httpsAgent", "cancelToken", "socketPath"];
            r.forEach(o, function(t) {
                void 0 !== e[t] && (n[t] = e[t])
            }), r.forEach(i, function(o) {
                r.isObject(e[o]) ? n[o] = r.deepMerge(t[o], e[o]) : void 0 !== e[o] ? n[o] = e[o] : r.isObject(t[o]) ? n[o] = r.deepMerge(t[o]) : void 0 !== t[o] && (n[o] = t[o])
            }), r.forEach(a, function(r) {
                void 0 !== e[r] ? n[r] = e[r] : void 0 !== t[r] && (n[r] = t[r])
            });
            var s = o.concat(i).concat(a),
                c = Object.keys(e).filter(function(t) {
                    return -1 === s.indexOf(t)
                });
            return r.forEach(c, function(r) {
                void 0 !== e[r] ? n[r] = e[r] : void 0 !== t[r] && (n[r] = t[r])
            }), n
        }
    }, function(t, e) {
        "use strict";

        function n(t) {
            this.message = t
        }
        n.prototype.toString = function() {
            return "Cancel" + (this.message ? ": " + this.message : "")
        }, n.prototype.__CANCEL__ = !0, t.exports = n
    }, function(t, e, n) {
        "use strict";

        function r(t) {
            if ("function" != typeof t) throw new TypeError("executor must be a function.");
            var e;
            this.promise = new Promise(function(t) {
                e = t
            });
            var n = this;
            t(function(t) {
                n.reason || (n.reason = new o(t), e(n.reason))
            })
        }
        var o = n(24);
        r.prototype.throwIfRequested = function() {
            if (this.reason) throw this.reason
        }, r.source = function() {
            var t;
            return {
                token: new r(function(e) {
                    t = e
                }),
                cancel: t
            }
        }, t.exports = r
    }, function(t, e) {
        "use strict";
        t.exports = function(t) {
            return function(e) {
                return t.apply(null, e)
            }
        }
    }])
}),
function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = t || self).Vuex = e()
}(this, function() {
    "use strict";

    function t(t, e) {
        Object.keys(t).forEach(function(n) {
            return e(t[n], n)
        })
    }

    function e(t, e) {
        return e.indexOf(t) < 0 && e.push(t),
            function() {
                var n = e.indexOf(t); - 1 < n && e.splice(n, 1)
            }
    }

    function n(t, e) {
        t._actions = Object.create(null), t._mutations = Object.create(null), t._wrappedGetters = Object.create(null), t._modulesNamespaceMap = Object.create(null);
        var n = t.state;
        o(t, n, [], t._modules.root, !0), r(t, n, e)
    }

    function r(e, n, r) {
        var o = e._vm;
        e.getters = {};
        var i = {};
        t(e._wrappedGetters, function(t, n) {
            i[n] = function() {
                return t(e)
            }, Object.defineProperty(e.getters, n, {
                get: function() {
                    return e._vm[n]
                },
                enumerable: !0
            })
        });
        var a = h.config.silent;
        h.config.silent = !0, e._vm = new h({
            data: {
                $$state: n
            },
            computed: i
        }), h.config.silent = a, e.strict && e._vm.$watch(function() {
            return this._data.$$state
        }, function() {}, {
            deep: !0,
            sync: !0
        }), o && (r && e._withCommit(function() {
            o._data.$$state = null
        }), h.nextTick(function() {
            return o.$destroy()
        }))
    }

    function o(t, e, n, r, s) {
        var c = !n.length,
            u = t._modules.getNamespace(n);
        if (r.namespaced && (t._modulesNamespaceMap[u] = r), !c && !s) {
            var l = i(e, n.slice(0, -1)),
                f = n[n.length - 1];
            t._withCommit(function() {
                h.set(l, f, r.state)
            })
        }
        var p, d, v, m, g, y = r.context = (p = t, v = n, g = {
            dispatch: (m = "" === (d = u)) ? p.dispatch : function(t, e, n) {
                var r = a(t, e, n),
                    o = r.payload,
                    i = r.options,
                    s = r.type;
                return i && i.root || (s = d + s), p.dispatch(s, o)
            },
            commit: m ? p.commit : function(t, e, n) {
                var r = a(t, e, n),
                    o = r.payload,
                    i = r.options,
                    s = r.type;
                i && i.root || (s = d + s), p.commit(s, o, i)
            }
        }, Object.defineProperties(g, {
            getters: {
                get: m ? function() {
                    return p.getters
                } : function() {
                    return t = p, n = {}, r = (e = d).length, Object.keys(t.getters).forEach(function(o) {
                        if (o.slice(0, r) === e) {
                            var i = o.slice(r);
                            Object.defineProperty(n, i, {
                                get: function() {
                                    return t.getters[o]
                                },
                                enumerable: !0
                            })
                        }
                    }), n;
                    var t, e, n, r
                }
            },
            state: {
                get: function() {
                    return i(p.state, v)
                }
            }
        }), g);
        r.forEachMutation(function(e, n) {
            var r, o, i, a;
            o = u + n, i = e, a = y, ((r = t)._mutations[o] || (r._mutations[o] = [])).push(function(t) {
                i.call(r, a.state, t)
            })
        }), r.forEachAction(function(e, n) {
            var r, o, i, a, s = e.root ? n : u + n,
                c = e.handler || e;
            o = s, i = c, a = y, ((r = t)._actions[o] || (r._actions[o] = [])).push(function(t, e) {
                var n, o = i.call(r, {
                    dispatch: a.dispatch,
                    commit: a.commit,
                    getters: a.getters,
                    state: a.state,
                    rootGetters: r.getters,
                    rootState: r.state
                }, t, e);
                return (n = o) && "function" == typeof n.then || (o = Promise.resolve(o)), r._devtoolHook ? o.catch(function(t) {
                    throw r._devtoolHook.emit("vuex:error", t), t
                }) : o
            })
        }), r.forEachGetter(function(e, n) {
            ! function(t, e, n, r) {
                t._wrappedGetters[e] || (t._wrappedGetters[e] = function(t) {
                    return n(r.state, r.getters, t.state, t.getters)
                })
            }(t, u + n, e, y)
        }), r.forEachChild(function(r, i) {
            o(t, e, n.concat(i), r, s)
        })
    }

    function i(t, e) {
        return e.length ? e.reduce(function(t, e) {
            return t[e]
        }, t) : t
    }

    function a(t, e, n) {
        var r;
        return null !== (r = t) && "object" == typeof r && t.type && (n = e, t = (e = t).type), {
            type: t,
            payload: e,
            options: n
        }
    }

    function s(t) {
        h && t === h || function(t) {
            function e() {
                var t = this.$options;
                t.store ? this.$store = "function" == typeof t.store ? t.store() : t.store : t.parent && t.parent.$store && (this.$store = t.parent.$store)
            }
            if (2 <= Number(t.version.split(".")[0])) t.mixin({
                beforeCreate: e
            });
            else {
                var n = t.prototype._init;
                t.prototype._init = function(t) {
                    void 0 === t && (t = {}), t.init = t.init ? [e].concat(t.init) : e, n.call(this, t)
                }
            }
        }(h = t)
    }

    function c(t) {
        return Array.isArray(t) ? t.map(function(t) {
            return {
                key: t,
                val: t
            }
        }) : Object.keys(t).map(function(e) {
            return {
                key: e,
                val: t[e]
            }
        })
    }

    function u(t) {
        return function(e, n) {
            return "string" != typeof e ? (n = e, e = "") : "/" !== e.charAt(e.length - 1) && (e += "/"), t(e, n)
        }
    }

    function l(t, e, n) {
        return t._modulesNamespaceMap[n]
    }
    var f = "undefined" != typeof window && window.__VUE_DEVTOOLS_GLOBAL_HOOK__,
        p = function(t, e) {
            this.runtime = e, this._children = Object.create(null);
            var n = (this._rawModule = t).state;
            this.state = ("function" == typeof n ? n() : n) || {}
        },
        d = {
            namespaced: {
                configurable: !0
            }
        };
    d.namespaced.get = function() {
        return !!this._rawModule.namespaced
    }, p.prototype.addChild = function(t, e) {
        this._children[t] = e
    }, p.prototype.removeChild = function(t) {
        delete this._children[t]
    }, p.prototype.getChild = function(t) {
        return this._children[t]
    }, p.prototype.update = function(t) {
        this._rawModule.namespaced = t.namespaced, t.actions && (this._rawModule.actions = t.actions), t.mutations && (this._rawModule.mutations = t.mutations), t.getters && (this._rawModule.getters = t.getters)
    }, p.prototype.forEachChild = function(e) {
        t(this._children, e)
    }, p.prototype.forEachGetter = function(e) {
        this._rawModule.getters && t(this._rawModule.getters, e)
    }, p.prototype.forEachAction = function(e) {
        this._rawModule.actions && t(this._rawModule.actions, e)
    }, p.prototype.forEachMutation = function(e) {
        this._rawModule.mutations && t(this._rawModule.mutations, e)
    }, Object.defineProperties(p.prototype, d);
    var h, v = function(t) {
        this.register([], t, !1)
    };
    v.prototype.get = function(t) {
        return t.reduce(function(t, e) {
            return t.getChild(e)
        }, this.root)
    }, v.prototype.getNamespace = function(t) {
        var e = this.root;
        return t.reduce(function(t, n) {
            return t + ((e = e.getChild(n)).namespaced ? n + "/" : "")
        }, "")
    }, v.prototype.update = function(t) {
        ! function t(e, n, r) {
            if (n.update(r), r.modules)
                for (var o in r.modules) {
                    if (!n.getChild(o)) return;
                    t(e.concat(o), n.getChild(o), r.modules[o])
                }
        }([], this.root, t)
    }, v.prototype.register = function(e, n, r) {
        var o = this;
        void 0 === r && (r = !0);
        var i = new p(n, r);
        0 === e.length ? this.root = i : this.get(e.slice(0, -1)).addChild(e[e.length - 1], i), n.modules && t(n.modules, function(t, n) {
            o.register(e.concat(n), t, r)
        })
    }, v.prototype.unregister = function(t) {
        var e = this.get(t.slice(0, -1)),
            n = t[t.length - 1];
        e.getChild(n).runtime && e.removeChild(n)
    };
    var m = function(t) {
            var e = this;
            void 0 === t && (t = {}), !h && "undefined" != typeof window && window.Vue && s(window.Vue);
            var n = t.plugins;
            void 0 === n && (n = []);
            var i = t.strict;
            void 0 === i && (i = !1), this._committing = !1, this._actions = Object.create(null), this._actionSubscribers = [], this._mutations = Object.create(null), this._wrappedGetters = Object.create(null), this._modules = new v(t), this._modulesNamespaceMap = Object.create(null), this._subscribers = [], this._watcherVM = new h;
            var a = this,
                c = this.dispatch,
                u = this.commit;
            this.dispatch = function(t, e) {
                return c.call(a, t, e)
            }, this.commit = function(t, e, n) {
                return u.call(a, t, e, n)
            }, this.strict = i;
            var l, p = this._modules.root.state;
            o(this, p, [], this._modules.root), r(this, p), n.forEach(function(t) {
                return t(e)
            }), (void 0 !== t.devtools ? t.devtools : h.config.devtools) && (l = this, f && ((l._devtoolHook = f).emit("vuex:init", l), f.on("vuex:travel-to-state", function(t) {
                l.replaceState(t)
            }), l.subscribe(function(t, e) {
                f.emit("vuex:mutation", t, e)
            })))
        },
        g = {
            state: {
                configurable: !0
            }
        };
    g.state.get = function() {
        return this._vm._data.$$state
    }, g.state.set = function(t) {}, m.prototype.commit = function(t, e, n) {
        var r = this,
            o = a(t, e, n),
            i = o.type,
            s = o.payload,
            c = {
                type: i,
                payload: s
            },
            u = this._mutations[i];
        u && (this._withCommit(function() {
            u.forEach(function(t) {
                t(s)
            })
        }), this._subscribers.forEach(function(t) {
            return t(c, r.state)
        }))
    }, m.prototype.dispatch = function(t, e) {
        var n = this,
            r = a(t, e),
            o = r.type,
            i = r.payload,
            s = {
                type: o,
                payload: i
            },
            c = this._actions[o];
        if (c) {
            try {
                this._actionSubscribers.filter(function(t) {
                    return t.before
                }).forEach(function(t) {
                    return t.before(s, n.state)
                })
            } catch (t) {}
            return (1 < c.length ? Promise.all(c.map(function(t) {
                return t(i)
            })) : c[0](i)).then(function(t) {
                try {
                    n._actionSubscribers.filter(function(t) {
                        return t.after
                    }).forEach(function(t) {
                        return t.after(s, n.state)
                    })
                } catch (t) {}
                return t
            })
        }
    }, m.prototype.subscribe = function(t) {
        return e(t, this._subscribers)
    }, m.prototype.subscribeAction = function(t) {
        return e("function" == typeof t ? {
            before: t
        } : t, this._actionSubscribers)
    }, m.prototype.watch = function(t, e, n) {
        var r = this;
        return this._watcherVM.$watch(function() {
            return t(r.state, r.getters)
        }, e, n)
    }, m.prototype.replaceState = function(t) {
        var e = this;
        this._withCommit(function() {
            e._vm._data.$$state = t
        })
    }, m.prototype.registerModule = function(t, e, n) {
        void 0 === n && (n = {}), "string" == typeof t && (t = [t]), this._modules.register(t, e), o(this, this.state, t, this._modules.get(t), n.preserveState), r(this, this.state)
    }, m.prototype.unregisterModule = function(t) {
        var e = this;
        "string" == typeof t && (t = [t]), this._modules.unregister(t), this._withCommit(function() {
            var n = i(e.state, t.slice(0, -1));
            h.delete(n, t[t.length - 1])
        }), n(this)
    }, m.prototype.hotUpdate = function(t) {
        this._modules.update(t), n(this, !0)
    }, m.prototype._withCommit = function(t) {
        var e = this._committing;
        this._committing = !0, t(), this._committing = e
    }, Object.defineProperties(m.prototype, g);
    var y = u(function(t, e) {
            var n = {};
            return c(e).forEach(function(e) {
                var r = e.key,
                    o = e.val;
                n[r] = function() {
                    var e = this.$store.state,
                        n = this.$store.getters;
                    if (t) {
                        var r = l(this.$store, "mapState", t);
                        if (!r) return;
                        e = r.context.state, n = r.context.getters
                    }
                    return "function" == typeof o ? o.call(this, e, n) : e[o]
                }, n[r].vuex = !0
            }), n
        }),
        b = u(function(t, e) {
            var n = {};
            return c(e).forEach(function(e) {
                var r = e.key,
                    o = e.val;
                n[r] = function() {
                    for (var e = [], n = arguments.length; n--;) e[n] = arguments[n];
                    var r = this.$store.commit;
                    if (t) {
                        var i = l(this.$store, "mapMutations", t);
                        if (!i) return;
                        r = i.context.commit
                    }
                    return "function" == typeof o ? o.apply(this, [r].concat(e)) : r.apply(this.$store, [o].concat(e))
                }
            }), n
        }),
        _ = u(function(t, e) {
            var n = {};
            return c(e).forEach(function(e) {
                var r = e.key,
                    o = e.val;
                o = t + o, n[r] = function() {
                    if (!t || l(this.$store, "mapGetters", t)) return this.$store.getters[o]
                }, n[r].vuex = !0
            }), n
        }),
        w = u(function(t, e) {
            var n = {};
            return c(e).forEach(function(e) {
                var r = e.key,
                    o = e.val;
                n[r] = function() {
                    for (var e = [], n = arguments.length; n--;) e[n] = arguments[n];
                    var r = this.$store.dispatch;
                    if (t) {
                        var i = l(this.$store, "mapActions", t);
                        if (!i) return;
                        r = i.context.dispatch
                    }
                    return "function" == typeof o ? o.apply(this, [r].concat(e)) : r.apply(this.$store, [o].concat(e))
                }
            }), n
        });
    return {
        Store: m,
        install: s,
        version: "3.1.0",
        mapState: y,
        mapMutations: b,
        mapGetters: _,
        mapActions: w,
        createNamespacedHelpers: function(t) {
            return {
                mapState: y.bind(null, t),
                mapGetters: _.bind(null, t),
                mapMutations: b.bind(null, t),
                mapActions: w.bind(null, t)
            }
        }
    }
}),
function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = t || self).Vue = e()
}(this, function() {
    "use strict";

    function t(t) {
        return null == t
    }

    function e(t) {
        return null != t
    }

    function n(t) {
        return !0 === t
    }

    function r(t) {
        return "string" == typeof t || "number" == typeof t || "symbol" == typeof t || "boolean" == typeof t
    }

    function o(t) {
        return null !== t && "object" == typeof t
    }

    function i(t) {
        return "[object Object]" === er.call(t)
    }

    function a(t) {
        var e = parseFloat(String(t));
        return e >= 0 && Math.floor(e) === e && isFinite(t)
    }

    function s(t) {
        return e(t) && "function" == typeof t.then && "function" == typeof t.catch
    }

    function c(t) {
        return null == t ? "" : Array.isArray(t) || i(t) && t.toString === er ? JSON.stringify(t, null, 2) : String(t)
    }

    function u(t) {
        var e = parseFloat(t);
        return isNaN(e) ? t : e
    }

    function l(t, e) {
        for (var n = Object.create(null), r = t.split(","), o = 0; o < r.length; o++) n[r[o]] = !0;
        return e ? function(t) {
            return n[t.toLowerCase()]
        } : function(t) {
            return n[t]
        }
    }

    function f(t, e) {
        if (t.length) {
            var n = t.indexOf(e);
            if (n > -1) return t.splice(n, 1)
        }
    }

    function p(t, e) {
        return or.call(t, e)
    }

    function d(t) {
        var e = Object.create(null);
        return function(n) {
            return e[n] || (e[n] = t(n))
        }
    }

    function h(t, e) {
        e = e || 0;
        for (var n = t.length - e, r = new Array(n); n--;) r[n] = t[n + e];
        return r
    }

    function v(t, e) {
        for (var n in e) t[n] = e[n];
        return t
    }

    function m(t) {
        for (var e = {}, n = 0; n < t.length; n++) t[n] && v(e, t[n]);
        return e
    }

    function g(t, e, n) {}

    function y(t, e) {
        if (t === e) return !0;
        var n = o(t),
            r = o(e);
        if (!n || !r) return !n && !r && String(t) === String(e);
        try {
            var i = Array.isArray(t),
                a = Array.isArray(e);
            if (i && a) return t.length === e.length && t.every(function(t, n) {
                return y(t, e[n])
            });
            if (t instanceof Date && e instanceof Date) return t.getTime() === e.getTime();
            if (i || a) return !1;
            var s = Object.keys(t),
                c = Object.keys(e);
            return s.length === c.length && s.every(function(n) {
                return y(t[n], e[n])
            })
        } catch (t) {
            return !1
        }
    }

    function b(t, e) {
        for (var n = 0; n < t.length; n++)
            if (y(t[n], e)) return n;
        return -1
    }

    function _(t) {
        var e = !1;
        return function() {
            e || (e = !0, t.apply(this, arguments))
        }
    }

    function w(t, e, n, r) {
        Object.defineProperty(t, e, {
            value: n,
            enumerable: !!r,
            writable: !0,
            configurable: !0
        })
    }

    function x(t) {
        return "function" == typeof t && /native code/.test(t.toString())
    }

    function C(t) {
        Ir.push(t), Rr.target = t
    }

    function S() {
        Ir.pop(), Rr.target = Ir[Ir.length - 1]
    }

    function $(t) {
        return new Ur(void 0, void 0, void 0, String(t))
    }

    function A(t) {
        var e = new Ur(t.tag, t.data, t.children && t.children.slice(), t.text, t.elm, t.context, t.componentOptions, t.asyncFactory);
        return e.ns = t.ns, e.isStatic = t.isStatic, e.key = t.key, e.isComment = t.isComment, e.fnContext = t.fnContext, e.fnOptions = t.fnOptions, e.fnScopeId = t.fnScopeId, e.asyncMeta = t.asyncMeta, e.isCloned = !0, e
    }

    function O(t) {
        Qr = t
    }

    function k(t, e) {
        var n;
        if (o(t) && !(t instanceof Ur)) return p(t, "__ob__") && t.__ob__ instanceof Gr ? n = t.__ob__ : Qr && !Pr() && (Array.isArray(t) || i(t)) && Object.isExtensible(t) && !t._isVue && (n = new Gr(t)), e && n && n.vmCount++, n
    }

    function E(t, e, n, r, o) {
        var i = new Rr,
            a = Object.getOwnPropertyDescriptor(t, e);
        if (!a || !1 !== a.configurable) {
            var s = a && a.get,
                c = a && a.set;
            s && !c || 2 !== arguments.length || (n = t[e]);
            var u = !o && k(n);
            Object.defineProperty(t, e, {
                enumerable: !0,
                configurable: !0,
                get: function() {
                    var e = s ? s.call(t) : n;
                    return Rr.target && (i.depend(), u && (u.dep.depend(), Array.isArray(e) && function t(e) {
                        for (var n = void 0, r = 0, o = e.length; r < o; r++)(n = e[r]) && n.__ob__ && n.__ob__.dep.depend(), Array.isArray(n) && t(n)
                    }(e))), e
                },
                set: function(e) {
                    var r = s ? s.call(t) : n;
                    e === r || e != e && r != r || s && !c || (c ? c.call(t, e) : n = e, u = !o && k(e), i.notify())
                }
            })
        }
    }

    function j(t, e, n) {
        if (Array.isArray(t) && a(e)) return t.length = Math.max(t.length, e), t.splice(e, 1, n), n;
        if (e in t && !(e in Object.prototype)) return t[e] = n, n;
        var r = t.__ob__;
        return t._isVue || r && r.vmCount ? n : r ? (E(r.value, e, n), r.dep.notify(), n) : (t[e] = n, n)
    }

    function N(t, e) {
        if (Array.isArray(t) && a(e)) t.splice(e, 1);
        else {
            var n = t.__ob__;
            t._isVue || n && n.vmCount || p(t, e) && (delete t[e], n && n.dep.notify())
        }
    }

    function T(t, e) {
        if (!e) return t;
        for (var n, r, o, a = Dr ? Reflect.ownKeys(e) : Object.keys(e), s = 0; s < a.length; s++) "__ob__" !== (n = a[s]) && (r = t[n], o = e[n], p(t, n) ? r !== o && i(r) && i(o) && T(r, o) : j(t, n, o));
        return t
    }

    function P(t, e, n) {
        return n ? function() {
            var r = "function" == typeof e ? e.call(n, n) : e,
                o = "function" == typeof t ? t.call(n, n) : t;
            return r ? T(r, o) : o
        } : e ? t ? function() {
            return T("function" == typeof e ? e.call(this, this) : e, "function" == typeof t ? t.call(this, this) : t)
        } : e : t
    }

    function M(t, e) {
        var n = e ? t ? t.concat(e) : Array.isArray(e) ? e : [e] : t;
        return n ? function(t) {
            for (var e = [], n = 0; n < t.length; n++) - 1 === e.indexOf(t[n]) && e.push(t[n]);
            return e
        }(n) : n
    }

    function D(t, e, n, r) {
        var o = Object.create(t || null);
        return e ? v(o, e) : o
    }

    function L(t, e, n) {
        function r(r) {
            var o = Kr[r] || Wr;
            c[r] = o(t[r], e[r], n, r)
        }
        if ("function" == typeof e && (e = e.options), function(t, e) {
                var n = t.props;
                if (n) {
                    var r, o, a = {};
                    if (Array.isArray(n))
                        for (r = n.length; r--;) "string" == typeof(o = n[r]) && (a[ar(o)] = {
                            type: null
                        });
                    else if (i(n))
                        for (var s in n) o = n[s], a[ar(s)] = i(o) ? o : {
                            type: o
                        };
                    t.props = a
                }
            }(e), function(t, e) {
                var n = t.inject;
                if (n) {
                    var r = t.inject = {};
                    if (Array.isArray(n))
                        for (var o = 0; o < n.length; o++) r[n[o]] = {
                            from: n[o]
                        };
                    else if (i(n))
                        for (var a in n) {
                            var s = n[a];
                            r[a] = i(s) ? v({
                                from: a
                            }, s) : {
                                from: s
                            }
                        }
                }
            }(e), function(t) {
                var e = t.directives;
                if (e)
                    for (var n in e) {
                        var r = e[n];
                        "function" == typeof r && (e[n] = {
                            bind: r,
                            update: r
                        })
                    }
            }(e), !e._base && (e.extends && (t = L(t, e.extends, n)), e.mixins))
            for (var o = 0, a = e.mixins.length; o < a; o++) t = L(t, e.mixins[o], n);
        var s, c = {};
        for (s in t) r(s);
        for (s in e) p(t, s) || r(s);
        return c
    }

    function F(t, e, n, r) {
        if ("string" == typeof n) {
            var o = t[e];
            if (p(o, n)) return o[n];
            var i = ar(n);
            if (p(o, i)) return o[i];
            var a = sr(i);
            return p(o, a) ? o[a] : o[n] || o[i] || o[a]
        }
    }

    function R(t, e, n, r) {
        var o = e[t],
            i = !p(n, t),
            a = n[t],
            s = H(Boolean, o.type);
        if (s > -1)
            if (i && !p(o, "default")) a = !1;
            else if ("" === a || a === ur(t)) {
            var c = H(String, o.type);
            (c < 0 || s < c) && (a = !0)
        }
        if (void 0 === a) {
            a = function(t, e, n) {
                if (p(e, "default")) {
                    var r = e.default;
                    return t && t.$options.propsData && void 0 === t.$options.propsData[n] && void 0 !== t._props[n] ? t._props[n] : "function" == typeof r && "Function" !== I(e.type) ? r.call(t) : r
                }
            }(r, o, t);
            var u = Qr;
            O(!0), k(a), O(u)
        }
        return a
    }

    function I(t) {
        var e = t && t.toString().match(/^\s*function (\w+)/);
        return e ? e[1] : ""
    }

    function U(t, e) {
        return I(t) === I(e)
    }

    function H(t, e) {
        if (!Array.isArray(e)) return U(e, t) ? 0 : -1;
        for (var n = 0, r = e.length; n < r; n++)
            if (U(e[n], t)) return n;
        return -1
    }

    function V(t, e, n) {
        C();
        try {
            if (e)
                for (var r = e; r = r.$parent;) {
                    var o = r.$options.errorCaptured;
                    if (o)
                        for (var i = 0; i < o.length; i++) try {
                            if (!1 === o[i].call(r, t, e, n)) return
                        } catch (t) {
                            z(t, r, "errorCaptured hook")
                        }
                }
            z(t, e, n)
        } finally {
            S()
        }
    }

    function B(t, e, n, r, o) {
        var i;
        try {
            (i = n ? t.apply(e, n) : t.call(e)) && !i._isVue && s(i) && !i._handled && (i.catch(function(t) {
                return V(t, r, o + " (Promise/async)")
            }), i._handled = !0)
        } catch (t) {
            V(t, r, o)
        }
        return i
    }

    function z(t, e, n) {
        if (mr.errorHandler) try {
            return mr.errorHandler.call(null, t, e, n)
        } catch (e) {
            e !== t && q(e, null, "config.errorHandler")
        }
        q(t, e, n)
    }

    function q(t, e, n) {
        if (!_r && !wr || "undefined" == typeof console) throw t;
        console.error(t)
    }

    function Q() {
        Yr = !1;
        var t = Zr.slice(0);
        Zr.length = 0;
        for (var e = 0; e < t.length; e++) t[e]()
    }

    function G(t, e) {
        var n;
        if (Zr.push(function() {
                if (t) try {
                    t.call(e)
                } catch (t) {
                    V(t, e, "nextTick")
                } else n && n(e)
            }), Yr || (Yr = !0, Jr()), !t && "undefined" != typeof Promise) return new Promise(function(t) {
            n = t
        })
    }

    function K(t) {
        ! function t(e, n) {
            var r, i, a = Array.isArray(e);
            if (!(!a && !o(e) || Object.isFrozen(e) || e instanceof Ur)) {
                if (e.__ob__) {
                    var s = e.__ob__.dep.id;
                    if (n.has(s)) return;
                    n.add(s)
                }
                if (a)
                    for (r = e.length; r--;) t(e[r], n);
                else
                    for (i = Object.keys(e), r = i.length; r--;) t(e[i[r]], n)
            }
        }(t, oo), oo.clear()
    }

    function J(t, e) {
        function n() {
            var t = arguments,
                r = n.fns;
            if (!Array.isArray(r)) return B(r, null, arguments, e, "v-on handler");
            for (var o = r.slice(), i = 0; i < o.length; i++) B(o[i], null, t, e, "v-on handler")
        }
        return n.fns = t, n
    }

    function W(e, r, o, i, a, s) {
        var c, u, l, f;
        for (c in e) u = e[c], l = r[c], f = io(c), t(u) || (t(l) ? (t(u.fns) && (u = e[c] = J(u, s)), n(f.once) && (u = e[c] = a(f.name, u, f.capture)), o(f.name, u, f.capture, f.passive, f.params)) : u !== l && (l.fns = u, e[c] = l));
        for (c in r) t(e[c]) && i((f = io(c)).name, r[c], f.capture)
    }

    function X(r, o, i) {
        function a() {
            i.apply(this, arguments), f(s.fns, a)
        }
        var s;
        r instanceof Ur && (r = r.data.hook || (r.data.hook = {}));
        var c = r[o];
        t(c) ? s = J([a]) : e(c.fns) && n(c.merged) ? (s = c).fns.push(a) : s = J([c, a]), s.merged = !0, r[o] = s
    }

    function Z(t, n, r, o, i) {
        if (e(n)) {
            if (p(n, r)) return t[r] = n[r], i || delete n[r], !0;
            if (p(n, o)) return t[r] = n[o], i || delete n[o], !0
        }
        return !1
    }

    function Y(o) {
        return r(o) ? [$(o)] : Array.isArray(o) ? function o(i, a) {
            var s, c, u, l, f = [];
            for (s = 0; s < i.length; s++) t(c = i[s]) || "boolean" == typeof c || (u = f.length - 1, l = f[u], Array.isArray(c) ? c.length > 0 && (tt((c = o(c, (a || "") + "_" + s))[0]) && tt(l) && (f[u] = $(l.text + c[0].text), c.shift()), f.push.apply(f, c)) : r(c) ? tt(l) ? f[u] = $(l.text + c) : "" !== c && f.push($(c)) : tt(c) && tt(l) ? f[u] = $(l.text + c.text) : (n(i._isVList) && e(c.tag) && t(c.key) && e(a) && (c.key = "__vlist" + a + "_" + s + "__"), f.push(c)));
            return f
        }(o) : void 0
    }

    function tt(t) {
        return e(t) && e(t.text) && !1 === t.isComment
    }

    function et(t, e) {
        if (t) {
            for (var n = Object.create(null), r = Dr ? Reflect.ownKeys(t) : Object.keys(t), o = 0; o < r.length; o++) {
                var i = r[o];
                if ("__ob__" !== i) {
                    for (var a = t[i].from, s = e; s;) {
                        if (s._provided && p(s._provided, a)) {
                            n[i] = s._provided[a];
                            break
                        }
                        s = s.$parent
                    }
                    if (!s && "default" in t[i]) {
                        var c = t[i].default;
                        n[i] = "function" == typeof c ? c.call(e) : c
                    }
                }
            }
            return n
        }
    }

    function nt(t, e) {
        if (!t || !t.length) return {};
        for (var n = {}, r = 0, o = t.length; r < o; r++) {
            var i = t[r],
                a = i.data;
            if (a && a.attrs && a.attrs.slot && delete a.attrs.slot, i.context !== e && i.fnContext !== e || !a || null == a.slot)(n.default || (n.default = [])).push(i);
            else {
                var s = a.slot,
                    c = n[s] || (n[s] = []);
                "template" === i.tag ? c.push.apply(c, i.children || []) : c.push(i)
            }
        }
        for (var u in n) n[u].every(rt) && delete n[u];
        return n
    }

    function rt(t) {
        return t.isComment && !t.asyncFactory || " " === t.text
    }

    function ot(t, e, n) {
        var r, o = Object.keys(e).length > 0,
            i = t ? !!t.$stable : !o,
            a = t && t.$key;
        if (t) {
            if (t._normalized) return t._normalized;
            if (i && n && n !== tr && a === n.$key && !o && !n.$hasNormal) return n;
            for (var s in r = {}, t) t[s] && "$" !== s[0] && (r[s] = it(e, s, t[s]))
        } else r = {};
        for (var c in e) c in r || (r[c] = at(e, c));
        return t && Object.isExtensible(t) && (t._normalized = r), w(r, "$stable", i), w(r, "$key", a), w(r, "$hasNormal", o), r
    }

    function it(t, e, n) {
        var r = function() {
            var t = arguments.length ? n.apply(null, arguments) : n({});
            return (t = t && "object" == typeof t && !Array.isArray(t) ? [t] : Y(t)) && (0 === t.length || 1 === t.length && t[0].isComment) ? void 0 : t
        };
        return n.proxy && Object.defineProperty(t, e, {
            get: r,
            enumerable: !0,
            configurable: !0
        }), r
    }

    function at(t, e) {
        return function() {
            return t[e]
        }
    }

    function st(t, n) {
        var r, i, a, s, c;
        if (Array.isArray(t) || "string" == typeof t)
            for (r = new Array(t.length), i = 0, a = t.length; i < a; i++) r[i] = n(t[i], i);
        else if ("number" == typeof t)
            for (r = new Array(t), i = 0; i < t; i++) r[i] = n(i + 1, i);
        else if (o(t))
            if (Dr && t[Symbol.iterator]) {
                r = [];
                for (var u = t[Symbol.iterator](), l = u.next(); !l.done;) r.push(n(l.value, r.length)), l = u.next()
            } else
                for (s = Object.keys(t), r = new Array(s.length), i = 0, a = s.length; i < a; i++) c = s[i], r[i] = n(t[c], c, i);
        return e(r) || (r = []), r._isVList = !0, r
    }

    function ct(t, e, n, r) {
        var o, i = this.$scopedSlots[t];
        i ? (n = n || {}, r && (n = v(v({}, r), n)), o = i(n) || e) : o = this.$slots[t] || e;
        var a = n && n.slot;
        return a ? this.$createElement("template", {
            slot: a
        }, o) : o
    }

    function ut(t) {
        return F(this.$options, "filters", t) || pr
    }

    function lt(t, e) {
        return Array.isArray(t) ? -1 === t.indexOf(e) : t !== e
    }

    function ft(t, e, n, r, o) {
        var i = mr.keyCodes[e] || n;
        return o && r && !mr.keyCodes[e] ? lt(o, r) : i ? lt(i, t) : r ? ur(r) !== e : void 0
    }

    function pt(t, e, n, r, i) {
        if (n && o(n)) {
            var a;
            Array.isArray(n) && (n = m(n));
            for (var s in n) ! function(o) {
                if ("class" === o || "style" === o || rr(o)) a = t;
                else {
                    var s = t.attrs && t.attrs.type;
                    a = r || mr.mustUseProp(e, s, o) ? t.domProps || (t.domProps = {}) : t.attrs || (t.attrs = {})
                }
                var c = ar(o),
                    u = ur(o);
                c in a || u in a || (a[o] = n[o], i && ((t.on || (t.on = {}))["update:" + o] = function(t) {
                    n[o] = t
                }))
            }(s)
        }
        return t
    }

    function dt(t, e) {
        var n = this._staticTrees || (this._staticTrees = []),
            r = n[t];
        return r && !e ? r : (vt(r = n[t] = this.$options.staticRenderFns[t].call(this._renderProxy, null, this), "__static__" + t, !1), r)
    }

    function ht(t, e, n) {
        return vt(t, "__once__" + e + (n ? "_" + n : ""), !0), t
    }

    function vt(t, e, n) {
        if (Array.isArray(t))
            for (var r = 0; r < t.length; r++) t[r] && "string" != typeof t[r] && mt(t[r], e + "_" + r, n);
        else mt(t, e, n)
    }

    function mt(t, e, n) {
        t.isStatic = !0, t.key = e, t.isOnce = n
    }

    function gt(t, e) {
        if (e && i(e)) {
            var n = t.on = t.on ? v({}, t.on) : {};
            for (var r in e) {
                var o = n[r],
                    a = e[r];
                n[r] = o ? [].concat(o, a) : a
            }
        }
        return t
    }

    function yt(t, e, n, r) {
        e = e || {
            $stable: !n
        };
        for (var o = 0; o < t.length; o++) {
            var i = t[o];
            Array.isArray(i) ? yt(i, e, n) : i && (i.proxy && (i.fn.proxy = !0), e[i.key] = i.fn)
        }
        return r && (e.$key = r), e
    }

    function bt(t, e) {
        for (var n = 0; n < e.length; n += 2) {
            var r = e[n];
            "string" == typeof r && r && (t[e[n]] = e[n + 1])
        }
        return t
    }

    function _t(t, e) {
        return "string" == typeof t ? e + t : t
    }

    function wt(t) {
        t._o = ht, t._n = u, t._s = c, t._l = st, t._t = ct, t._q = y, t._i = b, t._m = dt, t._f = ut, t._k = ft, t._b = pt, t._v = $, t._e = Vr, t._u = yt, t._g = gt, t._d = bt, t._p = _t
    }

    function xt(t, e, r, o, i) {
        var a, s = this,
            c = i.options;
        p(o, "_uid") ? (a = Object.create(o))._original = o : (a = o, o = o._original);
        var u = n(c._compiled),
            l = !u;
        this.data = t, this.props = e, this.children = r, this.parent = o, this.listeners = t.on || tr, this.injections = et(c.inject, o), this.slots = function() {
            return s.$slots || ot(t.scopedSlots, s.$slots = nt(r, o)), s.$slots
        }, Object.defineProperty(this, "scopedSlots", {
            enumerable: !0,
            get: function() {
                return ot(t.scopedSlots, this.slots())
            }
        }), u && (this.$options = c, this.$slots = this.slots(), this.$scopedSlots = ot(t.scopedSlots, this.$slots)), c._scopeId ? this._c = function(t, e, n, r) {
            var i = Ot(a, t, e, n, r, l);
            return i && !Array.isArray(i) && (i.fnScopeId = c._scopeId, i.fnContext = o), i
        } : this._c = function(t, e, n, r) {
            return Ot(a, t, e, n, r, l)
        }
    }

    function Ct(t, e, n, r, o) {
        var i = A(t);
        return i.fnContext = n, i.fnOptions = r, e.slot && ((i.data || (i.data = {})).slot = e.slot), i
    }

    function St(t, e) {
        for (var n in e) t[ar(n)] = e[n]
    }

    function $t(r, i, a, c, u) {
        if (!t(r)) {
            var l = a.$options._base;
            if (o(r) && (r = l.extend(r)), "function" == typeof r) {
                var p;
                if (t(r.cid) && void 0 === (r = function(r, i) {
                        if (n(r.error) && e(r.errorComp)) return r.errorComp;
                        if (e(r.resolved)) return r.resolved;
                        var a = fo;
                        if (a && e(r.owners) && -1 === r.owners.indexOf(a) && r.owners.push(a), n(r.loading) && e(r.loadingComp)) return r.loadingComp;
                        if (a && !e(r.owners)) {
                            var c = r.owners = [a],
                                u = !0,
                                l = null,
                                p = null;
                            a.$on("hook:destroyed", function() {
                                return f(c, a)
                            });
                            var d = function(t) {
                                    for (var e = 0, n = c.length; e < n; e++) c[e].$forceUpdate();
                                    t && (c.length = 0, null !== l && (clearTimeout(l), l = null), null !== p && (clearTimeout(p), p = null))
                                },
                                h = _(function(t) {
                                    r.resolved = kt(t, i), u ? c.length = 0 : d(!0)
                                }),
                                v = _(function(t) {
                                    e(r.errorComp) && (r.error = !0, d(!0))
                                }),
                                m = r(h, v);
                            return o(m) && (s(m) ? t(r.resolved) && m.then(h, v) : s(m.component) && (m.component.then(h, v), e(m.error) && (r.errorComp = kt(m.error, i)), e(m.loading) && (r.loadingComp = kt(m.loading, i), 0 === m.delay ? r.loading = !0 : l = setTimeout(function() {
                                l = null, t(r.resolved) && t(r.error) && (r.loading = !0, d(!1))
                            }, m.delay || 200)), e(m.timeout) && (p = setTimeout(function() {
                                p = null, t(r.resolved) && v(null)
                            }, m.timeout)))), u = !1, r.loading ? r.loadingComp : r.resolved
                        }
                    }(p = r, l))) return function(t, e, n, r, o) {
                    var i = Vr();
                    return i.asyncFactory = t, i.asyncMeta = {
                        data: e,
                        context: n,
                        children: r,
                        tag: o
                    }, i
                }(p, i, a, c, u);
                i = i || {}, Qt(r), e(i.model) && function(t, n) {
                    var r = t.model && t.model.prop || "value",
                        o = t.model && t.model.event || "input";
                    (n.attrs || (n.attrs = {}))[r] = n.model.value;
                    var i = n.on || (n.on = {}),
                        a = i[o],
                        s = n.model.callback;
                    e(a) ? (Array.isArray(a) ? -1 === a.indexOf(s) : a !== s) && (i[o] = [s].concat(a)) : i[o] = s
                }(r.options, i);
                var d = function(n, r, o) {
                    var i = r.options.props;
                    if (!t(i)) {
                        var a = {},
                            s = n.attrs,
                            c = n.props;
                        if (e(s) || e(c))
                            for (var u in i) {
                                var l = ur(u);
                                Z(a, c, u, l, !0) || Z(a, s, u, l, !1)
                            }
                        return a
                    }
                }(i, r);
                if (n(r.options.functional)) return function(t, n, r, o, i) {
                    var a = t.options,
                        s = {},
                        c = a.props;
                    if (e(c))
                        for (var u in c) s[u] = R(u, c, n || tr);
                    else e(r.attrs) && St(s, r.attrs), e(r.props) && St(s, r.props);
                    var l = new xt(r, s, i, o, t),
                        f = a.render.call(null, l._c, l);
                    if (f instanceof Ur) return Ct(f, r, l.parent, a);
                    if (Array.isArray(f)) {
                        for (var p = Y(f) || [], d = new Array(p.length), h = 0; h < p.length; h++) d[h] = Ct(p[h], r, l.parent, a);
                        return d
                    }
                }(r, d, i, a, c);
                var h = i.on;
                if (i.on = i.nativeOn, n(r.options.abstract)) {
                    var v = i.slot;
                    i = {}, v && (i.slot = v)
                }! function(t) {
                    for (var e = t.hook || (t.hook = {}), n = 0; n < co.length; n++) {
                        var r = co[n],
                            o = e[r],
                            i = so[r];
                        o === i || o && o._merged || (e[r] = o ? At(i, o) : i)
                    }
                }(i);
                var m = r.options.name || u;
                return new Ur("vue-component-" + r.cid + (m ? "-" + m : ""), i, void 0, void 0, void 0, a, {
                    Ctor: r,
                    propsData: d,
                    listeners: h,
                    tag: u,
                    children: c
                }, p)
            }
        }
    }

    function At(t, e) {
        var n = function(n, r) {
            t(n, r), e(n, r)
        };
        return n._merged = !0, n
    }

    function Ot(i, a, s, c, u, l) {
        return (Array.isArray(s) || r(s)) && (u = c, c = s, s = void 0), n(l) && (u = lo),
            function(r, i, a, s, c) {
                if (e(a) && e(a.__ob__)) return Vr();
                if (e(a) && e(a.is) && (i = a.is), !i) return Vr();
                Array.isArray(s) && "function" == typeof s[0] && ((a = a || {}).scopedSlots = {
                    default: s[0]
                }, s.length = 0), c === lo ? s = Y(s) : c === uo && (s = function(t) {
                    for (var e = 0; e < t.length; e++)
                        if (Array.isArray(t[e])) return Array.prototype.concat.apply([], t);
                    return t
                }(s));
                var u, l;
                if ("string" == typeof i) {
                    var f;
                    l = r.$vnode && r.$vnode.ns || mr.getTagNamespace(i), u = mr.isReservedTag(i) ? new Ur(mr.parsePlatformTagName(i), a, s, void 0, void 0, r) : a && a.pre || !e(f = F(r.$options, "components", i)) ? new Ur(i, a, s, void 0, void 0, r) : $t(f, a, r, s, i)
                } else u = $t(i, a, r, s);
                return Array.isArray(u) ? u : e(u) ? (e(l) && function r(o, i, a) {
                    if (o.ns = i, "foreignObject" === o.tag && (i = void 0, a = !0), e(o.children))
                        for (var s = 0, c = o.children.length; s < c; s++) {
                            var u = o.children[s];
                            e(u.tag) && (t(u.ns) || n(a) && "svg" !== u.tag) && r(u, i, a)
                        }
                }(u, l), e(a) && function(t) {
                    o(t.style) && K(t.style), o(t.class) && K(t.class)
                }(a), u) : Vr()
            }(i, a, s, c, u)
    }

    function kt(t, e) {
        return (t.__esModule || Dr && "Module" === t[Symbol.toStringTag]) && (t = t.default), o(t) ? e.extend(t) : t
    }

    function Et(t) {
        return t.isComment && t.asyncFactory
    }

    function jt(t) {
        if (Array.isArray(t))
            for (var n = 0; n < t.length; n++) {
                var r = t[n];
                if (e(r) && (e(r.componentOptions) || Et(r))) return r
            }
    }

    function Nt(t, e) {
        ao.$on(t, e)
    }

    function Tt(t, e) {
        ao.$off(t, e)
    }

    function Pt(t, e) {
        var n = ao;
        return function r() {
            null !== e.apply(null, arguments) && n.$off(t, r)
        }
    }

    function Mt(t, e, n) {
        ao = t, W(e, n || {}, Nt, Tt, Pt, t), ao = void 0
    }

    function Dt(t) {
        var e = po;
        return po = t,
            function() {
                po = e
            }
    }

    function Lt(t) {
        for (; t && (t = t.$parent);)
            if (t._inactive) return !0;
        return !1
    }

    function Ft(t, e) {
        if (e) {
            if (t._directInactive = !1, Lt(t)) return
        } else if (t._directInactive) return;
        if (t._inactive || null === t._inactive) {
            t._inactive = !1;
            for (var n = 0; n < t.$children.length; n++) Ft(t.$children[n]);
            Rt(t, "activated")
        }
    }

    function Rt(t, e) {
        C();
        var n = t.$options[e],
            r = e + " hook";
        if (n)
            for (var o = 0, i = n.length; o < i; o++) B(n[o], t, null, t, r);
        t._hasHookEvent && t.$emit("hook:" + e), S()
    }

    function It() {
        var t, e;
        for (_o = wo(), yo = !0, ho.sort(function(t, e) {
                return t.id - e.id
            }), bo = 0; bo < ho.length; bo++)(t = ho[bo]).before && t.before(), e = t.id, mo[e] = null, t.run();
        var n = vo.slice(),
            r = ho.slice();
        bo = ho.length = vo.length = 0, mo = {}, go = yo = !1,
            function(t) {
                for (var e = 0; e < t.length; e++) t[e]._inactive = !0, Ft(t[e], !0)
            }(n),
            function(t) {
                for (var e = t.length; e--;) {
                    var n = t[e],
                        r = n.vm;
                    r._watcher === n && r._isMounted && !r._isDestroyed && Rt(r, "updated")
                }
            }(r), Mr && mr.devtools && Mr.emit("flush")
    }

    function Ut(t, e, n) {
        $o.get = function() {
            return this[e][n]
        }, $o.set = function(t) {
            this[e][n] = t
        }, Object.defineProperty(t, n, $o)
    }

    function Ht(t) {
        t._watchers = [];
        var e = t.$options;
        e.props && function(t, e) {
            var n = t.$options.propsData || {},
                r = t._props = {},
                o = t.$options._propKeys = [];
            t.$parent && O(!1);
            for (var i in e) ! function(i) {
                o.push(i);
                var a = R(i, e, n, t);
                E(r, i, a), i in t || Ut(t, "_props", i)
            }(i);
            O(!0)
        }(t, e.props), e.methods && function(t, e) {
            t.$options.props;
            for (var n in e) t[n] = "function" != typeof e[n] ? g : lr(e[n], t)
        }(t, e.methods), e.data ? function(t) {
            var e = t.$options.data;
            i(e = t._data = "function" == typeof e ? function(t, e) {
                C();
                try {
                    return t.call(e, e)
                } catch (t) {
                    return V(t, e, "data()"), {}
                } finally {
                    S()
                }
            }(e, t) : e || {}) || (e = {});
            for (var n = Object.keys(e), r = t.$options.props, o = (t.$options.methods, n.length); o--;) {
                var a = n[o];
                r && p(r, a) || (s = void 0, 36 !== (s = (a + "").charCodeAt(0)) && 95 !== s && Ut(t, "_data", a))
            }
            var s;
            k(e, !0)
        }(t) : k(t._data = {}, !0), e.computed && function(t, e) {
            var n = t._computedWatchers = Object.create(null),
                r = Pr();
            for (var o in e) {
                var i = e[o],
                    a = "function" == typeof i ? i : i.get;
                r || (n[o] = new So(t, a || g, g, Ao)), o in t || Vt(t, o, i)
            }
        }(t, e.computed), e.watch && e.watch !== Er && function(t, e) {
            for (var n in e) {
                var r = e[n];
                if (Array.isArray(r))
                    for (var o = 0; o < r.length; o++) qt(t, n, r[o]);
                else qt(t, n, r)
            }
        }(t, e.watch)
    }

    function Vt(t, e, n) {
        var r = !Pr();
        "function" == typeof n ? ($o.get = r ? Bt(e) : zt(n), $o.set = g) : ($o.get = n.get ? r && !1 !== n.cache ? Bt(e) : zt(n.get) : g, $o.set = n.set || g), Object.defineProperty(t, e, $o)
    }

    function Bt(t) {
        return function() {
            var e = this._computedWatchers && this._computedWatchers[t];
            if (e) return e.dirty && e.evaluate(), Rr.target && e.depend(), e.value
        }
    }

    function zt(t) {
        return function() {
            return t.call(this, this)
        }
    }

    function qt(t, e, n, r) {
        return i(n) && (r = n, n = n.handler), "string" == typeof n && (n = t[n]), t.$watch(e, n, r)
    }

    function Qt(t) {
        var e = t.options;
        if (t.super) {
            var n = Qt(t.super);
            if (n !== t.superOptions) {
                t.superOptions = n;
                var r = function(t) {
                    var e, n = t.options,
                        r = t.sealedOptions;
                    for (var o in n) n[o] !== r[o] && (e || (e = {}), e[o] = n[o]);
                    return e
                }(t);
                r && v(t.extendOptions, r), (e = t.options = L(n, t.extendOptions)).name && (e.components[e.name] = t)
            }
        }
        return e
    }

    function Gt(t) {
        this._init(t)
    }

    function Kt(t) {
        t.cid = 0;
        var e = 1;
        t.extend = function(t) {
            t = t || {};
            var n = this,
                r = n.cid,
                o = t._Ctor || (t._Ctor = {});
            if (o[r]) return o[r];
            var i = t.name || n.options.name,
                a = function(t) {
                    this._init(t)
                };
            return (a.prototype = Object.create(n.prototype)).constructor = a, a.cid = e++, a.options = L(n.options, t), a.super = n, a.options.props && function(t) {
                var e = t.options.props;
                for (var n in e) Ut(t.prototype, "_props", n)
            }(a), a.options.computed && function(t) {
                var e = t.options.computed;
                for (var n in e) Vt(t.prototype, n, e[n])
            }(a), a.extend = n.extend, a.mixin = n.mixin, a.use = n.use, hr.forEach(function(t) {
                a[t] = n[t]
            }), i && (a.options.components[i] = a), a.superOptions = n.options, a.extendOptions = t, a.sealedOptions = v({}, a.options), o[r] = a, a
        }
    }

    function Jt(t) {
        return t && (t.Ctor.options.name || t.tag)
    }

    function Wt(t, e) {
        return Array.isArray(t) ? t.indexOf(e) > -1 : "string" == typeof t ? t.split(",").indexOf(e) > -1 : (n = t, "[object RegExp]" === er.call(n) && t.test(e));
        var n
    }

    function Xt(t, e) {
        var n = t.cache,
            r = t.keys,
            o = t._vnode;
        for (var i in n) {
            var a = n[i];
            if (a) {
                var s = Jt(a.componentOptions);
                s && !e(s) && Zt(n, i, r, o)
            }
        }
    }

    function Zt(t, e, n, r) {
        var o = t[e];
        !o || r && o.tag === r.tag || o.componentInstance.$destroy(), t[e] = null, f(n, e)
    }

    function Yt(t) {
        for (var n = t.data, r = t, o = t; e(o.componentInstance);)(o = o.componentInstance._vnode) && o.data && (n = te(o.data, n));
        for (; e(r = r.parent);) r && r.data && (n = te(n, r.data));
        return function(t, n) {
            return e(t) || e(n) ? ee(t, ne(n)) : ""
        }(n.staticClass, n.class)
    }

    function te(t, n) {
        return {
            staticClass: ee(t.staticClass, n.staticClass),
            class: e(t.class) ? [t.class, n.class] : n.class
        }
    }

    function ee(t, e) {
        return t ? e ? t + " " + e : t : e || ""
    }

    function ne(t) {
        return Array.isArray(t) ? function(t) {
            for (var n, r = "", o = 0, i = t.length; o < i; o++) e(n = ne(t[o])) && "" !== n && (r && (r += " "), r += n);
            return r
        }(t) : o(t) ? function(t) {
            var e = "";
            for (var n in t) t[n] && (e && (e += " "), e += n);
            return e
        }(t) : "string" == typeof t ? t : ""
    }

    function re(t) {
        return Zo(t) ? "svg" : "math" === t ? "math" : void 0
    }

    function oe(t) {
        return "string" == typeof t ? document.querySelector(t) || document.createElement("div") : t
    }

    function ie(t, n) {
        var r = t.data.ref;
        if (e(r)) {
            var o = t.context,
                i = t.componentInstance || t.elm,
                a = o.$refs;
            n ? Array.isArray(a[r]) ? f(a[r], i) : a[r] === i && (a[r] = void 0) : t.data.refInFor ? Array.isArray(a[r]) ? a[r].indexOf(i) < 0 && a[r].push(i) : a[r] = [i] : a[r] = i
        }
    }

    function ae(r, o) {
        return r.key === o.key && (r.tag === o.tag && r.isComment === o.isComment && e(r.data) === e(o.data) && function(t, n) {
            if ("input" !== t.tag) return !0;
            var r, o = e(r = t.data) && e(r = r.attrs) && r.type,
                i = e(r = n.data) && e(r = r.attrs) && r.type;
            return o === i || ei(o) && ei(i)
        }(r, o) || n(r.isAsyncPlaceholder) && r.asyncFactory === o.asyncFactory && t(o.asyncFactory.error))
    }

    function se(t, n, r) {
        var o, i, a = {};
        for (o = n; o <= r; ++o) e(i = t[o].key) && (a[i] = o);
        return a
    }

    function ce(t, e) {
        (t.data.directives || e.data.directives) && function(t, e) {
            var n, r, o, i = t === oi,
                a = e === oi,
                s = ue(t.data.directives, t.context),
                c = ue(e.data.directives, e.context),
                u = [],
                l = [];
            for (n in c) r = s[n], o = c[n], r ? (o.oldValue = r.value, o.oldArg = r.arg, fe(o, "update", e, t), o.def && o.def.componentUpdated && l.push(o)) : (fe(o, "bind", e, t), o.def && o.def.inserted && u.push(o));
            if (u.length) {
                var f = function() {
                    for (var n = 0; n < u.length; n++) fe(u[n], "inserted", e, t)
                };
                i ? X(e, "insert", f) : f()
            }
            if (l.length && X(e, "postpatch", function() {
                    for (var n = 0; n < l.length; n++) fe(l[n], "componentUpdated", e, t)
                }), !i)
                for (n in s) c[n] || fe(s[n], "unbind", t, t, a)
        }(t, e)
    }

    function ue(t, e) {
        var n, r, o = Object.create(null);
        if (!t) return o;
        for (n = 0; n < t.length; n++)(r = t[n]).modifiers || (r.modifiers = si), o[le(r)] = r, r.def = F(e.$options, "directives", r.name);
        return o
    }

    function le(t) {
        return t.rawName || t.name + "." + Object.keys(t.modifiers || {}).join(".")
    }

    function fe(t, e, n, r, o) {
        var i = t.def && t.def[e];
        if (i) try {
            i(n.elm, t, n, r, o)
        } catch (r) {
            V(r, n.context, "directive " + t.name + " " + e + " hook")
        }
    }

    function pe(n, r) {
        var o = r.componentOptions;
        if (!(e(o) && !1 === o.Ctor.options.inheritAttrs || t(n.data.attrs) && t(r.data.attrs))) {
            var i, a, s = r.elm,
                c = n.data.attrs || {},
                u = r.data.attrs || {};
            for (i in e(u.__ob__) && (u = r.data.attrs = v({}, u)), u) a = u[i], c[i] !== a && de(s, i, a);
            for (i in (Sr || Ar) && u.value !== c.value && de(s, "value", u.value), c) t(u[i]) && (Go(i) ? s.removeAttributeNS(Qo, Ko(i)) : Vo(i) || s.removeAttribute(i))
        }
    }

    function de(t, e, n) {
        t.tagName.indexOf("-") > -1 ? he(t, e, n) : qo(e) ? Jo(n) ? t.removeAttribute(e) : (n = "allowfullscreen" === e && "EMBED" === t.tagName ? "true" : e, t.setAttribute(e, n)) : Vo(e) ? t.setAttribute(e, zo(e, n)) : Go(e) ? Jo(n) ? t.removeAttributeNS(Qo, Ko(e)) : t.setAttributeNS(Qo, e, n) : he(t, e, n)
    }

    function he(t, e, n) {
        if (Jo(n)) t.removeAttribute(e);
        else {
            if (Sr && !$r && "TEXTAREA" === t.tagName && "placeholder" === e && "" !== n && !t.__ieph) {
                var r = function(e) {
                    e.stopImmediatePropagation(), t.removeEventListener("input", r)
                };
                t.addEventListener("input", r), t.__ieph = !0
            }
            t.setAttribute(e, n)
        }
    }

    function ve(n, r) {
        var o = r.elm,
            i = r.data,
            a = n.data;
        if (!(t(i.staticClass) && t(i.class) && (t(a) || t(a.staticClass) && t(a.class)))) {
            var s = Yt(r),
                c = o._transitionClasses;
            e(c) && (s = ee(s, ne(c))), s !== o._prevClass && (o.setAttribute("class", s), o._prevClass = s)
        }
    }

    function me(t) {
        function e() {
            (a || (a = [])).push(t.slice(h, o).trim()), h = o + 1
        }
        var n, r, o, i, a, s = !1,
            c = !1,
            u = !1,
            l = !1,
            f = 0,
            p = 0,
            d = 0,
            h = 0;
        for (o = 0; o < t.length; o++)
            if (r = n, n = t.charCodeAt(o), s) 39 === n && 92 !== r && (s = !1);
            else if (c) 34 === n && 92 !== r && (c = !1);
        else if (u) 96 === n && 92 !== r && (u = !1);
        else if (l) 47 === n && 92 !== r && (l = !1);
        else if (124 !== n || 124 === t.charCodeAt(o + 1) || 124 === t.charCodeAt(o - 1) || f || p || d) {
            switch (n) {
                case 34:
                    c = !0;
                    break;
                case 39:
                    s = !0;
                    break;
                case 96:
                    u = !0;
                    break;
                case 40:
                    d++;
                    break;
                case 41:
                    d--;
                    break;
                case 91:
                    p++;
                    break;
                case 93:
                    p--;
                    break;
                case 123:
                    f++;
                    break;
                case 125:
                    f--
            }
            if (47 === n) {
                for (var v = o - 1, m = void 0; v >= 0 && " " === (m = t.charAt(v)); v--);
                m && fi.test(m) || (l = !0)
            }
        } else void 0 === i ? (h = o + 1, i = t.slice(0, o).trim()) : e();
        if (void 0 === i ? i = t.slice(0, o).trim() : 0 !== h && e(), a)
            for (o = 0; o < a.length; o++) i = ge(i, a[o]);
        return i
    }

    function ge(t, e) {
        var n = e.indexOf("(");
        if (n < 0) return '_f("' + e + '")(' + t + ")";
        var r = e.slice(0, n),
            o = e.slice(n + 1);
        return '_f("' + r + '")(' + t + (")" !== o ? "," + o : o)
    }

    function ye(t, e) {
        console.error("[Vue compiler]: " + t)
    }

    function be(t, e) {
        return t ? t.map(function(t) {
            return t[e]
        }).filter(function(t) {
            return t
        }) : []
    }

    function _e(t, e, n, r, o) {
        (t.props || (t.props = [])).push(Ee({
            name: e,
            value: n,
            dynamic: o
        }, r)), t.plain = !1
    }

    function we(t, e, n, r, o) {
        (o ? t.dynamicAttrs || (t.dynamicAttrs = []) : t.attrs || (t.attrs = [])).push(Ee({
            name: e,
            value: n,
            dynamic: o
        }, r)), t.plain = !1
    }

    function xe(t, e, n, r) {
        t.attrsMap[e] = n, t.attrsList.push(Ee({
            name: e,
            value: n
        }, r))
    }

    function Ce(t, e, n, r, o, i, a, s) {
        (t.directives || (t.directives = [])).push(Ee({
            name: e,
            rawName: n,
            value: r,
            arg: o,
            isDynamicArg: i,
            modifiers: a
        }, s)), t.plain = !1
    }

    function Se(t, e, n) {
        return n ? "_p(" + e + ',"' + t + '")' : t + e
    }

    function $e(t, e, n, r, o, i, a, s) {
        var c;
        (r = r || tr).right ? s ? e = "(" + e + ")==='click'?'contextmenu':(" + e + ")" : "click" === e && (e = "contextmenu", delete r.right) : r.middle && (s ? e = "(" + e + ")==='click'?'mouseup':(" + e + ")" : "click" === e && (e = "mouseup")), r.capture && (delete r.capture, e = Se("!", e, s)), r.once && (delete r.once, e = Se("~", e, s)), r.passive && (delete r.passive, e = Se("&", e, s)), r.native ? (delete r.native, c = t.nativeEvents || (t.nativeEvents = {})) : c = t.events || (t.events = {});
        var u = Ee({
            value: n.trim(),
            dynamic: s
        }, a);
        r !== tr && (u.modifiers = r);
        var l = c[e];
        Array.isArray(l) ? o ? l.unshift(u) : l.push(u) : c[e] = l ? o ? [u, l] : [l, u] : u, t.plain = !1
    }

    function Ae(t, e, n) {
        var r = Oe(t, ":" + e) || Oe(t, "v-bind:" + e);
        if (null != r) return me(r);
        if (!1 !== n) {
            var o = Oe(t, e);
            if (null != o) return JSON.stringify(o)
        }
    }

    function Oe(t, e, n) {
        var r;
        if (null != (r = t.attrsMap[e]))
            for (var o = t.attrsList, i = 0, a = o.length; i < a; i++)
                if (o[i].name === e) {
                    o.splice(i, 1);
                    break
                }
        return n && delete t.attrsMap[e], r
    }

    function ke(t, e) {
        for (var n = t.attrsList, r = 0, o = n.length; r < o; r++) {
            var i = n[r];
            if (e.test(i.name)) return n.splice(r, 1), i
        }
    }

    function Ee(t, e) {
        return e && (null != e.start && (t.start = e.start), null != e.end && (t.end = e.end)), t
    }

    function je(t, e, n) {
        var r = n || {},
            o = r.number,
            i = "$$v";
        r.trim && (i = "(typeof $$v === 'string'? $$v.trim(): $$v)"), o && (i = "_n(" + i + ")");
        var a = Ne(e, i);
        t.model = {
            value: "(" + e + ")",
            expression: JSON.stringify(e),
            callback: "function ($$v) {" + a + "}"
        }
    }

    function Ne(t, e) {
        var n = function(t) {
            if (t = t.trim(), jo = t.length, t.indexOf("[") < 0 || t.lastIndexOf("]") < jo - 1) return (Po = t.lastIndexOf(".")) > -1 ? {
                exp: t.slice(0, Po),
                key: '"' + t.slice(Po + 1) + '"'
            } : {
                exp: t,
                key: null
            };
            for (No = t, Po = Mo = Do = 0; !Pe();) Me(To = Te()) ? Le(To) : 91 === To && De(To);
            return {
                exp: t.slice(0, Mo),
                key: t.slice(Mo + 1, Do)
            }
        }(t);
        return null === n.key ? t + "=" + e : "$set(" + n.exp + ", " + n.key + ", " + e + ")"
    }

    function Te() {
        return No.charCodeAt(++Po)
    }

    function Pe() {
        return Po >= jo
    }

    function Me(t) {
        return 34 === t || 39 === t
    }

    function De(t) {
        var e = 1;
        for (Mo = Po; !Pe();)
            if (Me(t = Te())) Le(t);
            else if (91 === t && e++, 93 === t && e--, 0 === e) {
            Do = Po;
            break
        }
    }

    function Le(t) {
        for (var e = t; !Pe() && (t = Te()) !== e;);
    }

    function Fe(t, e, n) {
        var r = Lo;
        return function o() {
            null !== e.apply(null, arguments) && Ie(t, o, n, r)
        }
    }

    function Re(t, e, n, r) {
        if (hi) {
            var o = _o,
                i = e;
            e = i._wrapper = function(t) {
                if (t.target === t.currentTarget || t.timeStamp >= o || t.timeStamp <= 0 || t.target.ownerDocument !== document) return i.apply(this, arguments)
            }
        }
        Lo.addEventListener(t, e, jr ? {
            capture: n,
            passive: r
        } : n)
    }

    function Ie(t, e, n, r) {
        (r || Lo).removeEventListener(t, e._wrapper || e, n)
    }

    function Ue(n, r) {
        if (!t(n.data.on) || !t(r.data.on)) {
            var o = r.data.on || {},
                i = n.data.on || {};
            Lo = r.elm,
                function(t) {
                    if (e(t[pi])) {
                        var n = Sr ? "change" : "input";
                        t[n] = [].concat(t[pi], t[n] || []), delete t[pi]
                    }
                    e(t[di]) && (t.change = [].concat(t[di], t.change || []), delete t[di])
                }(o), W(o, i, Re, Ie, Fe, r.context), Lo = void 0
        }
    }

    function He(n, r) {
        if (!t(n.data.domProps) || !t(r.data.domProps)) {
            var o, i, a = r.elm,
                s = n.data.domProps || {},
                c = r.data.domProps || {};
            for (o in e(c.__ob__) && (c = r.data.domProps = v({}, c)), s) o in c || (a[o] = "");
            for (o in c) {
                if (i = c[o], "textContent" === o || "innerHTML" === o) {
                    if (r.children && (r.children.length = 0), i === s[o]) continue;
                    1 === a.childNodes.length && a.removeChild(a.childNodes[0])
                }
                if ("value" === o && "PROGRESS" !== a.tagName) {
                    a._value = i;
                    var u = t(i) ? "" : String(i);
                    Ve(a, u) && (a.value = u)
                } else if ("innerHTML" === o && Zo(a.tagName) && t(a.innerHTML)) {
                    (Fo = Fo || document.createElement("div")).innerHTML = "<svg>" + i + "</svg>";
                    for (var l = Fo.firstChild; a.firstChild;) a.removeChild(a.firstChild);
                    for (; l.firstChild;) a.appendChild(l.firstChild)
                } else if (i !== s[o]) try {
                    a[o] = i
                } catch (n) {}
            }
        }
    }

    function Ve(t, n) {
        return !t.composing && ("OPTION" === t.tagName || function(t, e) {
            var n = !0;
            try {
                n = document.activeElement !== t
            } catch (t) {}
            return n && t.value !== e
        }(t, n) || function(t, n) {
            var r = t.value,
                o = t._vModifiers;
            if (e(o)) {
                if (o.number) return u(r) !== u(n);
                if (o.trim) return r.trim() !== n.trim()
            }
            return r !== n
        }(t, n))
    }

    function Be(t) {
        var e = ze(t.style);
        return t.staticStyle ? v(t.staticStyle, e) : e
    }

    function ze(t) {
        return Array.isArray(t) ? m(t) : "string" == typeof t ? gi(t) : t
    }

    function qe(n, r) {
        var o = r.data,
            i = n.data;
        if (!(t(o.staticStyle) && t(o.style) && t(i.staticStyle) && t(i.style))) {
            var a, s, c = r.elm,
                u = i.staticStyle,
                l = i.normalizedStyle || i.style || {},
                f = u || l,
                p = ze(r.data.style) || {};
            r.data.normalizedStyle = e(p.__ob__) ? v({}, p) : p;
            var d = function(t, e) {
                for (var n, r = {}, o = t; o.componentInstance;)(o = o.componentInstance._vnode) && o.data && (n = Be(o.data)) && v(r, n);
                (n = Be(t.data)) && v(r, n);
                for (var i = t; i = i.parent;) i.data && (n = Be(i.data)) && v(r, n);
                return r
            }(r);
            for (s in f) t(d[s]) && _i(c, s, "");
            for (s in d)(a = d[s]) !== f[s] && _i(c, s, null == a ? "" : a)
        }
    }

    function Qe(t, e) {
        if (e && (e = e.trim()))
            if (t.classList) e.indexOf(" ") > -1 ? e.split(Si).forEach(function(e) {
                return t.classList.add(e)
            }) : t.classList.add(e);
            else {
                var n = " " + (t.getAttribute("class") || "") + " ";
                n.indexOf(" " + e + " ") < 0 && t.setAttribute("class", (n + e).trim())
            }
    }

    function Ge(t, e) {
        if (e && (e = e.trim()))
            if (t.classList) e.indexOf(" ") > -1 ? e.split(Si).forEach(function(e) {
                return t.classList.remove(e)
            }) : t.classList.remove(e), t.classList.length || t.removeAttribute("class");
            else {
                for (var n = " " + (t.getAttribute("class") || "") + " ", r = " " + e + " "; n.indexOf(r) >= 0;) n = n.replace(r, " ");
                (n = n.trim()) ? t.setAttribute("class", n): t.removeAttribute("class")
            }
    }

    function Ke(t) {
        if (t) {
            if ("object" == typeof t) {
                var e = {};
                return !1 !== t.css && v(e, $i(t.name || "v")), v(e, t), e
            }
            return "string" == typeof t ? $i(t) : void 0
        }
    }

    function Je(t) {
        Pi(function() {
            Pi(t)
        })
    }

    function We(t, e) {
        var n = t._transitionClasses || (t._transitionClasses = []);
        n.indexOf(e) < 0 && (n.push(e), Qe(t, e))
    }

    function Xe(t, e) {
        t._transitionClasses && f(t._transitionClasses, e), Ge(t, e)
    }

    function Ze(t, e, n) {
        var r = Ye(t, e),
            o = r.type,
            i = r.timeout,
            a = r.propCount;
        if (!o) return n();
        var s = o === Oi ? ji : Ti,
            c = 0,
            u = function() {
                t.removeEventListener(s, l), n()
            },
            l = function(e) {
                e.target === t && ++c >= a && u()
            };
        setTimeout(function() {
            c < a && u()
        }, i + 1), t.addEventListener(s, l)
    }

    function Ye(t, e) {
        var n, r = window.getComputedStyle(t),
            o = (r[Ei + "Delay"] || "").split(", "),
            i = (r[Ei + "Duration"] || "").split(", "),
            a = tn(o, i),
            s = (r[Ni + "Delay"] || "").split(", "),
            c = (r[Ni + "Duration"] || "").split(", "),
            u = tn(s, c),
            l = 0,
            f = 0;
        return e === Oi ? a > 0 && (n = Oi, l = a, f = i.length) : e === ki ? u > 0 && (n = ki, l = u, f = c.length) : f = (n = (l = Math.max(a, u)) > 0 ? a > u ? Oi : ki : null) ? n === Oi ? i.length : c.length : 0, {
            type: n,
            timeout: l,
            propCount: f,
            hasTransform: n === Oi && Mi.test(r[Ei + "Property"])
        }
    }

    function tn(t, e) {
        for (; t.length < e.length;) t = t.concat(t);
        return Math.max.apply(null, e.map(function(e, n) {
            return en(e) + en(t[n])
        }))
    }

    function en(t) {
        return 1e3 * Number(t.slice(0, -1).replace(",", "."))
    }

    function nn(n, r) {
        var i = n.elm;
        e(i._leaveCb) && (i._leaveCb.cancelled = !0, i._leaveCb());
        var a = Ke(n.data.transition);
        if (!t(a) && !e(i._enterCb) && 1 === i.nodeType) {
            for (var s = a.css, c = a.type, l = a.enterClass, f = a.enterToClass, p = a.enterActiveClass, d = a.appearClass, h = a.appearToClass, v = a.appearActiveClass, m = a.beforeEnter, g = a.enter, y = a.afterEnter, b = a.enterCancelled, w = a.beforeAppear, x = a.appear, C = a.afterAppear, S = a.appearCancelled, $ = a.duration, A = po, O = po.$vnode; O && O.parent;) A = O.context, O = O.parent;
            var k = !A._isMounted || !n.isRootInsert;
            if (!k || x || "" === x) {
                var E = k && d ? d : l,
                    j = k && v ? v : p,
                    N = k && h ? h : f,
                    T = k && w || m,
                    P = k && "function" == typeof x ? x : g,
                    M = k && C || y,
                    D = k && S || b,
                    L = u(o($) ? $.enter : $),
                    F = !1 !== s && !$r,
                    R = an(P),
                    I = i._enterCb = _(function() {
                        F && (Xe(i, N), Xe(i, j)), I.cancelled ? (F && Xe(i, E), D && D(i)) : M && M(i), i._enterCb = null
                    });
                n.data.show || X(n, "insert", function() {
                    var t = i.parentNode,
                        e = t && t._pending && t._pending[n.key];
                    e && e.tag === n.tag && e.elm._leaveCb && e.elm._leaveCb(), P && P(i, I)
                }), T && T(i), F && (We(i, E), We(i, j), Je(function() {
                    Xe(i, E), I.cancelled || (We(i, N), R || (on(L) ? setTimeout(I, L) : Ze(i, c, I)))
                })), n.data.show && (r && r(), P && P(i, I)), F || R || I()
            }
        }
    }

    function rn(n, r) {
        function i() {
            S.cancelled || (!n.data.show && a.parentNode && ((a.parentNode._pending || (a.parentNode._pending = {}))[n.key] = n), h && h(a), w && (We(a, f), We(a, d), Je(function() {
                Xe(a, f), S.cancelled || (We(a, p), x || (on(C) ? setTimeout(S, C) : Ze(a, l, S)))
            })), v && v(a, S), w || x || S())
        }
        var a = n.elm;
        e(a._enterCb) && (a._enterCb.cancelled = !0, a._enterCb());
        var s = Ke(n.data.transition);
        if (t(s) || 1 !== a.nodeType) return r();
        if (!e(a._leaveCb)) {
            var c = s.css,
                l = s.type,
                f = s.leaveClass,
                p = s.leaveToClass,
                d = s.leaveActiveClass,
                h = s.beforeLeave,
                v = s.leave,
                m = s.afterLeave,
                g = s.leaveCancelled,
                y = s.delayLeave,
                b = s.duration,
                w = !1 !== c && !$r,
                x = an(v),
                C = u(o(b) ? b.leave : b),
                S = a._leaveCb = _(function() {
                    a.parentNode && a.parentNode._pending && (a.parentNode._pending[n.key] = null), w && (Xe(a, p), Xe(a, d)), S.cancelled ? (w && Xe(a, f), g && g(a)) : (r(), m && m(a)), a._leaveCb = null
                });
            y ? y(i) : i()
        }
    }

    function on(t) {
        return "number" == typeof t && !isNaN(t)
    }

    function an(n) {
        if (t(n)) return !1;
        var r = n.fns;
        return e(r) ? an(Array.isArray(r) ? r[0] : r) : (n._length || n.length) > 1
    }

    function sn(t, e) {
        !0 !== e.data.show && nn(e)
    }

    function cn(t, e, n) {
        un(t, e, n), (Sr || Ar) && setTimeout(function() {
            un(t, e, n)
        }, 0)
    }

    function un(t, e, n) {
        var r = e.value,
            o = t.multiple;
        if (!o || Array.isArray(r)) {
            for (var i, a, s = 0, c = t.options.length; s < c; s++)
                if (a = t.options[s], o) i = b(r, fn(a)) > -1, a.selected !== i && (a.selected = i);
                else if (y(fn(a), r)) return void(t.selectedIndex !== s && (t.selectedIndex = s));
            o || (t.selectedIndex = -1)
        }
    }

    function ln(t, e) {
        return e.every(function(e) {
            return !y(e, t)
        })
    }

    function fn(t) {
        return "_value" in t ? t._value : t.value
    }

    function pn(t) {
        t.target.composing = !0
    }

    function dn(t) {
        t.target.composing && (t.target.composing = !1, hn(t.target, "input"))
    }

    function hn(t, e) {
        var n = document.createEvent("HTMLEvents");
        n.initEvent(e, !0, !0), t.dispatchEvent(n)
    }

    function vn(t) {
        return !t.componentInstance || t.data && t.data.transition ? t : vn(t.componentInstance._vnode)
    }

    function mn(t) {
        var e = t && t.componentOptions;
        return e && e.Ctor.options.abstract ? mn(jt(e.children)) : t
    }

    function gn(t) {
        var e = {},
            n = t.$options;
        for (var r in n.propsData) e[r] = t[r];
        var o = n._parentListeners;
        for (var i in o) e[ar(i)] = o[i];
        return e
    }

    function yn(t, e) {
        if (/\d-keep-alive$/.test(e.tag)) return t("keep-alive", {
            props: e.componentOptions.propsData
        })
    }

    function bn(t) {
        t.elm._moveCb && t.elm._moveCb(), t.elm._enterCb && t.elm._enterCb()
    }

    function _n(t) {
        t.data.newPos = t.elm.getBoundingClientRect()
    }

    function wn(t) {
        var e = t.data.pos,
            n = t.data.newPos,
            r = e.left - n.left,
            o = e.top - n.top;
        if (r || o) {
            t.data.moved = !0;
            var i = t.elm.style;
            i.transform = i.WebkitTransform = "translate(" + r + "px," + o + "px)", i.transitionDuration = "0s"
        }
    }

    function xn(t, e) {
        var n = e ? Sa : Ca;
        return t.replace(n, function(t) {
            return xa[t]
        })
    }

    function Cn(t, e, n) {
        return {
            type: 1,
            tag: t,
            attrsList: e,
            attrsMap: jn(e),
            rawAttrsMap: {},
            parent: n,
            children: []
        }
    }

    function Sn(t, e) {
        function n(t) {
            if (r(t), u || t.processed || (t = $n(t, e)), a.length || t === o || o.if && (t.elseif || t.else) && On(o, {
                    exp: t.elseif,
                    block: t
                }), i && !t.forbidden)
                if (t.elseif || t.else) s = t, (c = function(t) {
                    for (var e = t.length; e--;) {
                        if (1 === t[e].type) return t[e];
                        t.pop()
                    }
                }(i.children)) && c.if && On(c, {
                    exp: s.elseif,
                    block: s
                });
                else {
                    if (t.slotScope) {
                        var n = t.slotTarget || '"default"';
                        (i.scopedSlots || (i.scopedSlots = {}))[n] = t
                    }
                    i.children.push(t), t.parent = i
                }
            var s, c;
            t.children = t.children.filter(function(t) {
                return !t.slotScope
            }), r(t), t.pre && (u = !1), Wi(t.tag) && (l = !1);
            for (var f = 0; f < Ji.length; f++) Ji[f](t, e)
        }

        function r(t) {
            if (!l)
                for (var e;
                    (e = t.children[t.children.length - 1]) && 3 === e.type && " " === e.text;) t.children.pop()
        }
        qi = e.warn || ye, Wi = e.isPreTag || fr, Xi = e.mustUseProp || fr, Zi = e.getTagNamespace || fr, e.isReservedTag, Gi = be(e.modules, "transformNode"), Ki = be(e.modules, "preTransformNode"), Ji = be(e.modules, "postTransformNode"), Qi = e.delimiters;
        var o, i, a = [],
            s = !1 !== e.preserveWhitespace,
            c = e.whitespace,
            u = !1,
            l = !1;
        return function(t, e) {
            function n(e) {
                l += e, t = t.substring(e)
            }

            function r(t, n, r) {
                var o, s;
                if (null == n && (n = l), null == r && (r = l), t)
                    for (s = t.toLowerCase(), o = a.length - 1; o >= 0 && a[o].lowerCasedTag !== s; o--);
                else o = 0;
                if (o >= 0) {
                    for (var c = a.length - 1; c >= o; c--) e.end && e.end(a[c].tag, n, r);
                    a.length = o, i = o && a[o - 1].tag
                } else "br" === s ? e.start && e.start(t, [], !0, n, r) : "p" === s && (e.start && e.start(t, [], !1, n, r), e.end && e.end(t, n, r))
            }
            for (var o, i, a = [], s = e.expectHTML, c = e.isUnaryTag || fr, u = e.canBeLeftOpenTag || fr, l = 0; t;) {
                if (o = t, i && _a(i)) {
                    var f = 0,
                        p = i.toLowerCase(),
                        d = wa[p] || (wa[p] = new RegExp("([\\s\\S]*?)(</" + p + "[^>]*>)", "i")),
                        h = t.replace(d, function(t, n, r) {
                            return f = r.length, _a(p) || "noscript" === p || (n = n.replace(/<!\--([\s\S]*?)-->/g, "$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g, "$1")), Aa(p, n) && (n = n.slice(1)), e.chars && e.chars(n), ""
                        });
                    l += t.length - h.length, t = h, r(p, l - f, l)
                } else {
                    var v = t.indexOf("<");
                    if (0 === v) {
                        if (ya.test(t)) {
                            var m = t.indexOf("--\x3e");
                            if (m >= 0) {
                                e.shouldKeepComment && e.comment(t.substring(4, m), l, l + m + 3), n(m + 3);
                                continue
                            }
                        }
                        if (ba.test(t)) {
                            var g = t.indexOf("]>");
                            if (g >= 0) {
                                n(g + 2);
                                continue
                            }
                        }
                        var y = t.match(ga);
                        if (y) {
                            n(y[0].length);
                            continue
                        }
                        var b = t.match(ma);
                        if (b) {
                            var _ = l;
                            n(b[0].length), r(b[1], _, l);
                            continue
                        }
                        var w = function() {
                            var e = t.match(ha);
                            if (e) {
                                var r, o, i = {
                                    tagName: e[1],
                                    attrs: [],
                                    start: l
                                };
                                for (n(e[0].length); !(r = t.match(va)) && (o = t.match(fa) || t.match(la));) o.start = l, n(o[0].length), o.end = l, i.attrs.push(o);
                                if (r) return i.unarySlash = r[1], n(r[0].length), i.end = l, i
                            }
                        }();
                        if (w) {
                            (function(t) {
                                var n = t.tagName,
                                    o = t.unarySlash;
                                s && ("p" === i && ua(n) && r(i), u(n) && i === n && r(n));
                                for (var l = c(n) || !!o, f = t.attrs.length, p = new Array(f), d = 0; d < f; d++) {
                                    var h = t.attrs[d],
                                        v = h[3] || h[4] || h[5] || "",
                                        m = "a" === n && "href" === h[1] ? e.shouldDecodeNewlinesForHref : e.shouldDecodeNewlines;
                                    p[d] = {
                                        name: h[1],
                                        value: xn(v, m)
                                    }
                                }
                                l || (a.push({
                                    tag: n,
                                    lowerCasedTag: n.toLowerCase(),
                                    attrs: p,
                                    start: t.start,
                                    end: t.end
                                }), i = n), e.start && e.start(n, p, l, t.start, t.end)
                            })(w), Aa(w.tagName, t) && n(1);
                            continue
                        }
                    }
                    var x = void 0,
                        C = void 0,
                        S = void 0;
                    if (v >= 0) {
                        for (C = t.slice(v); !(ma.test(C) || ha.test(C) || ya.test(C) || ba.test(C) || (S = C.indexOf("<", 1)) < 0);) v += S, C = t.slice(v);
                        x = t.substring(0, v)
                    }
                    v < 0 && (x = t), x && n(x.length), e.chars && x && e.chars(x, l - x.length, l)
                }
                if (t === o) {
                    e.chars && e.chars(t);
                    break
                }
            }
            r()
        }(t, {
            warn: qi,
            expectHTML: e.expectHTML,
            isUnaryTag: e.isUnaryTag,
            canBeLeftOpenTag: e.canBeLeftOpenTag,
            shouldDecodeNewlines: e.shouldDecodeNewlines,
            shouldDecodeNewlinesForHref: e.shouldDecodeNewlinesForHref,
            shouldKeepComment: e.comments,
            outputSourceRange: e.outputSourceRange,
            start: function(t, r, s, c, f) {
                var p = i && i.ns || Zi(t);
                Sr && "svg" === p && (r = function(t) {
                    for (var e = [], n = 0; n < t.length; n++) {
                        var r = t[n];
                        Ha.test(r.name) || (r.name = r.name.replace(Va, ""), e.push(r))
                    }
                    return e
                }(r));
                var d, h = Cn(t, r, i);
                p && (h.ns = p), "style" !== (d = h).tag && ("script" !== d.tag || d.attrsMap.type && "text/javascript" !== d.attrsMap.type) || Pr() || (h.forbidden = !0);
                for (var v = 0; v < Ki.length; v++) h = Ki[v](h, e) || h;
                u || (function(t) {
                    null != Oe(t, "v-pre") && (t.pre = !0)
                }(h), h.pre && (u = !0)), Wi(h.tag) && (l = !0), u ? function(t) {
                    var e = t.attrsList,
                        n = e.length;
                    if (n)
                        for (var r = t.attrs = new Array(n), o = 0; o < n; o++) r[o] = {
                            name: e[o].name,
                            value: JSON.stringify(e[o].value)
                        }, null != e[o].start && (r[o].start = e[o].start, r[o].end = e[o].end);
                    else t.pre || (t.plain = !0)
                }(h) : h.processed || (An(h), function(t) {
                    var e = Oe(t, "v-if");
                    if (e) t.if = e, On(t, {
                        exp: e,
                        block: t
                    });
                    else {
                        null != Oe(t, "v-else") && (t.else = !0);
                        var n = Oe(t, "v-else-if");
                        n && (t.elseif = n)
                    }
                }(h), function(t) {
                    null != Oe(t, "v-once") && (t.once = !0)
                }(h)), o || (o = h), s ? n(h) : (i = h, a.push(h))
            },
            end: function(t, e, r) {
                var o = a[a.length - 1];
                a.length -= 1, i = a[a.length - 1], n(o)
            },
            chars: function(t, e, n) {
                if (i && (!Sr || "textarea" !== i.tag || i.attrsMap.placeholder !== t)) {
                    var r, o, a, f = i.children;
                    (t = l || t.trim() ? "script" === (r = i).tag || "style" === r.tag ? t : Ia(t) : f.length ? c ? "condense" === c && Fa.test(t) ? "" : " " : s ? " " : "" : "") && (l || "condense" !== c || (t = t.replace(Ra, " ")), !u && " " !== t && (o = function(t, e) {
                        var n = e ? ra(e) : ea;
                        if (n.test(t)) {
                            for (var r, o, i, a = [], s = [], c = n.lastIndex = 0; r = n.exec(t);) {
                                (o = r.index) > c && (s.push(i = t.slice(c, o)), a.push(JSON.stringify(i)));
                                var u = me(r[1].trim());
                                a.push("_s(" + u + ")"), s.push({
                                    "@binding": u
                                }), c = o + r[0].length
                            }
                            return c < t.length && (s.push(i = t.slice(c)), a.push(JSON.stringify(i))), {
                                expression: a.join("+"),
                                tokens: s
                            }
                        }
                    }(t, Qi)) ? a = {
                        type: 2,
                        expression: o.expression,
                        tokens: o.tokens,
                        text: t
                    } : " " === t && f.length && " " === f[f.length - 1].text || (a = {
                        type: 3,
                        text: t
                    }), a && f.push(a))
                }
            },
            comment: function(t, e, n) {
                if (i) {
                    var r = {
                        type: 3,
                        text: t,
                        isComment: !0
                    };
                    i.children.push(r)
                }
            }
        }), o
    }

    function $n(t, e) {
        var n, r;
        (r = Ae(n = t, "key")) && (n.key = r), t.plain = !t.key && !t.scopedSlots && !t.attrsList.length,
            function(t) {
                var e = Ae(t, "ref");
                e && (t.ref = e, t.refInFor = function(t) {
                    for (var e = t; e;) {
                        if (void 0 !== e.for) return !0;
                        e = e.parent
                    }
                    return !1
                }(t))
            }(t),
            function(t) {
                var e;
                "template" === t.tag ? (e = Oe(t, "scope"), t.slotScope = e || Oe(t, "slot-scope")) : (e = Oe(t, "slot-scope")) && (t.slotScope = e);
                var n = Ae(t, "slot");
                if (n && (t.slotTarget = '""' === n ? '"default"' : n, t.slotTargetDynamic = !(!t.attrsMap[":slot"] && !t.attrsMap["v-bind:slot"]), "template" === t.tag || t.slotScope || we(t, "slot", n, function(t, e) {
                        return t.rawAttrsMap[":" + e] || t.rawAttrsMap["v-bind:" + e] || t.rawAttrsMap[e]
                    }(t, "slot"))), "template" === t.tag) {
                    var r = ke(t, La);
                    if (r) {
                        var o = kn(r),
                            i = o.name,
                            a = o.dynamic;
                        t.slotTarget = i, t.slotTargetDynamic = a, t.slotScope = r.value || Ua
                    }
                } else {
                    var s = ke(t, La);
                    if (s) {
                        var c = t.scopedSlots || (t.scopedSlots = {}),
                            u = kn(s),
                            l = u.name,
                            f = u.dynamic,
                            p = c[l] = Cn("template", [], t);
                        p.slotTarget = l, p.slotTargetDynamic = f, p.children = t.children.filter(function(t) {
                            if (!t.slotScope) return t.parent = p, !0
                        }), p.slotScope = s.value || Ua, t.children = [], t.plain = !1
                    }
                }
            }(t),
            function(t) {
                "slot" === t.tag && (t.slotName = Ae(t, "name"))
            }(t),
            function(t) {
                var e;
                (e = Ae(t, "is")) && (t.component = e), null != Oe(t, "inline-template") && (t.inlineTemplate = !0)
            }(t);
        for (var o = 0; o < Gi.length; o++) t = Gi[o](t, e) || t;
        return function(t) {
            var e, n, r, o, i, a, s, c, u = t.attrsList;
            for (e = 0, n = u.length; e < n; e++)
                if (r = o = u[e].name, i = u[e].value, ka.test(r))
                    if (t.hasBindings = !0, (a = En(r.replace(ka, ""))) && (r = r.replace(Da, "")), Ma.test(r)) r = r.replace(Ma, ""), i = me(i), (c = Ta.test(r)) && (r = r.slice(1, -1)), a && (a.prop && !c && "innerHtml" === (r = ar(r)) && (r = "innerHTML"), a.camel && !c && (r = ar(r)), a.sync && (s = Ne(i, "$event"), c ? $e(t, '"update:"+(' + r + ")", s, null, !1, 0, u[e], !0) : ($e(t, "update:" + ar(r), s, null, !1, 0, u[e]), ur(r) !== ar(r) && $e(t, "update:" + ur(r), s, null, !1, 0, u[e])))), a && a.prop || !t.component && Xi(t.tag, t.attrsMap.type, r) ? _e(t, r, i, u[e], c) : we(t, r, i, u[e], c);
                    else if (Oa.test(r)) r = r.replace(Oa, ""), (c = Ta.test(r)) && (r = r.slice(1, -1)), $e(t, r, i, a, !1, 0, u[e], c);
            else {
                var l = (r = r.replace(ka, "")).match(Pa),
                    f = l && l[1];
                c = !1, f && (r = r.slice(0, -(f.length + 1)), Ta.test(f) && (f = f.slice(1, -1), c = !0)), Ce(t, r, o, i, f, c, a, u[e])
            } else we(t, r, JSON.stringify(i), u[e]), !t.component && "muted" === r && Xi(t.tag, t.attrsMap.type, r) && _e(t, r, "true", u[e])
        }(t), t
    }

    function An(t) {
        var e;
        if (e = Oe(t, "v-for")) {
            var n = function(t) {
                var e = t.match(Ea);
                if (e) {
                    var n = {};
                    n.for = e[2].trim();
                    var r = e[1].trim().replace(Na, ""),
                        o = r.match(ja);
                    return o ? (n.alias = r.replace(ja, "").trim(), n.iterator1 = o[1].trim(), o[2] && (n.iterator2 = o[2].trim())) : n.alias = r, n
                }
            }(e);
            n && v(t, n)
        }
    }

    function On(t, e) {
        t.ifConditions || (t.ifConditions = []), t.ifConditions.push(e)
    }

    function kn(t) {
        var e = t.name.replace(La, "");
        return e || "#" !== t.name[0] && (e = "default"), Ta.test(e) ? {
            name: e.slice(1, -1),
            dynamic: !0
        } : {
            name: '"' + e + '"',
            dynamic: !1
        }
    }

    function En(t) {
        var e = t.match(Da);
        if (e) {
            var n = {};
            return e.forEach(function(t) {
                n[t.slice(1)] = !0
            }), n
        }
    }

    function jn(t) {
        for (var e = {}, n = 0, r = t.length; n < r; n++) e[t[n].name] = t[n].value;
        return e
    }

    function Nn(t) {
        return Cn(t.tag, t.attrsList.slice(), t.parent)
    }

    function Tn(t, e) {
        t && (Yi = qa(e.staticKeys || ""), ta = e.isReservedTag || fr, function t(e) {
            if (e.static = function(t) {
                    return 2 !== t.type && (3 === t.type || !(!t.pre && (t.hasBindings || t.if || t.for || nr(t.tag) || !ta(t.tag) || function(t) {
                        for (; t.parent;) {
                            if ("template" !== (t = t.parent).tag) return !1;
                            if (t.for) return !0
                        }
                        return !1
                    }(t) || !Object.keys(t).every(Yi))))
                }(e), 1 === e.type) {
                if (!ta(e.tag) && "slot" !== e.tag && null == e.attrsMap["inline-template"]) return;
                for (var n = 0, r = e.children.length; n < r; n++) {
                    var o = e.children[n];
                    t(o), o.static || (e.static = !1)
                }
                if (e.ifConditions)
                    for (var i = 1, a = e.ifConditions.length; i < a; i++) {
                        var s = e.ifConditions[i].block;
                        t(s), s.static || (e.static = !1)
                    }
            }
        }(t), function t(e, n) {
            if (1 === e.type) {
                if ((e.static || e.once) && (e.staticInFor = n), e.static && e.children.length && (1 !== e.children.length || 3 !== e.children[0].type)) return void(e.staticRoot = !0);
                if (e.staticRoot = !1, e.children)
                    for (var r = 0, o = e.children.length; r < o; r++) t(e.children[r], n || !!e.for);
                if (e.ifConditions)
                    for (var i = 1, a = e.ifConditions.length; i < a; i++) t(e.ifConditions[i].block, n)
            }
        }(t, !1))
    }

    function Pn(t, e) {
        var n = e ? "nativeOn:" : "on:",
            r = "",
            o = "";
        for (var i in t) {
            var a = Mn(t[i]);
            t[i] && t[i].dynamic ? o += i + "," + a + "," : r += '"' + i + '":' + a + ","
        }
        return r = "{" + r.slice(0, -1) + "}", o ? n + "_d(" + r + ",[" + o.slice(0, -1) + "])" : n + r
    }

    function Mn(t) {
        if (!t) return "function(){}";
        if (Array.isArray(t)) return "[" + t.map(function(t) {
            return Mn(t)
        }).join(",") + "]";
        var e = Ka.test(t.value),
            n = Qa.test(t.value),
            r = Ka.test(t.value.replace(Ga, ""));
        if (t.modifiers) {
            var o = "",
                i = "",
                a = [];
            for (var s in t.modifiers)
                if (Za[s]) i += Za[s], Ja[s] && a.push(s);
                else if ("exact" === s) {
                var c = t.modifiers;
                i += Xa(["ctrl", "shift", "alt", "meta"].filter(function(t) {
                    return !c[t]
                }).map(function(t) {
                    return "$event." + t + "Key"
                }).join("||"))
            } else a.push(s);
            return a.length && (o += function(t) {
                return "if(!$event.type.indexOf('key')&&" + t.map(Dn).join("&&") + ")return null;"
            }(a)), i && (o += i), "function($event){" + o + (e ? "return " + t.value + "($event)" : n ? "return (" + t.value + ")($event)" : r ? "return " + t.value : t.value) + "}"
        }
        return e || n ? t.value : "function($event){" + (r ? "return " + t.value : t.value) + "}"
    }

    function Dn(t) {
        var e = parseInt(t, 10);
        if (e) return "$event.keyCode!==" + e;
        var n = Ja[t],
            r = Wa[t];
        return "_k($event.keyCode," + JSON.stringify(t) + "," + JSON.stringify(n) + ",$event.key," + JSON.stringify(r) + ")"
    }

    function Ln(t, e) {
        var n = new ts(e);
        return {
            render: "with(this){return " + (t ? Fn(t, n) : '_c("div")') + "}",
            staticRenderFns: n.staticRenderFns
        }
    }

    function Fn(t, e) {
        if (t.parent && (t.pre = t.pre || t.parent.pre), t.staticRoot && !t.staticProcessed) return Rn(t, e);
        if (t.once && !t.onceProcessed) return In(t, e);
        if (t.for && !t.forProcessed) return Hn(t, e);
        if (t.if && !t.ifProcessed) return Un(t, e);
        if ("template" !== t.tag || t.slotTarget || e.pre) {
            if ("slot" === t.tag) return function(t, e) {
                var n = t.slotName || '"default"',
                    r = qn(t, e),
                    o = "_t(" + n + (r ? "," + r : ""),
                    i = t.attrs || t.dynamicAttrs ? Kn((t.attrs || []).concat(t.dynamicAttrs || []).map(function(t) {
                        return {
                            name: ar(t.name),
                            value: t.value,
                            dynamic: t.dynamic
                        }
                    })) : null,
                    a = t.attrsMap["v-bind"];
                return !i && !a || r || (o += ",null"), i && (o += "," + i), a && (o += (i ? "" : ",null") + "," + a), o + ")"
            }(t, e);
            var n;
            if (t.component) n = function(t, e, n) {
                var r = e.inlineTemplate ? null : qn(e, n, !0);
                return "_c(" + t + "," + Vn(e, n) + (r ? "," + r : "") + ")"
            }(t.component, t, e);
            else {
                var r;
                (!t.plain || t.pre && e.maybeComponent(t)) && (r = Vn(t, e));
                var o = t.inlineTemplate ? null : qn(t, e, !0);
                n = "_c('" + t.tag + "'" + (r ? "," + r : "") + (o ? "," + o : "") + ")"
            }
            for (var i = 0; i < e.transforms.length; i++) n = e.transforms[i](t, n);
            return n
        }
        return qn(t, e) || "void 0"
    }

    function Rn(t, e) {
        t.staticProcessed = !0;
        var n = e.pre;
        return t.pre && (e.pre = t.pre), e.staticRenderFns.push("with(this){return " + Fn(t, e) + "}"), e.pre = n, "_m(" + (e.staticRenderFns.length - 1) + (t.staticInFor ? ",true" : "") + ")"
    }

    function In(t, e) {
        if (t.onceProcessed = !0, t.if && !t.ifProcessed) return Un(t, e);
        if (t.staticInFor) {
            for (var n = "", r = t.parent; r;) {
                if (r.for) {
                    n = r.key;
                    break
                }
                r = r.parent
            }
            return n ? "_o(" + Fn(t, e) + "," + e.onceId++ + "," + n + ")" : Fn(t, e)
        }
        return Rn(t, e)
    }

    function Un(t, e, n, r) {
        return t.ifProcessed = !0,
            function t(e, n, r, o) {
                function i(t) {
                    return r ? r(t, n) : t.once ? In(t, n) : Fn(t, n)
                }
                if (!e.length) return o || "_e()";
                var a = e.shift();
                return a.exp ? "(" + a.exp + ")?" + i(a.block) + ":" + t(e, n, r, o) : "" + i(a.block)
            }(t.ifConditions.slice(), e, n, r)
    }

    function Hn(t, e, n, r) {
        var o = t.for,
            i = t.alias,
            a = t.iterator1 ? "," + t.iterator1 : "",
            s = t.iterator2 ? "," + t.iterator2 : "";
        return t.forProcessed = !0, (r || "_l") + "((" + o + "),function(" + i + a + s + "){return " + (n || Fn)(t, e) + "})"
    }

    function Vn(t, e) {
        var n = "{",
            r = function(t, e) {
                var n = t.directives;
                if (n) {
                    var r, o, i, a, s = "directives:[",
                        c = !1;
                    for (r = 0, o = n.length; r < o; r++) {
                        i = n[r], a = !0;
                        var u = e.directives[i.name];
                        u && (a = !!u(t, i, e.warn)), a && (c = !0, s += '{name:"' + i.name + '",rawName:"' + i.rawName + '"' + (i.value ? ",value:(" + i.value + "),expression:" + JSON.stringify(i.value) : "") + (i.arg ? ",arg:" + (i.isDynamicArg ? i.arg : '"' + i.arg + '"') : "") + (i.modifiers ? ",modifiers:" + JSON.stringify(i.modifiers) : "") + "},")
                    }
                    return c ? s.slice(0, -1) + "]" : void 0
                }
            }(t, e);
        r && (n += r + ","), t.key && (n += "key:" + t.key + ","), t.ref && (n += "ref:" + t.ref + ","), t.refInFor && (n += "refInFor:true,"), t.pre && (n += "pre:true,"), t.component && (n += 'tag:"' + t.tag + '",');
        for (var o = 0; o < e.dataGenFns.length; o++) n += e.dataGenFns[o](t);
        if (t.attrs && (n += "attrs:" + Kn(t.attrs) + ","), t.props && (n += "domProps:" + Kn(t.props) + ","), t.events && (n += Pn(t.events, !1) + ","), t.nativeEvents && (n += Pn(t.nativeEvents, !0) + ","), t.slotTarget && !t.slotScope && (n += "slot:" + t.slotTarget + ","), t.scopedSlots && (n += function(t, e, n) {
                var r = t.for || Object.keys(e).some(function(t) {
                        var n = e[t];
                        return n.slotTargetDynamic || n.if || n.for || Bn(n)
                    }),
                    o = !!t.if;
                if (!r)
                    for (var i = t.parent; i;) {
                        if (i.slotScope && i.slotScope !== Ua || i.for) {
                            r = !0;
                            break
                        }
                        i.if && (o = !0), i = i.parent
                    }
                var a = Object.keys(e).map(function(t) {
                    return zn(e[t], n)
                }).join(",");
                return "scopedSlots:_u([" + a + "]" + (r ? ",null,true" : "") + (!r && o ? ",null,false," + function(t) {
                    for (var e = 5381, n = t.length; n;) e = 33 * e ^ t.charCodeAt(--n);
                    return e >>> 0
                }(a) : "") + ")"
            }(t, t.scopedSlots, e) + ","), t.model && (n += "model:{value:" + t.model.value + ",callback:" + t.model.callback + ",expression:" + t.model.expression + "},"), t.inlineTemplate) {
            var i = function(t, e) {
                var n = t.children[0];
                if (n && 1 === n.type) {
                    var r = Ln(n, e.options);
                    return "inlineTemplate:{render:function(){" + r.render + "},staticRenderFns:[" + r.staticRenderFns.map(function(t) {
                        return "function(){" + t + "}"
                    }).join(",") + "]}"
                }
            }(t, e);
            i && (n += i + ",")
        }
        return n = n.replace(/,$/, "") + "}", t.dynamicAttrs && (n = "_b(" + n + ',"' + t.tag + '",' + Kn(t.dynamicAttrs) + ")"), t.wrapData && (n = t.wrapData(n)), t.wrapListeners && (n = t.wrapListeners(n)), n
    }

    function Bn(t) {
        return 1 === t.type && ("slot" === t.tag || t.children.some(Bn))
    }

    function zn(t, e) {
        var n = t.attrsMap["slot-scope"];
        if (t.if && !t.ifProcessed && !n) return Un(t, e, zn, "null");
        if (t.for && !t.forProcessed) return Hn(t, e, zn);
        var r = t.slotScope === Ua ? "" : String(t.slotScope),
            o = "function(" + r + "){return " + ("template" === t.tag ? t.if && n ? "(" + t.if+")?" + (qn(t, e) || "undefined") + ":undefined" : qn(t, e) || "undefined" : Fn(t, e)) + "}",
            i = r ? "" : ",proxy:true";
        return "{key:" + (t.slotTarget || '"default"') + ",fn:" + o + i + "}"
    }

    function qn(t, e, n, r, o) {
        var i = t.children;
        if (i.length) {
            var a = i[0];
            if (1 === i.length && a.for && "template" !== a.tag && "slot" !== a.tag) {
                var s = n ? e.maybeComponent(a) ? ",1" : ",0" : "";
                return "" + (r || Fn)(a, e) + s
            }
            var c = n ? function(t, e) {
                    for (var n = 0, r = 0; r < t.length; r++) {
                        var o = t[r];
                        if (1 === o.type) {
                            if (Qn(o) || o.ifConditions && o.ifConditions.some(function(t) {
                                    return Qn(t.block)
                                })) {
                                n = 2;
                                break
                            }(e(o) || o.ifConditions && o.ifConditions.some(function(t) {
                                return e(t.block)
                            })) && (n = 1)
                        }
                    }
                    return n
                }(i, e.maybeComponent) : 0,
                u = o || Gn;
            return "[" + i.map(function(t) {
                return u(t, e)
            }).join(",") + "]" + (c ? "," + c : "")
        }
    }

    function Qn(t) {
        return void 0 !== t.for || "template" === t.tag || "slot" === t.tag
    }

    function Gn(t, e) {
        return 1 === t.type ? Fn(t, e) : 3 === t.type && t.isComment ? (r = t, "_e(" + JSON.stringify(r.text) + ")") : "_v(" + (2 === (n = t).type ? n.expression : Jn(JSON.stringify(n.text))) + ")";
        var n, r
    }

    function Kn(t) {
        for (var e = "", n = "", r = 0; r < t.length; r++) {
            var o = t[r],
                i = Jn(o.value);
            o.dynamic ? n += o.name + "," + i + "," : e += '"' + o.name + '":' + i + ","
        }
        return e = "{" + e.slice(0, -1) + "}", n ? "_d(" + e + ",[" + n.slice(0, -1) + "])" : e
    }

    function Jn(t) {
        return t.replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029")
    }

    function Wn(t, e) {
        try {
            return new Function(t)
        } catch (n) {
            return e.push({
                err: n,
                code: t
            }), g
        }
    }

    function Xn(t) {
        var e = Object.create(null);
        return function(n, r, o) {
            (r = v({}, r)).warn, delete r.warn;
            var i = r.delimiters ? String(r.delimiters) + n : n;
            if (e[i]) return e[i];
            var a = t(n, r),
                s = {},
                c = [];
            return s.render = Wn(a.render, c), s.staticRenderFns = a.staticRenderFns.map(function(t) {
                return Wn(t, c)
            }), e[i] = s
        }
    }

    function Zn(t) {
        return (ns = ns || document.createElement("div")).innerHTML = t ? '<a href="\n"/>' : '<div a="\n"/>', ns.innerHTML.indexOf("&#10;") > 0
    }
    var Yn, tr = Object.freeze({}),
        er = Object.prototype.toString,
        nr = l("slot,component", !0),
        rr = l("key,ref,slot,slot-scope,is"),
        or = Object.prototype.hasOwnProperty,
        ir = /-(\w)/g,
        ar = d(function(t) {
            return t.replace(ir, function(t, e) {
                return e ? e.toUpperCase() : ""
            })
        }),
        sr = d(function(t) {
            return t.charAt(0).toUpperCase() + t.slice(1)
        }),
        cr = /\B([A-Z])/g,
        ur = d(function(t) {
            return t.replace(cr, "-$1").toLowerCase()
        }),
        lr = Function.prototype.bind ? function(t, e) {
            return t.bind(e)
        } : function(t, e) {
            function n(n) {
                var r = arguments.length;
                return r ? r > 1 ? t.apply(e, arguments) : t.call(e, n) : t.call(e)
            }
            return n._length = t.length, n
        },
        fr = function(t, e, n) {
            return !1
        },
        pr = function(t) {
            return t
        },
        dr = "data-server-rendered",
        hr = ["component", "directive", "filter"],
        vr = ["beforeCreate", "created", "beforeMount", "mounted", "beforeUpdate", "updated", "beforeDestroy", "destroyed", "activated", "deactivated", "errorCaptured", "serverPrefetch"],
        mr = {
            optionMergeStrategies: Object.create(null),
            silent: !1,
            productionTip: !1,
            devtools: !1,
            performance: !1,
            errorHandler: null,
            warnHandler: null,
            ignoredElements: [],
            keyCodes: Object.create(null),
            isReservedTag: fr,
            isReservedAttr: fr,
            isUnknownElement: fr,
            getTagNamespace: g,
            parsePlatformTagName: pr,
            mustUseProp: fr,
            async: !0,
            _lifecycleHooks: vr
        },
        gr = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/,
        yr = new RegExp("[^" + gr.source + ".$_\\d]"),
        br = "__proto__" in {},
        _r = "undefined" != typeof window,
        wr = "undefined" != typeof WXEnvironment && !!WXEnvironment.platform,
        xr = wr && WXEnvironment.platform.toLowerCase(),
        Cr = _r && window.navigator.userAgent.toLowerCase(),
        Sr = Cr && /msie|trident/.test(Cr),
        $r = Cr && Cr.indexOf("msie 9.0") > 0,
        Ar = Cr && Cr.indexOf("edge/") > 0,
        Or = (Cr && Cr.indexOf("android"), Cr && /iphone|ipad|ipod|ios/.test(Cr) || "ios" === xr),
        kr = (Cr && /chrome\/\d+/.test(Cr), Cr && /phantomjs/.test(Cr), Cr && Cr.match(/firefox\/(\d+)/)),
        Er = {}.watch,
        jr = !1;
    if (_r) try {
        var Nr = {};
        Object.defineProperty(Nr, "passive", {
            get: function() {
                jr = !0
            }
        }), window.addEventListener("test-passive", null, Nr)
    } catch (tr) {}
    var Tr, Pr = function() {
            return void 0 === Yn && (Yn = !_r && !wr && "undefined" != typeof global && global.process && "server" === global.process.env.VUE_ENV), Yn
        },
        Mr = _r && window.__VUE_DEVTOOLS_GLOBAL_HOOK__,
        Dr = "undefined" != typeof Symbol && x(Symbol) && "undefined" != typeof Reflect && x(Reflect.ownKeys);
    Tr = "undefined" != typeof Set && x(Set) ? Set : function() {
        function t() {
            this.set = Object.create(null)
        }
        return t.prototype.has = function(t) {
            return !0 === this.set[t]
        }, t.prototype.add = function(t) {
            this.set[t] = !0
        }, t.prototype.clear = function() {
            this.set = Object.create(null)
        }, t
    }();
    var Lr = g,
        Fr = 0,
        Rr = function() {
            this.id = Fr++, this.subs = []
        };
    Rr.prototype.addSub = function(t) {
        this.subs.push(t)
    }, Rr.prototype.removeSub = function(t) {
        f(this.subs, t)
    }, Rr.prototype.depend = function() {
        Rr.target && Rr.target.addDep(this)
    }, Rr.prototype.notify = function() {
        for (var t = this.subs.slice(), e = 0, n = t.length; e < n; e++) t[e].update()
    }, Rr.target = null;
    var Ir = [],
        Ur = function(t, e, n, r, o, i, a, s) {
            this.tag = t, this.data = e, this.children = n, this.text = r, this.elm = o, this.ns = void 0, this.context = i, this.fnContext = void 0, this.fnOptions = void 0, this.fnScopeId = void 0, this.key = e && e.key, this.componentOptions = a, this.componentInstance = void 0, this.parent = void 0, this.raw = !1, this.isStatic = !1, this.isRootInsert = !0, this.isComment = !1, this.isCloned = !1, this.isOnce = !1, this.asyncFactory = s, this.asyncMeta = void 0, this.isAsyncPlaceholder = !1
        },
        Hr = {
            child: {
                configurable: !0
            }
        };
    Hr.child.get = function() {
        return this.componentInstance
    }, Object.defineProperties(Ur.prototype, Hr);
    var Vr = function(t) {
            void 0 === t && (t = "");
            var e = new Ur;
            return e.text = t, e.isComment = !0, e
        },
        Br = Array.prototype,
        zr = Object.create(Br);
    ["push", "pop", "shift", "unshift", "splice", "sort", "reverse"].forEach(function(t) {
        var e = Br[t];
        w(zr, t, function() {
            for (var n = [], r = arguments.length; r--;) n[r] = arguments[r];
            var o, i = e.apply(this, n),
                a = this.__ob__;
            switch (t) {
                case "push":
                case "unshift":
                    o = n;
                    break;
                case "splice":
                    o = n.slice(2)
            }
            return o && a.observeArray(o), a.dep.notify(), i
        })
    });
    var qr = Object.getOwnPropertyNames(zr),
        Qr = !0,
        Gr = function(t) {
            var e;
            this.value = t, this.dep = new Rr, this.vmCount = 0, w(t, "__ob__", this), Array.isArray(t) ? (br ? (e = zr, t.__proto__ = e) : function(t, e, n) {
                for (var r = 0, o = n.length; r < o; r++) {
                    var i = n[r];
                    w(t, i, e[i])
                }
            }(t, zr, qr), this.observeArray(t)) : this.walk(t)
        };
    Gr.prototype.walk = function(t) {
        for (var e = Object.keys(t), n = 0; n < e.length; n++) E(t, e[n])
    }, Gr.prototype.observeArray = function(t) {
        for (var e = 0, n = t.length; e < n; e++) k(t[e])
    };
    var Kr = mr.optionMergeStrategies;
    Kr.data = function(t, e, n) {
        return n ? P(t, e, n) : e && "function" != typeof e ? t : P(t, e)
    }, vr.forEach(function(t) {
        Kr[t] = M
    }), hr.forEach(function(t) {
        Kr[t + "s"] = D
    }), Kr.watch = function(t, e, n, r) {
        if (t === Er && (t = void 0), e === Er && (e = void 0), !e) return Object.create(t || null);
        if (!t) return e;
        var o = {};
        for (var i in v(o, t), e) {
            var a = o[i],
                s = e[i];
            a && !Array.isArray(a) && (a = [a]), o[i] = a ? a.concat(s) : Array.isArray(s) ? s : [s]
        }
        return o
    }, Kr.props = Kr.methods = Kr.inject = Kr.computed = function(t, e, n, r) {
        if (!t) return e;
        var o = Object.create(null);
        return v(o, t), e && v(o, e), o
    }, Kr.provide = P;
    var Jr, Wr = function(t, e) {
            return void 0 === e ? t : e
        },
        Xr = !1,
        Zr = [],
        Yr = !1;
    if ("undefined" != typeof Promise && x(Promise)) {
        var to = Promise.resolve();
        Jr = function() {
            to.then(Q), Or && setTimeout(g)
        }, Xr = !0
    } else if (Sr || "undefined" == typeof MutationObserver || !x(MutationObserver) && "[object MutationObserverConstructor]" !== MutationObserver.toString()) Jr = "undefined" != typeof setImmediate && x(setImmediate) ? function() {
        setImmediate(Q)
    } : function() {
        setTimeout(Q, 0)
    };
    else {
        var eo = 1,
            no = new MutationObserver(Q),
            ro = document.createTextNode(String(eo));
        no.observe(ro, {
            characterData: !0
        }), Jr = function() {
            eo = (eo + 1) % 2, ro.data = String(eo)
        }, Xr = !0
    }
    var oo = new Tr,
        io = d(function(t) {
            var e = "&" === t.charAt(0),
                n = "~" === (t = e ? t.slice(1) : t).charAt(0),
                r = "!" === (t = n ? t.slice(1) : t).charAt(0);
            return {
                name: t = r ? t.slice(1) : t,
                once: n,
                capture: r,
                passive: e
            }
        });
    wt(xt.prototype);
    var ao, so = {
            init: function(t, n) {
                if (t.componentInstance && !t.componentInstance._isDestroyed && t.data.keepAlive) {
                    var r = t;
                    so.prepatch(r, r)
                } else(t.componentInstance = function(t, n) {
                    var r = {
                            _isComponent: !0,
                            _parentVnode: t,
                            parent: n
                        },
                        o = t.data.inlineTemplate;
                    return e(o) && (r.render = o.render, r.staticRenderFns = o.staticRenderFns), new t.componentOptions.Ctor(r)
                }(t, po)).$mount(n ? t.elm : void 0, n)
            },
            prepatch: function(t, e) {
                var n = e.componentOptions;
                ! function(t, e, n, r, o) {
                    var i = r.data.scopedSlots,
                        a = t.$scopedSlots,
                        s = !!(i && !i.$stable || a !== tr && !a.$stable || i && t.$scopedSlots.$key !== i.$key),
                        c = !!(o || t.$options._renderChildren || s);
                    if (t.$options._parentVnode = r, t.$vnode = r, t._vnode && (t._vnode.parent = r), t.$options._renderChildren = o, t.$attrs = r.data.attrs || tr, t.$listeners = n || tr, e && t.$options.props) {
                        O(!1);
                        for (var u = t._props, l = t.$options._propKeys || [], f = 0; f < l.length; f++) {
                            var p = l[f],
                                d = t.$options.props;
                            u[p] = R(p, d, e, t)
                        }
                        O(!0), t.$options.propsData = e
                    }
                    n = n || tr;
                    var h = t.$options._parentListeners;
                    t.$options._parentListeners = n, Mt(t, n, h), c && (t.$slots = nt(o, r.context), t.$forceUpdate())
                }(e.componentInstance = t.componentInstance, n.propsData, n.listeners, e, n.children)
            },
            insert: function(t) {
                var e, n = t.context,
                    r = t.componentInstance;
                r._isMounted || (r._isMounted = !0, Rt(r, "mounted")), t.data.keepAlive && (n._isMounted ? ((e = r)._inactive = !1, vo.push(e)) : Ft(r, !0))
            },
            destroy: function(t) {
                var e = t.componentInstance;
                e._isDestroyed || (t.data.keepAlive ? function t(e, n) {
                    if (!(n && (e._directInactive = !0, Lt(e)) || e._inactive)) {
                        e._inactive = !0;
                        for (var r = 0; r < e.$children.length; r++) t(e.$children[r]);
                        Rt(e, "deactivated")
                    }
                }(e, !0) : e.$destroy())
            }
        },
        co = Object.keys(so),
        uo = 1,
        lo = 2,
        fo = null,
        po = null,
        ho = [],
        vo = [],
        mo = {},
        go = !1,
        yo = !1,
        bo = 0,
        _o = 0,
        wo = Date.now;
    if (_r && !Sr) {
        var xo = window.performance;
        xo && "function" == typeof xo.now && wo() > document.createEvent("Event").timeStamp && (wo = function() {
            return xo.now()
        })
    }
    var Co = 0,
        So = function(t, e, n, r, o) {
            this.vm = t, o && (t._watcher = this), t._watchers.push(this), r ? (this.deep = !!r.deep, this.user = !!r.user, this.lazy = !!r.lazy, this.sync = !!r.sync, this.before = r.before) : this.deep = this.user = this.lazy = this.sync = !1, this.cb = n, this.id = ++Co, this.active = !0, this.dirty = this.lazy, this.deps = [], this.newDeps = [], this.depIds = new Tr, this.newDepIds = new Tr, this.expression = "", "function" == typeof e ? this.getter = e : (this.getter = function(t) {
                if (!yr.test(t)) {
                    var e = t.split(".");
                    return function(t) {
                        for (var n = 0; n < e.length; n++) {
                            if (!t) return;
                            t = t[e[n]]
                        }
                        return t
                    }
                }
            }(e), this.getter || (this.getter = g)), this.value = this.lazy ? void 0 : this.get()
        };
    So.prototype.get = function() {
        var t;
        C(this);
        var e = this.vm;
        try {
            t = this.getter.call(e, e)
        } catch (t) {
            if (!this.user) throw t;
            V(t, e, 'getter for watcher "' + this.expression + '"')
        } finally {
            this.deep && K(t), S(), this.cleanupDeps()
        }
        return t
    }, So.prototype.addDep = function(t) {
        var e = t.id;
        this.newDepIds.has(e) || (this.newDepIds.add(e), this.newDeps.push(t), this.depIds.has(e) || t.addSub(this))
    }, So.prototype.cleanupDeps = function() {
        for (var t = this.deps.length; t--;) {
            var e = this.deps[t];
            this.newDepIds.has(e.id) || e.removeSub(this)
        }
        var n = this.depIds;
        this.depIds = this.newDepIds, this.newDepIds = n, this.newDepIds.clear(), n = this.deps, this.deps = this.newDeps, this.newDeps = n, this.newDeps.length = 0
    }, So.prototype.update = function() {
        this.lazy ? this.dirty = !0 : this.sync ? this.run() : function(t) {
            var e = t.id;
            if (null == mo[e]) {
                if (mo[e] = !0, yo) {
                    for (var n = ho.length - 1; n > bo && ho[n].id > t.id;) n--;
                    ho.splice(n + 1, 0, t)
                } else ho.push(t);
                go || (go = !0, G(It))
            }
        }(this)
    }, So.prototype.run = function() {
        if (this.active) {
            var t = this.get();
            if (t !== this.value || o(t) || this.deep) {
                var e = this.value;
                if (this.value = t, this.user) try {
                    this.cb.call(this.vm, t, e)
                } catch (t) {
                    V(t, this.vm, 'callback for watcher "' + this.expression + '"')
                } else this.cb.call(this.vm, t, e)
            }
        }
    }, So.prototype.evaluate = function() {
        this.value = this.get(), this.dirty = !1
    }, So.prototype.depend = function() {
        for (var t = this.deps.length; t--;) this.deps[t].depend()
    }, So.prototype.teardown = function() {
        if (this.active) {
            this.vm._isBeingDestroyed || f(this.vm._watchers, this);
            for (var t = this.deps.length; t--;) this.deps[t].removeSub(this);
            this.active = !1
        }
    };
    var $o = {
            enumerable: !0,
            configurable: !0,
            get: g,
            set: g
        },
        Ao = {
            lazy: !0
        },
        Oo = 0;
    ! function(t) {
        t.prototype._init = function(t) {
            var e = this;
            e._uid = Oo++, e._isVue = !0, t && t._isComponent ? function(t, e) {
                    var n = t.$options = Object.create(t.constructor.options),
                        r = e._parentVnode;
                    n.parent = e.parent, n._parentVnode = r;
                    var o = r.componentOptions;
                    n.propsData = o.propsData, n._parentListeners = o.listeners, n._renderChildren = o.children, n._componentTag = o.tag, e.render && (n.render = e.render, n.staticRenderFns = e.staticRenderFns)
                }(e, t) : e.$options = L(Qt(e.constructor), t || {}, e), e._renderProxy = e, e._self = e,
                function(t) {
                    var e = t.$options,
                        n = e.parent;
                    if (n && !e.abstract) {
                        for (; n.$options.abstract && n.$parent;) n = n.$parent;
                        n.$children.push(t)
                    }
                    t.$parent = n, t.$root = n ? n.$root : t, t.$children = [], t.$refs = {}, t._watcher = null, t._inactive = null, t._directInactive = !1, t._isMounted = !1, t._isDestroyed = !1, t._isBeingDestroyed = !1
                }(e),
                function(t) {
                    t._events = Object.create(null), t._hasHookEvent = !1;
                    var e = t.$options._parentListeners;
                    e && Mt(t, e)
                }(e),
                function(t) {
                    t._vnode = null, t._staticTrees = null;
                    var e = t.$options,
                        n = t.$vnode = e._parentVnode,
                        r = n && n.context;
                    t.$slots = nt(e._renderChildren, r), t.$scopedSlots = tr, t._c = function(e, n, r, o) {
                        return Ot(t, e, n, r, o, !1)
                    }, t.$createElement = function(e, n, r, o) {
                        return Ot(t, e, n, r, o, !0)
                    };
                    var o = n && n.data;
                    E(t, "$attrs", o && o.attrs || tr, null, !0), E(t, "$listeners", e._parentListeners || tr, null, !0)
                }(e), Rt(e, "beforeCreate"),
                function(t) {
                    var e = et(t.$options.inject, t);
                    e && (O(!1), Object.keys(e).forEach(function(n) {
                        E(t, n, e[n])
                    }), O(!0))
                }(e), Ht(e),
                function(t) {
                    var e = t.$options.provide;
                    e && (t._provided = "function" == typeof e ? e.call(t) : e)
                }(e), Rt(e, "created"), e.$options.el && e.$mount(e.$options.el)
        }
    }(Gt),
    function(t) {
        var e = {
                get: function() {
                    return this._data
                }
            },
            n = {
                get: function() {
                    return this._props
                }
            };
        Object.defineProperty(t.prototype, "$data", e), Object.defineProperty(t.prototype, "$props", n), t.prototype.$set = j, t.prototype.$delete = N, t.prototype.$watch = function(t, e, n) {
            if (i(e)) return qt(this, t, e, n);
            (n = n || {}).user = !0;
            var r = new So(this, t, e, n);
            if (n.immediate) try {
                e.call(this, r.value)
            } catch (t) {
                V(t, this, 'callback for immediate watcher "' + r.expression + '"')
            }
            return function() {
                r.teardown()
            }
        }
    }(Gt),
    function(t) {
        var e = /^hook:/;
        t.prototype.$on = function(t, n) {
            var r = this;
            if (Array.isArray(t))
                for (var o = 0, i = t.length; o < i; o++) r.$on(t[o], n);
            else(r._events[t] || (r._events[t] = [])).push(n), e.test(t) && (r._hasHookEvent = !0);
            return r
        }, t.prototype.$once = function(t, e) {
            function n() {
                r.$off(t, n), e.apply(r, arguments)
            }
            var r = this;
            return n.fn = e, r.$on(t, n), r
        }, t.prototype.$off = function(t, e) {
            var n = this;
            if (!arguments.length) return n._events = Object.create(null), n;
            if (Array.isArray(t)) {
                for (var r = 0, o = t.length; r < o; r++) n.$off(t[r], e);
                return n
            }
            var i, a = n._events[t];
            if (!a) return n;
            if (!e) return n._events[t] = null, n;
            for (var s = a.length; s--;)
                if ((i = a[s]) === e || i.fn === e) {
                    a.splice(s, 1);
                    break
                }
            return n
        }, t.prototype.$emit = function(t) {
            var e = this._events[t];
            if (e) {
                e = e.length > 1 ? h(e) : e;
                for (var n = h(arguments, 1), r = 'event handler for "' + t + '"', o = 0, i = e.length; o < i; o++) B(e[o], this, n, this, r)
            }
            return this
        }
    }(Gt),
    function(t) {
        t.prototype._update = function(t, e) {
            var n = this,
                r = n.$el,
                o = n._vnode,
                i = Dt(n);
            n._vnode = t, n.$el = o ? n.__patch__(o, t) : n.__patch__(n.$el, t, e, !1), i(), r && (r.__vue__ = null), n.$el && (n.$el.__vue__ = n), n.$vnode && n.$parent && n.$vnode === n.$parent._vnode && (n.$parent.$el = n.$el)
        }, t.prototype.$forceUpdate = function() {
            this._watcher && this._watcher.update()
        }, t.prototype.$destroy = function() {
            var t = this;
            if (!t._isBeingDestroyed) {
                Rt(t, "beforeDestroy"), t._isBeingDestroyed = !0;
                var e = t.$parent;
                !e || e._isBeingDestroyed || t.$options.abstract || f(e.$children, t), t._watcher && t._watcher.teardown();
                for (var n = t._watchers.length; n--;) t._watchers[n].teardown();
                t._data.__ob__ && t._data.__ob__.vmCount--, t._isDestroyed = !0, t.__patch__(t._vnode, null), Rt(t, "destroyed"), t.$off(), t.$el && (t.$el.__vue__ = null), t.$vnode && (t.$vnode.parent = null)
            }
        }
    }(Gt),
    function(t) {
        wt(t.prototype), t.prototype.$nextTick = function(t) {
            return G(t, this)
        }, t.prototype._render = function() {
            var t, e = this,
                n = e.$options,
                r = n.render,
                o = n._parentVnode;
            o && (e.$scopedSlots = ot(o.data.scopedSlots, e.$slots, e.$scopedSlots)), e.$vnode = o;
            try {
                fo = e, t = r.call(e._renderProxy, e.$createElement)
            } catch (n) {
                V(n, e, "render"), t = e._vnode
            } finally {
                fo = null
            }
            return Array.isArray(t) && 1 === t.length && (t = t[0]), t instanceof Ur || (t = Vr()), t.parent = o, t
        }
    }(Gt);
    var ko = [String, RegExp, Array],
        Eo = {
            KeepAlive: {
                name: "keep-alive",
                abstract: !0,
                props: {
                    include: ko,
                    exclude: ko,
                    max: [String, Number]
                },
                created: function() {
                    this.cache = Object.create(null), this.keys = []
                },
                destroyed: function() {
                    for (var t in this.cache) Zt(this.cache, t, this.keys)
                },
                mounted: function() {
                    var t = this;
                    this.$watch("include", function(e) {
                        Xt(t, function(t) {
                            return Wt(e, t)
                        })
                    }), this.$watch("exclude", function(e) {
                        Xt(t, function(t) {
                            return !Wt(e, t)
                        })
                    })
                },
                render: function() {
                    var t = this.$slots.default,
                        e = jt(t),
                        n = e && e.componentOptions;
                    if (n) {
                        var r = Jt(n),
                            o = this.include,
                            i = this.exclude;
                        if (o && (!r || !Wt(o, r)) || i && r && Wt(i, r)) return e;
                        var a = this.cache,
                            s = this.keys,
                            c = null == e.key ? n.Ctor.cid + (n.tag ? "::" + n.tag : "") : e.key;
                        a[c] ? (e.componentInstance = a[c].componentInstance, f(s, c), s.push(c)) : (a[c] = e, s.push(c), this.max && s.length > parseInt(this.max) && Zt(a, s[0], s, this._vnode)), e.data.keepAlive = !0
                    }
                    return e || t && t[0]
                }
            }
        };
    ! function(t) {
        var e = {
            get: function() {
                return mr
            }
        };
        Object.defineProperty(t, "config", e), t.util = {
                warn: Lr,
                extend: v,
                mergeOptions: L,
                defineReactive: E
            }, t.set = j, t.delete = N, t.nextTick = G, t.observable = function(t) {
                return k(t), t
            }, t.options = Object.create(null), hr.forEach(function(e) {
                t.options[e + "s"] = Object.create(null)
            }), t.options._base = t, v(t.options.components, Eo),
            function(t) {
                t.use = function(t) {
                    var e = this._installedPlugins || (this._installedPlugins = []);
                    if (e.indexOf(t) > -1) return this;
                    var n = h(arguments, 1);
                    return n.unshift(this), "function" == typeof t.install ? t.install.apply(t, n) : "function" == typeof t && t.apply(null, n), e.push(t), this
                }
            }(t),
            function(t) {
                t.mixin = function(t) {
                    return this.options = L(this.options, t), this
                }
            }(t), Kt(t),
            function(t) {
                hr.forEach(function(e) {
                    t[e] = function(t, n) {
                        return n ? ("component" === e && i(n) && (n.name = n.name || t, n = this.options._base.extend(n)), "directive" === e && "function" == typeof n && (n = {
                            bind: n,
                            update: n
                        }), this.options[e + "s"][t] = n, n) : this.options[e + "s"][t]
                    }
                })
            }(t)
    }(Gt), Object.defineProperty(Gt.prototype, "$isServer", {
        get: Pr
    }), Object.defineProperty(Gt.prototype, "$ssrContext", {
        get: function() {
            return this.$vnode && this.$vnode.ssrContext
        }
    }), Object.defineProperty(Gt, "FunctionalRenderContext", {
        value: xt
    }), Gt.version = "2.6.10";
    var jo, No, To, Po, Mo, Do, Lo, Fo, Ro, Io = l("style,class"),
        Uo = l("input,textarea,option,select,progress"),
        Ho = function(t, e, n) {
            return "value" === n && Uo(t) && "button" !== e || "selected" === n && "option" === t || "checked" === n && "input" === t || "muted" === n && "video" === t
        },
        Vo = l("contenteditable,draggable,spellcheck"),
        Bo = l("events,caret,typing,plaintext-only"),
        zo = function(t, e) {
            return Jo(e) || "false" === e ? "false" : "contenteditable" === t && Bo(e) ? e : "true"
        },
        qo = l("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),
        Qo = "http://www.w3.org/1999/xlink",
        Go = function(t) {
            return ":" === t.charAt(5) && "xlink" === t.slice(0, 5)
        },
        Ko = function(t) {
            return Go(t) ? t.slice(6, t.length) : ""
        },
        Jo = function(t) {
            return null == t || !1 === t
        },
        Wo = {
            svg: "http://www.w3.org/2000/svg",
            math: "http://www.w3.org/1998/Math/MathML"
        },
        Xo = l("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),
        Zo = l("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view", !0),
        Yo = function(t) {
            return Xo(t) || Zo(t)
        },
        ti = Object.create(null),
        ei = l("text,number,password,search,email,tel,url"),
        ni = Object.freeze({
            createElement: function(t, e) {
                var n = document.createElement(t);
                return "select" !== t ? n : (e.data && e.data.attrs && void 0 !== e.data.attrs.multiple && n.setAttribute("multiple", "multiple"), n)
            },
            createElementNS: function(t, e) {
                return document.createElementNS(Wo[t], e)
            },
            createTextNode: function(t) {
                return document.createTextNode(t)
            },
            createComment: function(t) {
                return document.createComment(t)
            },
            insertBefore: function(t, e, n) {
                t.insertBefore(e, n)
            },
            removeChild: function(t, e) {
                t.removeChild(e)
            },
            appendChild: function(t, e) {
                t.appendChild(e)
            },
            parentNode: function(t) {
                return t.parentNode
            },
            nextSibling: function(t) {
                return t.nextSibling
            },
            tagName: function(t) {
                return t.tagName
            },
            setTextContent: function(t, e) {
                t.textContent = e
            },
            setStyleScope: function(t, e) {
                t.setAttribute(e, "")
            }
        }),
        ri = {
            create: function(t, e) {
                ie(e)
            },
            update: function(t, e) {
                t.data.ref !== e.data.ref && (ie(t, !0), ie(e))
            },
            destroy: function(t) {
                ie(t, !0)
            }
        },
        oi = new Ur("", {}, []),
        ii = ["create", "activate", "update", "remove", "destroy"],
        ai = {
            create: ce,
            update: ce,
            destroy: function(t) {
                ce(t, oi)
            }
        },
        si = Object.create(null),
        ci = [ri, ai],
        ui = {
            create: pe,
            update: pe
        },
        li = {
            create: ve,
            update: ve
        },
        fi = /[\w).+\-_$\]]/,
        pi = "__r",
        di = "__c",
        hi = Xr && !(kr && Number(kr[1]) <= 53),
        vi = {
            create: Ue,
            update: Ue
        },
        mi = {
            create: He,
            update: He
        },
        gi = d(function(t) {
            var e = {},
                n = /:(.+)/;
            return t.split(/;(?![^(]*\))/g).forEach(function(t) {
                if (t) {
                    var r = t.split(n);
                    r.length > 1 && (e[r[0].trim()] = r[1].trim())
                }
            }), e
        }),
        yi = /^--/,
        bi = /\s*!important$/,
        _i = function(t, e, n) {
            if (yi.test(e)) t.style.setProperty(e, n);
            else if (bi.test(n)) t.style.setProperty(ur(e), n.replace(bi, ""), "important");
            else {
                var r = xi(e);
                if (Array.isArray(n))
                    for (var o = 0, i = n.length; o < i; o++) t.style[r] = n[o];
                else t.style[r] = n
            }
        },
        wi = ["Webkit", "Moz", "ms"],
        xi = d(function(t) {
            if (Ro = Ro || document.createElement("div").style, "filter" !== (t = ar(t)) && t in Ro) return t;
            for (var e = t.charAt(0).toUpperCase() + t.slice(1), n = 0; n < wi.length; n++) {
                var r = wi[n] + e;
                if (r in Ro) return r
            }
        }),
        Ci = {
            create: qe,
            update: qe
        },
        Si = /\s+/,
        $i = d(function(t) {
            return {
                enterClass: t + "-enter",
                enterToClass: t + "-enter-to",
                enterActiveClass: t + "-enter-active",
                leaveClass: t + "-leave",
                leaveToClass: t + "-leave-to",
                leaveActiveClass: t + "-leave-active"
            }
        }),
        Ai = _r && !$r,
        Oi = "transition",
        ki = "animation",
        Ei = "transition",
        ji = "transitionend",
        Ni = "animation",
        Ti = "animationend";
    Ai && (void 0 === window.ontransitionend && void 0 !== window.onwebkittransitionend && (Ei = "WebkitTransition", ji = "webkitTransitionEnd"), void 0 === window.onanimationend && void 0 !== window.onwebkitanimationend && (Ni = "WebkitAnimation", Ti = "webkitAnimationEnd"));
    var Pi = _r ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout : function(t) {
            return t()
        },
        Mi = /\b(transform|all)(,|$)/,
        Di = function(o) {
            function i(t) {
                var n = O.parentNode(t);
                e(n) && O.removeChild(n, t)
            }

            function a(t, r, o, i, a, l, f) {
                if (e(t.elm) && e(l) && (t = l[f] = A(t)), t.isRootInsert = !a, ! function(t, r, o, i) {
                        var a = t.data;
                        if (e(a)) {
                            var u = e(t.componentInstance) && a.keepAlive;
                            if (e(a = a.hook) && e(a = a.init) && a(t, !1), e(t.componentInstance)) return s(t, r), c(o, t.elm, i), n(u) && function(t, n, r, o) {
                                for (var i, a = t; a.componentInstance;)
                                    if (a = a.componentInstance._vnode, e(i = a.data) && e(i = i.transition)) {
                                        for (i = 0; i < S.activate.length; ++i) S.activate[i](oi, a);
                                        n.push(a);
                                        break
                                    }
                                c(r, t.elm, o)
                            }(t, r, o, i), !0
                        }
                    }(t, r, o, i)) {
                    var h = t.data,
                        v = t.children,
                        m = t.tag;
                    e(m) ? (t.elm = t.ns ? O.createElementNS(t.ns, m) : O.createElement(m, t), d(t), u(t, v, r), e(h) && p(t, r), c(o, t.elm, i)) : n(t.isComment) ? (t.elm = O.createComment(t.text), c(o, t.elm, i)) : (t.elm = O.createTextNode(t.text), c(o, t.elm, i))
                }
            }

            function s(t, n) {
                e(t.data.pendingInsert) && (n.push.apply(n, t.data.pendingInsert), t.data.pendingInsert = null), t.elm = t.componentInstance.$el, f(t) ? (p(t, n), d(t)) : (ie(t), n.push(t))
            }

            function c(t, n, r) {
                e(t) && (e(r) ? O.parentNode(r) === t && O.insertBefore(t, n, r) : O.appendChild(t, n))
            }

            function u(t, e, n) {
                if (Array.isArray(e))
                    for (var o = 0; o < e.length; ++o) a(e[o], n, t.elm, null, !0, e, o);
                else r(t.text) && O.appendChild(t.elm, O.createTextNode(String(t.text)))
            }

            function f(t) {
                for (; t.componentInstance;) t = t.componentInstance._vnode;
                return e(t.tag)
            }

            function p(t, n) {
                for (var r = 0; r < S.create.length; ++r) S.create[r](oi, t);
                e(x = t.data.hook) && (e(x.create) && x.create(oi, t), e(x.insert) && n.push(t))
            }

            function d(t) {
                var n;
                if (e(n = t.fnScopeId)) O.setStyleScope(t.elm, n);
                else
                    for (var r = t; r;) e(n = r.context) && e(n = n.$options._scopeId) && O.setStyleScope(t.elm, n), r = r.parent;
                e(n = po) && n !== t.context && n !== t.fnContext && e(n = n.$options._scopeId) && O.setStyleScope(t.elm, n)
            }

            function h(t, e, n, r, o, i) {
                for (; r <= o; ++r) a(n[r], i, t, e, !1, n, r)
            }

            function v(t) {
                var n, r, o = t.data;
                if (e(o))
                    for (e(n = o.hook) && e(n = n.destroy) && n(t), n = 0; n < S.destroy.length; ++n) S.destroy[n](t);
                if (e(n = t.children))
                    for (r = 0; r < t.children.length; ++r) v(t.children[r])
            }

            function m(t, n, r, o) {
                for (; r <= o; ++r) {
                    var a = n[r];
                    e(a) && (e(a.tag) ? (g(a), v(a)) : i(a.elm))
                }
            }

            function g(t, n) {
                if (e(n) || e(t.data)) {
                    var r, o = S.remove.length + 1;
                    for (e(n) ? n.listeners += o : n = function(t, e) {
                            function n() {
                                0 == --n.listeners && i(t)
                            }
                            return n.listeners = e, n
                        }(t.elm, o), e(r = t.componentInstance) && e(r = r._vnode) && e(r.data) && g(r, n), r = 0; r < S.remove.length; ++r) S.remove[r](t, n);
                    e(r = t.data.hook) && e(r = r.remove) ? r(t, n) : n()
                } else i(t.elm)
            }

            function y(t, n, r, o) {
                for (var i = r; i < o; i++) {
                    var a = n[i];
                    if (e(a) && ae(t, a)) return i
                }
            }

            function b(r, o, i, s, c, u) {
                if (r !== o) {
                    e(o.elm) && e(s) && (o = s[c] = A(o));
                    var l = o.elm = r.elm;
                    if (n(r.isAsyncPlaceholder)) e(o.asyncFactory.resolved) ? w(r.elm, o, i) : o.isAsyncPlaceholder = !0;
                    else if (n(o.isStatic) && n(r.isStatic) && o.key === r.key && (n(o.isCloned) || n(o.isOnce))) o.componentInstance = r.componentInstance;
                    else {
                        var p, d = o.data;
                        e(d) && e(p = d.hook) && e(p = p.prepatch) && p(r, o);
                        var v = r.children,
                            g = o.children;
                        if (e(d) && f(o)) {
                            for (p = 0; p < S.update.length; ++p) S.update[p](r, o);
                            e(p = d.hook) && e(p = p.update) && p(r, o)
                        }
                        t(o.text) ? e(v) && e(g) ? v !== g && function(n, r, o, i, s) {
                            for (var c, u, l, f = 0, p = 0, d = r.length - 1, v = r[0], g = r[d], _ = o.length - 1, w = o[0], x = o[_], C = !s; f <= d && p <= _;) t(v) ? v = r[++f] : t(g) ? g = r[--d] : ae(v, w) ? (b(v, w, i, o, p), v = r[++f], w = o[++p]) : ae(g, x) ? (b(g, x, i, o, _), g = r[--d], x = o[--_]) : ae(v, x) ? (b(v, x, i, o, _), C && O.insertBefore(n, v.elm, O.nextSibling(g.elm)), v = r[++f], x = o[--_]) : ae(g, w) ? (b(g, w, i, o, p), C && O.insertBefore(n, g.elm, v.elm), g = r[--d], w = o[++p]) : (t(c) && (c = se(r, f, d)), t(u = e(w.key) ? c[w.key] : y(w, r, f, d)) ? a(w, i, n, v.elm, !1, o, p) : ae(l = r[u], w) ? (b(l, w, i, o, p), r[u] = void 0, C && O.insertBefore(n, l.elm, v.elm)) : a(w, i, n, v.elm, !1, o, p), w = o[++p]);
                            f > d ? h(n, t(o[_ + 1]) ? null : o[_ + 1].elm, o, p, _, i) : p > _ && m(0, r, f, d)
                        }(l, v, g, i, u) : e(g) ? (e(r.text) && O.setTextContent(l, ""), h(l, null, g, 0, g.length - 1, i)) : e(v) ? m(0, v, 0, v.length - 1) : e(r.text) && O.setTextContent(l, "") : r.text !== o.text && O.setTextContent(l, o.text), e(d) && e(p = d.hook) && e(p = p.postpatch) && p(r, o)
                    }
                }
            }

            function _(t, r, o) {
                if (n(o) && e(t.parent)) t.parent.data.pendingInsert = r;
                else
                    for (var i = 0; i < r.length; ++i) r[i].data.hook.insert(r[i])
            }

            function w(t, r, o, i) {
                var a, c = r.tag,
                    l = r.data,
                    f = r.children;
                if (i = i || l && l.pre, r.elm = t, n(r.isComment) && e(r.asyncFactory)) return r.isAsyncPlaceholder = !0, !0;
                if (e(l) && (e(a = l.hook) && e(a = a.init) && a(r, !0), e(a = r.componentInstance))) return s(r, o), !0;
                if (e(c)) {
                    if (e(f))
                        if (t.hasChildNodes())
                            if (e(a = l) && e(a = a.domProps) && e(a = a.innerHTML)) {
                                if (a !== t.innerHTML) return !1
                            } else {
                                for (var d = !0, h = t.firstChild, v = 0; v < f.length; v++) {
                                    if (!h || !w(h, f[v], o, i)) {
                                        d = !1;
                                        break
                                    }
                                    h = h.nextSibling
                                }
                                if (!d || h) return !1
                            }
                    else u(r, f, o);
                    if (e(l)) {
                        var m = !1;
                        for (var g in l)
                            if (!k(g)) {
                                m = !0, p(r, o);
                                break
                            }!m && l.class && K(l.class)
                    }
                } else t.data !== r.text && (t.data = r.text);
                return !0
            }
            var x, C, S = {},
                $ = o.modules,
                O = o.nodeOps;
            for (x = 0; x < ii.length; ++x)
                for (S[ii[x]] = [], C = 0; C < $.length; ++C) e($[C][ii[x]]) && S[ii[x]].push($[C][ii[x]]);
            var k = l("attrs,class,staticClass,staticStyle,key");
            return function(r, o, i, s) {
                if (!t(o)) {
                    var c, u = !1,
                        l = [];
                    if (t(r)) u = !0, a(o, l);
                    else {
                        var p = e(r.nodeType);
                        if (!p && ae(r, o)) b(r, o, l, null, null, s);
                        else {
                            if (p) {
                                if (1 === r.nodeType && r.hasAttribute(dr) && (r.removeAttribute(dr), i = !0), n(i) && w(r, o, l)) return _(o, l, !0), r;
                                c = r, r = new Ur(O.tagName(c).toLowerCase(), {}, [], void 0, c)
                            }
                            var d = r.elm,
                                h = O.parentNode(d);
                            if (a(o, l, d._leaveCb ? null : h, O.nextSibling(d)), e(o.parent))
                                for (var g = o.parent, y = f(o); g;) {
                                    for (var x = 0; x < S.destroy.length; ++x) S.destroy[x](g);
                                    if (g.elm = o.elm, y) {
                                        for (var C = 0; C < S.create.length; ++C) S.create[C](oi, g);
                                        var $ = g.data.hook.insert;
                                        if ($.merged)
                                            for (var A = 1; A < $.fns.length; A++) $.fns[A]()
                                    } else ie(g);
                                    g = g.parent
                                }
                            e(h) ? m(0, [r], 0, 0) : e(r.tag) && v(r)
                        }
                    }
                    return _(o, l, u), o.elm
                }
                e(r) && v(r)
            }
        }({
            nodeOps: ni,
            modules: [ui, li, vi, mi, Ci, _r ? {
                create: sn,
                activate: sn,
                remove: function(t, e) {
                    !0 !== t.data.show ? rn(t, e) : e()
                }
            } : {}].concat(ci)
        });
    $r && document.addEventListener("selectionchange", function() {
        var t = document.activeElement;
        t && t.vmodel && hn(t, "input")
    });
    var Li = {
            inserted: function(t, e, n, r) {
                "select" === n.tag ? (r.elm && !r.elm._vOptions ? X(n, "postpatch", function() {
                    Li.componentUpdated(t, e, n)
                }) : cn(t, e, n.context), t._vOptions = [].map.call(t.options, fn)) : ("textarea" === n.tag || ei(t.type)) && (t._vModifiers = e.modifiers, e.modifiers.lazy || (t.addEventListener("compositionstart", pn), t.addEventListener("compositionend", dn), t.addEventListener("change", dn), $r && (t.vmodel = !0)))
            },
            componentUpdated: function(t, e, n) {
                if ("select" === n.tag) {
                    cn(t, e, n.context);
                    var r = t._vOptions,
                        o = t._vOptions = [].map.call(t.options, fn);
                    o.some(function(t, e) {
                        return !y(t, r[e])
                    }) && (t.multiple ? e.value.some(function(t) {
                        return ln(t, o)
                    }) : e.value !== e.oldValue && ln(e.value, o)) && hn(t, "change")
                }
            }
        },
        Fi = {
            model: Li,
            show: {
                bind: function(t, e, n) {
                    var r = e.value,
                        o = (n = vn(n)).data && n.data.transition,
                        i = t.__vOriginalDisplay = "none" === t.style.display ? "" : t.style.display;
                    r && o ? (n.data.show = !0, nn(n, function() {
                        t.style.display = i
                    })) : t.style.display = r ? i : "none"
                },
                update: function(t, e, n) {
                    var r = e.value;
                    !r != !e.oldValue && ((n = vn(n)).data && n.data.transition ? (n.data.show = !0, r ? nn(n, function() {
                        t.style.display = t.__vOriginalDisplay
                    }) : rn(n, function() {
                        t.style.display = "none"
                    })) : t.style.display = r ? t.__vOriginalDisplay : "none")
                },
                unbind: function(t, e, n, r, o) {
                    o || (t.style.display = t.__vOriginalDisplay)
                }
            }
        },
        Ri = {
            name: String,
            appear: Boolean,
            css: Boolean,
            mode: String,
            type: String,
            enterClass: String,
            leaveClass: String,
            enterToClass: String,
            leaveToClass: String,
            enterActiveClass: String,
            leaveActiveClass: String,
            appearClass: String,
            appearActiveClass: String,
            appearToClass: String,
            duration: [Number, String, Object]
        },
        Ii = function(t) {
            return t.tag || Et(t)
        },
        Ui = function(t) {
            return "show" === t.name
        },
        Hi = {
            name: "transition",
            props: Ri,
            abstract: !0,
            render: function(t) {
                var e = this,
                    n = this.$slots.default;
                if (n && (n = n.filter(Ii)).length) {
                    var o = this.mode,
                        i = n[0];
                    if (function(t) {
                            for (; t = t.parent;)
                                if (t.data.transition) return !0
                        }(this.$vnode)) return i;
                    var a = mn(i);
                    if (!a) return i;
                    if (this._leaving) return yn(t, i);
                    var s = "__transition-" + this._uid + "-";
                    a.key = null == a.key ? a.isComment ? s + "comment" : s + a.tag : r(a.key) ? 0 === String(a.key).indexOf(s) ? a.key : s + a.key : a.key;
                    var c = (a.data || (a.data = {})).transition = gn(this),
                        u = this._vnode,
                        l = mn(u);
                    if (a.data.directives && a.data.directives.some(Ui) && (a.data.show = !0), l && l.data && ! function(t, e) {
                            return e.key === t.key && e.tag === t.tag
                        }(a, l) && !Et(l) && (!l.componentInstance || !l.componentInstance._vnode.isComment)) {
                        var f = l.data.transition = v({}, c);
                        if ("out-in" === o) return this._leaving = !0, X(f, "afterLeave", function() {
                            e._leaving = !1, e.$forceUpdate()
                        }), yn(t, i);
                        if ("in-out" === o) {
                            if (Et(a)) return u;
                            var p, d = function() {
                                p()
                            };
                            X(c, "afterEnter", d), X(c, "enterCancelled", d), X(f, "delayLeave", function(t) {
                                p = t
                            })
                        }
                    }
                    return i
                }
            }
        },
        Vi = v({
            tag: String,
            moveClass: String
        }, Ri);
    delete Vi.mode;
    var Bi = {
        Transition: Hi,
        TransitionGroup: {
            props: Vi,
            beforeMount: function() {
                var t = this,
                    e = this._update;
                this._update = function(n, r) {
                    var o = Dt(t);
                    t.__patch__(t._vnode, t.kept, !1, !0), t._vnode = t.kept, o(), e.call(t, n, r)
                }
            },
            render: function(t) {
                for (var e = this.tag || this.$vnode.data.tag || "span", n = Object.create(null), r = this.prevChildren = this.children, o = this.$slots.default || [], i = this.children = [], a = gn(this), s = 0; s < o.length; s++) {
                    var c = o[s];
                    c.tag && null != c.key && 0 !== String(c.key).indexOf("__vlist") && (i.push(c), n[c.key] = c, (c.data || (c.data = {})).transition = a)
                }
                if (r) {
                    for (var u = [], l = [], f = 0; f < r.length; f++) {
                        var p = r[f];
                        p.data.transition = a, p.data.pos = p.elm.getBoundingClientRect(), n[p.key] ? u.push(p) : l.push(p)
                    }
                    this.kept = t(e, null, u), this.removed = l
                }
                return t(e, null, i)
            },
            updated: function() {
                var t = this.prevChildren,
                    e = this.moveClass || (this.name || "v") + "-move";
                t.length && this.hasMove(t[0].elm, e) && (t.forEach(bn), t.forEach(_n), t.forEach(wn), this._reflow = document.body.offsetHeight, t.forEach(function(t) {
                    if (t.data.moved) {
                        var n = t.elm,
                            r = n.style;
                        We(n, e), r.transform = r.WebkitTransform = r.transitionDuration = "", n.addEventListener(ji, n._moveCb = function t(r) {
                            r && r.target !== n || r && !/transform$/.test(r.propertyName) || (n.removeEventListener(ji, t), n._moveCb = null, Xe(n, e))
                        })
                    }
                }))
            },
            methods: {
                hasMove: function(t, e) {
                    if (!Ai) return !1;
                    if (this._hasMove) return this._hasMove;
                    var n = t.cloneNode();
                    t._transitionClasses && t._transitionClasses.forEach(function(t) {
                        Ge(n, t)
                    }), Qe(n, e), n.style.display = "none", this.$el.appendChild(n);
                    var r = Ye(n);
                    return this.$el.removeChild(n), this._hasMove = r.hasTransform
                }
            }
        }
    };
    Gt.config.mustUseProp = Ho, Gt.config.isReservedTag = Yo, Gt.config.isReservedAttr = Io, Gt.config.getTagNamespace = re, Gt.config.isUnknownElement = function(t) {
        if (!_r) return !0;
        if (Yo(t)) return !1;
        if (t = t.toLowerCase(), null != ti[t]) return ti[t];
        var e = document.createElement(t);
        return t.indexOf("-") > -1 ? ti[t] = e.constructor === window.HTMLUnknownElement || e.constructor === window.HTMLElement : ti[t] = /HTMLUnknownElement/.test(e.toString())
    }, v(Gt.options.directives, Fi), v(Gt.options.components, Bi), Gt.prototype.__patch__ = _r ? Di : g, Gt.prototype.$mount = function(t, e) {
        return function(t, e, n) {
            var r;
            return t.$el = e, t.$options.render || (t.$options.render = Vr), Rt(t, "beforeMount"), r = function() {
                t._update(t._render(), n)
            }, new So(t, r, g, {
                before: function() {
                    t._isMounted && !t._isDestroyed && Rt(t, "beforeUpdate")
                }
            }, !0), n = !1, null == t.$vnode && (t._isMounted = !0, Rt(t, "mounted")), t
        }(this, t = t && _r ? oe(t) : void 0, e)
    }, _r && setTimeout(function() {
        mr.devtools && Mr && Mr.emit("init", Gt)
    }, 0);
    var zi, qi, Qi, Gi, Ki, Ji, Wi, Xi, Zi, Yi, ta, ea = /\{\{((?:.|\r?\n)+?)\}\}/g,
        na = /[-.*+?^${}()|[\]\/\\]/g,
        ra = d(function(t) {
            var e = t[0].replace(na, "\\$&"),
                n = t[1].replace(na, "\\$&");
            return new RegExp(e + "((?:.|\\n)+?)" + n, "g")
        }),
        oa = {
            staticKeys: ["staticClass"],
            transformNode: function(t, e) {
                e.warn;
                var n = Oe(t, "class");
                n && (t.staticClass = JSON.stringify(n));
                var r = Ae(t, "class", !1);
                r && (t.classBinding = r)
            },
            genData: function(t) {
                var e = "";
                return t.staticClass && (e += "staticClass:" + t.staticClass + ","), t.classBinding && (e += "class:" + t.classBinding + ","), e
            }
        },
        ia = {
            staticKeys: ["staticStyle"],
            transformNode: function(t, e) {
                e.warn;
                var n = Oe(t, "style");
                n && (t.staticStyle = JSON.stringify(gi(n)));
                var r = Ae(t, "style", !1);
                r && (t.styleBinding = r)
            },
            genData: function(t) {
                var e = "";
                return t.staticStyle && (e += "staticStyle:" + t.staticStyle + ","), t.styleBinding && (e += "style:(" + t.styleBinding + "),"), e
            }
        },
        aa = function(t) {
            return (zi = zi || document.createElement("div")).innerHTML = t, zi.textContent
        },
        sa = l("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),
        ca = l("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),
        ua = l("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),
        la = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,
        fa = /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,
        pa = "[a-zA-Z_][\\-\\.0-9_a-zA-Z" + gr.source + "]*",
        da = "((?:" + pa + "\\:)?" + pa + ")",
        ha = new RegExp("^<" + da),
        va = /^\s*(\/?)>/,
        ma = new RegExp("^<\\/" + da + "[^>]*>"),
        ga = /^<!DOCTYPE [^>]+>/i,
        ya = /^<!\--/,
        ba = /^<!\[/,
        _a = l("script,style,textarea", !0),
        wa = {},
        xa = {
            "&lt;": "<",
            "&gt;": ">",
            "&quot;": '"',
            "&amp;": "&",
            "&#10;": "\n",
            "&#9;": "\t",
            "&#39;": "'"
        },
        Ca = /&(?:lt|gt|quot|amp|#39);/g,
        Sa = /&(?:lt|gt|quot|amp|#39|#10|#9);/g,
        $a = l("pre,textarea", !0),
        Aa = function(t, e) {
            return t && $a(t) && "\n" === e[0]
        },
        Oa = /^@|^v-on:/,
        ka = /^v-|^@|^:/,
        Ea = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,
        ja = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/,
        Na = /^\(|\)$/g,
        Ta = /^\[.*\]$/,
        Pa = /:(.*)$/,
        Ma = /^:|^\.|^v-bind:/,
        Da = /\.[^.\]]+(?=[^\]]*$)/g,
        La = /^v-slot(:|$)|^#/,
        Fa = /[\r\n]/,
        Ra = /\s+/g,
        Ia = d(aa),
        Ua = "_empty_",
        Ha = /^xmlns:NS\d+/,
        Va = /^NS\d+:/,
        Ba = [oa, ia, {
            preTransformNode: function(t, e) {
                if ("input" === t.tag) {
                    var n, r = t.attrsMap;
                    if (!r["v-model"]) return;
                    if ((r[":type"] || r["v-bind:type"]) && (n = Ae(t, "type")), r.type || n || !r["v-bind"] || (n = "(" + r["v-bind"] + ").type"), n) {
                        var o = Oe(t, "v-if", !0),
                            i = o ? "&&(" + o + ")" : "",
                            a = null != Oe(t, "v-else", !0),
                            s = Oe(t, "v-else-if", !0),
                            c = Nn(t);
                        An(c), xe(c, "type", "checkbox"), $n(c, e), c.processed = !0, c.if = "(" + n + ")==='checkbox'" + i, On(c, {
                            exp: c.if,
                            block: c
                        });
                        var u = Nn(t);
                        Oe(u, "v-for", !0), xe(u, "type", "radio"), $n(u, e), On(c, {
                            exp: "(" + n + ")==='radio'" + i,
                            block: u
                        });
                        var l = Nn(t);
                        return Oe(l, "v-for", !0), xe(l, ":type", n), $n(l, e), On(c, {
                            exp: o,
                            block: l
                        }), a ? c.else = !0 : s && (c.elseif = s), c
                    }
                }
            }
        }],
        za = {
            expectHTML: !0,
            modules: Ba,
            directives: {
                model: function(t, e, n) {
                    var r = e.value,
                        o = e.modifiers,
                        i = t.tag,
                        a = t.attrsMap.type;
                    if (t.component) return je(t, r, o), !1;
                    if ("select" === i) ! function(t, e, n) {
                        var r = 'var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return ' + (n && n.number ? "_n(val)" : "val") + "});";
                        $e(t, "change", r = r + " " + Ne(e, "$event.target.multiple ? $$selectedVal : $$selectedVal[0]"), null, !0)
                    }(t, r, o);
                    else if ("input" === i && "checkbox" === a) ! function(t, e, n) {
                        var r = n && n.number,
                            o = Ae(t, "value") || "null",
                            i = Ae(t, "true-value") || "true",
                            a = Ae(t, "false-value") || "false";
                        _e(t, "checked", "Array.isArray(" + e + ")?_i(" + e + "," + o + ")>-1" + ("true" === i ? ":(" + e + ")" : ":_q(" + e + "," + i + ")")), $e(t, "change", "var $$a=" + e + ",$$el=$event.target,$$c=$$el.checked?(" + i + "):(" + a + ");if(Array.isArray($$a)){var $$v=" + (r ? "_n(" + o + ")" : o) + ",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&(" + Ne(e, "$$a.concat([$$v])") + ")}else{$$i>-1&&(" + Ne(e, "$$a.slice(0,$$i).concat($$a.slice($$i+1))") + ")}}else{" + Ne(e, "$$c") + "}", null, !0)
                    }(t, r, o);
                    else if ("input" === i && "radio" === a) ! function(t, e, n) {
                        var r = n && n.number,
                            o = Ae(t, "value") || "null";
                        _e(t, "checked", "_q(" + e + "," + (o = r ? "_n(" + o + ")" : o) + ")"), $e(t, "change", Ne(e, o), null, !0)
                    }(t, r, o);
                    else if ("input" === i || "textarea" === i) ! function(t, e, n) {
                        var r = t.attrsMap.type,
                            o = n || {},
                            i = o.lazy,
                            a = o.number,
                            s = o.trim,
                            c = !i && "range" !== r,
                            u = i ? "change" : "range" === r ? pi : "input",
                            l = "$event.target.value";
                        s && (l = "$event.target.value.trim()"), a && (l = "_n(" + l + ")");
                        var f = Ne(e, l);
                        c && (f = "if($event.target.composing)return;" + f), _e(t, "value", "(" + e + ")"), $e(t, u, f, null, !0), (s || a) && $e(t, "blur", "$forceUpdate()")
                    }(t, r, o);
                    else if (!mr.isReservedTag(i)) return je(t, r, o), !1;
                    return !0
                },
                text: function(t, e) {
                    e.value && _e(t, "textContent", "_s(" + e.value + ")", e)
                },
                html: function(t, e) {
                    e.value && _e(t, "innerHTML", "_s(" + e.value + ")", e)
                }
            },
            isPreTag: function(t) {
                return "pre" === t
            },
            isUnaryTag: sa,
            mustUseProp: Ho,
            canBeLeftOpenTag: ca,
            isReservedTag: Yo,
            getTagNamespace: re,
            staticKeys: function(t) {
                return t.reduce(function(t, e) {
                    return t.concat(e.staticKeys || [])
                }, []).join(",")
            }(Ba)
        },
        qa = d(function(t) {
            return l("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap" + (t ? "," + t : ""))
        }),
        Qa = /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*(?:[\w$]+)?\s*\(/,
        Ga = /\([^)]*?\);*$/,
        Ka = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,
        Ja = {
            esc: 27,
            tab: 9,
            enter: 13,
            space: 32,
            up: 38,
            left: 37,
            right: 39,
            down: 40,
            delete: [8, 46]
        },
        Wa = {
            esc: ["Esc", "Escape"],
            tab: "Tab",
            enter: "Enter",
            space: [" ", "Spacebar"],
            up: ["Up", "ArrowUp"],
            left: ["Left", "ArrowLeft"],
            right: ["Right", "ArrowRight"],
            down: ["Down", "ArrowDown"],
            delete: ["Backspace", "Delete", "Del"]
        },
        Xa = function(t) {
            return "if(" + t + ")return null;"
        },
        Za = {
            stop: "$event.stopPropagation();",
            prevent: "$event.preventDefault();",
            self: Xa("$event.target !== $event.currentTarget"),
            ctrl: Xa("!$event.ctrlKey"),
            shift: Xa("!$event.shiftKey"),
            alt: Xa("!$event.altKey"),
            meta: Xa("!$event.metaKey"),
            left: Xa("'button' in $event && $event.button !== 0"),
            middle: Xa("'button' in $event && $event.button !== 1"),
            right: Xa("'button' in $event && $event.button !== 2")
        },
        Ya = {
            on: function(t, e) {
                t.wrapListeners = function(t) {
                    return "_g(" + t + "," + e.value + ")"
                }
            },
            bind: function(t, e) {
                t.wrapData = function(n) {
                    return "_b(" + n + ",'" + t.tag + "'," + e.value + "," + (e.modifiers && e.modifiers.prop ? "true" : "false") + (e.modifiers && e.modifiers.sync ? ",true" : "") + ")"
                }
            },
            cloak: g
        },
        ts = function(t) {
            this.options = t, this.warn = t.warn || ye, this.transforms = be(t.modules, "transformCode"), this.dataGenFns = be(t.modules, "genData"), this.directives = v(v({}, Ya), t.directives);
            var e = t.isReservedTag || fr;
            this.maybeComponent = function(t) {
                return !!t.component || !e(t.tag)
            }, this.onceId = 0, this.staticRenderFns = [], this.pre = !1
        };
    new RegExp("\\b" + "do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b") + "\\b");
    var es, ns, rs = (es = function(t, e) {
            var n = Sn(t.trim(), e);
            !1 !== e.optimize && Tn(n, e);
            var r = Ln(n, e);
            return {
                ast: n,
                render: r.render,
                staticRenderFns: r.staticRenderFns
            }
        }, function(t) {
            function e(e, n) {
                var r = Object.create(t),
                    o = [],
                    i = [];
                if (n)
                    for (var a in n.modules && (r.modules = (t.modules || []).concat(n.modules)), n.directives && (r.directives = v(Object.create(t.directives || null), n.directives)), n) "modules" !== a && "directives" !== a && (r[a] = n[a]);
                r.warn = function(t, e, n) {
                    (n ? i : o).push(t)
                };
                var s = es(e.trim(), r);
                return s.errors = o, s.tips = i, s
            }
            return {
                compile: e,
                compileToFunctions: Xn(e)
            }
        })(za),
        os = (rs.compile, rs.compileToFunctions),
        is = !!_r && Zn(!1),
        as = !!_r && Zn(!0),
        ss = d(function(t) {
            var e = oe(t);
            return e && e.innerHTML
        }),
        cs = Gt.prototype.$mount;
    return Gt.prototype.$mount = function(t, e) {
        if ((t = t && oe(t)) === document.body || t === document.documentElement) return this;
        var n = this.$options;
        if (!n.render) {
            var r = n.template;
            if (r)
                if ("string" == typeof r) "#" === r.charAt(0) && (r = ss(r));
                else {
                    if (!r.nodeType) return this;
                    r = r.innerHTML
                }
            else t && (r = function(t) {
                if (t.outerHTML) return t.outerHTML;
                var e = document.createElement("div");
                return e.appendChild(t.cloneNode(!0)), e.innerHTML
            }(t));
            if (r) {
                var o = os(r, {
                        outputSourceRange: !1,
                        shouldDecodeNewlines: is,
                        shouldDecodeNewlinesForHref: as,
                        delimiters: n.delimiters,
                        comments: n.comments
                    }, this),
                    i = o.render,
                    a = o.staticRenderFns;
                n.render = i, n.staticRenderFns = a
            }
        }
        return cs.call(this, t, e)
    }, Gt.compile = os, Gt
}), mgEventHandler.on("AppCreated", null, function(t, e) {
        setTimeout(function() {
            initAppTaggers()
        }, 100)
    }, 900),
    function(t) {
        "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? module.exports = t() : window.noUiSlider = t()
    }(function() {
        "use strict";

        function t(t) {
            return null != t
        }

        function e(t) {
            t.preventDefault()
        }

        function n(t) {
            return "number" == typeof t && !isNaN(t) && isFinite(t)
        }

        function r(t, e, n) {
            0 < n && (s(t, e), setTimeout(function() {
                c(t, e)
            }, n))
        }

        function o(t) {
            return Math.max(Math.min(t, 100), 0)
        }

        function i(t) {
            return Array.isArray(t) ? t : [t]
        }

        function a(t) {
            var e = (t = String(t)).split(".");
            return 1 < e.length ? e[1].length : 0
        }

        function s(t, e) {
            t.classList ? t.classList.add(e) : t.className += " " + e
        }

        function c(t, e) {
            t.classList ? t.classList.remove(e) : t.className = t.className.replace(new RegExp("(^|\\b)" + e.split(" ").join("|") + "(\\b|$)", "gi"), " ")
        }

        function u(t) {
            var e = void 0 !== window.pageXOffset,
                n = "CSS1Compat" === (t.compatMode || "");
            return {
                x: e ? window.pageXOffset : n ? t.documentElement.scrollLeft : t.body.scrollLeft,
                y: e ? window.pageYOffset : n ? t.documentElement.scrollTop : t.body.scrollTop
            }
        }

        function l(t, e) {
            return 100 / (e - t)
        }

        function f(t, e) {
            return 100 * e / (t[1] - t[0])
        }

        function p(t, e) {
            for (var n = 1; t >= e[n];) n += 1;
            return n
        }

        function d(t, e, n) {
            if (n >= t.slice(-1)[0]) return 100;
            var r, o, i = p(n, t),
                a = t[i - 1],
                s = t[i],
                c = e[i - 1],
                u = e[i];
            return c + (o = n, f(r = [a, s], r[0] < 0 ? o + Math.abs(r[0]) : o - r[0]) / l(c, u))
        }

        function h(t, e, n, r) {
            if (100 === r) return r;
            var o, i, a = p(r, t),
                s = t[a - 1],
                c = t[a];
            return n ? (c - s) / 2 < r - s ? c : s : e[a - 1] ? t[a - 1] + (o = r - t[a - 1], i = e[a - 1], Math.round(o / i) * i) : r
        }

        function v(t, e, r) {
            var o;
            if ("number" == typeof e && (e = [e]), !Array.isArray(e)) throw new Error("noUiSlider (" + H + "): 'range' contains invalid value.");
            if (!n(o = "min" === t ? 0 : "max" === t ? 100 : parseFloat(t)) || !n(e[0])) throw new Error("noUiSlider (" + H + "): 'range' value isn't numeric.");
            r.xPct.push(o), r.xVal.push(e[0]), o ? r.xSteps.push(!isNaN(e[1]) && e[1]) : isNaN(e[1]) || (r.xSteps[0] = e[1]), r.xHighestCompleteStep.push(0)
        }

        function m(t, e, n) {
            if (!e) return !0;
            n.xSteps[t] = f([n.xVal[t], n.xVal[t + 1]], e) / l(n.xPct[t], n.xPct[t + 1]);
            var r = (n.xVal[t + 1] - n.xVal[t]) / n.xNumSteps[t],
                o = Math.ceil(Number(r.toFixed(3)) - 1),
                i = n.xVal[t] + n.xNumSteps[t] * o;
            n.xHighestCompleteStep[t] = i
        }

        function g(t, e, n) {
            var r;
            this.xPct = [], this.xVal = [], this.xSteps = [n || !1], this.xNumSteps = [!1], this.xHighestCompleteStep = [], this.snap = e;
            var o = [];
            for (r in t) t.hasOwnProperty(r) && o.push([t[r], r]);
            for (o.length && "object" == typeof o[0][0] ? o.sort(function(t, e) {
                    return t[0][0] - e[0][0]
                }) : o.sort(function(t, e) {
                    return t[0] - e[0]
                }), r = 0; r < o.length; r++) v(o[r][1], o[r][0], this);
            for (this.xNumSteps = this.xSteps.slice(0), r = 0; r < this.xNumSteps.length; r++) m(r, this.xNumSteps[r], this)
        }

        function y(t) {
            if ("object" == typeof(e = t) && "function" == typeof e.to && "function" == typeof e.from) return !0;
            var e;
            throw new Error("noUiSlider (" + H + "): 'format' requires 'to' and 'from' methods.")
        }

        function b(t, e) {
            if (!n(e)) throw new Error("noUiSlider (" + H + "): 'step' is not numeric.");
            t.singleStep = e
        }

        function _(t, e) {
            if ("object" != typeof e || Array.isArray(e)) throw new Error("noUiSlider (" + H + "): 'range' is not an object.");
            if (void 0 === e.min || void 0 === e.max) throw new Error("noUiSlider (" + H + "): Missing 'min' or 'max' in 'range'.");
            if (e.min === e.max) throw new Error("noUiSlider (" + H + "): 'range' 'min' and 'max' cannot be equal.");
            t.spectrum = new g(e, t.snap, t.singleStep)
        }

        function w(t, e) {
            if (e = i(e), !Array.isArray(e) || !e.length) throw new Error("noUiSlider (" + H + "): 'start' option is incorrect.");
            t.handles = e.length, t.start = e
        }

        function x(t, e) {
            if ("boolean" != typeof(t.snap = e)) throw new Error("noUiSlider (" + H + "): 'snap' option must be a boolean.")
        }

        function C(t, e) {
            if ("boolean" != typeof(t.animate = e)) throw new Error("noUiSlider (" + H + "): 'animate' option must be a boolean.")
        }

        function S(t, e) {
            if ("number" != typeof(t.animationDuration = e)) throw new Error("noUiSlider (" + H + "): 'animationDuration' option must be a number.")
        }

        function $(t, e) {
            var n, r = [!1];
            if ("lower" === e ? e = [!0, !1] : "upper" === e && (e = [!1, !0]), !0 === e || !1 === e) {
                for (n = 1; n < t.handles; n++) r.push(e);
                r.push(!1)
            } else {
                if (!Array.isArray(e) || !e.length || e.length !== t.handles + 1) throw new Error("noUiSlider (" + H + "): 'connect' option doesn't match handle count.");
                r = e
            }
            t.connect = r
        }

        function A(t, e) {
            switch (e) {
                case "horizontal":
                    t.ort = 0;
                    break;
                case "vertical":
                    t.ort = 1;
                    break;
                default:
                    throw new Error("noUiSlider (" + H + "): 'orientation' option is invalid.")
            }
        }

        function O(t, e) {
            if (!n(e)) throw new Error("noUiSlider (" + H + "): 'margin' option must be numeric.");
            if (0 !== e && (t.margin = t.spectrum.getMargin(e), !t.margin)) throw new Error("noUiSlider (" + H + "): 'margin' option is only supported on linear sliders.")
        }

        function k(t, e) {
            if (!n(e)) throw new Error("noUiSlider (" + H + "): 'limit' option must be numeric.");
            if (t.limit = t.spectrum.getMargin(e), !t.limit || t.handles < 2) throw new Error("noUiSlider (" + H + "): 'limit' option is only supported on linear sliders with 2 or more handles.")
        }

        function E(t, e) {
            if (!n(e) && !Array.isArray(e)) throw new Error("noUiSlider (" + H + "): 'padding' option must be numeric or array of exactly 2 numbers.");
            if (Array.isArray(e) && 2 !== e.length && !n(e[0]) && !n(e[1])) throw new Error("noUiSlider (" + H + "): 'padding' option must be numeric or array of exactly 2 numbers.");
            if (0 !== e) {
                if (Array.isArray(e) || (e = [e, e]), !(t.padding = [t.spectrum.getMargin(e[0]), t.spectrum.getMargin(e[1])]) === t.padding[0] || !1 === t.padding[1]) throw new Error("noUiSlider (" + H + "): 'padding' option is only supported on linear sliders.");
                if (t.padding[0] < 0 || t.padding[1] < 0) throw new Error("noUiSlider (" + H + "): 'padding' option must be a positive number(s).");
                if (100 <= t.padding[0] + t.padding[1]) throw new Error("noUiSlider (" + H + "): 'padding' option must not exceed 100% of the range.")
            }
        }

        function j(t, e) {
            switch (e) {
                case "ltr":
                    t.dir = 0;
                    break;
                case "rtl":
                    t.dir = 1;
                    break;
                default:
                    throw new Error("noUiSlider (" + H + "): 'direction' option was not recognized.")
            }
        }

        function N(t, e) {
            if ("string" != typeof e) throw new Error("noUiSlider (" + H + "): 'behaviour' must be a string containing options.");
            var n = 0 <= e.indexOf("tap"),
                r = 0 <= e.indexOf("drag"),
                o = 0 <= e.indexOf("fixed"),
                i = 0 <= e.indexOf("snap"),
                a = 0 <= e.indexOf("hover"),
                s = 0 <= e.indexOf("unconstrained");
            if (o) {
                if (2 !== t.handles) throw new Error("noUiSlider (" + H + "): 'fixed' behaviour must be used with 2 handles");
                O(t, t.start[1] - t.start[0])
            }
            if (s && (t.margin || t.limit)) throw new Error("noUiSlider (" + H + "): 'unconstrained' behaviour cannot be used with margin or limit");
            t.events = {
                tap: n || i,
                drag: r,
                fixed: o,
                snap: i,
                hover: a,
                unconstrained: s
            }
        }

        function T(t, e) {
            if (!1 !== e)
                if (!0 === e) {
                    t.tooltips = [];
                    for (var n = 0; n < t.handles; n++) t.tooltips.push(!0)
                } else {
                    if (t.tooltips = i(e), t.tooltips.length !== t.handles) throw new Error("noUiSlider (" + H + "): must pass a formatter for all handles.");
                    t.tooltips.forEach(function(t) {
                        if ("boolean" != typeof t && ("object" != typeof t || "function" != typeof t.to)) throw new Error("noUiSlider (" + H + "): 'tooltips' must be passed a formatter or 'false'.")
                    })
                }
        }

        function P(t, e) {
            y(t.ariaFormat = e)
        }

        function M(t, e) {
            y(t.format = e)
        }

        function D(t, e) {
            if ("boolean" != typeof(t.keyboardSupport = e)) throw new Error("noUiSlider (" + H + "): 'keyboardSupport' option must be a boolean.")
        }

        function L(t, e) {
            t.documentElement = e
        }

        function F(t, e) {
            if ("string" != typeof e && !1 !== e) throw new Error("noUiSlider (" + H + "): 'cssPrefix' must be a string or `false`.");
            t.cssPrefix = e
        }

        function R(t, e) {
            if ("object" != typeof e) throw new Error("noUiSlider (" + H + "): 'cssClasses' must be an object.");
            if ("string" == typeof t.cssPrefix)
                for (var n in t.cssClasses = {}, e) e.hasOwnProperty(n) && (t.cssClasses[n] = t.cssPrefix + e[n]);
            else t.cssClasses = e
        }

        function I(e) {
            var n = {
                    margin: 0,
                    limit: 0,
                    padding: 0,
                    animate: !0,
                    animationDuration: 300,
                    ariaFormat: V,
                    format: V
                },
                r = {
                    step: {
                        r: !1,
                        t: b
                    },
                    start: {
                        r: !0,
                        t: w
                    },
                    connect: {
                        r: !0,
                        t: $
                    },
                    direction: {
                        r: !0,
                        t: j
                    },
                    snap: {
                        r: !1,
                        t: x
                    },
                    animate: {
                        r: !1,
                        t: C
                    },
                    animationDuration: {
                        r: !1,
                        t: S
                    },
                    range: {
                        r: !0,
                        t: _
                    },
                    orientation: {
                        r: !1,
                        t: A
                    },
                    margin: {
                        r: !1,
                        t: O
                    },
                    limit: {
                        r: !1,
                        t: k
                    },
                    padding: {
                        r: !1,
                        t: E
                    },
                    behaviour: {
                        r: !0,
                        t: N
                    },
                    ariaFormat: {
                        r: !1,
                        t: P
                    },
                    format: {
                        r: !1,
                        t: M
                    },
                    tooltips: {
                        r: !1,
                        t: T
                    },
                    keyboardSupport: {
                        r: !0,
                        t: D
                    },
                    documentElement: {
                        r: !1,
                        t: L
                    },
                    cssPrefix: {
                        r: !0,
                        t: F
                    },
                    cssClasses: {
                        r: !0,
                        t: R
                    }
                },
                o = {
                    connect: !1,
                    direction: "ltr",
                    behaviour: "tap",
                    orientation: "horizontal",
                    keyboardSupport: !0,
                    cssPrefix: "noUi-",
                    cssClasses: {
                        target: "target",
                        base: "base",
                        origin: "origin",
                        handle: "handle",
                        handleLower: "handle-lower",
                        handleUpper: "handle-upper",
                        horizontal: "horizontal",
                        vertical: "vertical",
                        background: "background",
                        connect: "connect",
                        connects: "connects",
                        ltr: "ltr",
                        rtl: "rtl",
                        draggable: "draggable",
                        drag: "state-drag",
                        tap: "state-tap",
                        active: "active",
                        tooltip: "tooltip",
                        pips: "pips",
                        pipsHorizontal: "pips-horizontal",
                        pipsVertical: "pips-vertical",
                        marker: "marker",
                        markerHorizontal: "marker-horizontal",
                        markerVertical: "marker-vertical",
                        markerNormal: "marker-normal",
                        markerLarge: "marker-large",
                        markerSub: "marker-sub",
                        value: "value",
                        valueHorizontal: "value-horizontal",
                        valueVertical: "value-vertical",
                        valueNormal: "value-normal",
                        valueLarge: "value-large",
                        valueSub: "value-sub"
                    }
                };
            e.format && !e.ariaFormat && (e.ariaFormat = e.format), Object.keys(r).forEach(function(i) {
                if (!t(e[i]) && void 0 === o[i]) {
                    if (r[i].r) throw new Error("noUiSlider (" + H + "): '" + i + "' is required.");
                    return !0
                }
                r[i].t(n, t(e[i]) ? e[i] : o[i])
            }), n.pips = e.pips;
            var i = document.createElement("div"),
                a = void 0 !== i.style.msTransform,
                s = void 0 !== i.style.transform;
            return n.transformRule = s ? "transform" : a ? "msTransform" : "webkitTransform", n.style = [
                ["left", "top"],
                ["right", "bottom"]
            ][n.dir][n.ort], n
        }

        function U(t, n, a) {
            function l(t, e) {
                var n = nt.createElement("div");
                return e && s(n, e), t.appendChild(n), n
            }

            function f(t, e) {
                return !!e && l(t, n.cssClasses.connect)
            }

            function p(t, e) {
                return !!n.tooltips[e] && l(t.firstChild, n.cssClasses.tooltip)
            }

            function d(t, e, r) {
                function o(t, e) {
                    var r = e === n.cssClasses.value,
                        o = r ? a : c;
                    return e + " " + (r ? u : f)[n.ort] + " " + o[t]
                }
                var i = nt.createElement("div"),
                    a = [];
                a[at] = n.cssClasses.valueNormal, a[st] = n.cssClasses.valueLarge, a[ct] = n.cssClasses.valueSub;
                var c = [];
                c[at] = n.cssClasses.markerNormal, c[st] = n.cssClasses.markerLarge, c[ct] = n.cssClasses.markerSub;
                var u = [n.cssClasses.valueHorizontal, n.cssClasses.valueVertical],
                    f = [n.cssClasses.markerHorizontal, n.cssClasses.markerVertical];
                return s(i, n.cssClasses.pips), s(i, 0 === n.ort ? n.cssClasses.pipsHorizontal : n.cssClasses.pipsVertical), Object.keys(t).forEach(function(a) {
                    ! function(t, a, s) {
                        if ((s = e ? e(a, s) : s) !== it) {
                            var c = l(i, !1);
                            c.className = o(s, n.cssClasses.marker), c.style[n.style] = t + "%", at < s && ((c = l(i, !1)).className = o(s, n.cssClasses.value), c.setAttribute("data-value", a), c.style[n.style] = t + "%", c.innerHTML = r.to(a))
                        }
                    }(a, t[a][0], t[a][1])
                }), i
            }

            function h() {
                var t;
                B && ((t = B).parentElement.removeChild(t), B = null)
            }

            function v(t) {
                h();
                var e, n, r, o, i, a, s, c, u, l = t.mode,
                    f = t.density || 1,
                    p = t.filter || !1,
                    v = function(t, e, n) {
                        if ("range" === t || "steps" === t) return Y.xVal;
                        if ("count" === t) {
                            if (e < 2) throw new Error("noUiSlider (" + H + "): 'values' (>= 2) required for mode 'count'.");
                            var r = e - 1,
                                o = 100 / r;
                            for (e = []; r--;) e[r] = r * o;
                            e.push(100), t = "positions"
                        }
                        return "positions" === t ? e.map(function(t) {
                            return Y.fromStepping(n ? Y.getStep(t) : t)
                        }) : "values" === t ? n ? e.map(function(t) {
                            return Y.fromStepping(Y.getStep(Y.toStepping(t)))
                        }) : e : void 0
                    }(l, t.values || !1, t.stepped || !1),
                    m = (e = f, n = l, r = v, o = {}, i = Y.xVal[0], a = Y.xVal[Y.xVal.length - 1], c = s = !1, u = 0, (r = r.slice().sort(function(t, e) {
                        return t - e
                    }).filter(function(t) {
                        return !this[t] && (this[t] = !0)
                    }, {}))[0] !== i && (r.unshift(i), s = !0), r[r.length - 1] !== a && (r.push(a), c = !0), r.forEach(function(t, i) {
                        var a, l, f, p, d, h, v, m, g, y, b = t,
                            _ = r[i + 1],
                            w = "steps" === n;
                        if (w && (a = Y.xNumSteps[i]), a || (a = _ - b), !1 !== b && void 0 !== _)
                            for (a = Math.max(a, 1e-7), l = b; l <= _; l = (l + a).toFixed(7) / 1) {
                                for (m = (d = (p = Y.toStepping(l)) - u) / e, y = d / (g = Math.round(m)), f = 1; f <= g; f += 1) o[(h = u + f * y).toFixed(5)] = [Y.fromStepping(h), 0];
                                v = -1 < r.indexOf(l) ? st : w ? ct : at, !i && s && (v = 0), l === _ && c || (o[p.toFixed(5)] = [l, v]), u = p
                            }
                    }), o),
                    g = t.format || {
                        to: Math.round
                    };
                return B = J.appendChild(d(m, p, g))
            }

            function m() {
                var t = F.getBoundingClientRect(),
                    e = "offset" + ["Width", "Height"][n.ort];
                return 0 === n.ort ? t.width || F[e] : t.height || F[e]
            }

            function g(t, e, r, o) {
                var i = function(i) {
                        return !!(i = function(t, e, n) {
                            var r, o, i = 0 === t.type.indexOf("touch"),
                                a = 0 === t.type.indexOf("mouse"),
                                s = 0 === t.type.indexOf("pointer");
                            if (0 === t.type.indexOf("MSPointer") && (s = !0), i) {
                                var c = function(t) {
                                    return t.target === n || n.contains(t.target)
                                };
                                if ("touchstart" === t.type) {
                                    var l = Array.prototype.filter.call(t.touches, c);
                                    if (1 < l.length) return !1;
                                    r = l[0].pageX, o = l[0].pageY
                                } else {
                                    var f = Array.prototype.find.call(t.changedTouches, c);
                                    if (!f) return !1;
                                    r = f.pageX, o = f.pageY
                                }
                            }
                            return e = e || u(nt), (a || s) && (r = t.clientX + e.x, o = t.clientY + e.y), t.pageOffset = e, t.points = [r, o], t.cursor = a || s, t
                        }(i, o.pageOffset, o.target || e)) && !(J.hasAttribute("disabled") && !o.doNotReject) && (a = J, s = n.cssClasses.tap, !((a.classList ? a.classList.contains(s) : new RegExp("\\b" + s + "\\b").test(a.className)) && !o.doNotReject) && !(t === G.start && void 0 !== i.buttons && 1 < i.buttons) && (!o.hover || !i.buttons) && (K || i.preventDefault(), i.calcPoint = i.points[n.ort], void r(i, o)));
                        var a, s
                    },
                    a = [];
                return t.split(" ").forEach(function(t) {
                    e.addEventListener(t, i, !!K && {
                        passive: !0
                    }), a.push([t, i])
                }), a
            }

            function y(t) {
                var e, r, i, a, s, c, l = 100 * (t - (e = F, r = n.ort, i = e.getBoundingClientRect(), a = e.ownerDocument, s = a.documentElement, c = u(a), /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) && (c.x = 0), r ? i.top + c.y - s.clientTop : i.left + c.x - s.clientLeft)) / m();
                return l = o(l), n.dir ? 100 - l : l
            }

            function b(t, e) {
                "mouseout" === t.type && "HTML" === t.target.nodeName && null === t.relatedTarget && w(t, e)
            }

            function _(t, e) {
                if (-1 === navigator.appVersion.indexOf("MSIE 9") && 0 === t.buttons && 0 !== e.buttonsProperty) return w(t, e);
                var r = (n.dir ? -1 : 1) * (t.calcPoint - e.startCalcPoint);
                j(0 < r, 100 * r / e.baseSize, e.locations, e.handleNumbers)
            }

            function w(t, r) {
                r.handle && (c(r.handle, n.cssClasses.active), Z -= 1), r.listeners.forEach(function(t) {
                    rt.removeEventListener(t[0], t[1])
                }), 0 === Z && (c(J, n.cssClasses.drag), T(), t.cursor && (ot.style.cursor = "", ot.removeEventListener("selectstart", e))), r.handleNumbers.forEach(function(t) {
                    A("change", t), A("set", t), A("end", t)
                })
            }

            function x(t, r) {
                var o;
                if (1 === r.handleNumbers.length) {
                    var i = R[r.handleNumbers[0]];
                    if (i.hasAttribute("disabled")) return !1;
                    o = i.children[0], Z += 1, s(o, n.cssClasses.active)
                }
                t.stopPropagation();
                var a = [],
                    c = g(G.move, rt, _, {
                        target: t.target,
                        handle: o,
                        listeners: a,
                        startCalcPoint: t.calcPoint,
                        baseSize: m(),
                        pageOffset: t.pageOffset,
                        handleNumbers: r.handleNumbers,
                        buttonsProperty: t.buttons,
                        locations: W.slice()
                    }),
                    u = g(G.end, rt, w, {
                        target: t.target,
                        handle: o,
                        listeners: a,
                        doNotReject: !0,
                        handleNumbers: r.handleNumbers
                    }),
                    l = g("mouseout", rt, b, {
                        target: t.target,
                        handle: o,
                        listeners: a,
                        doNotReject: !0,
                        handleNumbers: r.handleNumbers
                    });
                a.push.apply(a, c.concat(u, l)), t.cursor && (ot.style.cursor = getComputedStyle(t.target).cursor, 1 < R.length && s(J, n.cssClasses.drag), ot.addEventListener("selectstart", e, !1)), r.handleNumbers.forEach(function(t) {
                    A("start", t)
                })
            }

            function C(t) {
                t.stopPropagation();
                var e, o, i, a = y(t.calcPoint),
                    s = (e = a, i = !(o = 100), R.forEach(function(t, n) {
                        if (!t.hasAttribute("disabled")) {
                            var r = Math.abs(W[n] - e);
                            (r < o || 100 === r && 100 === o) && (i = n, o = r)
                        }
                    }), i);
                if (!1 === s) return !1;
                n.events.snap || r(J, n.cssClasses.tap, n.animationDuration), P(s, a, !0, !0), T(), A("slide", s, !0), A("update", s, !0), A("change", s, !0), A("set", s, !0), n.events.snap && x(t, {
                    handleNumbers: [s]
                })
            }

            function S(t) {
                var e = y(t.calcPoint),
                    n = Y.getStep(e),
                    r = Y.fromStepping(n);
                Object.keys(et).forEach(function(t) {
                    "hover" === t.split(".")[0] && et[t].forEach(function(t) {
                        t.call(V, r)
                    })
                })
            }

            function $(t, e) {
                et[t] = et[t] || [], et[t].push(e), "update" === t.split(".")[0] && R.forEach(function(t, e) {
                    A("update", e)
                })
            }

            function A(t, e, r) {
                Object.keys(et).forEach(function(o) {
                    var i = o.split(".")[0];
                    t === i && et[o].forEach(function(t) {
                        t.call(V, tt.map(n.format.to), e, tt.slice(), r || !1, W.slice())
                    })
                })
            }

            function O(t) {
                return t + "%"
            }

            function k(t, e, r, i, a, s) {
                return 1 < R.length && !n.events.unconstrained && (i && 0 < e && (r = Math.max(r, t[e - 1] + n.margin)), a && e < R.length - 1 && (r = Math.min(r, t[e + 1] - n.margin))), 1 < R.length && n.limit && (i && 0 < e && (r = Math.min(r, t[e - 1] + n.limit)), a && e < R.length - 1 && (r = Math.max(r, t[e + 1] - n.limit))), n.padding && (0 === e && (r = Math.max(r, n.padding[0])), e === R.length - 1 && (r = Math.min(r, 100 - n.padding[1]))), !((r = o(r = Y.getStep(r))) === t[e] && !s) && r
            }

            function E(t, e) {
                var r = n.ort;
                return (r ? e : t) + ", " + (r ? t : e)
            }

            function j(t, e, n, r) {
                var o = n.slice(),
                    i = [!t, t],
                    a = [t, !t];
                r = r.slice(), t && r.reverse(), 1 < r.length ? r.forEach(function(t, n) {
                    var r = k(o, t, o[t] + e, i[n], a[n], !1);
                    !1 === r ? e = 0 : (e = r - o[t], o[t] = r)
                }) : i = a = [!0];
                var s = !1;
                r.forEach(function(t, r) {
                    s = P(t, n[t] + e, i[r], a[r]) || s
                }), s && r.forEach(function(t) {
                    A("update", t), A("slide", t)
                })
            }

            function N(t, e) {
                return n.dir ? 100 - t - e : t
            }

            function T() {
                X.forEach(function(t) {
                    var e = 50 < W[t] ? -1 : 1,
                        n = 3 + (R.length + e * t);
                    R[t].style.zIndex = n
                })
            }

            function P(t, e, r, o) {
                return !1 !== (e = k(W, t, e, r, o, !1)) && (function(t, e) {
                    W[t] = e, tt[t] = Y.fromStepping(e);
                    var r = "translate(" + E(O(N(e, 0) - ut), "0") + ")";
                    R[t].style[n.transformRule] = r, M(t), M(t + 1)
                }(t, e), !0)
            }

            function M(t) {
                if (U[t]) {
                    var e = 0,
                        r = 100;
                    0 !== t && (e = W[t - 1]), t !== U.length - 1 && (r = W[t]);
                    var o = r - e,
                        i = "translate(" + E(O(N(e, o)), "0") + ")",
                        a = "scale(" + E(o / 100, "1") + ")";
                    U[t].style[n.transformRule] = i + " " + a
                }
            }

            function D(t, e) {
                var o = i(t),
                    a = void 0 === W[0];
                e = void 0 === e || !!e, n.animate && !a && r(J, n.cssClasses.tap, n.animationDuration), X.forEach(function(t) {
                    var e, r;
                    P(t, (e = o[t], r = t, null === e || !1 === e || void 0 === e ? W[r] : ("number" == typeof e && (e = String(e)), e = n.format.from(e), !1 === (e = Y.toStepping(e)) || isNaN(e) ? W[r] : e)), !0, !1)
                }), X.forEach(function(t) {
                    P(t, W[t], !0, !0)
                }), T(), X.forEach(function(t) {
                    A("update", t), null !== o[t] && e && A("set", t)
                })
            }

            function L() {
                var t = tt.map(n.format.to);
                return 1 === t.length ? t[0] : t
            }
            var F, R, U, V, B, z, q, Q, G = window.navigator.pointerEnabled ? {
                    start: "pointerdown",
                    move: "pointermove",
                    end: "pointerup"
                } : window.navigator.msPointerEnabled ? {
                    start: "MSPointerDown",
                    move: "MSPointerMove",
                    end: "MSPointerUp"
                } : {
                    start: "mousedown touchstart",
                    move: "mousemove touchmove",
                    end: "mouseup touchend"
                },
                K = window.CSS && CSS.supports && CSS.supports("touch-action", "none") && function() {
                    var t = !1;
                    try {
                        var e = Object.defineProperty({}, "passive", {
                            get: function() {
                                t = !0
                            }
                        });
                        window.addEventListener("test", null, e)
                    } catch (t) {}
                    return t
                }(),
                J = t,
                W = [],
                X = [],
                Z = 0,
                Y = n.spectrum,
                tt = [],
                et = {},
                nt = t.ownerDocument,
                rt = n.documentElement || nt.documentElement,
                ot = nt.body,
                it = -1,
                at = 0,
                st = 1,
                ct = 2,
                ut = "rtl" === nt.dir || 1 === n.ort ? 0 : 100;
            return s(z = J, n.cssClasses.target), 0 === n.dir ? s(z, n.cssClasses.ltr) : s(z, n.cssClasses.rtl), 0 === n.ort ? s(z, n.cssClasses.horizontal) : s(z, n.cssClasses.vertical), F = l(z, n.cssClasses.base),
                function(t, e) {
                    var r, o, i, a = l(e, n.cssClasses.connects);
                    R = [], (U = []).push(f(a, t[0]));
                    for (var c = 0; c < n.handles; c++) R.push((r = c, i = void 0, o = l(e, n.cssClasses.origin), (i = l(o, n.cssClasses.handle)).setAttribute("data-handle", r), n.keyboardSupport && i.setAttribute("tabindex", "0"), i.setAttribute("role", "slider"), i.setAttribute("aria-orientation", n.ort ? "vertical" : "horizontal"), 0 === r ? s(i, n.cssClasses.handleLower) : r === n.handles - 1 && s(i, n.cssClasses.handleUpper), o)), X[c] = c, U.push(f(a, t[c + 1]))
                }(n.connect, F), (q = n.events).fixed || R.forEach(function(t, e) {
                    g(G.start, t.children[0], x, {
                        handleNumbers: [e]
                    })
                }), q.tap && g(G.start, F, C, {}), q.hover && g(G.move, F, S, {
                    hover: !0
                }), q.drag && U.forEach(function(t, e) {
                    if (!1 !== t && 0 !== e && e !== U.length - 1) {
                        var r = R[e - 1],
                            o = R[e],
                            i = [t];
                        s(t, n.cssClasses.draggable), q.fixed && (i.push(r.children[0]), i.push(o.children[0])), i.forEach(function(t) {
                            g(G.start, t, x, {
                                handles: [r, o],
                                handleNumbers: [e - 1, e]
                            })
                        })
                    }
                }), D(n.start), V = {
                    destroy: function() {
                        for (var t in n.cssClasses) n.cssClasses.hasOwnProperty(t) && c(J, n.cssClasses[t]);
                        for (; J.firstChild;) J.removeChild(J.firstChild);
                        delete J.noUiSlider
                    },
                    steps: function() {
                        return W.map(function(t, e) {
                            var n = Y.getNearbySteps(t),
                                r = tt[e],
                                o = n.thisStep.step,
                                i = null;
                            !1 !== o && r + o > n.stepAfter.startValue && (o = n.stepAfter.startValue - r), i = r > n.thisStep.startValue ? n.thisStep.step : !1 !== n.stepBefore.step && r - n.stepBefore.highestStep, 100 === t ? o = null : 0 === t && (i = null);
                            var a = Y.countStepDecimals();
                            return null !== o && !1 !== o && (o = Number(o.toFixed(a))), null !== i && !1 !== i && (i = Number(i.toFixed(a))), [i, o]
                        })
                    },
                    on: $,
                    off: function(t) {
                        var e = t && t.split(".")[0],
                            n = e && t.substring(e.length);
                        Object.keys(et).forEach(function(t) {
                            var r = t.split(".")[0],
                                o = t.substring(r.length);
                            e && e !== r || n && n !== o || delete et[t]
                        })
                    },
                    get: L,
                    set: D,
                    setHandle: function(t, e, n) {
                        var r = [];
                        if (!(0 <= (t = Number(t)) && t < X.length)) throw new Error("noUiSlider (" + H + "): invalid handle number, got: " + t);
                        for (var o = 0; o < X.length; o++) r[o] = null;
                        r[t] = e, D(r, n)
                    },
                    reset: function(t) {
                        D(n.start, t)
                    },
                    __moveHandles: function(t, e, n) {
                        j(t, e, W, n)
                    },
                    options: a,
                    updateOptions: function(t, e) {
                        var r = L(),
                            o = ["margin", "limit", "padding", "range", "animate", "snap", "step", "format"];
                        o.forEach(function(e) {
                            void 0 !== t[e] && (a[e] = t[e])
                        });
                        var i = I(a);
                        o.forEach(function(e) {
                            void 0 !== t[e] && (n[e] = i[e])
                        }), Y = i.spectrum, n.margin = i.margin, n.limit = i.limit, n.padding = i.padding, n.pips && v(n.pips), W = [], D(t.start || r, e)
                    },
                    target: J,
                    removePips: h,
                    pips: v
                }, n.pips && v(n.pips), n.tooltips && (Q = R.map(p), $("update", function(t, e, r) {
                    if (Q[e]) {
                        var o = t[e];
                        !0 !== n.tooltips[e] && (o = n.tooltips[e].to(r[e])), Q[e].innerHTML = o
                    }
                })), $("update", function(t, e, r, o, i) {
                    X.forEach(function(t) {
                        var e = R[t],
                            o = k(W, t, 0, !0, !0, !0),
                            a = k(W, t, 100, !0, !0, !0),
                            s = i[t],
                            c = n.ariaFormat.to(r[t]);
                        o = Y.fromStepping(o).toFixed(1), a = Y.fromStepping(a).toFixed(1), s = Y.fromStepping(s).toFixed(1), e.children[0].setAttribute("aria-valuemin", o), e.children[0].setAttribute("aria-valuemax", a), e.children[0].setAttribute("aria-valuenow", s), e.children[0].setAttribute("aria-valuetext", c)
                    })
                }), V
        }
        var H = "12.1.0";
        g.prototype.getMargin = function(t) {
            var e = this.xNumSteps[0];
            if (e && t / e % 1 != 0) throw new Error("noUiSlider (" + H + "): 'limit', 'margin' and 'padding' must be divisible by step.");
            return 2 === this.xPct.length && f(this.xVal, t)
        }, g.prototype.toStepping = function(t) {
            return t = d(this.xVal, this.xPct, t)
        }, g.prototype.fromStepping = function(t) {
            return function(t, e, n) {
                if (100 <= n) return t.slice(-1)[0];
                var r, o = p(n, e),
                    i = t[o - 1],
                    a = t[o],
                    s = e[o - 1];
                return r = [i, a], (n - s) * l(s, e[o]) * (r[1] - r[0]) / 100 + r[0]
            }(this.xVal, this.xPct, t)
        }, g.prototype.getStep = function(t) {
            return t = h(this.xPct, this.xSteps, this.snap, t)
        }, g.prototype.getNearbySteps = function(t) {
            var e = p(t, this.xPct);
            return {
                stepBefore: {
                    startValue: this.xVal[e - 2],
                    step: this.xNumSteps[e - 2],
                    highestStep: this.xHighestCompleteStep[e - 2]
                },
                thisStep: {
                    startValue: this.xVal[e - 1],
                    step: this.xNumSteps[e - 1],
                    highestStep: this.xHighestCompleteStep[e - 1]
                },
                stepAfter: {
                    startValue: this.xVal[e],
                    step: this.xNumSteps[e],
                    highestStep: this.xHighestCompleteStep[e]
                }
            }
        }, g.prototype.countStepDecimals = function() {
            var t = this.xNumSteps.map(a);
            return Math.max.apply(null, t)
        }, g.prototype.convert = function(t) {
            return this.getStep(this.toStepping(t))
        };
        var V = {
            to: function(t) {
                return void 0 !== t && t.toFixed(2)
            },
            from: Number
        };
        return {
            __spectrum: g,
            version: H,
            create: function(t, e) {
                if (!t || !t.nodeName) throw new Error("noUiSlider (" + H + "): create requires a single element, got: " + t);
                if (t.noUiSlider) throw new Error("noUiSlider (" + H + "): Slider was already initialized.");
                var n = U(t, I(e), e);
                return t.noUiSlider = n
            }
        }
    });
! function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.axios = t() : e.axios = t()
}(this, function() {
    return function(e) {
        function t(r) {
            if (n[r]) return n[r].exports;
            var o = n[r] = {
                exports: {},
                id: r,
                loaded: !1
            };
            return e[r].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports
        }
        var n = {};
        return t.m = e, t.c = n, t.p = "", t(0)
    }([function(e, t, n) {
        e.exports = n(1)
    }, function(e, t, n) {
        "use strict";

        function r(e) {
            var t = new s(e),
                n = i(s.prototype.request, t);
            return o.extend(n, s.prototype, t), o.extend(n, t), n
        }
        var o = n(2),
            i = n(3),
            s = n(4),
            a = n(23),
            u = n(10),
            c = r(u);
        c.Axios = s, c.create = function(e) {
            return r(a(c.defaults, e))
        }, c.Cancel = n(24), c.CancelToken = n(25), c.isCancel = n(9), c.all = function(e) {
            return Promise.all(e)
        }, c.spread = n(26), e.exports = c, e.exports.default = c
    }, function(e, t, n) {
        "use strict";

        function r(e) {
            return "[object Array]" === C.call(e)
        }

        function o(e) {
            return "undefined" == typeof e
        }

        function i(e) {
            return null !== e && !o(e) && null !== e.constructor && !o(e.constructor) && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
        }

        function s(e) {
            return "[object ArrayBuffer]" === C.call(e)
        }

        function a(e) {
            return "undefined" != typeof FormData && e instanceof FormData
        }

        function u(e) {
            var t;
            return t = "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && e.buffer instanceof ArrayBuffer
        }

        function c(e) {
            return "string" == typeof e
        }

        function f(e) {
            return "number" == typeof e
        }

        function p(e) {
            return null !== e && "object" == typeof e
        }

        function d(e) {
            return "[object Date]" === C.call(e)
        }

        function l(e) {
            return "[object File]" === C.call(e)
        }

        function h(e) {
            return "[object Blob]" === C.call(e)
        }

        function m(e) {
            return "[object Function]" === C.call(e)
        }

        function y(e) {
            return p(e) && m(e.pipe)
        }

        function g(e) {
            return "undefined" != typeof URLSearchParams && e instanceof URLSearchParams
        }

        function v(e) {
            return e.replace(/^\s*/, "").replace(/\s*$/, "")
        }

        function x() {
            return ("undefined" == typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && ("undefined" != typeof window && "undefined" != typeof document)
        }

        function w(e, t) {
            if (null !== e && "undefined" != typeof e)
                if ("object" != typeof e && (e = [e]), r(e))
                    for (var n = 0, o = e.length; n < o; n++) t.call(null, e[n], n, e);
                else
                    for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && t.call(null, e[i], i, e)
        }

        function b() {
            function e(e, n) {
                "object" == typeof t[n] && "object" == typeof e ? t[n] = b(t[n], e) : t[n] = e
            }
            for (var t = {}, n = 0, r = arguments.length; n < r; n++) w(arguments[n], e);
            return t
        }

        function E() {
            function e(e, n) {
                "object" == typeof t[n] && "object" == typeof e ? t[n] = E(t[n], e) : "object" == typeof e ? t[n] = E({}, e) : t[n] = e
            }
            for (var t = {}, n = 0, r = arguments.length; n < r; n++) w(arguments[n], e);
            return t
        }

        function S(e, t, n) {
            return w(t, function(t, r) {
                n && "function" == typeof t ? e[r] = j(t, n) : e[r] = t
            }), e
        }
        var j = n(3),
            C = Object.prototype.toString;
        e.exports = {
            isArray: r,
            isArrayBuffer: s,
            isBuffer: i,
            isFormData: a,
            isArrayBufferView: u,
            isString: c,
            isNumber: f,
            isObject: p,
            isUndefined: o,
            isDate: d,
            isFile: l,
            isBlob: h,
            isFunction: m,
            isStream: y,
            isURLSearchParams: g,
            isStandardBrowserEnv: x,
            forEach: w,
            merge: b,
            deepMerge: E,
            extend: S,
            trim: v
        }
    }, function(e, t) {
        "use strict";
        e.exports = function(e, t) {
            return function() {
                for (var n = new Array(arguments.length), r = 0; r < n.length; r++) n[r] = arguments[r];
                return e.apply(t, n)
            }
        }
    }, function(e, t, n) {
        "use strict";

        function r(e) {
            this.defaults = e, this.interceptors = {
                request: new s,
                response: new s
            }
        }
        var o = n(2),
            i = n(5),
            s = n(6),
            a = n(7),
            u = n(23);
        r.prototype.request = function(e) {
            "string" == typeof e ? (e = arguments[1] || {}, e.url = arguments[0]) : e = e || {}, e = u(this.defaults, e), e.method ? e.method = e.method.toLowerCase() : this.defaults.method ? e.method = this.defaults.method.toLowerCase() : e.method = "get";
            var t = [a, void 0],
                n = Promise.resolve(e);
            for (this.interceptors.request.forEach(function(e) {
                    t.unshift(e.fulfilled, e.rejected)
                }), this.interceptors.response.forEach(function(e) {
                    t.push(e.fulfilled, e.rejected)
                }); t.length;) n = n.then(t.shift(), t.shift());
            return n
        }, r.prototype.getUri = function(e) {
            return e = u(this.defaults, e), i(e.url, e.params, e.paramsSerializer).replace(/^\?/, "")
        }, o.forEach(["delete", "get", "head", "options"], function(e) {
            r.prototype[e] = function(t, n) {
                return this.request(o.merge(n || {}, {
                    method: e,
                    url: t
                }))
            }
        }), o.forEach(["post", "put", "patch"], function(e) {
            r.prototype[e] = function(t, n, r) {
                return this.request(o.merge(r || {}, {
                    method: e,
                    url: t,
                    data: n
                }))
            }
        }), e.exports = r
    }, function(e, t, n) {
        "use strict";

        function r(e) {
            return encodeURIComponent(e).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
        }
        var o = n(2);
        e.exports = function(e, t, n) {
            if (!t) return e;
            var i;
            if (n) i = n(t);
            else if (o.isURLSearchParams(t)) i = t.toString();
            else {
                var s = [];
                o.forEach(t, function(e, t) {
                    null !== e && "undefined" != typeof e && (o.isArray(e) ? t += "[]" : e = [e], o.forEach(e, function(e) {
                        o.isDate(e) ? e = e.toISOString() : o.isObject(e) && (e = JSON.stringify(e)), s.push(r(t) + "=" + r(e))
                    }))
                }), i = s.join("&")
            }
            if (i) {
                var a = e.indexOf("#");
                a !== -1 && (e = e.slice(0, a)), e += (e.indexOf("?") === -1 ? "?" : "&") + i
            }
            return e
        }
    }, function(e, t, n) {
        "use strict";

        function r() {
            this.handlers = []
        }
        var o = n(2);
        r.prototype.use = function(e, t) {
            return this.handlers.push({
                fulfilled: e,
                rejected: t
            }), this.handlers.length - 1
        }, r.prototype.eject = function(e) {
            this.handlers[e] && (this.handlers[e] = null)
        }, r.prototype.forEach = function(e) {
            o.forEach(this.handlers, function(t) {
                null !== t && e(t)
            })
        }, e.exports = r
    }, function(e, t, n) {
        "use strict";

        function r(e) {
            e.cancelToken && e.cancelToken.throwIfRequested()
        }
        var o = n(2),
            i = n(8),
            s = n(9),
            a = n(10);
        e.exports = function(e) {
            r(e), e.headers = e.headers || {}, e.data = i(e.data, e.headers, e.transformRequest), e.headers = o.merge(e.headers.common || {}, e.headers[e.method] || {}, e.headers), o.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function(t) {
                delete e.headers[t]
            });
            var t = e.adapter || a.adapter;
            return t(e).then(function(t) {
                return r(e), t.data = i(t.data, t.headers, e.transformResponse), t
            }, function(t) {
                return s(t) || (r(e), t && t.response && (t.response.data = i(t.response.data, t.response.headers, e.transformResponse))), Promise.reject(t)
            })
        }
    }, function(e, t, n) {
        "use strict";
        var r = n(2);
        e.exports = function(e, t, n) {
            return r.forEach(n, function(n) {
                e = n(e, t)
            }), e
        }
    }, function(e, t) {
        "use strict";
        e.exports = function(e) {
            return !(!e || !e.__CANCEL__)
        }
    }, function(e, t, n) {
        "use strict";

        function r(e, t) {
            !i.isUndefined(e) && i.isUndefined(e["Content-Type"]) && (e["Content-Type"] = t)
        }

        function o() {
            var e;
            return "undefined" != typeof XMLHttpRequest ? e = n(12) : "undefined" != typeof process && "[object process]" === Object.prototype.toString.call(process) && (e = n(12)), e
        }
        var i = n(2),
            s = n(11),
            a = {
                "Content-Type": "application/x-www-form-urlencoded"
            },
            u = {
                adapter: o(),
                transformRequest: [function(e, t) {
                    return s(t, "Accept"), s(t, "Content-Type"), i.isFormData(e) || i.isArrayBuffer(e) || i.isBuffer(e) || i.isStream(e) || i.isFile(e) || i.isBlob(e) ? e : i.isArrayBufferView(e) ? e.buffer : i.isURLSearchParams(e) ? (r(t, "application/x-www-form-urlencoded;charset=utf-8"), e.toString()) : i.isObject(e) ? (r(t, "application/json;charset=utf-8"), JSON.stringify(e)) : e
                }],
                transformResponse: [function(e) {
                    if ("string" == typeof e) try {
                        e = JSON.parse(e)
                    } catch (e) {}
                    return e
                }],
                timeout: 0,
                xsrfCookieName: "XSRF-TOKEN",
                xsrfHeaderName: "X-XSRF-TOKEN",
                maxContentLength: -1,
                validateStatus: function(e) {
                    return e >= 200 && e < 300
                }
            };
        u.headers = {
            common: {
                Accept: "application/json, text/plain, */*"
            }
        }, i.forEach(["delete", "get", "head"], function(e) {
            u.headers[e] = {}
        }), i.forEach(["post", "put", "patch"], function(e) {
            u.headers[e] = i.merge(a)
        }), e.exports = u
    }, function(e, t, n) {
        "use strict";
        var r = n(2);
        e.exports = function(e, t) {
            r.forEach(e, function(n, r) {
                r !== t && r.toUpperCase() === t.toUpperCase() && (e[t] = n, delete e[r])
            })
        }
    }, function(e, t, n) {
        "use strict";
        var r = n(2),
            o = n(13),
            i = n(5),
            s = n(16),
            a = n(19),
            u = n(20),
            c = n(14);
        e.exports = function(e) {
            return new Promise(function(t, f) {
                var p = e.data,
                    d = e.headers;
                r.isFormData(p) && delete d["Content-Type"];
                var l = new XMLHttpRequest;
                if (e.auth) {
                    var h = e.auth.username || "",
                        m = e.auth.password || "";
                    d.Authorization = "Basic " + btoa(h + ":" + m)
                }
                var y = s(e.baseURL, e.url);
                if (l.open(e.method.toUpperCase(), i(y, e.params, e.paramsSerializer), !0), l.timeout = e.timeout, l.onreadystatechange = function() {
                        if (l && 4 === l.readyState && (0 !== l.status || l.responseURL && 0 === l.responseURL.indexOf("file:"))) {
                            var n = "getAllResponseHeaders" in l ? a(l.getAllResponseHeaders()) : null,
                                r = e.responseType && "text" !== e.responseType ? l.response : l.responseText,
                                i = {
                                    data: r,
                                    status: l.status,
                                    statusText: l.statusText,
                                    headers: n,
                                    config: e,
                                    request: l
                                };
                            o(t, f, i), l = null
                        }
                    }, l.onabort = function() {
                        l && (f(c("Request aborted", e, "ECONNABORTED", l)), l = null)
                    }, l.onerror = function() {
                        f(c("Network Error", e, null, l)), l = null
                    }, l.ontimeout = function() {
                        var t = "timeout of " + e.timeout + "ms exceeded";
                        e.timeoutErrorMessage && (t = e.timeoutErrorMessage), f(c(t, e, "ECONNABORTED", l)), l = null
                    }, r.isStandardBrowserEnv()) {
                    var g = n(22),
                        v = (e.withCredentials || u(y)) && e.xsrfCookieName ? g.read(e.xsrfCookieName) : void 0;
                    v && (d[e.xsrfHeaderName] = v)
                }
                if ("setRequestHeader" in l && r.forEach(d, function(e, t) {
                        "undefined" == typeof p && "content-type" === t.toLowerCase() ? delete d[t] : l.setRequestHeader(t, e)
                    }), r.isUndefined(e.withCredentials) || (l.withCredentials = !!e.withCredentials), e.responseType) try {
                    l.responseType = e.responseType
                } catch (t) {
                    if ("json" !== e.responseType) throw t
                }
                "function" == typeof e.onDownloadProgress && l.addEventListener("progress", e.onDownloadProgress), "function" == typeof e.onUploadProgress && l.upload && l.upload.addEventListener("progress", e.onUploadProgress), e.cancelToken && e.cancelToken.promise.then(function(e) {
                    l && (l.abort(), f(e), l = null)
                }), void 0 === p && (p = null), l.send(p)
            })
        }
    }, function(e, t, n) {
        "use strict";
        var r = n(14);
        e.exports = function(e, t, n) {
            var o = n.config.validateStatus;
            !o || o(n.status) ? e(n) : t(r("Request failed with status code " + n.status, n.config, null, n.request, n))
        }
    }, function(e, t, n) {
        "use strict";
        var r = n(15);
        e.exports = function(e, t, n, o, i) {
            var s = new Error(e);
            return r(s, t, n, o, i)
        }
    }, function(e, t) {
        "use strict";
        e.exports = function(e, t, n, r, o) {
            return e.config = t, n && (e.code = n), e.request = r, e.response = o, e.isAxiosError = !0, e.toJSON = function() {
                return {
                    message: this.message,
                    name: this.name,
                    description: this.description,
                    number: this.number,
                    fileName: this.fileName,
                    lineNumber: this.lineNumber,
                    columnNumber: this.columnNumber,
                    stack: this.stack,
                    config: this.config,
                    code: this.code
                }
            }, e
        }
    }, function(e, t, n) {
        "use strict";
        var r = n(17),
            o = n(18);
        e.exports = function(e, t) {
            return e && !r(t) ? o(e, t) : t
        }
    }, function(e, t) {
        "use strict";
        e.exports = function(e) {
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)
        }
    }, function(e, t) {
        "use strict";
        e.exports = function(e, t) {
            return t ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "") : e
        }
    }, function(e, t, n) {
        "use strict";
        var r = n(2),
            o = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
        e.exports = function(e) {
            var t, n, i, s = {};
            return e ? (r.forEach(e.split("\n"), function(e) {
                if (i = e.indexOf(":"), t = r.trim(e.substr(0, i)).toLowerCase(), n = r.trim(e.substr(i + 1)), t) {
                    if (s[t] && o.indexOf(t) >= 0) return;
                    "set-cookie" === t ? s[t] = (s[t] ? s[t] : []).concat([n]) : s[t] = s[t] ? s[t] + ", " + n : n
                }
            }), s) : s
        }
    }, function(e, t, n) {
        "use strict";
        var r = n(2),
            o = n(21);
        e.exports = r.isStandardBrowserEnv() ? function() {
            function e(e) {
                var t = e;
                if (o(e)) throw new Error("URL contains XSS injection attempt");
                return n && (i.setAttribute("href", t), t = i.href), i.setAttribute("href", t), {
                    href: i.href,
                    protocol: i.protocol ? i.protocol.replace(/:$/, "") : "",
                    host: i.host,
                    search: i.search ? i.search.replace(/^\?/, "") : "",
                    hash: i.hash ? i.hash.replace(/^#/, "") : "",
                    hostname: i.hostname,
                    port: i.port,
                    pathname: "/" === i.pathname.charAt(0) ? i.pathname : "/" + i.pathname
                }
            }
            var t, n = /(msie|trident)/i.test(navigator.userAgent),
                i = document.createElement("a");
            return t = e(window.location.href),
                function(n) {
                    var o = r.isString(n) ? e(n) : n;
                    return o.protocol === t.protocol && o.host === t.host
                }
        }() : function() {
            return function() {
                return !0
            }
        }()
    }, function(e, t) {
        "use strict";
        e.exports = function(e) {
            var t = /(\b)(on\w+)=|javascript|(<\s*)(\/*)script/gi;
            return t.test(e)
        }
    }, function(e, t, n) {
        "use strict";
        var r = n(2);
        e.exports = r.isStandardBrowserEnv() ? function() {
            return {
                write: function(e, t, n, o, i, s) {
                    var a = [];
                    a.push(e + "=" + encodeURIComponent(t)), r.isNumber(n) && a.push("expires=" + new Date(n).toGMTString()), r.isString(o) && a.push("path=" + o), r.isString(i) && a.push("domain=" + i), s === !0 && a.push("secure"), document.cookie = a.join("; ")
                },
                read: function(e) {
                    var t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
                    return t ? decodeURIComponent(t[3]) : null
                },
                remove: function(e) {
                    this.write(e, "", Date.now() - 864e5)
                }
            }
        }() : function() {
            return {
                write: function() {},
                read: function() {
                    return null
                },
                remove: function() {}
            }
        }()
    }, function(e, t, n) {
        "use strict";
        var r = n(2);
        e.exports = function(e, t) {
            t = t || {};
            var n = {},
                o = ["url", "method", "params", "data"],
                i = ["headers", "auth", "proxy"],
                s = ["baseURL", "url", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "maxContentLength", "validateStatus", "maxRedirects", "httpAgent", "httpsAgent", "cancelToken", "socketPath"];
            r.forEach(o, function(e) {
                "undefined" != typeof t[e] && (n[e] = t[e])
            }), r.forEach(i, function(o) {
                r.isObject(t[o]) ? n[o] = r.deepMerge(e[o], t[o]) : "undefined" != typeof t[o] ? n[o] = t[o] : r.isObject(e[o]) ? n[o] = r.deepMerge(e[o]) : "undefined" != typeof e[o] && (n[o] = e[o])
            }), r.forEach(s, function(r) {
                "undefined" != typeof t[r] ? n[r] = t[r] : "undefined" != typeof e[r] && (n[r] = e[r])
            });
            var a = o.concat(i).concat(s),
                u = Object.keys(t).filter(function(e) {
                    return a.indexOf(e) === -1
                });
            return r.forEach(u, function(r) {
                "undefined" != typeof t[r] ? n[r] = t[r] : "undefined" != typeof e[r] && (n[r] = e[r])
            }), n
        }
    }, function(e, t) {
        "use strict";

        function n(e) {
            this.message = e
        }
        n.prototype.toString = function() {
            return "Cancel" + (this.message ? ": " + this.message : "")
        }, n.prototype.__CANCEL__ = !0, e.exports = n
    }, function(e, t, n) {
        "use strict";

        function r(e) {
            if ("function" != typeof e) throw new TypeError("executor must be a function.");
            var t;
            this.promise = new Promise(function(e) {
                t = e
            });
            var n = this;
            e(function(e) {
                n.reason || (n.reason = new o(e), t(n.reason))
            })
        }
        var o = n(24);
        r.prototype.throwIfRequested = function() {
            if (this.reason) throw this.reason
        }, r.source = function() {
            var e, t = new r(function(t) {
                e = t
            });
            return {
                token: t,
                cancel: e
            }
        }, e.exports = r
    }, function(e, t) {
        "use strict";
        e.exports = function(e) {
            return function(t) {
                return e.apply(null, t)
            }
        }
    }])
});
(function(f) {
    if (typeof exports === "object" && typeof module !== "undefined") {
        module.exports = f()
    } else if (typeof define === "function" && define.amd) {
        define([], f)
    } else {
        var g;
        if (typeof window !== "undefined") {
            g = window
        } else if (typeof global !== "undefined") {
            g = global
        } else if (typeof self !== "undefined") {
            g = self
        } else {
            g = this
        }
        g.Chart = f()
    }
})(function() {
    var define, module, exports;
    return function() {
        function e(t, n, r) {
            function s(o, u) {
                if (!n[o]) {
                    if (!t[o]) {
                        var a = typeof require == "function" && require;
                        if (!u && a) return a(o, !0);
                        if (i) return i(o, !0);
                        var f = new Error("Cannot find module '" + o + "'");
                        throw f.code = "MODULE_NOT_FOUND", f
                    }
                    var l = n[o] = {
                        exports: {}
                    };
                    t[o][0].call(l.exports, function(e) {
                        var n = t[o][1][e];
                        return s(n ? n : e)
                    }, l, l.exports, e, t, n, r)
                }
                return n[o].exports
            }
            var i = typeof require == "function" && require;
            for (var o = 0; o < r.length; o++) s(r[o]);
            return s
        }
        return e
    }()({
        1: [function(require, module, exports) {}, {}],
        2: [function(require, module, exports) {
            var colorNames = require(6);
            module.exports = {
                getRgba: getRgba,
                getHsla: getHsla,
                getRgb: getRgb,
                getHsl: getHsl,
                getHwb: getHwb,
                getAlpha: getAlpha,
                hexString: hexString,
                rgbString: rgbString,
                rgbaString: rgbaString,
                percentString: percentString,
                percentaString: percentaString,
                hslString: hslString,
                hslaString: hslaString,
                hwbString: hwbString,
                keyword: keyword
            };

            function getRgba(string) {
                if (!string) {
                    return
                }
                var abbr = /^#([a-fA-F0-9]{3})$/i,
                    hex = /^#([a-fA-F0-9]{6})$/i,
                    rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
                    per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
                    keyword = /(\w+)/;
                var rgb = [0, 0, 0],
                    a = 1,
                    match = string.match(abbr);
                if (match) {
                    match = match[1];
                    for (var i = 0; i < rgb.length; i++) {
                        rgb[i] = parseInt(match[i] + match[i], 16)
                    }
                } else if (match = string.match(hex)) {
                    match = match[1];
                    for (var i = 0; i < rgb.length; i++) {
                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16)
                    }
                } else if (match = string.match(rgba)) {
                    for (var i = 0; i < rgb.length; i++) {
                        rgb[i] = parseInt(match[i + 1])
                    }
                    a = parseFloat(match[4])
                } else if (match = string.match(per)) {
                    for (var i = 0; i < rgb.length; i++) {
                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55)
                    }
                    a = parseFloat(match[4])
                } else if (match = string.match(keyword)) {
                    if (match[1] == "transparent") {
                        return [0, 0, 0, 0]
                    }
                    rgb = colorNames[match[1]];
                    if (!rgb) {
                        return
                    }
                }
                for (var i = 0; i < rgb.length; i++) {
                    rgb[i] = scale(rgb[i], 0, 255)
                }
                if (!a && a != 0) {
                    a = 1
                } else {
                    a = scale(a, 0, 1)
                }
                rgb[3] = a;
                return rgb
            }

            function getHsla(string) {
                if (!string) {
                    return
                }
                var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
                var match = string.match(hsl);
                if (match) {
                    var alpha = parseFloat(match[4]);
                    var h = scale(parseInt(match[1]), 0, 360),
                        s = scale(parseFloat(match[2]), 0, 100),
                        l = scale(parseFloat(match[3]), 0, 100),
                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
                    return [h, s, l, a]
                }
            }

            function getHwb(string) {
                if (!string) {
                    return
                }
                var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
                var match = string.match(hwb);
                if (match) {
                    var alpha = parseFloat(match[4]);
                    var h = scale(parseInt(match[1]), 0, 360),
                        w = scale(parseFloat(match[2]), 0, 100),
                        b = scale(parseFloat(match[3]), 0, 100),
                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
                    return [h, w, b, a]
                }
            }

            function getRgb(string) {
                var rgba = getRgba(string);
                return rgba && rgba.slice(0, 3)
            }

            function getHsl(string) {
                var hsla = getHsla(string);
                return hsla && hsla.slice(0, 3)
            }

            function getAlpha(string) {
                var vals = getRgba(string);
                if (vals) {
                    return vals[3]
                } else if (vals = getHsla(string)) {
                    return vals[3]
                } else if (vals = getHwb(string)) {
                    return vals[3]
                }
            }

            function hexString(rgb) {
                return "#" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2])
            }

            function rgbString(rgba, alpha) {
                if (alpha < 1 || rgba[3] && rgba[3] < 1) {
                    return rgbaString(rgba, alpha)
                }
                return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")"
            }

            function rgbaString(rgba, alpha) {
                if (alpha === undefined) {
                    alpha = rgba[3] !== undefined ? rgba[3] : 1
                }
                return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ", " + alpha + ")"
            }

            function percentString(rgba, alpha) {
                if (alpha < 1 || rgba[3] && rgba[3] < 1) {
                    return percentaString(rgba, alpha)
                }
                var r = Math.round(rgba[0] / 255 * 100),
                    g = Math.round(rgba[1] / 255 * 100),
                    b = Math.round(rgba[2] / 255 * 100);
                return "rgb(" + r + "%, " + g + "%, " + b + "%)"
            }

            function percentaString(rgba, alpha) {
                var r = Math.round(rgba[0] / 255 * 100),
                    g = Math.round(rgba[1] / 255 * 100),
                    b = Math.round(rgba[2] / 255 * 100);
                return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")"
            }

            function hslString(hsla, alpha) {
                if (alpha < 1 || hsla[3] && hsla[3] < 1) {
                    return hslaString(hsla, alpha)
                }
                return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)"
            }

            function hslaString(hsla, alpha) {
                if (alpha === undefined) {
                    alpha = hsla[3] !== undefined ? hsla[3] : 1
                }
                return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, " + alpha + ")"
            }

            function hwbString(hwb, alpha) {
                if (alpha === undefined) {
                    alpha = hwb[3] !== undefined ? hwb[3] : 1
                }
                return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%" + (alpha !== undefined && alpha !== 1 ? ", " + alpha : "") + ")"
            }

            function keyword(rgb) {
                return reverseNames[rgb.slice(0, 3)]
            }

            function scale(num, min, max) {
                return Math.min(Math.max(min, num), max)
            }

            function hexDouble(num) {
                var str = num.toString(16).toUpperCase();
                return str.length < 2 ? "0" + str : str
            }
            var reverseNames = {};
            for (var name in colorNames) {
                reverseNames[colorNames[name]] = name
            }
        }, {
            6: 6
        }],
        3: [function(require, module, exports) {
            var convert = require(5);
            var string = require(2);
            var Color = function(obj) {
                if (obj instanceof Color) {
                    return obj
                }
                if (!(this instanceof Color)) {
                    return new Color(obj)
                }
                this.valid = false;
                this.values = {
                    rgb: [0, 0, 0],
                    hsl: [0, 0, 0],
                    hsv: [0, 0, 0],
                    hwb: [0, 0, 0],
                    cmyk: [0, 0, 0, 0],
                    alpha: 1
                };
                var vals;
                if (typeof obj === "string") {
                    vals = string.getRgba(obj);
                    if (vals) {
                        this.setValues("rgb", vals)
                    } else if (vals = string.getHsla(obj)) {
                        this.setValues("hsl", vals)
                    } else if (vals = string.getHwb(obj)) {
                        this.setValues("hwb", vals)
                    }
                } else if (typeof obj === "object") {
                    vals = obj;
                    if (vals.r !== undefined || vals.red !== undefined) {
                        this.setValues("rgb", vals)
                    } else if (vals.l !== undefined || vals.lightness !== undefined) {
                        this.setValues("hsl", vals)
                    } else if (vals.v !== undefined || vals.value !== undefined) {
                        this.setValues("hsv", vals)
                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {
                        this.setValues("hwb", vals)
                    } else if (vals.c !== undefined || vals.cyan !== undefined) {
                        this.setValues("cmyk", vals)
                    }
                }
            };
            Color.prototype = {
                isValid: function() {
                    return this.valid
                },
                rgb: function() {
                    return this.setSpace("rgb", arguments)
                },
                hsl: function() {
                    return this.setSpace("hsl", arguments)
                },
                hsv: function() {
                    return this.setSpace("hsv", arguments)
                },
                hwb: function() {
                    return this.setSpace("hwb", arguments)
                },
                cmyk: function() {
                    return this.setSpace("cmyk", arguments)
                },
                rgbArray: function() {
                    return this.values.rgb
                },
                hslArray: function() {
                    return this.values.hsl
                },
                hsvArray: function() {
                    return this.values.hsv
                },
                hwbArray: function() {
                    var values = this.values;
                    if (values.alpha !== 1) {
                        return values.hwb.concat([values.alpha])
                    }
                    return values.hwb
                },
                cmykArray: function() {
                    return this.values.cmyk
                },
                rgbaArray: function() {
                    var values = this.values;
                    return values.rgb.concat([values.alpha])
                },
                hslaArray: function() {
                    var values = this.values;
                    return values.hsl.concat([values.alpha])
                },
                alpha: function(val) {
                    if (val === undefined) {
                        return this.values.alpha
                    }
                    this.setValues("alpha", val);
                    return this
                },
                red: function(val) {
                    return this.setChannel("rgb", 0, val)
                },
                green: function(val) {
                    return this.setChannel("rgb", 1, val)
                },
                blue: function(val) {
                    return this.setChannel("rgb", 2, val)
                },
                hue: function(val) {
                    if (val) {
                        val %= 360;
                        val = val < 0 ? 360 + val : val
                    }
                    return this.setChannel("hsl", 0, val)
                },
                saturation: function(val) {
                    return this.setChannel("hsl", 1, val)
                },
                lightness: function(val) {
                    return this.setChannel("hsl", 2, val)
                },
                saturationv: function(val) {
                    return this.setChannel("hsv", 1, val)
                },
                whiteness: function(val) {
                    return this.setChannel("hwb", 1, val)
                },
                blackness: function(val) {
                    return this.setChannel("hwb", 2, val)
                },
                value: function(val) {
                    return this.setChannel("hsv", 2, val)
                },
                cyan: function(val) {
                    return this.setChannel("cmyk", 0, val)
                },
                magenta: function(val) {
                    return this.setChannel("cmyk", 1, val)
                },
                yellow: function(val) {
                    return this.setChannel("cmyk", 2, val)
                },
                black: function(val) {
                    return this.setChannel("cmyk", 3, val)
                },
                hexString: function() {
                    return string.hexString(this.values.rgb)
                },
                rgbString: function() {
                    return string.rgbString(this.values.rgb, this.values.alpha)
                },
                rgbaString: function() {
                    return string.rgbaString(this.values.rgb, this.values.alpha)
                },
                percentString: function() {
                    return string.percentString(this.values.rgb, this.values.alpha)
                },
                hslString: function() {
                    return string.hslString(this.values.hsl, this.values.alpha)
                },
                hslaString: function() {
                    return string.hslaString(this.values.hsl, this.values.alpha)
                },
                hwbString: function() {
                    return string.hwbString(this.values.hwb, this.values.alpha)
                },
                keyword: function() {
                    return string.keyword(this.values.rgb, this.values.alpha)
                },
                rgbNumber: function() {
                    var rgb = this.values.rgb;
                    return rgb[0] << 16 | rgb[1] << 8 | rgb[2]
                },
                luminosity: function() {
                    var rgb = this.values.rgb;
                    var lum = [];
                    for (var i = 0; i < rgb.length; i++) {
                        var chan = rgb[i] / 255;
                        lum[i] = chan <= .03928 ? chan / 12.92 : Math.pow((chan + .055) / 1.055, 2.4)
                    }
                    return .2126 * lum[0] + .7152 * lum[1] + .0722 * lum[2]
                },
                contrast: function(color2) {
                    var lum1 = this.luminosity();
                    var lum2 = color2.luminosity();
                    if (lum1 > lum2) {
                        return (lum1 + .05) / (lum2 + .05)
                    }
                    return (lum2 + .05) / (lum1 + .05)
                },
                level: function(color2) {
                    var contrastRatio = this.contrast(color2);
                    if (contrastRatio >= 7.1) {
                        return "AAA"
                    }
                    return contrastRatio >= 4.5 ? "AA" : ""
                },
                dark: function() {
                    var rgb = this.values.rgb;
                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1e3;
                    return yiq < 128
                },
                light: function() {
                    return !this.dark()
                },
                negate: function() {
                    var rgb = [];
                    for (var i = 0; i < 3; i++) {
                        rgb[i] = 255 - this.values.rgb[i]
                    }
                    this.setValues("rgb", rgb);
                    return this
                },
                lighten: function(ratio) {
                    var hsl = this.values.hsl;
                    hsl[2] += hsl[2] * ratio;
                    this.setValues("hsl", hsl);
                    return this
                },
                darken: function(ratio) {
                    var hsl = this.values.hsl;
                    hsl[2] -= hsl[2] * ratio;
                    this.setValues("hsl", hsl);
                    return this
                },
                saturate: function(ratio) {
                    var hsl = this.values.hsl;
                    hsl[1] += hsl[1] * ratio;
                    this.setValues("hsl", hsl);
                    return this
                },
                desaturate: function(ratio) {
                    var hsl = this.values.hsl;
                    hsl[1] -= hsl[1] * ratio;
                    this.setValues("hsl", hsl);
                    return this
                },
                whiten: function(ratio) {
                    var hwb = this.values.hwb;
                    hwb[1] += hwb[1] * ratio;
                    this.setValues("hwb", hwb);
                    return this
                },
                blacken: function(ratio) {
                    var hwb = this.values.hwb;
                    hwb[2] += hwb[2] * ratio;
                    this.setValues("hwb", hwb);
                    return this
                },
                greyscale: function() {
                    var rgb = this.values.rgb;
                    var val = rgb[0] * .3 + rgb[1] * .59 + rgb[2] * .11;
                    this.setValues("rgb", [val, val, val]);
                    return this
                },
                clearer: function(ratio) {
                    var alpha = this.values.alpha;
                    this.setValues("alpha", alpha - alpha * ratio);
                    return this
                },
                opaquer: function(ratio) {
                    var alpha = this.values.alpha;
                    this.setValues("alpha", alpha + alpha * ratio);
                    return this
                },
                rotate: function(degrees) {
                    var hsl = this.values.hsl;
                    var hue = (hsl[0] + degrees) % 360;
                    hsl[0] = hue < 0 ? 360 + hue : hue;
                    this.setValues("hsl", hsl);
                    return this
                },
                mix: function(mixinColor, weight) {
                    var color1 = this;
                    var color2 = mixinColor;
                    var p = weight === undefined ? .5 : weight;
                    var w = 2 * p - 1;
                    var a = color1.alpha() - color2.alpha();
                    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2;
                    var w2 = 1 - w1;
                    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p))
                },
                toJSON: function() {
                    return this.rgb()
                },
                clone: function() {
                    var result = new Color;
                    var source = this.values;
                    var target = result.values;
                    var value, type;
                    for (var prop in source) {
                        if (source.hasOwnProperty(prop)) {
                            value = source[prop];
                            type = {}.toString.call(value);
                            if (type === "[object Array]") {
                                target[prop] = value.slice(0)
                            } else if (type === "[object Number]") {
                                target[prop] = value
                            } else {
                                console.error("unexpected color value:", value)
                            }
                        }
                    }
                    return result
                }
            };
            Color.prototype.spaces = {
                rgb: ["red", "green", "blue"],
                hsl: ["hue", "saturation", "lightness"],
                hsv: ["hue", "saturation", "value"],
                hwb: ["hue", "whiteness", "blackness"],
                cmyk: ["cyan", "magenta", "yellow", "black"]
            };
            Color.prototype.maxes = {
                rgb: [255, 255, 255],
                hsl: [360, 100, 100],
                hsv: [360, 100, 100],
                hwb: [360, 100, 100],
                cmyk: [100, 100, 100, 100]
            };
            Color.prototype.getValues = function(space) {
                var values = this.values;
                var vals = {};
                for (var i = 0; i < space.length; i++) {
                    vals[space.charAt(i)] = values[space][i]
                }
                if (values.alpha !== 1) {
                    vals.a = values.alpha
                }
                return vals
            };
            Color.prototype.setValues = function(space, vals) {
                var values = this.values;
                var spaces = this.spaces;
                var maxes = this.maxes;
                var alpha = 1;
                var i;
                this.valid = true;
                if (space === "alpha") {
                    alpha = vals
                } else if (vals.length) {
                    values[space] = vals.slice(0, space.length);
                    alpha = vals[space.length]
                } else if (vals[space.charAt(0)] !== undefined) {
                    for (i = 0; i < space.length; i++) {
                        values[space][i] = vals[space.charAt(i)]
                    }
                    alpha = vals.a
                } else if (vals[spaces[space][0]] !== undefined) {
                    var chans = spaces[space];
                    for (i = 0; i < space.length; i++) {
                        values[space][i] = vals[chans[i]]
                    }
                    alpha = vals.alpha
                }
                values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));
                if (space === "alpha") {
                    return false
                }
                var capped;
                for (i = 0; i < space.length; i++) {
                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));
                    values[space][i] = Math.round(capped)
                }
                for (var sname in spaces) {
                    if (sname !== space) {
                        values[sname] = convert[space][sname](values[space])
                    }
                }
                return true
            };
            Color.prototype.setSpace = function(space, args) {
                var vals = args[0];
                if (vals === undefined) {
                    return this.getValues(space)
                }
                if (typeof vals === "number") {
                    vals = Array.prototype.slice.call(args)
                }
                this.setValues(space, vals);
                return this
            };
            Color.prototype.setChannel = function(space, index, val) {
                var svalues = this.values[space];
                if (val === undefined) {
                    return svalues[index]
                } else if (val === svalues[index]) {
                    return this
                }
                svalues[index] = val;
                this.setValues(space, svalues);
                return this
            };
            if (typeof window !== "undefined") {
                window.Color = Color
            }
            module.exports = Color
        }, {
            2: 2,
            5: 5
        }],
        4: [function(require, module, exports) {
            module.exports = {
                rgb2hsl: rgb2hsl,
                rgb2hsv: rgb2hsv,
                rgb2hwb: rgb2hwb,
                rgb2cmyk: rgb2cmyk,
                rgb2keyword: rgb2keyword,
                rgb2xyz: rgb2xyz,
                rgb2lab: rgb2lab,
                rgb2lch: rgb2lch,
                hsl2rgb: hsl2rgb,
                hsl2hsv: hsl2hsv,
                hsl2hwb: hsl2hwb,
                hsl2cmyk: hsl2cmyk,
                hsl2keyword: hsl2keyword,
                hsv2rgb: hsv2rgb,
                hsv2hsl: hsv2hsl,
                hsv2hwb: hsv2hwb,
                hsv2cmyk: hsv2cmyk,
                hsv2keyword: hsv2keyword,
                hwb2rgb: hwb2rgb,
                hwb2hsl: hwb2hsl,
                hwb2hsv: hwb2hsv,
                hwb2cmyk: hwb2cmyk,
                hwb2keyword: hwb2keyword,
                cmyk2rgb: cmyk2rgb,
                cmyk2hsl: cmyk2hsl,
                cmyk2hsv: cmyk2hsv,
                cmyk2hwb: cmyk2hwb,
                cmyk2keyword: cmyk2keyword,
                keyword2rgb: keyword2rgb,
                keyword2hsl: keyword2hsl,
                keyword2hsv: keyword2hsv,
                keyword2hwb: keyword2hwb,
                keyword2cmyk: keyword2cmyk,
                keyword2lab: keyword2lab,
                keyword2xyz: keyword2xyz,
                xyz2rgb: xyz2rgb,
                xyz2lab: xyz2lab,
                xyz2lch: xyz2lch,
                lab2xyz: lab2xyz,
                lab2rgb: lab2rgb,
                lab2lch: lab2lch,
                lch2lab: lch2lab,
                lch2xyz: lch2xyz,
                lch2rgb: lch2rgb
            };

            function rgb2hsl(rgb) {
                var r = rgb[0] / 255,
                    g = rgb[1] / 255,
                    b = rgb[2] / 255,
                    min = Math.min(r, g, b),
                    max = Math.max(r, g, b),
                    delta = max - min,
                    h, s, l;
                if (max == min) h = 0;
                else if (r == max) h = (g - b) / delta;
                else if (g == max) h = 2 + (b - r) / delta;
                else if (b == max) h = 4 + (r - g) / delta;
                h = Math.min(h * 60, 360);
                if (h < 0) h += 360;
                l = (min + max) / 2;
                if (max == min) s = 0;
                else if (l <= .5) s = delta / (max + min);
                else s = delta / (2 - max - min);
                return [h, s * 100, l * 100]
            }

            function rgb2hsv(rgb) {
                var r = rgb[0],
                    g = rgb[1],
                    b = rgb[2],
                    min = Math.min(r, g, b),
                    max = Math.max(r, g, b),
                    delta = max - min,
                    h, s, v;
                if (max == 0) s = 0;
                else s = delta / max * 1e3 / 10;
                if (max == min) h = 0;
                else if (r == max) h = (g - b) / delta;
                else if (g == max) h = 2 + (b - r) / delta;
                else if (b == max) h = 4 + (r - g) / delta;
                h = Math.min(h * 60, 360);
                if (h < 0) h += 360;
                v = max / 255 * 1e3 / 10;
                return [h, s, v]
            }

            function rgb2hwb(rgb) {
                var r = rgb[0],
                    g = rgb[1],
                    b = rgb[2],
                    h = rgb2hsl(rgb)[0],
                    w = 1 / 255 * Math.min(r, Math.min(g, b)),
                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
                return [h, w * 100, b * 100]
            }

            function rgb2cmyk(rgb) {
                var r = rgb[0] / 255,
                    g = rgb[1] / 255,
                    b = rgb[2] / 255,
                    c, m, y, k;
                k = Math.min(1 - r, 1 - g, 1 - b);
                c = (1 - r - k) / (1 - k) || 0;
                m = (1 - g - k) / (1 - k) || 0;
                y = (1 - b - k) / (1 - k) || 0;
                return [c * 100, m * 100, y * 100, k * 100]
            }

            function rgb2keyword(rgb) {
                return reverseKeywords[JSON.stringify(rgb)]
            }

            function rgb2xyz(rgb) {
                var r = rgb[0] / 255,
                    g = rgb[1] / 255,
                    b = rgb[2] / 255;
                r = r > .04045 ? Math.pow((r + .055) / 1.055, 2.4) : r / 12.92;
                g = g > .04045 ? Math.pow((g + .055) / 1.055, 2.4) : g / 12.92;
                b = b > .04045 ? Math.pow((b + .055) / 1.055, 2.4) : b / 12.92;
                var x = r * .4124 + g * .3576 + b * .1805;
                var y = r * .2126 + g * .7152 + b * .0722;
                var z = r * .0193 + g * .1192 + b * .9505;
                return [x * 100, y * 100, z * 100]
            }

            function rgb2lab(rgb) {
                var xyz = rgb2xyz(rgb),
                    x = xyz[0],
                    y = xyz[1],
                    z = xyz[2],
                    l, a, b;
                x /= 95.047;
                y /= 100;
                z /= 108.883;
                x = x > .008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
                y = y > .008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
                z = z > .008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
                l = 116 * y - 16;
                a = 500 * (x - y);
                b = 200 * (y - z);
                return [l, a, b]
            }

            function rgb2lch(args) {
                return lab2lch(rgb2lab(args))
            }

            function hsl2rgb(hsl) {
                var h = hsl[0] / 360,
                    s = hsl[1] / 100,
                    l = hsl[2] / 100,
                    t1, t2, t3, rgb, val;
                if (s == 0) {
                    val = l * 255;
                    return [val, val, val]
                }
                if (l < .5) t2 = l * (1 + s);
                else t2 = l + s - l * s;
                t1 = 2 * l - t2;
                rgb = [0, 0, 0];
                for (var i = 0; i < 3; i++) {
                    t3 = h + 1 / 3 * -(i - 1);
                    t3 < 0 && t3++;
                    t3 > 1 && t3--;
                    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;
                    else if (2 * t3 < 1) val = t2;
                    else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
                    else val = t1;
                    rgb[i] = val * 255
                }
                return rgb
            }

            function hsl2hsv(hsl) {
                var h = hsl[0],
                    s = hsl[1] / 100,
                    l = hsl[2] / 100,
                    sv, v;
                if (l === 0) {
                    return [0, 0, 0]
                }
                l *= 2;
                s *= l <= 1 ? l : 2 - l;
                v = (l + s) / 2;
                sv = 2 * s / (l + s);
                return [h, sv * 100, v * 100]
            }

            function hsl2hwb(args) {
                return rgb2hwb(hsl2rgb(args))
            }

            function hsl2cmyk(args) {
                return rgb2cmyk(hsl2rgb(args))
            }

            function hsl2keyword(args) {
                return rgb2keyword(hsl2rgb(args))
            }

            function hsv2rgb(hsv) {
                var h = hsv[0] / 60,
                    s = hsv[1] / 100,
                    v = hsv[2] / 100,
                    hi = Math.floor(h) % 6;
                var f = h - Math.floor(h),
                    p = 255 * v * (1 - s),
                    q = 255 * v * (1 - s * f),
                    t = 255 * v * (1 - s * (1 - f)),
                    v = 255 * v;
                switch (hi) {
                    case 0:
                        return [v, t, p];
                    case 1:
                        return [q, v, p];
                    case 2:
                        return [p, v, t];
                    case 3:
                        return [p, q, v];
                    case 4:
                        return [t, p, v];
                    case 5:
                        return [v, p, q]
                }
            }

            function hsv2hsl(hsv) {
                var h = hsv[0],
                    s = hsv[1] / 100,
                    v = hsv[2] / 100,
                    sl, l;
                l = (2 - s) * v;
                sl = s * v;
                sl /= l <= 1 ? l : 2 - l;
                sl = sl || 0;
                l /= 2;
                return [h, sl * 100, l * 100]
            }

            function hsv2hwb(args) {
                return rgb2hwb(hsv2rgb(args))
            }

            function hsv2cmyk(args) {
                return rgb2cmyk(hsv2rgb(args))
            }

            function hsv2keyword(args) {
                return rgb2keyword(hsv2rgb(args))
            }

            function hwb2rgb(hwb) {
                var h = hwb[0] / 360,
                    wh = hwb[1] / 100,
                    bl = hwb[2] / 100,
                    ratio = wh + bl,
                    i, v, f, n;
                if (ratio > 1) {
                    wh /= ratio;
                    bl /= ratio
                }
                i = Math.floor(6 * h);
                v = 1 - bl;
                f = 6 * h - i;
                if ((i & 1) != 0) {
                    f = 1 - f
                }
                n = wh + f * (v - wh);
                switch (i) {
                    default:
                        case 6:
                        case 0:
                        r = v;g = n;b = wh;
                    break;
                    case 1:
                            r = n;g = v;b = wh;
                        break;
                    case 2:
                            r = wh;g = v;b = n;
                        break;
                    case 3:
                            r = wh;g = n;b = v;
                        break;
                    case 4:
                            r = n;g = wh;b = v;
                        break;
                    case 5:
                            r = v;g = wh;b = n;
                        break
                }
                return [r * 255, g * 255, b * 255]
            }

            function hwb2hsl(args) {
                return rgb2hsl(hwb2rgb(args))
            }

            function hwb2hsv(args) {
                return rgb2hsv(hwb2rgb(args))
            }

            function hwb2cmyk(args) {
                return rgb2cmyk(hwb2rgb(args))
            }

            function hwb2keyword(args) {
                return rgb2keyword(hwb2rgb(args))
            }

            function cmyk2rgb(cmyk) {
                var c = cmyk[0] / 100,
                    m = cmyk[1] / 100,
                    y = cmyk[2] / 100,
                    k = cmyk[3] / 100,
                    r, g, b;
                r = 1 - Math.min(1, c * (1 - k) + k);
                g = 1 - Math.min(1, m * (1 - k) + k);
                b = 1 - Math.min(1, y * (1 - k) + k);
                return [r * 255, g * 255, b * 255]
            }

            function cmyk2hsl(args) {
                return rgb2hsl(cmyk2rgb(args))
            }

            function cmyk2hsv(args) {
                return rgb2hsv(cmyk2rgb(args))
            }

            function cmyk2hwb(args) {
                return rgb2hwb(cmyk2rgb(args))
            }

            function cmyk2keyword(args) {
                return rgb2keyword(cmyk2rgb(args))
            }

            function xyz2rgb(xyz) {
                var x = xyz[0] / 100,
                    y = xyz[1] / 100,
                    z = xyz[2] / 100,
                    r, g, b;
                r = x * 3.2406 + y * -1.5372 + z * -.4986;
                g = x * -.9689 + y * 1.8758 + z * .0415;
                b = x * .0557 + y * -.204 + z * 1.057;
                r = r > .0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - .055 : r = r * 12.92;
                g = g > .0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - .055 : g = g * 12.92;
                b = b > .0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - .055 : b = b * 12.92;
                r = Math.min(Math.max(0, r), 1);
                g = Math.min(Math.max(0, g), 1);
                b = Math.min(Math.max(0, b), 1);
                return [r * 255, g * 255, b * 255]
            }

            function xyz2lab(xyz) {
                var x = xyz[0],
                    y = xyz[1],
                    z = xyz[2],
                    l, a, b;
                x /= 95.047;
                y /= 100;
                z /= 108.883;
                x = x > .008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
                y = y > .008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
                z = z > .008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
                l = 116 * y - 16;
                a = 500 * (x - y);
                b = 200 * (y - z);
                return [l, a, b]
            }

            function xyz2lch(args) {
                return lab2lch(xyz2lab(args))
            }

            function lab2xyz(lab) {
                var l = lab[0],
                    a = lab[1],
                    b = lab[2],
                    x, y, z, y2;
                if (l <= 8) {
                    y = l * 100 / 903.3;
                    y2 = 7.787 * (y / 100) + 16 / 116
                } else {
                    y = 100 * Math.pow((l + 16) / 116, 3);
                    y2 = Math.pow(y / 100, 1 / 3)
                }
                x = x / 95.047 <= .008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);
                z = z / 108.883 <= .008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);
                return [x, y, z]
            }

            function lab2lch(lab) {
                var l = lab[0],
                    a = lab[1],
                    b = lab[2],
                    hr, h, c;
                hr = Math.atan2(b, a);
                h = hr * 360 / 2 / Math.PI;
                if (h < 0) {
                    h += 360
                }
                c = Math.sqrt(a * a + b * b);
                return [l, c, h]
            }

            function lab2rgb(args) {
                return xyz2rgb(lab2xyz(args))
            }

            function lch2lab(lch) {
                var l = lch[0],
                    c = lch[1],
                    h = lch[2],
                    a, b, hr;
                hr = h / 360 * 2 * Math.PI;
                a = c * Math.cos(hr);
                b = c * Math.sin(hr);
                return [l, a, b]
            }

            function lch2xyz(args) {
                return lab2xyz(lch2lab(args))
            }

            function lch2rgb(args) {
                return lab2rgb(lch2lab(args))
            }

            function keyword2rgb(keyword) {
                return cssKeywords[keyword]
            }

            function keyword2hsl(args) {
                return rgb2hsl(keyword2rgb(args))
            }

            function keyword2hsv(args) {
                return rgb2hsv(keyword2rgb(args))
            }

            function keyword2hwb(args) {
                return rgb2hwb(keyword2rgb(args))
            }

            function keyword2cmyk(args) {
                return rgb2cmyk(keyword2rgb(args))
            }

            function keyword2lab(args) {
                return rgb2lab(keyword2rgb(args))
            }

            function keyword2xyz(args) {
                return rgb2xyz(keyword2rgb(args))
            }
            var cssKeywords = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                grey: [128, 128, 128],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                rebeccapurple: [102, 51, 153],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50]
            };
            var reverseKeywords = {};
            for (var key in cssKeywords) {
                reverseKeywords[JSON.stringify(cssKeywords[key])] = key
            }
        }, {}],
        5: [function(require, module, exports) {
            var conversions = require(4);
            var convert = function() {
                return new Converter
            };
            for (var func in conversions) {
                convert[func + "Raw"] = function(func) {
                    return function(arg) {
                        if (typeof arg == "number") arg = Array.prototype.slice.call(arguments);
                        return conversions[func](arg)
                    }
                }(func);
                var pair = /(\w+)2(\w+)/.exec(func),
                    from = pair[1],
                    to = pair[2];
                convert[from] = convert[from] || {};
                convert[from][to] = convert[func] = function(func) {
                    return function(arg) {
                        if (typeof arg == "number") arg = Array.prototype.slice.call(arguments);
                        var val = conversions[func](arg);
                        if (typeof val == "string" || val === undefined) return val;
                        for (var i = 0; i < val.length; i++) val[i] = Math.round(val[i]);
                        return val
                    }
                }(func)
            }
            var Converter = function() {
                this.convs = {}
            };
            Converter.prototype.routeSpace = function(space, args) {
                var values = args[0];
                if (values === undefined) {
                    return this.getValues(space)
                }
                if (typeof values == "number") {
                    values = Array.prototype.slice.call(args)
                }
                return this.setValues(space, values)
            };
            Converter.prototype.setValues = function(space, values) {
                this.space = space;
                this.convs = {};
                this.convs[space] = values;
                return this
            };
            Converter.prototype.getValues = function(space) {
                var vals = this.convs[space];
                if (!vals) {
                    var fspace = this.space,
                        from = this.convs[fspace];
                    vals = convert[fspace][space](from);
                    this.convs[space] = vals
                }
                return vals
            };
            ["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function(space) {
                Converter.prototype[space] = function(vals) {
                    return this.routeSpace(space, arguments)
                }
            });
            module.exports = convert
        }, {
            4: 4
        }],
        6: [function(require, module, exports) {
            "use strict";
            module.exports = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                grey: [128, 128, 128],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                rebeccapurple: [102, 51, 153],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50]
            }
        }, {}],
        7: [function(require, module, exports) {
            var Chart = require(29)();
            Chart.helpers = require(45);
            require(27)(Chart);
            Chart.defaults = require(25);
            Chart.Element = require(26);
            Chart.elements = require(40);
            Chart.Interaction = require(28);
            Chart.layouts = require(30);
            Chart.platform = require(48);
            Chart.plugins = require(31);
            Chart.Ticks = require(34);
            require(22)(Chart);
            require(23)(Chart);
            require(24)(Chart);
            require(33)(Chart);
            require(32)(Chart);
            require(35)(Chart);
            require(55)(Chart);
            require(53)(Chart);
            require(54)(Chart);
            require(56)(Chart);
            require(57)(Chart);
            require(58)(Chart);
            require(15)(Chart);
            require(16)(Chart);
            require(17)(Chart);
            require(18)(Chart);
            require(19)(Chart);
            require(20)(Chart);
            require(21)(Chart);
            require(8)(Chart);
            require(9)(Chart);
            require(10)(Chart);
            require(11)(Chart);
            require(12)(Chart);
            require(13)(Chart);
            require(14)(Chart);
            var plugins = require(49);
            for (var k in plugins) {
                if (plugins.hasOwnProperty(k)) {
                    Chart.plugins.register(plugins[k])
                }
            }
            Chart.platform.initialize();
            module.exports = Chart;
            if (typeof window !== "undefined") {
                window.Chart = Chart
            }
            Chart.Legend = plugins.legend._element;
            Chart.Title = plugins.title._element;
            Chart.pluginService = Chart.plugins;
            Chart.PluginBase = Chart.Element.extend({});
            Chart.canvasHelpers = Chart.helpers.canvas;
            Chart.layoutService = Chart.layouts
        }, {
            10: 10,
            11: 11,
            12: 12,
            13: 13,
            14: 14,
            15: 15,
            16: 16,
            17: 17,
            18: 18,
            19: 19,
            20: 20,
            21: 21,
            22: 22,
            23: 23,
            24: 24,
            25: 25,
            26: 26,
            27: 27,
            28: 28,
            29: 29,
            30: 30,
            31: 31,
            32: 32,
            33: 33,
            34: 34,
            35: 35,
            40: 40,
            45: 45,
            48: 48,
            49: 49,
            53: 53,
            54: 54,
            55: 55,
            56: 56,
            57: 57,
            58: 58,
            8: 8,
            9: 9
        }],
        8: [function(require, module, exports) {
            "use strict";
            module.exports = function(Chart) {
                Chart.Bar = function(context, config) {
                    config.type = "bar";
                    return new Chart(context, config)
                }
            }
        }, {}],
        9: [function(require, module, exports) {
            "use strict";
            module.exports = function(Chart) {
                Chart.Bubble = function(context, config) {
                    config.type = "bubble";
                    return new Chart(context, config)
                }
            }
        }, {}],
        10: [function(require, module, exports) {
            "use strict";
            module.exports = function(Chart) {
                Chart.Doughnut = function(context, config) {
                    config.type = "doughnut";
                    return new Chart(context, config)
                }
            }
        }, {}],
        11: [function(require, module, exports) {
            "use strict";
            module.exports = function(Chart) {
                Chart.Line = function(context, config) {
                    config.type = "line";
                    return new Chart(context, config)
                }
            }
        }, {}],
        12: [function(require, module, exports) {
            "use strict";
            module.exports = function(Chart) {
                Chart.PolarArea = function(context, config) {
                    config.type = "polarArea";
                    return new Chart(context, config)
                }
            }
        }, {}],
        13: [function(require, module, exports) {
            "use strict";
            module.exports = function(Chart) {
                Chart.Radar = function(context, config) {
                    config.type = "radar";
                    return new Chart(context, config)
                }
            }
        }, {}],
        14: [function(require, module, exports) {
            "use strict";
            module.exports = function(Chart) {
                Chart.Scatter = function(context, config) {
                    config.type = "scatter";
                    return new Chart(context, config)
                }
            }
        }, {}],
        15: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var elements = require(40);
            var helpers = require(45);
            defaults._set("bar", {
                hover: {
                    mode: "label"
                },
                scales: {
                    xAxes: [{
                        type: "category",
                        categoryPercentage: .8,
                        barPercentage: .9,
                        offset: true,
                        gridLines: {
                            offsetGridLines: true
                        }
                    }],
                    yAxes: [{
                        type: "linear"
                    }]
                }
            });
            defaults._set("horizontalBar", {
                hover: {
                    mode: "index",
                    axis: "y"
                },
                scales: {
                    xAxes: [{
                        type: "linear",
                        position: "bottom"
                    }],
                    yAxes: [{
                        position: "left",
                        type: "category",
                        categoryPercentage: .8,
                        barPercentage: .9,
                        offset: true,
                        gridLines: {
                            offsetGridLines: true
                        }
                    }]
                },
                elements: {
                    rectangle: {
                        borderSkipped: "left"
                    }
                },
                tooltips: {
                    callbacks: {
                        title: function(item, data) {
                            var title = "";
                            if (item.length > 0) {
                                if (item[0].yLabel) {
                                    title = item[0].yLabel
                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {
                                    title = data.labels[item[0].index]
                                }
                            }
                            return title
                        },
                        label: function(item, data) {
                            var datasetLabel = data.datasets[item.datasetIndex].label || "";
                            return datasetLabel + ": " + item.xLabel
                        }
                    },
                    mode: "index",
                    axis: "y"
                }
            });

            function computeMinSampleSize(scale, pixels) {
                var min = scale.isHorizontal() ? scale.width : scale.height;
                var ticks = scale.getTicks();
                var prev, curr, i, ilen;
                for (i = 1, ilen = pixels.length; i < ilen; ++i) {
                    min = Math.min(min, pixels[i] - pixels[i - 1])
                }
                for (i = 0, ilen = ticks.length; i < ilen; ++i) {
                    curr = scale.getPixelForTick(i);
                    min = i > 0 ? Math.min(min, curr - prev) : min;
                    prev = curr
                }
                return min
            }

            function computeFitCategoryTraits(index, ruler, options) {
                var thickness = options.barThickness;
                var count = ruler.stackCount;
                var curr = ruler.pixels[index];
                var size, ratio;
                if (helpers.isNullOrUndef(thickness)) {
                    size = ruler.min * options.categoryPercentage;
                    ratio = options.barPercentage
                } else {
                    size = thickness * count;
                    ratio = 1
                }
                return {
                    chunk: size / count,
                    ratio: ratio,
                    start: curr - size / 2
                }
            }

            function computeFlexCategoryTraits(index, ruler, options) {
                var pixels = ruler.pixels;
                var curr = pixels[index];
                var prev = index > 0 ? pixels[index - 1] : null;
                var next = index < pixels.length - 1 ? pixels[index + 1] : null;
                var percent = options.categoryPercentage;
                var start, size;
                if (prev === null) {
                    prev = curr - (next === null ? ruler.end - curr : next - curr)
                }
                if (next === null) {
                    next = curr + curr - prev
                }
                start = curr - (curr - prev) / 2 * percent;
                size = (next - prev) / 2 * percent;
                return {
                    chunk: size / ruler.stackCount,
                    ratio: options.barPercentage,
                    start: start
                }
            }
            module.exports = function(Chart) {
                Chart.controllers.bar = Chart.DatasetController.extend({
                    dataElementType: elements.Rectangle,
                    initialize: function() {
                        var me = this;
                        var meta;
                        Chart.DatasetController.prototype.initialize.apply(me, arguments);
                        meta = me.getMeta();
                        meta.stack = me.getDataset().stack;
                        meta.bar = true
                    },
                    update: function(reset) {
                        var me = this;
                        var rects = me.getMeta().data;
                        var i, ilen;
                        me._ruler = me.getRuler();
                        for (i = 0, ilen = rects.length; i < ilen; ++i) {
                            me.updateElement(rects[i], i, reset)
                        }
                    },
                    updateElement: function(rectangle, index, reset) {
                        var me = this;
                        var chart = me.chart;
                        var meta = me.getMeta();
                        var dataset = me.getDataset();
                        var custom = rectangle.custom || {};
                        var rectangleOptions = chart.options.elements.rectangle;
                        rectangle._xScale = me.getScaleForId(meta.xAxisID);
                        rectangle._yScale = me.getScaleForId(meta.yAxisID);
                        rectangle._datasetIndex = me.index;
                        rectangle._index = index;
                        rectangle._model = {
                            datasetLabel: dataset.label,
                            label: chart.data.labels[index],
                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,
                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),
                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),
                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)
                        };
                        me.updateElementGeometry(rectangle, index, reset);
                        rectangle.pivot()
                    },
                    updateElementGeometry: function(rectangle, index, reset) {
                        var me = this;
                        var model = rectangle._model;
                        var vscale = me.getValueScale();
                        var base = vscale.getBasePixel();
                        var horizontal = vscale.isHorizontal();
                        var ruler = me._ruler || me.getRuler();
                        var vpixels = me.calculateBarValuePixels(me.index, index);
                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);
                        model.horizontal = horizontal;
                        model.base = reset ? base : vpixels.base;
                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;
                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;
                        model.height = horizontal ? ipixels.size : undefined;
                        model.width = horizontal ? undefined : ipixels.size
                    },
                    getValueScaleId: function() {
                        return this.getMeta().yAxisID
                    },
                    getIndexScaleId: function() {
                        return this.getMeta().xAxisID
                    },
                    getValueScale: function() {
                        return this.getScaleForId(this.getValueScaleId())
                    },
                    getIndexScale: function() {
                        return this.getScaleForId(this.getIndexScaleId())
                    },
                    _getStacks: function(last) {
                        var me = this;
                        var chart = me.chart;
                        var scale = me.getIndexScale();
                        var stacked = scale.options.stacked;
                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;
                        var stacks = [];
                        var i, meta;
                        for (i = 0; i < ilen; ++i) {
                            meta = chart.getDatasetMeta(i);
                            if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {
                                stacks.push(meta.stack)
                            }
                        }
                        return stacks
                    },
                    getStackCount: function() {
                        return this._getStacks().length
                    },
                    getStackIndex: function(datasetIndex, name) {
                        var stacks = this._getStacks(datasetIndex);
                        var index = name !== undefined ? stacks.indexOf(name) : -1;
                        return index === -1 ? stacks.length - 1 : index
                    },
                    getRuler: function() {
                        var me = this;
                        var scale = me.getIndexScale();
                        var stackCount = me.getStackCount();
                        var datasetIndex = me.index;
                        var isHorizontal = scale.isHorizontal();
                        var start = isHorizontal ? scale.left : scale.top;
                        var end = start + (isHorizontal ? scale.width : scale.height);
                        var pixels = [];
                        var i, ilen, min;
                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {
                            pixels.push(scale.getPixelForValue(null, i, datasetIndex))
                        }
                        min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;
                        return {
                            min: min,
                            pixels: pixels,
                            start: start,
                            end: end,
                            stackCount: stackCount,
                            scale: scale
                        }
                    },
                    calculateBarValuePixels: function(datasetIndex, index) {
                        var me = this;
                        var chart = me.chart;
                        var meta = me.getMeta();
                        var scale = me.getValueScale();
                        var datasets = chart.data.datasets;
                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);
                        var stacked = scale.options.stacked;
                        var stack = meta.stack;
                        var start = 0;
                        var i, imeta, ivalue, base, head, size;
                        if (stacked || stacked === undefined && stack !== undefined) {
                            for (i = 0; i < datasetIndex; ++i) {
                                imeta = chart.getDatasetMeta(i);
                                if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {
                                    ivalue = scale.getRightValue(datasets[i].data[index]);
                                    if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {
                                        start += ivalue
                                    }
                                }
                            }
                        }
                        base = scale.getPixelForValue(start);
                        head = scale.getPixelForValue(start + value);
                        size = (head - base) / 2;
                        return {
                            size: size,
                            base: base,
                            head: head,
                            center: head + size / 2
                        }
                    },
                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {
                        var me = this;
                        var options = ruler.scale.options;
                        var range = options.barThickness === "flex" ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);
                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);
                        var center = range.start + range.chunk * stackIndex + range.chunk / 2;
                        var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);
                        return {
                            base: center - size / 2,
                            head: center + size / 2,
                            center: center,
                            size: size
                        }
                    },
                    draw: function() {
                        var me = this;
                        var chart = me.chart;
                        var scale = me.getValueScale();
                        var rects = me.getMeta().data;
                        var dataset = me.getDataset();
                        var ilen = rects.length;
                        var i = 0;
                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);
                        for (; i < ilen; ++i) {
                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {
                                rects[i].draw()
                            }
                        }
                        helpers.canvas.unclipArea(chart.ctx)
                    },
                    setHoverStyle: function(rectangle) {
                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];
                        var index = rectangle._index;
                        var custom = rectangle.custom || {};
                        var model = rectangle._model;
                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));
                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth)
                    },
                    removeHoverStyle: function(rectangle) {
                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];
                        var index = rectangle._index;
                        var custom = rectangle.custom || {};
                        var model = rectangle._model;
                        var rectangleElementOptions = this.chart.options.elements.rectangle;
                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);
                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);
                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)
                    }
                });
                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({
                    getValueScaleId: function() {
                        return this.getMeta().xAxisID
                    },
                    getIndexScaleId: function() {
                        return this.getMeta().yAxisID
                    }
                })
            }
        }, {
            25: 25,
            40: 40,
            45: 45
        }],
        16: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var elements = require(40);
            var helpers = require(45);
            defaults._set("bubble", {
                hover: {
                    mode: "single"
                },
                scales: {
                    xAxes: [{
                        type: "linear",
                        position: "bottom",
                        id: "x-axis-0"
                    }],
                    yAxes: [{
                        type: "linear",
                        position: "left",
                        id: "y-axis-0"
                    }]
                },
                tooltips: {
                    callbacks: {
                        title: function() {
                            return ""
                        },
                        label: function(item, data) {
                            var datasetLabel = data.datasets[item.datasetIndex].label || "";
                            var dataPoint = data.datasets[item.datasetIndex].data[item.index];
                            return datasetLabel + ": (" + item.xLabel + ", " + item.yLabel + ", " + dataPoint.r + ")"
                        }
                    }
                }
            });
            module.exports = function(Chart) {
                Chart.controllers.bubble = Chart.DatasetController.extend({
                    dataElementType: elements.Point,
                    update: function(reset) {
                        var me = this;
                        var meta = me.getMeta();
                        var points = meta.data;
                        helpers.each(points, function(point, index) {
                            me.updateElement(point, index, reset)
                        })
                    },
                    updateElement: function(point, index, reset) {
                        var me = this;
                        var meta = me.getMeta();
                        var custom = point.custom || {};
                        var xScale = me.getScaleForId(meta.xAxisID);
                        var yScale = me.getScaleForId(meta.yAxisID);
                        var options = me._resolveElementOptions(point, index);
                        var data = me.getDataset().data[index];
                        var dsIndex = me.index;
                        var x = reset ? xScale.getPixelForDecimal(.5) : xScale.getPixelForValue(typeof data === "object" ? data : NaN, index, dsIndex);
                        var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);
                        point._xScale = xScale;
                        point._yScale = yScale;
                        point._options = options;
                        point._datasetIndex = dsIndex;
                        point._index = index;
                        point._model = {
                            backgroundColor: options.backgroundColor,
                            borderColor: options.borderColor,
                            borderWidth: options.borderWidth,
                            hitRadius: options.hitRadius,
                            pointStyle: options.pointStyle,
                            radius: reset ? 0 : options.radius,
                            skip: custom.skip || isNaN(x) || isNaN(y),
                            x: x,
                            y: y
                        };
                        point.pivot()
                    },
                    setHoverStyle: function(point) {
                        var model = point._model;
                        var options = point._options;
                        model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));
                        model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));
                        model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);
                        model.radius = options.radius + options.hoverRadius
                    },
                    removeHoverStyle: function(point) {
                        var model = point._model;
                        var options = point._options;
                        model.backgroundColor = options.backgroundColor;
                        model.borderColor = options.borderColor;
                        model.borderWidth = options.borderWidth;
                        model.radius = options.radius
                    },
                    _resolveElementOptions: function(point, index) {
                        var me = this;
                        var chart = me.chart;
                        var datasets = chart.data.datasets;
                        var dataset = datasets[me.index];
                        var custom = point.custom || {};
                        var options = chart.options.elements.point;
                        var resolve = helpers.options.resolve;
                        var data = dataset.data[index];
                        var values = {};
                        var i, ilen, key;
                        var context = {
                            chart: chart,
                            dataIndex: index,
                            dataset: dataset,
                            datasetIndex: me.index
                        };
                        var keys = ["backgroundColor", "borderColor", "borderWidth", "hoverBackgroundColor", "hoverBorderColor", "hoverBorderWidth", "hoverRadius", "hitRadius", "pointStyle"];
                        for (i = 0, ilen = keys.length; i < ilen; ++i) {
                            key = keys[i];
                            values[key] = resolve([custom[key], dataset[key], options[key]], context, index)
                        }
                        values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);
                        return values
                    }
                })
            }
        }, {
            25: 25,
            40: 40,
            45: 45
        }],
        17: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var elements = require(40);
            var helpers = require(45);
            defaults._set("doughnut", {
                animation: {
                    animateRotate: true,
                    animateScale: false
                },
                hover: {
                    mode: "single"
                },
                legendCallback: function(chart) {
                    var text = [];
                    text.push('<ul class="' + chart.id + '-legend">');
                    var data = chart.data;
                    var datasets = data.datasets;
                    var labels = data.labels;
                    if (datasets.length) {
                        for (var i = 0; i < datasets[0].data.length; ++i) {
                            text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
                            if (labels[i]) {
                                text.push(labels[i])
                            }
                            text.push("</li>")
                        }
                    }
                    text.push("</ul>");
                    return text.join("")
                },
                legend: {
                    labels: {
                        generateLabels: function(chart) {
                            var data = chart.data;
                            if (data.labels.length && data.datasets.length) {
                                return data.labels.map(function(label, i) {
                                    var meta = chart.getDatasetMeta(0);
                                    var ds = data.datasets[0];
                                    var arc = meta.data[i];
                                    var custom = arc && arc.custom || {};
                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
                                    var arcOpts = chart.options.elements.arc;
                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);
                                    return {
                                        text: label,
                                        fillStyle: fill,
                                        strokeStyle: stroke,
                                        lineWidth: bw,
                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,
                                        index: i
                                    }
                                })
                            }
                            return []
                        }
                    },
                    onClick: function(e, legendItem) {
                        var index = legendItem.index;
                        var chart = this.chart;
                        var i, ilen, meta;
                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
                            meta = chart.getDatasetMeta(i);
                            if (meta.data[index]) {
                                meta.data[index].hidden = !meta.data[index].hidden
                            }
                        }
                        chart.update()
                    }
                },
                cutoutPercentage: 50,
                rotation: Math.PI * -.5,
                circumference: Math.PI * 2,
                tooltips: {
                    callbacks: {
                        title: function() {
                            return ""
                        },
                        label: function(tooltipItem, data) {
                            var dataLabel = data.labels[tooltipItem.index];
                            var value = ": " + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                            if (helpers.isArray(dataLabel)) {
                                dataLabel = dataLabel.slice();
                                dataLabel[0] += value
                            } else {
                                dataLabel += value
                            }
                            return dataLabel
                        }
                    }
                }
            });
            defaults._set("pie", helpers.clone(defaults.doughnut));
            defaults._set("pie", {
                cutoutPercentage: 0
            });
            module.exports = function(Chart) {
                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({
                    dataElementType: elements.Arc,
                    linkScales: helpers.noop,
                    getRingIndex: function(datasetIndex) {
                        var ringIndex = 0;
                        for (var j = 0; j < datasetIndex; ++j) {
                            if (this.chart.isDatasetVisible(j)) {
                                ++ringIndex
                            }
                        }
                        return ringIndex
                    },
                    update: function(reset) {
                        var me = this;
                        var chart = me.chart;
                        var chartArea = chart.chartArea;
                        var opts = chart.options;
                        var arcOpts = opts.elements.arc;
                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;
                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;
                        var minSize = Math.min(availableWidth, availableHeight);
                        var offset = {
                            x: 0,
                            y: 0
                        };
                        var meta = me.getMeta();
                        var cutoutPercentage = opts.cutoutPercentage;
                        var circumference = opts.circumference;
                        if (circumference < Math.PI * 2) {
                            var startAngle = opts.rotation % (Math.PI * 2);
                            startAngle += Math.PI * 2 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);
                            var endAngle = startAngle + circumference;
                            var start = {
                                x: Math.cos(startAngle),
                                y: Math.sin(startAngle)
                            };
                            var end = {
                                x: Math.cos(endAngle),
                                y: Math.sin(endAngle)
                            };
                            var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2 && Math.PI * 2 <= endAngle;
                            var contains90 = startAngle <= Math.PI * .5 && Math.PI * .5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;
                            var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;
                            var contains270 = startAngle <= -Math.PI * .5 && -Math.PI * .5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;
                            var cutout = cutoutPercentage / 100;
                            var min = {
                                x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),
                                y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))
                            };
                            var max = {
                                x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),
                                y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))
                            };
                            var size = {
                                width: (max.x - min.x) * .5,
                                height: (max.y - min.y) * .5
                            };
                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);
                            offset = {
                                x: (max.x + min.x) * -.5,
                                y: (max.y + min.y) * -.5
                            }
                        }
                        chart.borderWidth = me.getMaxBorderWidth(meta.data);
                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);
                        chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);
                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();
                        chart.offsetX = offset.x * chart.outerRadius;
                        chart.offsetY = offset.y * chart.outerRadius;
                        meta.total = me.calculateTotal();
                        me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);
                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);
                        helpers.each(meta.data, function(arc, index) {
                            me.updateElement(arc, index, reset)
                        })
                    },
                    updateElement: function(arc, index, reset) {
                        var me = this;
                        var chart = me.chart;
                        var chartArea = chart.chartArea;
                        var opts = chart.options;
                        var animationOpts = opts.animation;
                        var centerX = (chartArea.left + chartArea.right) / 2;
                        var centerY = (chartArea.top + chartArea.bottom) / 2;
                        var startAngle = opts.rotation;
                        var endAngle = opts.rotation;
                        var dataset = me.getDataset();
                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2 * Math.PI));
                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;
                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;
                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
                        helpers.extend(arc, {
                            _datasetIndex: me.index,
                            _index: index,
                            _model: {
                                x: centerX + chart.offsetX,
                                y: centerY + chart.offsetY,
                                startAngle: startAngle,
                                endAngle: endAngle,
                                circumference: circumference,
                                outerRadius: outerRadius,
                                innerRadius: innerRadius,
                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])
                            }
                        });
                        var model = arc._model;
                        this.removeHoverStyle(arc);
                        if (!reset || !animationOpts.animateRotate) {
                            if (index === 0) {
                                model.startAngle = opts.rotation
                            } else {
                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle
                            }
                            model.endAngle = model.startAngle + model.circumference
                        }
                        arc.pivot()
                    },
                    removeHoverStyle: function(arc) {
                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc)
                    },
                    calculateTotal: function() {
                        var dataset = this.getDataset();
                        var meta = this.getMeta();
                        var total = 0;
                        var value;
                        helpers.each(meta.data, function(element, index) {
                            value = dataset.data[index];
                            if (!isNaN(value) && !element.hidden) {
                                total += Math.abs(value)
                            }
                        });
                        return total
                    },
                    calculateCircumference: function(value) {
                        var total = this.getMeta().total;
                        if (total > 0 && !isNaN(value)) {
                            return Math.PI * 2 * (Math.abs(value) / total)
                        }
                        return 0
                    },
                    getMaxBorderWidth: function(arcs) {
                        var max = 0;
                        var index = this.index;
                        var length = arcs.length;
                        var borderWidth;
                        var hoverWidth;
                        for (var i = 0; i < length; i++) {
                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;
                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;
                            max = borderWidth > max ? borderWidth : max;
                            max = hoverWidth > max ? hoverWidth : max
                        }
                        return max
                    }
                })
            }
        }, {
            25: 25,
            40: 40,
            45: 45
        }],
        18: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var elements = require(40);
            var helpers = require(45);
            defaults._set("line", {
                showLines: true,
                spanGaps: false,
                hover: {
                    mode: "label"
                },
                scales: {
                    xAxes: [{
                        type: "category",
                        id: "x-axis-0"
                    }],
                    yAxes: [{
                        type: "linear",
                        id: "y-axis-0"
                    }]
                }
            });
            module.exports = function(Chart) {
                function lineEnabled(dataset, options) {
                    return helpers.valueOrDefault(dataset.showLine, options.showLines)
                }
                Chart.controllers.line = Chart.DatasetController.extend({
                    datasetElementType: elements.Line,
                    dataElementType: elements.Point,
                    update: function(reset) {
                        var me = this;
                        var meta = me.getMeta();
                        var line = meta.dataset;
                        var points = meta.data || [];
                        var options = me.chart.options;
                        var lineElementOptions = options.elements.line;
                        var scale = me.getScaleForId(meta.yAxisID);
                        var i, ilen, custom;
                        var dataset = me.getDataset();
                        var showLine = lineEnabled(dataset, options);
                        if (showLine) {
                            custom = line.custom || {};
                            if (dataset.tension !== undefined && dataset.lineTension === undefined) {
                                dataset.lineTension = dataset.tension
                            }
                            line._scale = scale;
                            line._datasetIndex = me.index;
                            line._children = points;
                            line._model = {
                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,
                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),
                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,
                                borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,
                                borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,
                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,
                                borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,
                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,
                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,
                                fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,
                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),
                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)
                            };
                            line.pivot()
                        }
                        for (i = 0, ilen = points.length; i < ilen; ++i) {
                            me.updateElement(points[i], i, reset)
                        }
                        if (showLine && line._model.tension !== 0) {
                            me.updateBezierControlPoints()
                        }
                        for (i = 0, ilen = points.length; i < ilen; ++i) {
                            points[i].pivot()
                        }
                    },
                    getPointBackgroundColor: function(point, index) {
                        var backgroundColor = this.chart.options.elements.point.backgroundColor;
                        var dataset = this.getDataset();
                        var custom = point.custom || {};
                        if (custom.backgroundColor) {
                            backgroundColor = custom.backgroundColor
                        } else if (dataset.pointBackgroundColor) {
                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor)
                        } else if (dataset.backgroundColor) {
                            backgroundColor = dataset.backgroundColor
                        }
                        return backgroundColor
                    },
                    getPointBorderColor: function(point, index) {
                        var borderColor = this.chart.options.elements.point.borderColor;
                        var dataset = this.getDataset();
                        var custom = point.custom || {};
                        if (custom.borderColor) {
                            borderColor = custom.borderColor
                        } else if (dataset.pointBorderColor) {
                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor)
                        } else if (dataset.borderColor) {
                            borderColor = dataset.borderColor
                        }
                        return borderColor
                    },
                    getPointBorderWidth: function(point, index) {
                        var borderWidth = this.chart.options.elements.point.borderWidth;
                        var dataset = this.getDataset();
                        var custom = point.custom || {};
                        if (!isNaN(custom.borderWidth)) {
                            borderWidth = custom.borderWidth
                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {
                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth)
                        } else if (!isNaN(dataset.borderWidth)) {
                            borderWidth = dataset.borderWidth
                        }
                        return borderWidth
                    },
                    updateElement: function(point, index, reset) {
                        var me = this;
                        var meta = me.getMeta();
                        var custom = point.custom || {};
                        var dataset = me.getDataset();
                        var datasetIndex = me.index;
                        var value = dataset.data[index];
                        var yScale = me.getScaleForId(meta.yAxisID);
                        var xScale = me.getScaleForId(meta.xAxisID);
                        var pointOptions = me.chart.options.elements.point;
                        var x, y;
                        if (dataset.radius !== undefined && dataset.pointRadius === undefined) {
                            dataset.pointRadius = dataset.radius
                        }
                        if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {
                            dataset.pointHitRadius = dataset.hitRadius
                        }
                        x = xScale.getPixelForValue(typeof value === "object" ? value : NaN, index, datasetIndex);
                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);
                        point._xScale = xScale;
                        point._yScale = yScale;
                        point._datasetIndex = datasetIndex;
                        point._index = index;
                        point._model = {
                            x: x,
                            y: y,
                            skip: custom.skip || isNaN(x) || isNaN(y),
                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),
                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),
                            backgroundColor: me.getPointBackgroundColor(point, index),
                            borderColor: me.getPointBorderColor(point, index),
                            borderWidth: me.getPointBorderWidth(point, index),
                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,
                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,
                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)
                        }
                    },
                    calculatePointY: function(value, index, datasetIndex) {
                        var me = this;
                        var chart = me.chart;
                        var meta = me.getMeta();
                        var yScale = me.getScaleForId(meta.yAxisID);
                        var sumPos = 0;
                        var sumNeg = 0;
                        var i, ds, dsMeta;
                        if (yScale.options.stacked) {
                            for (i = 0; i < datasetIndex; i++) {
                                ds = chart.data.datasets[i];
                                dsMeta = chart.getDatasetMeta(i);
                                if (dsMeta.type === "line" && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {
                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));
                                    if (stackedRightValue < 0) {
                                        sumNeg += stackedRightValue || 0
                                    } else {
                                        sumPos += stackedRightValue || 0
                                    }
                                }
                            }
                            var rightValue = Number(yScale.getRightValue(value));
                            if (rightValue < 0) {
                                return yScale.getPixelForValue(sumNeg + rightValue)
                            }
                            return yScale.getPixelForValue(sumPos + rightValue)
                        }
                        return yScale.getPixelForValue(value)
                    },
                    updateBezierControlPoints: function() {
                        var me = this;
                        var meta = me.getMeta();
                        var area = me.chart.chartArea;
                        var points = meta.data || [];
                        var i, ilen, point, model, controlPoints;
                        if (meta.dataset._model.spanGaps) {
                            points = points.filter(function(pt) {
                                return !pt._model.skip
                            })
                        }

                        function capControlPoint(pt, min, max) {
                            return Math.max(Math.min(pt, max), min)
                        }
                        if (meta.dataset._model.cubicInterpolationMode === "monotone") {
                            helpers.splineCurveMonotone(points)
                        } else {
                            for (i = 0, ilen = points.length; i < ilen; ++i) {
                                point = points[i];
                                model = point._model;
                                controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);
                                model.controlPointPreviousX = controlPoints.previous.x;
                                model.controlPointPreviousY = controlPoints.previous.y;
                                model.controlPointNextX = controlPoints.next.x;
                                model.controlPointNextY = controlPoints.next.y
                            }
                        }
                        if (me.chart.options.elements.line.capBezierPoints) {
                            for (i = 0, ilen = points.length; i < ilen; ++i) {
                                model = points[i]._model;
                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);
                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);
                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);
                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom)
                            }
                        }
                    },
                    draw: function() {
                        var me = this;
                        var chart = me.chart;
                        var meta = me.getMeta();
                        var points = meta.data || [];
                        var area = chart.chartArea;
                        var ilen = points.length;
                        var i = 0;
                        helpers.canvas.clipArea(chart.ctx, area);
                        if (lineEnabled(me.getDataset(), chart.options)) {
                            meta.dataset.draw()
                        }
                        helpers.canvas.unclipArea(chart.ctx);
                        for (; i < ilen; ++i) {
                            points[i].draw(area)
                        }
                    },
                    setHoverStyle: function(point) {
                        var dataset = this.chart.data.datasets[point._datasetIndex];
                        var index = point._index;
                        var custom = point.custom || {};
                        var model = point._model;
                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth)
                    },
                    removeHoverStyle: function(point) {
                        var me = this;
                        var dataset = me.chart.data.datasets[point._datasetIndex];
                        var index = point._index;
                        var custom = point.custom || {};
                        var model = point._model;
                        if (dataset.radius !== undefined && dataset.pointRadius === undefined) {
                            dataset.pointRadius = dataset.radius
                        }
                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);
                        model.backgroundColor = me.getPointBackgroundColor(point, index);
                        model.borderColor = me.getPointBorderColor(point, index);
                        model.borderWidth = me.getPointBorderWidth(point, index)
                    }
                })
            }
        }, {
            25: 25,
            40: 40,
            45: 45
        }],
        19: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var elements = require(40);
            var helpers = require(45);
            defaults._set("polarArea", {
                scale: {
                    type: "radialLinear",
                    angleLines: {
                        display: false
                    },
                    gridLines: {
                        circular: true
                    },
                    pointLabels: {
                        display: false
                    },
                    ticks: {
                        beginAtZero: true
                    }
                },
                animation: {
                    animateRotate: true,
                    animateScale: true
                },
                startAngle: -.5 * Math.PI,
                legendCallback: function(chart) {
                    var text = [];
                    text.push('<ul class="' + chart.id + '-legend">');
                    var data = chart.data;
                    var datasets = data.datasets;
                    var labels = data.labels;
                    if (datasets.length) {
                        for (var i = 0; i < datasets[0].data.length; ++i) {
                            text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
                            if (labels[i]) {
                                text.push(labels[i])
                            }
                            text.push("</li>")
                        }
                    }
                    text.push("</ul>");
                    return text.join("")
                },
                legend: {
                    labels: {
                        generateLabels: function(chart) {
                            var data = chart.data;
                            if (data.labels.length && data.datasets.length) {
                                return data.labels.map(function(label, i) {
                                    var meta = chart.getDatasetMeta(0);
                                    var ds = data.datasets[0];
                                    var arc = meta.data[i];
                                    var custom = arc.custom || {};
                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
                                    var arcOpts = chart.options.elements.arc;
                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);
                                    return {
                                        text: label,
                                        fillStyle: fill,
                                        strokeStyle: stroke,
                                        lineWidth: bw,
                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,
                                        index: i
                                    }
                                })
                            }
                            return []
                        }
                    },
                    onClick: function(e, legendItem) {
                        var index = legendItem.index;
                        var chart = this.chart;
                        var i, ilen, meta;
                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
                            meta = chart.getDatasetMeta(i);
                            meta.data[index].hidden = !meta.data[index].hidden
                        }
                        chart.update()
                    }
                },
                tooltips: {
                    callbacks: {
                        title: function() {
                            return ""
                        },
                        label: function(item, data) {
                            return data.labels[item.index] + ": " + item.yLabel
                        }
                    }
                }
            });
            module.exports = function(Chart) {
                Chart.controllers.polarArea = Chart.DatasetController.extend({
                    dataElementType: elements.Arc,
                    linkScales: helpers.noop,
                    update: function(reset) {
                        var me = this;
                        var chart = me.chart;
                        var chartArea = chart.chartArea;
                        var meta = me.getMeta();
                        var opts = chart.options;
                        var arcOpts = opts.elements.arc;
                        var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);
                        chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);
                        chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);
                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();
                        me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;
                        me.innerRadius = me.outerRadius - chart.radiusLength;
                        meta.count = me.countVisibleElements();
                        helpers.each(meta.data, function(arc, index) {
                            me.updateElement(arc, index, reset)
                        })
                    },
                    updateElement: function(arc, index, reset) {
                        var me = this;
                        var chart = me.chart;
                        var dataset = me.getDataset();
                        var opts = chart.options;
                        var animationOpts = opts.animation;
                        var scale = chart.scale;
                        var labels = chart.data.labels;
                        var circumference = me.calculateCircumference(dataset.data[index]);
                        var centerX = scale.xCenter;
                        var centerY = scale.yCenter;
                        var visibleCount = 0;
                        var meta = me.getMeta();
                        for (var i = 0; i < index; ++i) {
                            if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {
                                ++visibleCount
                            }
                        }
                        var datasetStartAngle = opts.startAngle;
                        var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
                        var startAngle = datasetStartAngle + circumference * visibleCount;
                        var endAngle = startAngle + (arc.hidden ? 0 : circumference);
                        var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
                        helpers.extend(arc, {
                            _datasetIndex: me.index,
                            _index: index,
                            _scale: scale,
                            _model: {
                                x: centerX,
                                y: centerY,
                                innerRadius: 0,
                                outerRadius: reset ? resetRadius : distance,
                                startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,
                                endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,
                                label: helpers.valueAtIndexOrDefault(labels, index, labels[index])
                            }
                        });
                        me.removeHoverStyle(arc);
                        arc.pivot()
                    },
                    removeHoverStyle: function(arc) {
                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc)
                    },
                    countVisibleElements: function() {
                        var dataset = this.getDataset();
                        var meta = this.getMeta();
                        var count = 0;
                        helpers.each(meta.data, function(element, index) {
                            if (!isNaN(dataset.data[index]) && !element.hidden) {
                                count++
                            }
                        });
                        return count
                    },
                    calculateCircumference: function(value) {
                        var count = this.getMeta().count;
                        if (count > 0 && !isNaN(value)) {
                            return 2 * Math.PI / count
                        }
                        return 0
                    }
                })
            }
        }, {
            25: 25,
            40: 40,
            45: 45
        }],
        20: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var elements = require(40);
            var helpers = require(45);
            defaults._set("radar", {
                scale: {
                    type: "radialLinear"
                },
                elements: {
                    line: {
                        tension: 0
                    }
                }
            });
            module.exports = function(Chart) {
                Chart.controllers.radar = Chart.DatasetController.extend({
                    datasetElementType: elements.Line,
                    dataElementType: elements.Point,
                    linkScales: helpers.noop,
                    update: function(reset) {
                        var me = this;
                        var meta = me.getMeta();
                        var line = meta.dataset;
                        var points = meta.data;
                        var custom = line.custom || {};
                        var dataset = me.getDataset();
                        var lineElementOptions = me.chart.options.elements.line;
                        var scale = me.chart.scale;
                        if (dataset.tension !== undefined && dataset.lineTension === undefined) {
                            dataset.lineTension = dataset.tension
                        }
                        helpers.extend(meta.dataset, {
                            _datasetIndex: me.index,
                            _scale: scale,
                            _children: points,
                            _loop: true,
                            _model: {
                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),
                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,
                                borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,
                                borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,
                                fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,
                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,
                                borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,
                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,
                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle
                            }
                        });
                        meta.dataset.pivot();
                        helpers.each(points, function(point, index) {
                            me.updateElement(point, index, reset)
                        }, me);
                        me.updateBezierControlPoints()
                    },
                    updateElement: function(point, index, reset) {
                        var me = this;
                        var custom = point.custom || {};
                        var dataset = me.getDataset();
                        var scale = me.chart.scale;
                        var pointElementOptions = me.chart.options.elements.point;
                        var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);
                        if (dataset.radius !== undefined && dataset.pointRadius === undefined) {
                            dataset.pointRadius = dataset.radius
                        }
                        if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {
                            dataset.pointHitRadius = dataset.hitRadius
                        }
                        helpers.extend(point, {
                            _datasetIndex: me.index,
                            _index: index,
                            _scale: scale,
                            _model: {
                                x: reset ? scale.xCenter : pointPosition.x,
                                y: reset ? scale.yCenter : pointPosition.y,
                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),
                                radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),
                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),
                                borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),
                                borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),
                                pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),
                                hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)
                            }
                        });
                        point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y)
                    },
                    updateBezierControlPoints: function() {
                        var chartArea = this.chart.chartArea;
                        var meta = this.getMeta();
                        helpers.each(meta.data, function(point, index) {
                            var model = point._model;
                            var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension);
                            model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);
                            model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);
                            model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);
                            model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);
                            point.pivot()
                        })
                    },
                    setHoverStyle: function(point) {
                        var dataset = this.chart.data.datasets[point._datasetIndex];
                        var custom = point.custom || {};
                        var index = point._index;
                        var model = point._model;
                        model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth)
                    },
                    removeHoverStyle: function(point) {
                        var dataset = this.chart.data.datasets[point._datasetIndex];
                        var custom = point.custom || {};
                        var index = point._index;
                        var model = point._model;
                        var pointElementOptions = this.chart.options.elements.point;
                        model.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);
                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);
                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);
                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth)
                    }
                })
            }
        }, {
            25: 25,
            40: 40,
            45: 45
        }],
        21: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            defaults._set("scatter", {
                hover: {
                    mode: "single"
                },
                scales: {
                    xAxes: [{
                        id: "x-axis-1",
                        type: "linear",
                        position: "bottom"
                    }],
                    yAxes: [{
                        id: "y-axis-1",
                        type: "linear",
                        position: "left"
                    }]
                },
                showLines: false,
                tooltips: {
                    callbacks: {
                        title: function() {
                            return ""
                        },
                        label: function(item) {
                            return "(" + item.xLabel + ", " + item.yLabel + ")"
                        }
                    }
                }
            });
            module.exports = function(Chart) {
                Chart.controllers.scatter = Chart.controllers.line
            }
        }, {
            25: 25
        }],
        22: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var Element = require(26);
            var helpers = require(45);
            defaults._set("global", {
                animation: {
                    duration: 1e3,
                    easing: "easeOutQuart",
                    onProgress: helpers.noop,
                    onComplete: helpers.noop
                }
            });
            module.exports = function(Chart) {
                Chart.Animation = Element.extend({
                    chart: null,
                    currentStep: 0,
                    numSteps: 60,
                    easing: "",
                    render: null,
                    onAnimationProgress: null,
                    onAnimationComplete: null
                });
                Chart.animationService = {
                    frameDuration: 17,
                    animations: [],
                    dropFrames: 0,
                    request: null,
                    addAnimation: function(chart, animation, duration, lazy) {
                        var animations = this.animations;
                        var i, ilen;
                        animation.chart = chart;
                        if (!lazy) {
                            chart.animating = true
                        }
                        for (i = 0, ilen = animations.length; i < ilen; ++i) {
                            if (animations[i].chart === chart) {
                                animations[i] = animation;
                                return
                            }
                        }
                        animations.push(animation);
                        if (animations.length === 1) {
                            this.requestAnimationFrame()
                        }
                    },
                    cancelAnimation: function(chart) {
                        var index = helpers.findIndex(this.animations, function(animation) {
                            return animation.chart === chart
                        });
                        if (index !== -1) {
                            this.animations.splice(index, 1);
                            chart.animating = false
                        }
                    },
                    requestAnimationFrame: function() {
                        var me = this;
                        if (me.request === null) {
                            me.request = helpers.requestAnimFrame.call(window, function() {
                                me.request = null;
                                me.startDigest()
                            })
                        }
                    },
                    startDigest: function() {
                        var me = this;
                        var startTime = Date.now();
                        var framesToDrop = 0;
                        if (me.dropFrames > 1) {
                            framesToDrop = Math.floor(me.dropFrames);
                            me.dropFrames = me.dropFrames % 1
                        }
                        me.advance(1 + framesToDrop);
                        var endTime = Date.now();
                        me.dropFrames += (endTime - startTime) / me.frameDuration;
                        if (me.animations.length > 0) {
                            me.requestAnimationFrame()
                        }
                    },
                    advance: function(count) {
                        var animations = this.animations;
                        var animation, chart;
                        var i = 0;
                        while (i < animations.length) {
                            animation = animations[i];
                            chart = animation.chart;
                            animation.currentStep = (animation.currentStep || 0) + count;
                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);
                            helpers.callback(animation.render, [chart, animation], chart);
                            helpers.callback(animation.onAnimationProgress, [animation], chart);
                            if (animation.currentStep >= animation.numSteps) {
                                helpers.callback(animation.onAnimationComplete, [animation], chart);
                                chart.animating = false;
                                animations.splice(i, 1)
                            } else {
                                ++i
                            }
                        }
                    }
                };
                Object.defineProperty(Chart.Animation.prototype, "animationObject", {
                    get: function() {
                        return this
                    }
                });
                Object.defineProperty(Chart.Animation.prototype, "chartInstance", {
                    get: function() {
                        return this.chart
                    },
                    set: function(value) {
                        this.chart = value
                    }
                })
            }
        }, {
            25: 25,
            26: 26,
            45: 45
        }],
        23: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var helpers = require(45);
            var Interaction = require(28);
            var layouts = require(30);
            var platform = require(48);
            var plugins = require(31);
            module.exports = function(Chart) {
                Chart.types = {};
                Chart.instances = {};
                Chart.controllers = {};

                function initConfig(config) {
                    config = config || {};
                    var data = config.data = config.data || {};
                    data.datasets = data.datasets || [];
                    data.labels = data.labels || [];
                    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});
                    return config
                }

                function updateConfig(chart) {
                    var newOptions = chart.options;
                    helpers.each(chart.scales, function(scale) {
                        layouts.removeBox(chart, scale)
                    });
                    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);
                    chart.options = chart.config.options = newOptions;
                    chart.ensureScalesHaveIDs();
                    chart.buildOrUpdateScales();
                    chart.tooltip._options = newOptions.tooltips;
                    chart.tooltip.initialize()
                }

                function positionIsHorizontal(position) {
                    return position === "top" || position === "bottom"
                }
                helpers.extend(Chart.prototype, {
                    construct: function(item, config) {
                        var me = this;
                        config = initConfig(config);
                        var context = platform.acquireContext(item, config);
                        var canvas = context && context.canvas;
                        var height = canvas && canvas.height;
                        var width = canvas && canvas.width;
                        me.id = helpers.uid();
                        me.ctx = context;
                        me.canvas = canvas;
                        me.config = config;
                        me.width = width;
                        me.height = height;
                        me.aspectRatio = height ? width / height : null;
                        me.options = config.options;
                        me._bufferedRender = false;
                        me.chart = me;
                        me.controller = me;
                        Chart.instances[me.id] = me;
                        Object.defineProperty(me, "data", {
                            get: function() {
                                return me.config.data
                            },
                            set: function(value) {
                                me.config.data = value
                            }
                        });
                        if (!context || !canvas) {
                            console.error("Failed to create chart: can't acquire context from the given item");
                            return
                        }
                        me.initialize();
                        me.update()
                    },
                    initialize: function() {
                        var me = this;
                        plugins.notify(me, "beforeInit");
                        helpers.retinaScale(me, me.options.devicePixelRatio);
                        me.bindEvents();
                        if (me.options.responsive) {
                            me.resize(true)
                        }
                        me.ensureScalesHaveIDs();
                        me.buildOrUpdateScales();
                        me.initToolTip();
                        plugins.notify(me, "afterInit");
                        return me
                    },
                    clear: function() {
                        helpers.canvas.clear(this);
                        return this
                    },
                    stop: function() {
                        Chart.animationService.cancelAnimation(this);
                        return this
                    },
                    resize: function(silent) {
                        var me = this;
                        var options = me.options;
                        var canvas = me.canvas;
                        var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null;
                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));
                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));
                        if (me.width === newWidth && me.height === newHeight) {
                            return
                        }
                        canvas.width = me.width = newWidth;
                        canvas.height = me.height = newHeight;
                        canvas.style.width = newWidth + "px";
                        canvas.style.height = newHeight + "px";
                        helpers.retinaScale(me, options.devicePixelRatio);
                        if (!silent) {
                            var newSize = {
                                width: newWidth,
                                height: newHeight
                            };
                            plugins.notify(me, "resize", [newSize]);
                            if (me.options.onResize) {
                                me.options.onResize(me, newSize)
                            }
                            me.stop();
                            me.update(me.options.responsiveAnimationDuration)
                        }
                    },
                    ensureScalesHaveIDs: function() {
                        var options = this.options;
                        var scalesOptions = options.scales || {};
                        var scaleOptions = options.scale;
                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {
                            xAxisOptions.id = xAxisOptions.id || "x-axis-" + index
                        });
                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {
                            yAxisOptions.id = yAxisOptions.id || "y-axis-" + index
                        });
                        if (scaleOptions) {
                            scaleOptions.id = scaleOptions.id || "scale"
                        }
                    },
                    buildOrUpdateScales: function() {
                        var me = this;
                        var options = me.options;
                        var scales = me.scales || {};
                        var items = [];
                        var updated = Object.keys(scales).reduce(function(obj, id) {
                            obj[id] = false;
                            return obj
                        }, {});
                        if (options.scales) {
                            items = items.concat((options.scales.xAxes || []).map(function(xAxisOptions) {
                                return {
                                    options: xAxisOptions,
                                    dtype: "category",
                                    dposition: "bottom"
                                }
                            }), (options.scales.yAxes || []).map(function(yAxisOptions) {
                                return {
                                    options: yAxisOptions,
                                    dtype: "linear",
                                    dposition: "left"
                                }
                            }))
                        }
                        if (options.scale) {
                            items.push({
                                options: options.scale,
                                dtype: "radialLinear",
                                isDefault: true,
                                dposition: "chartArea"
                            })
                        }
                        helpers.each(items, function(item) {
                            var scaleOptions = item.options;
                            var id = scaleOptions.id;
                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);
                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {
                                scaleOptions.position = item.dposition
                            }
                            updated[id] = true;
                            var scale = null;
                            if (id in scales && scales[id].type === scaleType) {
                                scale = scales[id];
                                scale.options = scaleOptions;
                                scale.ctx = me.ctx;
                                scale.chart = me
                            } else {
                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);
                                if (!scaleClass) {
                                    return
                                }
                                scale = new scaleClass({
                                    id: id,
                                    type: scaleType,
                                    options: scaleOptions,
                                    ctx: me.ctx,
                                    chart: me
                                });
                                scales[scale.id] = scale
                            }
                            scale.mergeTicksOptions();
                            if (item.isDefault) {
                                me.scale = scale
                            }
                        });
                        helpers.each(updated, function(hasUpdated, id) {
                            if (!hasUpdated) {
                                delete scales[id]
                            }
                        });
                        me.scales = scales;
                        Chart.scaleService.addScalesToLayout(this)
                    },
                    buildOrUpdateControllers: function() {
                        var me = this;
                        var types = [];
                        var newControllers = [];
                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {
                            var meta = me.getDatasetMeta(datasetIndex);
                            var type = dataset.type || me.config.type;
                            if (meta.type && meta.type !== type) {
                                me.destroyDatasetMeta(datasetIndex);
                                meta = me.getDatasetMeta(datasetIndex)
                            }
                            meta.type = type;
                            types.push(meta.type);
                            if (meta.controller) {
                                meta.controller.updateIndex(datasetIndex);
                                meta.controller.linkScales()
                            } else {
                                var ControllerClass = Chart.controllers[meta.type];
                                if (ControllerClass === undefined) {
                                    throw new Error('"' + meta.type + '" is not a chart type.')
                                }
                                meta.controller = new ControllerClass(me, datasetIndex);
                                newControllers.push(meta.controller)
                            }
                        }, me);
                        return newControllers
                    },
                    resetElements: function() {
                        var me = this;
                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {
                            me.getDatasetMeta(datasetIndex).controller.reset()
                        }, me)
                    },
                    reset: function() {
                        this.resetElements();
                        this.tooltip.initialize()
                    },
                    update: function(config) {
                        var me = this;
                        if (!config || typeof config !== "object") {
                            config = {
                                duration: config,
                                lazy: arguments[1]
                            }
                        }
                        updateConfig(me);
                        plugins._invalidate(me);
                        if (plugins.notify(me, "beforeUpdate") === false) {
                            return
                        }
                        me.tooltip._data = me.data;
                        var newControllers = me.buildOrUpdateControllers();
                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {
                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements()
                        }, me);
                        me.updateLayout();
                        if (me.options.animation && me.options.animation.duration) {
                            helpers.each(newControllers, function(controller) {
                                controller.reset()
                            })
                        }
                        me.updateDatasets();
                        me.tooltip.initialize();
                        me.lastActive = [];
                        plugins.notify(me, "afterUpdate");
                        if (me._bufferedRender) {
                            me._bufferedRequest = {
                                duration: config.duration,
                                easing: config.easing,
                                lazy: config.lazy
                            }
                        } else {
                            me.render(config)
                        }
                    },
                    updateLayout: function() {
                        var me = this;
                        if (plugins.notify(me, "beforeLayout") === false) {
                            return
                        }
                        layouts.update(this, this.width, this.height);
                        plugins.notify(me, "afterScaleUpdate");
                        plugins.notify(me, "afterLayout")
                    },
                    updateDatasets: function() {
                        var me = this;
                        if (plugins.notify(me, "beforeDatasetsUpdate") === false) {
                            return
                        }
                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
                            me.updateDataset(i)
                        }
                        plugins.notify(me, "afterDatasetsUpdate")
                    },
                    updateDataset: function(index) {
                        var me = this;
                        var meta = me.getDatasetMeta(index);
                        var args = {
                            meta: meta,
                            index: index
                        };
                        if (plugins.notify(me, "beforeDatasetUpdate", [args]) === false) {
                            return
                        }
                        meta.controller.update();
                        plugins.notify(me, "afterDatasetUpdate", [args])
                    },
                    render: function(config) {
                        var me = this;
                        if (!config || typeof config !== "object") {
                            config = {
                                duration: config,
                                lazy: arguments[1]
                            }
                        }
                        var duration = config.duration;
                        var lazy = config.lazy;
                        if (plugins.notify(me, "beforeRender") === false) {
                            return
                        }
                        var animationOptions = me.options.animation;
                        var onComplete = function(animation) {
                            plugins.notify(me, "afterRender");
                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me)
                        };
                        if (animationOptions && (typeof duration !== "undefined" && duration !== 0 || typeof duration === "undefined" && animationOptions.duration !== 0)) {
                            var animation = new Chart.Animation({
                                numSteps: (duration || animationOptions.duration) / 16.66,
                                easing: config.easing || animationOptions.easing,
                                render: function(chart, animationObject) {
                                    var easingFunction = helpers.easing.effects[animationObject.easing];
                                    var currentStep = animationObject.currentStep;
                                    var stepDecimal = currentStep / animationObject.numSteps;
                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep)
                                },
                                onAnimationProgress: animationOptions.onProgress,
                                onAnimationComplete: onComplete
                            });
                            Chart.animationService.addAnimation(me, animation, duration, lazy)
                        } else {
                            me.draw();
                            onComplete(new Chart.Animation({
                                numSteps: 0,
                                chart: me
                            }))
                        }
                        return me
                    },
                    draw: function(easingValue) {
                        var me = this;
                        me.clear();
                        if (helpers.isNullOrUndef(easingValue)) {
                            easingValue = 1
                        }
                        me.transition(easingValue);
                        if (plugins.notify(me, "beforeDraw", [easingValue]) === false) {
                            return
                        }
                        helpers.each(me.boxes, function(box) {
                            box.draw(me.chartArea)
                        }, me);
                        if (me.scale) {
                            me.scale.draw()
                        }
                        me.drawDatasets(easingValue);
                        me._drawTooltip(easingValue);
                        plugins.notify(me, "afterDraw", [easingValue])
                    },
                    transition: function(easingValue) {
                        var me = this;
                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {
                            if (me.isDatasetVisible(i)) {
                                me.getDatasetMeta(i).controller.transition(easingValue)
                            }
                        }
                        me.tooltip.transition(easingValue)
                    },
                    drawDatasets: function(easingValue) {
                        var me = this;
                        if (plugins.notify(me, "beforeDatasetsDraw", [easingValue]) === false) {
                            return
                        }
                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {
                            if (me.isDatasetVisible(i)) {
                                me.drawDataset(i, easingValue)
                            }
                        }
                        plugins.notify(me, "afterDatasetsDraw", [easingValue])
                    },
                    drawDataset: function(index, easingValue) {
                        var me = this;
                        var meta = me.getDatasetMeta(index);
                        var args = {
                            meta: meta,
                            index: index,
                            easingValue: easingValue
                        };
                        if (plugins.notify(me, "beforeDatasetDraw", [args]) === false) {
                            return
                        }
                        meta.controller.draw(easingValue);
                        plugins.notify(me, "afterDatasetDraw", [args])
                    },
                    _drawTooltip: function(easingValue) {
                        var me = this;
                        var tooltip = me.tooltip;
                        var args = {
                            tooltip: tooltip,
                            easingValue: easingValue
                        };
                        if (plugins.notify(me, "beforeTooltipDraw", [args]) === false) {
                            return
                        }
                        tooltip.draw();
                        plugins.notify(me, "afterTooltipDraw", [args])
                    },
                    getElementAtEvent: function(e) {
                        return Interaction.modes.single(this, e)
                    },
                    getElementsAtEvent: function(e) {
                        return Interaction.modes.label(this, e, {
                            intersect: true
                        })
                    },
                    getElementsAtXAxis: function(e) {
                        return Interaction.modes["x-axis"](this, e, {
                            intersect: true
                        })
                    },
                    getElementsAtEventForMode: function(e, mode, options) {
                        var method = Interaction.modes[mode];
                        if (typeof method === "function") {
                            return method(this, e, options)
                        }
                        return []
                    },
                    getDatasetAtEvent: function(e) {
                        return Interaction.modes.dataset(this, e, {
                            intersect: true
                        })
                    },
                    getDatasetMeta: function(datasetIndex) {
                        var me = this;
                        var dataset = me.data.datasets[datasetIndex];
                        if (!dataset._meta) {
                            dataset._meta = {}
                        }
                        var meta = dataset._meta[me.id];
                        if (!meta) {
                            meta = dataset._meta[me.id] = {
                                type: null,
                                data: [],
                                dataset: null,
                                controller: null,
                                hidden: null,
                                xAxisID: null,
                                yAxisID: null
                            }
                        }
                        return meta
                    },
                    getVisibleDatasetCount: function() {
                        var count = 0;
                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {
                            if (this.isDatasetVisible(i)) {
                                count++
                            }
                        }
                        return count
                    },
                    isDatasetVisible: function(datasetIndex) {
                        var meta = this.getDatasetMeta(datasetIndex);
                        return typeof meta.hidden === "boolean" ? !meta.hidden : !this.data.datasets[datasetIndex].hidden
                    },
                    generateLegend: function() {
                        return this.options.legendCallback(this)
                    },
                    destroyDatasetMeta: function(datasetIndex) {
                        var id = this.id;
                        var dataset = this.data.datasets[datasetIndex];
                        var meta = dataset._meta && dataset._meta[id];
                        if (meta) {
                            meta.controller.destroy();
                            delete dataset._meta[id]
                        }
                    },
                    destroy: function() {
                        var me = this;
                        var canvas = me.canvas;
                        var i, ilen;
                        me.stop();
                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
                            me.destroyDatasetMeta(i)
                        }
                        if (canvas) {
                            me.unbindEvents();
                            helpers.canvas.clear(me);
                            platform.releaseContext(me.ctx);
                            me.canvas = null;
                            me.ctx = null
                        }
                        plugins.notify(me, "destroy");
                        delete Chart.instances[me.id]
                    },
                    toBase64Image: function() {
                        return this.canvas.toDataURL.apply(this.canvas, arguments)
                    },
                    initToolTip: function() {
                        var me = this;
                        me.tooltip = new Chart.Tooltip({
                            _chart: me,
                            _chartInstance: me,
                            _data: me.data,
                            _options: me.options.tooltips
                        }, me)
                    },
                    bindEvents: function() {
                        var me = this;
                        var listeners = me._listeners = {};
                        var listener = function() {
                            me.eventHandler.apply(me, arguments)
                        };
                        helpers.each(me.options.events, function(type) {
                            platform.addEventListener(me, type, listener);
                            listeners[type] = listener
                        });
                        if (me.options.responsive) {
                            listener = function() {
                                me.resize()
                            };
                            platform.addEventListener(me, "resize", listener);
                            listeners.resize = listener
                        }
                    },
                    unbindEvents: function() {
                        var me = this;
                        var listeners = me._listeners;
                        if (!listeners) {
                            return
                        }
                        delete me._listeners;
                        helpers.each(listeners, function(listener, type) {
                            platform.removeEventListener(me, type, listener)
                        })
                    },
                    updateHoverStyle: function(elements, mode, enabled) {
                        var method = enabled ? "setHoverStyle" : "removeHoverStyle";
                        var element, i, ilen;
                        for (i = 0, ilen = elements.length; i < ilen; ++i) {
                            element = elements[i];
                            if (element) {
                                this.getDatasetMeta(element._datasetIndex).controller[method](element)
                            }
                        }
                    },
                    eventHandler: function(e) {
                        var me = this;
                        var tooltip = me.tooltip;
                        if (plugins.notify(me, "beforeEvent", [e]) === false) {
                            return
                        }
                        me._bufferedRender = true;
                        me._bufferedRequest = null;
                        var changed = me.handleEvent(e);
                        if (tooltip) {
                            changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e)
                        }
                        plugins.notify(me, "afterEvent", [e]);
                        var bufferedRequest = me._bufferedRequest;
                        if (bufferedRequest) {
                            me.render(bufferedRequest)
                        } else if (changed && !me.animating) {
                            me.stop();
                            me.render(me.options.hover.animationDuration, true)
                        }
                        me._bufferedRender = false;
                        me._bufferedRequest = null;
                        return me
                    },
                    handleEvent: function(e) {
                        var me = this;
                        var options = me.options || {};
                        var hoverOptions = options.hover;
                        var changed = false;
                        me.lastActive = me.lastActive || [];
                        if (e.type === "mouseout") {
                            me.active = []
                        } else {
                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions)
                        }
                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);
                        if (e.type === "mouseup" || e.type === "click") {
                            if (options.onClick) {
                                options.onClick.call(me, e.native, me.active)
                            }
                        }
                        if (me.lastActive.length) {
                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false)
                        }
                        if (me.active.length && hoverOptions.mode) {
                            me.updateHoverStyle(me.active, hoverOptions.mode, true)
                        }
                        changed = !helpers.arrayEquals(me.active, me.lastActive);
                        me.lastActive = me.active;
                        return changed
                    }
                });
                Chart.Controller = Chart
            }
        }, {
            25: 25,
            28: 28,
            30: 30,
            31: 31,
            45: 45,
            48: 48
        }],
        24: [function(require, module, exports) {
            "use strict";
            var helpers = require(45);
            module.exports = function(Chart) {
                var arrayEvents = ["push", "pop", "shift", "splice", "unshift"];

                function listenArrayEvents(array, listener) {
                    if (array._chartjs) {
                        array._chartjs.listeners.push(listener);
                        return
                    }
                    Object.defineProperty(array, "_chartjs", {
                        configurable: true,
                        enumerable: false,
                        value: {
                            listeners: [listener]
                        }
                    });
                    arrayEvents.forEach(function(key) {
                        var method = "onData" + key.charAt(0).toUpperCase() + key.slice(1);
                        var base = array[key];
                        Object.defineProperty(array, key, {
                            configurable: true,
                            enumerable: false,
                            value: function() {
                                var args = Array.prototype.slice.call(arguments);
                                var res = base.apply(this, args);
                                helpers.each(array._chartjs.listeners, function(object) {
                                    if (typeof object[method] === "function") {
                                        object[method].apply(object, args)
                                    }
                                });
                                return res
                            }
                        })
                    })
                }

                function unlistenArrayEvents(array, listener) {
                    var stub = array._chartjs;
                    if (!stub) {
                        return
                    }
                    var listeners = stub.listeners;
                    var index = listeners.indexOf(listener);
                    if (index !== -1) {
                        listeners.splice(index, 1)
                    }
                    if (listeners.length > 0) {
                        return
                    }
                    arrayEvents.forEach(function(key) {
                        delete array[key]
                    });
                    delete array._chartjs
                }
                Chart.DatasetController = function(chart, datasetIndex) {
                    this.initialize(chart, datasetIndex)
                };
                helpers.extend(Chart.DatasetController.prototype, {
                    datasetElementType: null,
                    dataElementType: null,
                    initialize: function(chart, datasetIndex) {
                        var me = this;
                        me.chart = chart;
                        me.index = datasetIndex;
                        me.linkScales();
                        me.addElements()
                    },
                    updateIndex: function(datasetIndex) {
                        this.index = datasetIndex
                    },
                    linkScales: function() {
                        var me = this;
                        var meta = me.getMeta();
                        var dataset = me.getDataset();
                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {
                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id
                        }
                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {
                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id
                        }
                    },
                    getDataset: function() {
                        return this.chart.data.datasets[this.index]
                    },
                    getMeta: function() {
                        return this.chart.getDatasetMeta(this.index)
                    },
                    getScaleForId: function(scaleID) {
                        return this.chart.scales[scaleID]
                    },
                    reset: function() {
                        this.update(true)
                    },
                    destroy: function() {
                        if (this._data) {
                            unlistenArrayEvents(this._data, this)
                        }
                    },
                    createMetaDataset: function() {
                        var me = this;
                        var type = me.datasetElementType;
                        return type && new type({
                            _chart: me.chart,
                            _datasetIndex: me.index
                        })
                    },
                    createMetaData: function(index) {
                        var me = this;
                        var type = me.dataElementType;
                        return type && new type({
                            _chart: me.chart,
                            _datasetIndex: me.index,
                            _index: index
                        })
                    },
                    addElements: function() {
                        var me = this;
                        var meta = me.getMeta();
                        var data = me.getDataset().data || [];
                        var metaData = meta.data;
                        var i, ilen;
                        for (i = 0, ilen = data.length; i < ilen; ++i) {
                            metaData[i] = metaData[i] || me.createMetaData(i)
                        }
                        meta.dataset = meta.dataset || me.createMetaDataset()
                    },
                    addElementAndReset: function(index) {
                        var element = this.createMetaData(index);
                        this.getMeta().data.splice(index, 0, element);
                        this.updateElement(element, index, true)
                    },
                    buildOrUpdateElements: function() {
                        var me = this;
                        var dataset = me.getDataset();
                        var data = dataset.data || (dataset.data = []);
                        if (me._data !== data) {
                            if (me._data) {
                                unlistenArrayEvents(me._data, me)
                            }
                            listenArrayEvents(data, me);
                            me._data = data
                        }
                        me.resyncElements()
                    },
                    update: helpers.noop,
                    transition: function(easingValue) {
                        var meta = this.getMeta();
                        var elements = meta.data || [];
                        var ilen = elements.length;
                        var i = 0;
                        for (; i < ilen; ++i) {
                            elements[i].transition(easingValue)
                        }
                        if (meta.dataset) {
                            meta.dataset.transition(easingValue)
                        }
                    },
                    draw: function() {
                        var meta = this.getMeta();
                        var elements = meta.data || [];
                        var ilen = elements.length;
                        var i = 0;
                        if (meta.dataset) {
                            meta.dataset.draw()
                        }
                        for (; i < ilen; ++i) {
                            elements[i].draw()
                        }
                    },
                    removeHoverStyle: function(element, elementOpts) {
                        var dataset = this.chart.data.datasets[element._datasetIndex];
                        var index = element._index;
                        var custom = element.custom || {};
                        var valueOrDefault = helpers.valueAtIndexOrDefault;
                        var model = element._model;
                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);
                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);
                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth)
                    },
                    setHoverStyle: function(element) {
                        var dataset = this.chart.data.datasets[element._datasetIndex];
                        var index = element._index;
                        var custom = element.custom || {};
                        var valueOrDefault = helpers.valueAtIndexOrDefault;
                        var getHoverColor = helpers.getHoverColor;
                        var model = element._model;
                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));
                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));
                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth)
                    },
                    resyncElements: function() {
                        var me = this;
                        var meta = me.getMeta();
                        var data = me.getDataset().data;
                        var numMeta = meta.data.length;
                        var numData = data.length;
                        if (numData < numMeta) {
                            meta.data.splice(numData, numMeta - numData)
                        } else if (numData > numMeta) {
                            me.insertElements(numMeta, numData - numMeta)
                        }
                    },
                    insertElements: function(start, count) {
                        for (var i = 0; i < count; ++i) {
                            this.addElementAndReset(start + i)
                        }
                    },
                    onDataPush: function() {
                        this.insertElements(this.getDataset().data.length - 1, arguments.length)
                    },
                    onDataPop: function() {
                        this.getMeta().data.pop()
                    },
                    onDataShift: function() {
                        this.getMeta().data.shift()
                    },
                    onDataSplice: function(start, count) {
                        this.getMeta().data.splice(start, count);
                        this.insertElements(start, arguments.length - 2)
                    },
                    onDataUnshift: function() {
                        this.insertElements(0, arguments.length)
                    }
                });
                Chart.DatasetController.extend = helpers.inherits
            }
        }, {
            45: 45
        }],
        25: [function(require, module, exports) {
            "use strict";
            var helpers = require(45);
            module.exports = {
                _set: function(scope, values) {
                    return helpers.merge(this[scope] || (this[scope] = {}), values)
                }
            }
        }, {
            45: 45
        }],
        26: [function(require, module, exports) {
            "use strict";
            var color = require(3);
            var helpers = require(45);

            function interpolate(start, view, model, ease) {
                var keys = Object.keys(model);
                var i, ilen, key, actual, origin, target, type, c0, c1;
                for (i = 0, ilen = keys.length; i < ilen; ++i) {
                    key = keys[i];
                    target = model[key];
                    if (!view.hasOwnProperty(key)) {
                        view[key] = target
                    }
                    actual = view[key];
                    if (actual === target || key[0] === "_") {
                        continue
                    }
                    if (!start.hasOwnProperty(key)) {
                        start[key] = actual
                    }
                    origin = start[key];
                    type = typeof target;
                    if (type === typeof origin) {
                        if (type === "string") {
                            c0 = color(origin);
                            if (c0.valid) {
                                c1 = color(target);
                                if (c1.valid) {
                                    view[key] = c1.mix(c0, ease).rgbString();
                                    continue
                                }
                            }
                        } else if (type === "number" && isFinite(origin) && isFinite(target)) {
                            view[key] = origin + (target - origin) * ease;
                            continue
                        }
                    }
                    view[key] = target
                }
            }
            var Element = function(configuration) {
                helpers.extend(this, configuration);
                this.initialize.apply(this, arguments)
            };
            helpers.extend(Element.prototype, {
                initialize: function() {
                    this.hidden = false
                },
                pivot: function() {
                    var me = this;
                    if (!me._view) {
                        me._view = helpers.clone(me._model)
                    }
                    me._start = {};
                    return me
                },
                transition: function(ease) {
                    var me = this;
                    var model = me._model;
                    var start = me._start;
                    var view = me._view;
                    if (!model || ease === 1) {
                        me._view = model;
                        me._start = null;
                        return me
                    }
                    if (!view) {
                        view = me._view = {}
                    }
                    if (!start) {
                        start = me._start = {}
                    }
                    interpolate(start, view, model, ease);
                    return me
                },
                tooltipPosition: function() {
                    return {
                        x: this._model.x,
                        y: this._model.y
                    }
                },
                hasValue: function() {
                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y)
                }
            });
            Element.extend = helpers.inherits;
            module.exports = Element
        }, {
            3: 3,
            45: 45
        }],
        27: [function(require, module, exports) {
            "use strict";
            var color = require(3);
            var defaults = require(25);
            var helpers = require(45);
            module.exports = function(Chart) {
                helpers.configMerge = function() {
                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {
                        merger: function(key, target, source, options) {
                            var tval = target[key] || {};
                            var sval = source[key];
                            if (key === "scales") {
                                target[key] = helpers.scaleMerge(tval, sval)
                            } else if (key === "scale") {
                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval])
                            } else {
                                helpers._merger(key, target, source, options)
                            }
                        }
                    })
                };
                helpers.scaleMerge = function() {
                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {
                        merger: function(key, target, source, options) {
                            if (key === "xAxes" || key === "yAxes") {
                                var slen = source[key].length;
                                var i, type, scale;
                                if (!target[key]) {
                                    target[key] = []
                                }
                                for (i = 0; i < slen; ++i) {
                                    scale = source[key][i];
                                    type = helpers.valueOrDefault(scale.type, key === "xAxes" ? "category" : "linear");
                                    if (i >= target[key].length) {
                                        target[key].push({})
                                    }
                                    if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {
                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale])
                                    } else {
                                        helpers.merge(target[key][i], scale)
                                    }
                                }
                            } else {
                                helpers._merger(key, target, source, options)
                            }
                        }
                    })
                };
                helpers.where = function(collection, filterCallback) {
                    if (helpers.isArray(collection) && Array.prototype.filter) {
                        return collection.filter(filterCallback)
                    }
                    var filtered = [];
                    helpers.each(collection, function(item) {
                        if (filterCallback(item)) {
                            filtered.push(item)
                        }
                    });
                    return filtered
                };
                helpers.findIndex = Array.prototype.findIndex ? function(array, callback, scope) {
                    return array.findIndex(callback, scope)
                } : function(array, callback, scope) {
                    scope = scope === undefined ? array : scope;
                    for (var i = 0, ilen = array.length; i < ilen; ++i) {
                        if (callback.call(scope, array[i], i, array)) {
                            return i
                        }
                    }
                    return -1
                };
                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {
                    if (helpers.isNullOrUndef(startIndex)) {
                        startIndex = -1
                    }
                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {
                        var currentItem = arrayToSearch[i];
                        if (filterCallback(currentItem)) {
                            return currentItem
                        }
                    }
                };
                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {
                    if (helpers.isNullOrUndef(startIndex)) {
                        startIndex = arrayToSearch.length
                    }
                    for (var i = startIndex - 1; i >= 0; i--) {
                        var currentItem = arrayToSearch[i];
                        if (filterCallback(currentItem)) {
                            return currentItem
                        }
                    }
                };
                helpers.isNumber = function(n) {
                    return !isNaN(parseFloat(n)) && isFinite(n)
                };
                helpers.almostEquals = function(x, y, epsilon) {
                    return Math.abs(x - y) < epsilon
                };
                helpers.almostWhole = function(x, epsilon) {
                    var rounded = Math.round(x);
                    return rounded - epsilon < x && rounded + epsilon > x
                };
                helpers.max = function(array) {
                    return array.reduce(function(max, value) {
                        if (!isNaN(value)) {
                            return Math.max(max, value)
                        }
                        return max
                    }, Number.NEGATIVE_INFINITY)
                };
                helpers.min = function(array) {
                    return array.reduce(function(min, value) {
                        if (!isNaN(value)) {
                            return Math.min(min, value)
                        }
                        return min
                    }, Number.POSITIVE_INFINITY)
                };
                helpers.sign = Math.sign ? function(x) {
                    return Math.sign(x)
                } : function(x) {
                    x = +x;
                    if (x === 0 || isNaN(x)) {
                        return x
                    }
                    return x > 0 ? 1 : -1
                };
                helpers.log10 = Math.log10 ? function(x) {
                    return Math.log10(x)
                } : function(x) {
                    var exponent = Math.log(x) * Math.LOG10E;
                    var powerOf10 = Math.round(exponent);
                    var isPowerOf10 = x === Math.pow(10, powerOf10);
                    return isPowerOf10 ? powerOf10 : exponent
                };
                helpers.toRadians = function(degrees) {
                    return degrees * (Math.PI / 180)
                };
                helpers.toDegrees = function(radians) {
                    return radians * (180 / Math.PI)
                };
                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {
                    var distanceFromXCenter = anglePoint.x - centrePoint.x;
                    var distanceFromYCenter = anglePoint.y - centrePoint.y;
                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);
                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);
                    if (angle < -.5 * Math.PI) {
                        angle += 2 * Math.PI
                    }
                    return {
                        angle: angle,
                        distance: radialDistanceFromCenter
                    }
                };
                helpers.distanceBetweenPoints = function(pt1, pt2) {
                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2))
                };
                helpers.aliasPixel = function(pixelWidth) {
                    return pixelWidth % 2 === 0 ? 0 : .5
                };
                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {
                    var previous = firstPoint.skip ? middlePoint : firstPoint;
                    var current = middlePoint;
                    var next = afterPoint.skip ? middlePoint : afterPoint;
                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));
                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));
                    var s01 = d01 / (d01 + d12);
                    var s12 = d12 / (d01 + d12);
                    s01 = isNaN(s01) ? 0 : s01;
                    s12 = isNaN(s12) ? 0 : s12;
                    var fa = t * s01;
                    var fb = t * s12;
                    return {
                        previous: {
                            x: current.x - fa * (next.x - previous.x),
                            y: current.y - fa * (next.y - previous.y)
                        },
                        next: {
                            x: current.x + fb * (next.x - previous.x),
                            y: current.y + fb * (next.y - previous.y)
                        }
                    }
                };
                helpers.EPSILON = Number.EPSILON || 1e-14;
                helpers.splineCurveMonotone = function(points) {
                    var pointsWithTangents = (points || []).map(function(point) {
                        return {
                            model: point._model,
                            deltaK: 0,
                            mK: 0
                        }
                    });
                    var pointsLen = pointsWithTangents.length;
                    var i, pointBefore, pointCurrent, pointAfter;
                    for (i = 0; i < pointsLen; ++i) {
                        pointCurrent = pointsWithTangents[i];
                        if (pointCurrent.model.skip) {
                            continue
                        }
                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
                        if (pointAfter && !pointAfter.model.skip) {
                            var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x;
                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0
                        }
                        if (!pointBefore || pointBefore.model.skip) {
                            pointCurrent.mK = pointCurrent.deltaK
                        } else if (!pointAfter || pointAfter.model.skip) {
                            pointCurrent.mK = pointBefore.deltaK
                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {
                            pointCurrent.mK = 0
                        } else {
                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2
                        }
                    }
                    var alphaK, betaK, tauK, squaredMagnitude;
                    for (i = 0; i < pointsLen - 1; ++i) {
                        pointCurrent = pointsWithTangents[i];
                        pointAfter = pointsWithTangents[i + 1];
                        if (pointCurrent.model.skip || pointAfter.model.skip) {
                            continue
                        }
                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {
                            pointCurrent.mK = pointAfter.mK = 0;
                            continue
                        }
                        alphaK = pointCurrent.mK / pointCurrent.deltaK;
                        betaK = pointAfter.mK / pointCurrent.deltaK;
                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);
                        if (squaredMagnitude <= 9) {
                            continue
                        }
                        tauK = 3 / Math.sqrt(squaredMagnitude);
                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;
                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK
                    }
                    var deltaX;
                    for (i = 0; i < pointsLen; ++i) {
                        pointCurrent = pointsWithTangents[i];
                        if (pointCurrent.model.skip) {
                            continue
                        }
                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
                        if (pointBefore && !pointBefore.model.skip) {
                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;
                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;
                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK
                        }
                        if (pointAfter && !pointAfter.model.skip) {
                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;
                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;
                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK
                        }
                    }
                };
                helpers.nextItem = function(collection, index, loop) {
                    if (loop) {
                        return index >= collection.length - 1 ? collection[0] : collection[index + 1]
                    }
                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1]
                };
                helpers.previousItem = function(collection, index, loop) {
                    if (loop) {
                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1]
                    }
                    return index <= 0 ? collection[0] : collection[index - 1]
                };
                helpers.niceNum = function(range, round) {
                    var exponent = Math.floor(helpers.log10(range));
                    var fraction = range / Math.pow(10, exponent);
                    var niceFraction;
                    if (round) {
                        if (fraction < 1.5) {
                            niceFraction = 1
                        } else if (fraction < 3) {
                            niceFraction = 2
                        } else if (fraction < 7) {
                            niceFraction = 5
                        } else {
                            niceFraction = 10
                        }
                    } else if (fraction <= 1) {
                        niceFraction = 1
                    } else if (fraction <= 2) {
                        niceFraction = 2
                    } else if (fraction <= 5) {
                        niceFraction = 5
                    } else {
                        niceFraction = 10
                    }
                    return niceFraction * Math.pow(10, exponent)
                };
                helpers.requestAnimFrame = function() {
                    if (typeof window === "undefined") {
                        return function(callback) {
                            callback()
                        }
                    }
                    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
                        return window.setTimeout(callback, 1e3 / 60)
                    }
                }();
                helpers.getRelativePosition = function(evt, chart) {
                    var mouseX, mouseY;
                    var e = evt.originalEvent || evt;
                    var canvas = evt.currentTarget || evt.srcElement;
                    var boundingRect = canvas.getBoundingClientRect();
                    var touches = e.touches;
                    if (touches && touches.length > 0) {
                        mouseX = touches[0].clientX;
                        mouseY = touches[0].clientY
                    } else {
                        mouseX = e.clientX;
                        mouseY = e.clientY
                    }
                    var paddingLeft = parseFloat(helpers.getStyle(canvas, "padding-left"));
                    var paddingTop = parseFloat(helpers.getStyle(canvas, "padding-top"));
                    var paddingRight = parseFloat(helpers.getStyle(canvas, "padding-right"));
                    var paddingBottom = parseFloat(helpers.getStyle(canvas, "padding-bottom"));
                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;
                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;
                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);
                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);
                    return {
                        x: mouseX,
                        y: mouseY
                    }
                };

                function parseMaxStyle(styleValue, node, parentProperty) {
                    var valueInPixels;
                    if (typeof styleValue === "string") {
                        valueInPixels = parseInt(styleValue, 10);
                        if (styleValue.indexOf("%") !== -1) {
                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty]
                        }
                    } else {
                        valueInPixels = styleValue
                    }
                    return valueInPixels
                }

                function isConstrainedValue(value) {
                    return value !== undefined && value !== null && value !== "none"
                }

                function getConstraintDimension(domNode, maxStyle, percentageProperty) {
                    var view = document.defaultView;
                    var parentNode = domNode.parentNode;
                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];
                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];
                    var hasCNode = isConstrainedValue(constrainedNode);
                    var hasCContainer = isConstrainedValue(constrainedContainer);
                    var infinity = Number.POSITIVE_INFINITY;
                    if (hasCNode || hasCContainer) {
                        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity)
                    }
                    return "none"
                }
                helpers.getConstraintWidth = function(domNode) {
                    return getConstraintDimension(domNode, "max-width", "clientWidth")
                };
                helpers.getConstraintHeight = function(domNode) {
                    return getConstraintDimension(domNode, "max-height", "clientHeight")
                };
                helpers.getMaximumWidth = function(domNode) {
                    var container = domNode.parentNode;
                    if (!container) {
                        return domNode.clientWidth
                    }
                    var paddingLeft = parseInt(helpers.getStyle(container, "padding-left"), 10);
                    var paddingRight = parseInt(helpers.getStyle(container, "padding-right"), 10);
                    var w = container.clientWidth - paddingLeft - paddingRight;
                    var cw = helpers.getConstraintWidth(domNode);
                    return isNaN(cw) ? w : Math.min(w, cw)
                };
                helpers.getMaximumHeight = function(domNode) {
                    var container = domNode.parentNode;
                    if (!container) {
                        return domNode.clientHeight
                    }
                    var paddingTop = parseInt(helpers.getStyle(container, "padding-top"), 10);
                    var paddingBottom = parseInt(helpers.getStyle(container, "padding-bottom"), 10);
                    var h = container.clientHeight - paddingTop - paddingBottom;
                    var ch = helpers.getConstraintHeight(domNode);
                    return isNaN(ch) ? h : Math.min(h, ch)
                };
                helpers.getStyle = function(el, property) {
                    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property)
                };
                helpers.retinaScale = function(chart, forceRatio) {
                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;
                    if (pixelRatio === 1) {
                        return
                    }
                    var canvas = chart.canvas;
                    var height = chart.height;
                    var width = chart.width;
                    canvas.height = height * pixelRatio;
                    canvas.width = width * pixelRatio;
                    chart.ctx.scale(pixelRatio, pixelRatio);
                    if (!canvas.style.height && !canvas.style.width) {
                        canvas.style.height = height + "px";
                        canvas.style.width = width + "px"
                    }
                };
                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {
                    return fontStyle + " " + pixelSize + "px " + fontFamily
                };
                helpers.longestText = function(ctx, font, arrayOfThings, cache) {
                    cache = cache || {};
                    var data = cache.data = cache.data || {};
                    var gc = cache.garbageCollect = cache.garbageCollect || [];
                    if (cache.font !== font) {
                        data = cache.data = {};
                        gc = cache.garbageCollect = [];
                        cache.font = font
                    }
                    ctx.font = font;
                    var longest = 0;
                    helpers.each(arrayOfThings, function(thing) {
                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {
                            longest = helpers.measureText(ctx, data, gc, longest, thing)
                        } else if (helpers.isArray(thing)) {
                            helpers.each(thing, function(nestedThing) {
                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {
                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing)
                                }
                            })
                        }
                    });
                    var gcLen = gc.length / 2;
                    if (gcLen > arrayOfThings.length) {
                        for (var i = 0; i < gcLen; i++) {
                            delete data[gc[i]]
                        }
                        gc.splice(0, gcLen)
                    }
                    return longest
                };
                helpers.measureText = function(ctx, data, gc, longest, string) {
                    var textWidth = data[string];
                    if (!textWidth) {
                        textWidth = data[string] = ctx.measureText(string).width;
                        gc.push(string)
                    }
                    if (textWidth > longest) {
                        longest = textWidth
                    }
                    return longest
                };
                helpers.numberOfLabelLines = function(arrayOfThings) {
                    var numberOfLines = 1;
                    helpers.each(arrayOfThings, function(thing) {
                        if (helpers.isArray(thing)) {
                            if (thing.length > numberOfLines) {
                                numberOfLines = thing.length
                            }
                        }
                    });
                    return numberOfLines
                };
                helpers.color = !color ? function(value) {
                    console.error("Color.js not found!");
                    return value
                } : function(value) {
                    if (value instanceof CanvasGradient) {
                        value = defaults.global.defaultColor
                    }
                    return color(value)
                };
                helpers.getHoverColor = function(colorValue) {
                    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(.5).darken(.1).rgbString()
                }
            }
        }, {
            25: 25,
            3: 3,
            45: 45
        }],
        28: [function(require, module, exports) {
            "use strict";
            var helpers = require(45);

            function getRelativePosition(e, chart) {
                if (e.native) {
                    return {
                        x: e.x,
                        y: e.y
                    }
                }
                return helpers.getRelativePosition(e, chart)
            }

            function parseVisibleItems(chart, handler) {
                var datasets = chart.data.datasets;
                var meta, i, j, ilen, jlen;
                for (i = 0, ilen = datasets.length; i < ilen; ++i) {
                    if (!chart.isDatasetVisible(i)) {
                        continue
                    }
                    meta = chart.getDatasetMeta(i);
                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {
                        var element = meta.data[j];
                        if (!element._view.skip) {
                            handler(element)
                        }
                    }
                }
            }

            function getIntersectItems(chart, position) {
                var elements = [];
                parseVisibleItems(chart, function(element) {
                    if (element.inRange(position.x, position.y)) {
                        elements.push(element)
                    }
                });
                return elements
            }

            function getNearestItems(chart, position, intersect, distanceMetric) {
                var minDistance = Number.POSITIVE_INFINITY;
                var nearestItems = [];
                parseVisibleItems(chart, function(element) {
                    if (intersect && !element.inRange(position.x, position.y)) {
                        return
                    }
                    var center = element.getCenterPoint();
                    var distance = distanceMetric(position, center);
                    if (distance < minDistance) {
                        nearestItems = [element];
                        minDistance = distance
                    } else if (distance === minDistance) {
                        nearestItems.push(element)
                    }
                });
                return nearestItems
            }

            function getDistanceMetricForAxis(axis) {
                var useX = axis.indexOf("x") !== -1;
                var useY = axis.indexOf("y") !== -1;
                return function(pt1, pt2) {
                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;
                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;
                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2))
                }
            }

            function indexMode(chart, e, options) {
                var position = getRelativePosition(e, chart);
                options.axis = options.axis || "x";
                var distanceMetric = getDistanceMetricForAxis(options.axis);
                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);
                var elements = [];
                if (!items.length) {
                    return []
                }
                chart.data.datasets.forEach(function(dataset, datasetIndex) {
                    if (chart.isDatasetVisible(datasetIndex)) {
                        var meta = chart.getDatasetMeta(datasetIndex);
                        var element = meta.data[items[0]._index];
                        if (element && !element._view.skip) {
                            elements.push(element)
                        }
                    }
                });
                return elements
            }
            module.exports = {
                modes: {
                    single: function(chart, e) {
                        var position = getRelativePosition(e, chart);
                        var elements = [];
                        parseVisibleItems(chart, function(element) {
                            if (element.inRange(position.x, position.y)) {
                                elements.push(element);
                                return elements
                            }
                        });
                        return elements.slice(0, 1)
                    },
                    label: indexMode,
                    index: indexMode,
                    dataset: function(chart, e, options) {
                        var position = getRelativePosition(e, chart);
                        options.axis = options.axis || "xy";
                        var distanceMetric = getDistanceMetricForAxis(options.axis);
                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);
                        if (items.length > 0) {
                            items = chart.getDatasetMeta(items[0]._datasetIndex).data
                        }
                        return items
                    },
                    "x-axis": function(chart, e) {
                        return indexMode(chart, e, {
                            intersect: false
                        })
                    },
                    point: function(chart, e) {
                        var position = getRelativePosition(e, chart);
                        return getIntersectItems(chart, position)
                    },
                    nearest: function(chart, e, options) {
                        var position = getRelativePosition(e, chart);
                        options.axis = options.axis || "xy";
                        var distanceMetric = getDistanceMetricForAxis(options.axis);
                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);
                        if (nearestItems.length > 1) {
                            nearestItems.sort(function(a, b) {
                                var sizeA = a.getArea();
                                var sizeB = b.getArea();
                                var ret = sizeA - sizeB;
                                if (ret === 0) {
                                    ret = a._datasetIndex - b._datasetIndex
                                }
                                return ret
                            })
                        }
                        return nearestItems.slice(0, 1)
                    },
                    x: function(chart, e, options) {
                        var position = getRelativePosition(e, chart);
                        var items = [];
                        var intersectsItem = false;
                        parseVisibleItems(chart, function(element) {
                            if (element.inXRange(position.x)) {
                                items.push(element)
                            }
                            if (element.inRange(position.x, position.y)) {
                                intersectsItem = true
                            }
                        });
                        if (options.intersect && !intersectsItem) {
                            items = []
                        }
                        return items
                    },
                    y: function(chart, e, options) {
                        var position = getRelativePosition(e, chart);
                        var items = [];
                        var intersectsItem = false;
                        parseVisibleItems(chart, function(element) {
                            if (element.inYRange(position.y)) {
                                items.push(element)
                            }
                            if (element.inRange(position.x, position.y)) {
                                intersectsItem = true
                            }
                        });
                        if (options.intersect && !intersectsItem) {
                            items = []
                        }
                        return items
                    }
                }
            }
        }, {
            45: 45
        }],
        29: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            defaults._set("global", {
                responsive: true,
                responsiveAnimationDuration: 0,
                maintainAspectRatio: true,
                events: ["mousemove", "mouseout", "click", "touchstart", "touchmove"],
                hover: {
                    onHover: null,
                    mode: "nearest",
                    intersect: true,
                    animationDuration: 400
                },
                onClick: null,
                defaultColor: "rgba(0,0,0,0.1)",
                defaultFontColor: "#666",
                defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                defaultFontSize: 12,
                defaultFontStyle: "normal",
                showLines: true,
                elements: {},
                layout: {
                    padding: {
                        top: 0,
                        right: 0,
                        bottom: 0,
                        left: 0
                    }
                }
            });
            module.exports = function() {
                var Chart = function(item, config) {
                    this.construct(item, config);
                    return this
                };
                Chart.Chart = Chart;
                return Chart
            }
        }, {
            25: 25
        }],
        30: [function(require, module, exports) {
            "use strict";
            var helpers = require(45);

            function filterByPosition(array, position) {
                return helpers.where(array, function(v) {
                    return v.position === position
                })
            }

            function sortByWeight(array, reverse) {
                array.forEach(function(v, i) {
                    v._tmpIndex_ = i;
                    return v
                });
                array.sort(function(a, b) {
                    var v0 = reverse ? b : a;
                    var v1 = reverse ? a : b;
                    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight
                });
                array.forEach(function(v) {
                    delete v._tmpIndex_
                })
            }
            module.exports = {
                defaults: {},
                addBox: function(chart, item) {
                    if (!chart.boxes) {
                        chart.boxes = []
                    }
                    item.fullWidth = item.fullWidth || false;
                    item.position = item.position || "top";
                    item.weight = item.weight || 0;
                    chart.boxes.push(item)
                },
                removeBox: function(chart, layoutItem) {
                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;
                    if (index !== -1) {
                        chart.boxes.splice(index, 1)
                    }
                },
                configure: function(chart, item, options) {
                    var props = ["fullWidth", "position", "weight"];
                    var ilen = props.length;
                    var i = 0;
                    var prop;
                    for (; i < ilen; ++i) {
                        prop = props[i];
                        if (options.hasOwnProperty(prop)) {
                            item[prop] = options[prop]
                        }
                    }
                },
                update: function(chart, width, height) {
                    if (!chart) {
                        return
                    }
                    var layoutOptions = chart.options.layout || {};
                    var padding = helpers.options.toPadding(layoutOptions.padding);
                    var leftPadding = padding.left;
                    var rightPadding = padding.right;
                    var topPadding = padding.top;
                    var bottomPadding = padding.bottom;
                    var leftBoxes = filterByPosition(chart.boxes, "left");
                    var rightBoxes = filterByPosition(chart.boxes, "right");
                    var topBoxes = filterByPosition(chart.boxes, "top");
                    var bottomBoxes = filterByPosition(chart.boxes, "bottom");
                    var chartAreaBoxes = filterByPosition(chart.boxes, "chartArea");
                    sortByWeight(leftBoxes, true);
                    sortByWeight(rightBoxes, false);
                    sortByWeight(topBoxes, true);
                    sortByWeight(bottomBoxes, false);
                    var chartWidth = width - leftPadding - rightPadding;
                    var chartHeight = height - topPadding - bottomPadding;
                    var chartAreaWidth = chartWidth / 2;
                    var chartAreaHeight = chartHeight / 2;
                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);
                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);
                    var maxChartAreaWidth = chartWidth;
                    var maxChartAreaHeight = chartHeight;
                    var minBoxSizes = [];

                    function getMinimumBoxSize(box) {
                        var minSize;
                        var isHorizontal = box.isHorizontal();
                        if (isHorizontal) {
                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);
                            maxChartAreaHeight -= minSize.height
                        } else {
                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);
                            maxChartAreaWidth -= minSize.width
                        }
                        minBoxSizes.push({
                            horizontal: isHorizontal,
                            minSize: minSize,
                            box: box
                        })
                    }
                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);
                    var maxHorizontalLeftPadding = 0;
                    var maxHorizontalRightPadding = 0;
                    var maxVerticalTopPadding = 0;
                    var maxVerticalBottomPadding = 0;
                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {
                        if (horizontalBox.getPadding) {
                            var boxPadding = horizontalBox.getPadding();
                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);
                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right)
                        }
                    });
                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {
                        if (verticalBox.getPadding) {
                            var boxPadding = verticalBox.getPadding();
                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);
                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom)
                        }
                    });
                    var totalLeftBoxesWidth = leftPadding;
                    var totalRightBoxesWidth = rightPadding;
                    var totalTopBoxesHeight = topPadding;
                    var totalBottomBoxesHeight = bottomPadding;

                    function fitBox(box) {
                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {
                            return minBox.box === box
                        });
                        if (minBoxSize) {
                            if (box.isHorizontal()) {
                                var scaleMargin = {
                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),
                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),
                                    top: 0,
                                    bottom: 0
                                };
                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin)
                            } else {
                                box.update(minBoxSize.minSize.width, maxChartAreaHeight)
                            }
                        }
                    }
                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);
                    helpers.each(leftBoxes, function(box) {
                        totalLeftBoxesWidth += box.width
                    });
                    helpers.each(rightBoxes, function(box) {
                        totalRightBoxesWidth += box.width
                    });
                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);
                    helpers.each(topBoxes, function(box) {
                        totalTopBoxesHeight += box.height
                    });
                    helpers.each(bottomBoxes, function(box) {
                        totalBottomBoxesHeight += box.height
                    });

                    function finalFitVerticalBox(box) {
                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {
                            return minSize.box === box
                        });
                        var scaleMargin = {
                            left: 0,
                            right: 0,
                            top: totalTopBoxesHeight,
                            bottom: totalBottomBoxesHeight
                        };
                        if (minBoxSize) {
                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin)
                        }
                    }
                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);
                    totalLeftBoxesWidth = leftPadding;
                    totalRightBoxesWidth = rightPadding;
                    totalTopBoxesHeight = topPadding;
                    totalBottomBoxesHeight = bottomPadding;
                    helpers.each(leftBoxes, function(box) {
                        totalLeftBoxesWidth += box.width
                    });
                    helpers.each(rightBoxes, function(box) {
                        totalRightBoxesWidth += box.width
                    });
                    helpers.each(topBoxes, function(box) {
                        totalTopBoxesHeight += box.height
                    });
                    helpers.each(bottomBoxes, function(box) {
                        totalBottomBoxesHeight += box.height
                    });
                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);
                    totalLeftBoxesWidth += leftPaddingAddition;
                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);
                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);
                    totalTopBoxesHeight += topPaddingAddition;
                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);
                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;
                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;
                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {
                        helpers.each(leftBoxes, function(box) {
                            box.height = newMaxChartAreaHeight
                        });
                        helpers.each(rightBoxes, function(box) {
                            box.height = newMaxChartAreaHeight
                        });
                        helpers.each(topBoxes, function(box) {
                            if (!box.fullWidth) {
                                box.width = newMaxChartAreaWidth
                            }
                        });
                        helpers.each(bottomBoxes, function(box) {
                            if (!box.fullWidth) {
                                box.width = newMaxChartAreaWidth
                            }
                        });
                        maxChartAreaHeight = newMaxChartAreaHeight;
                        maxChartAreaWidth = newMaxChartAreaWidth
                    }
                    var left = leftPadding + leftPaddingAddition;
                    var top = topPadding + topPaddingAddition;

                    function placeBox(box) {
                        if (box.isHorizontal()) {
                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;
                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;
                            box.top = top;
                            box.bottom = top + box.height;
                            top = box.bottom
                        } else {
                            box.left = left;
                            box.right = left + box.width;
                            box.top = totalTopBoxesHeight;
                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;
                            left = box.right
                        }
                    }
                    helpers.each(leftBoxes.concat(topBoxes), placeBox);
                    left += maxChartAreaWidth;
                    top += maxChartAreaHeight;
                    helpers.each(rightBoxes, placeBox);
                    helpers.each(bottomBoxes, placeBox);
                    chart.chartArea = {
                        left: totalLeftBoxesWidth,
                        top: totalTopBoxesHeight,
                        right: totalLeftBoxesWidth + maxChartAreaWidth,
                        bottom: totalTopBoxesHeight + maxChartAreaHeight
                    };
                    helpers.each(chartAreaBoxes, function(box) {
                        box.left = chart.chartArea.left;
                        box.top = chart.chartArea.top;
                        box.right = chart.chartArea.right;
                        box.bottom = chart.chartArea.bottom;
                        box.update(maxChartAreaWidth, maxChartAreaHeight)
                    })
                }
            }
        }, {
            45: 45
        }],
        31: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var helpers = require(45);
            defaults._set("global", {
                plugins: {}
            });
            module.exports = {
                _plugins: [],
                _cacheId: 0,
                register: function(plugins) {
                    var p = this._plugins;
                    [].concat(plugins).forEach(function(plugin) {
                        if (p.indexOf(plugin) === -1) {
                            p.push(plugin)
                        }
                    });
                    this._cacheId++
                },
                unregister: function(plugins) {
                    var p = this._plugins;
                    [].concat(plugins).forEach(function(plugin) {
                        var idx = p.indexOf(plugin);
                        if (idx !== -1) {
                            p.splice(idx, 1)
                        }
                    });
                    this._cacheId++
                },
                clear: function() {
                    this._plugins = [];
                    this._cacheId++
                },
                count: function() {
                    return this._plugins.length
                },
                getAll: function() {
                    return this._plugins
                },
                notify: function(chart, hook, args) {
                    var descriptors = this.descriptors(chart);
                    var ilen = descriptors.length;
                    var i, descriptor, plugin, params, method;
                    for (i = 0; i < ilen; ++i) {
                        descriptor = descriptors[i];
                        plugin = descriptor.plugin;
                        method = plugin[hook];
                        if (typeof method === "function") {
                            params = [chart].concat(args || []);
                            params.push(descriptor.options);
                            if (method.apply(plugin, params) === false) {
                                return false
                            }
                        }
                    }
                    return true
                },
                descriptors: function(chart) {
                    var cache = chart.$plugins || (chart.$plugins = {});
                    if (cache.id === this._cacheId) {
                        return cache.descriptors
                    }
                    var plugins = [];
                    var descriptors = [];
                    var config = chart && chart.config || {};
                    var options = config.options && config.options.plugins || {};
                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {
                        var idx = plugins.indexOf(plugin);
                        if (idx !== -1) {
                            return
                        }
                        var id = plugin.id;
                        var opts = options[id];
                        if (opts === false) {
                            return
                        }
                        if (opts === true) {
                            opts = helpers.clone(defaults.global.plugins[id])
                        }
                        plugins.push(plugin);
                        descriptors.push({
                            plugin: plugin,
                            options: opts || {}
                        })
                    });
                    cache.descriptors = descriptors;
                    cache.id = this._cacheId;
                    return descriptors
                },
                _invalidate: function(chart) {
                    delete chart.$plugins
                }
            }
        }, {
            25: 25,
            45: 45
        }],
        32: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var Element = require(26);
            var helpers = require(45);
            var Ticks = require(34);
            defaults._set("scale", {
                display: true,
                position: "left",
                offset: false,
                gridLines: {
                    display: true,
                    color: "rgba(0, 0, 0, 0.1)",
                    lineWidth: 1,
                    drawBorder: true,
                    drawOnChartArea: true,
                    drawTicks: true,
                    tickMarkLength: 10,
                    zeroLineWidth: 1,
                    zeroLineColor: "rgba(0,0,0,0.25)",
                    zeroLineBorderDash: [],
                    zeroLineBorderDashOffset: 0,
                    offsetGridLines: false,
                    borderDash: [],
                    borderDashOffset: 0
                },
                scaleLabel: {
                    display: false,
                    labelString: "",
                    lineHeight: 1.2,
                    padding: {
                        top: 4,
                        bottom: 4
                    }
                },
                ticks: {
                    beginAtZero: false,
                    minRotation: 0,
                    maxRotation: 50,
                    mirror: false,
                    padding: 0,
                    reverse: false,
                    display: true,
                    autoSkip: true,
                    autoSkipPadding: 0,
                    labelOffset: 0,
                    callback: Ticks.formatters.values,
                    minor: {},
                    major: {}
                }
            });

            function labelsFromTicks(ticks) {
                var labels = [];
                var i, ilen;
                for (i = 0, ilen = ticks.length; i < ilen; ++i) {
                    labels.push(ticks[i].label)
                }
                return labels
            }

            function getLineValue(scale, index, offsetGridLines) {
                var lineValue = scale.getPixelForTick(index);
                if (offsetGridLines) {
                    if (index === 0) {
                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2
                    } else {
                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2
                    }
                }
                return lineValue
            }
            module.exports = function(Chart) {
                function computeTextSize(context, tick, font) {
                    return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width
                }

                function parseFontOptions(options) {
                    var valueOrDefault = helpers.valueOrDefault;
                    var globalDefaults = defaults.global;
                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);
                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);
                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);
                    return {
                        size: size,
                        style: style,
                        family: family,
                        font: helpers.fontString(size, style, family)
                    }
                }

                function parseLineHeight(options) {
                    return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize))
                }
                Chart.Scale = Element.extend({
                    getPadding: function() {
                        var me = this;
                        return {
                            left: me.paddingLeft || 0,
                            top: me.paddingTop || 0,
                            right: me.paddingRight || 0,
                            bottom: me.paddingBottom || 0
                        }
                    },
                    getTicks: function() {
                        return this._ticks
                    },
                    mergeTicksOptions: function() {
                        var ticks = this.options.ticks;
                        if (ticks.minor === false) {
                            ticks.minor = {
                                display: false
                            }
                        }
                        if (ticks.major === false) {
                            ticks.major = {
                                display: false
                            }
                        }
                        for (var key in ticks) {
                            if (key !== "major" && key !== "minor") {
                                if (typeof ticks.minor[key] === "undefined") {
                                    ticks.minor[key] = ticks[key]
                                }
                                if (typeof ticks.major[key] === "undefined") {
                                    ticks.major[key] = ticks[key]
                                }
                            }
                        }
                    },
                    beforeUpdate: function() {
                        helpers.callback(this.options.beforeUpdate, [this])
                    },
                    update: function(maxWidth, maxHeight, margins) {
                        var me = this;
                        var i, ilen, labels, label, ticks, tick;
                        me.beforeUpdate();
                        me.maxWidth = maxWidth;
                        me.maxHeight = maxHeight;
                        me.margins = helpers.extend({
                            left: 0,
                            right: 0,
                            top: 0,
                            bottom: 0
                        }, margins);
                        me.longestTextCache = me.longestTextCache || {};
                        me.beforeSetDimensions();
                        me.setDimensions();
                        me.afterSetDimensions();
                        me.beforeDataLimits();
                        me.determineDataLimits();
                        me.afterDataLimits();
                        me.beforeBuildTicks();
                        ticks = me.buildTicks() || [];
                        me.afterBuildTicks();
                        me.beforeTickToLabelConversion();
                        labels = me.convertTicksToLabels(ticks) || me.ticks;
                        me.afterTickToLabelConversion();
                        me.ticks = labels;
                        for (i = 0, ilen = labels.length; i < ilen; ++i) {
                            label = labels[i];
                            tick = ticks[i];
                            if (!tick) {
                                ticks.push(tick = {
                                    label: label,
                                    major: false
                                })
                            } else {
                                tick.label = label
                            }
                        }
                        me._ticks = ticks;
                        me.beforeCalculateTickRotation();
                        me.calculateTickRotation();
                        me.afterCalculateTickRotation();
                        me.beforeFit();
                        me.fit();
                        me.afterFit();
                        me.afterUpdate();
                        return me.minSize
                    },
                    afterUpdate: function() {
                        helpers.callback(this.options.afterUpdate, [this])
                    },
                    beforeSetDimensions: function() {
                        helpers.callback(this.options.beforeSetDimensions, [this])
                    },
                    setDimensions: function() {
                        var me = this;
                        if (me.isHorizontal()) {
                            me.width = me.maxWidth;
                            me.left = 0;
                            me.right = me.width
                        } else {
                            me.height = me.maxHeight;
                            me.top = 0;
                            me.bottom = me.height
                        }
                        me.paddingLeft = 0;
                        me.paddingTop = 0;
                        me.paddingRight = 0;
                        me.paddingBottom = 0
                    },
                    afterSetDimensions: function() {
                        helpers.callback(this.options.afterSetDimensions, [this])
                    },
                    beforeDataLimits: function() {
                        helpers.callback(this.options.beforeDataLimits, [this])
                    },
                    determineDataLimits: helpers.noop,
                    afterDataLimits: function() {
                        helpers.callback(this.options.afterDataLimits, [this])
                    },
                    beforeBuildTicks: function() {
                        helpers.callback(this.options.beforeBuildTicks, [this])
                    },
                    buildTicks: helpers.noop,
                    afterBuildTicks: function() {
                        helpers.callback(this.options.afterBuildTicks, [this])
                    },
                    beforeTickToLabelConversion: function() {
                        helpers.callback(this.options.beforeTickToLabelConversion, [this])
                    },
                    convertTicksToLabels: function() {
                        var me = this;
                        var tickOpts = me.options.ticks;
                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this)
                    },
                    afterTickToLabelConversion: function() {
                        helpers.callback(this.options.afterTickToLabelConversion, [this])
                    },
                    beforeCalculateTickRotation: function() {
                        helpers.callback(this.options.beforeCalculateTickRotation, [this])
                    },
                    calculateTickRotation: function() {
                        var me = this;
                        var context = me.ctx;
                        var tickOpts = me.options.ticks;
                        var labels = labelsFromTicks(me._ticks);
                        var tickFont = parseFontOptions(tickOpts);
                        context.font = tickFont.font;
                        var labelRotation = tickOpts.minRotation || 0;
                        if (labels.length && me.options.display && me.isHorizontal()) {
                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);
                            var labelWidth = originalLabelWidth;
                            var cosRotation, sinRotation;
                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;
                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {
                                var angleRadians = helpers.toRadians(labelRotation);
                                cosRotation = Math.cos(angleRadians);
                                sinRotation = Math.sin(angleRadians);
                                if (sinRotation * originalLabelWidth > me.maxHeight) {
                                    labelRotation--;
                                    break
                                }
                                labelRotation++;
                                labelWidth = cosRotation * originalLabelWidth
                            }
                        }
                        me.labelRotation = labelRotation
                    },
                    afterCalculateTickRotation: function() {
                        helpers.callback(this.options.afterCalculateTickRotation, [this])
                    },
                    beforeFit: function() {
                        helpers.callback(this.options.beforeFit, [this])
                    },
                    fit: function() {
                        var me = this;
                        var minSize = me.minSize = {
                            width: 0,
                            height: 0
                        };
                        var labels = labelsFromTicks(me._ticks);
                        var opts = me.options;
                        var tickOpts = opts.ticks;
                        var scaleLabelOpts = opts.scaleLabel;
                        var gridLineOpts = opts.gridLines;
                        var display = opts.display;
                        var isHorizontal = me.isHorizontal();
                        var tickFont = parseFontOptions(tickOpts);
                        var tickMarkLength = opts.gridLines.tickMarkLength;
                        if (isHorizontal) {
                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth
                        } else {
                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0
                        }
                        if (isHorizontal) {
                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0
                        } else {
                            minSize.height = me.maxHeight
                        }
                        if (scaleLabelOpts.display && display) {
                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);
                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);
                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;
                            if (isHorizontal) {
                                minSize.height += deltaHeight
                            } else {
                                minSize.width += deltaHeight
                            }
                        }
                        if (tickOpts.display && display) {
                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);
                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);
                            var lineSpace = tickFont.size * .5;
                            var tickPadding = me.options.ticks.padding;
                            if (isHorizontal) {
                                me.longestLabelWidth = largestTextWidth;
                                var angleRadians = helpers.toRadians(me.labelRotation);
                                var cosRotation = Math.cos(angleRadians);
                                var sinRotation = Math.sin(angleRadians);
                                var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace;
                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);
                                me.ctx.font = tickFont.font;
                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);
                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);
                                if (me.labelRotation !== 0) {
                                    me.paddingLeft = opts.position === "bottom" ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3;
                                    me.paddingRight = opts.position === "bottom" ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3
                                } else {
                                    me.paddingLeft = firstLabelWidth / 2 + 3;
                                    me.paddingRight = lastLabelWidth / 2 + 3
                                }
                            } else {
                                if (tickOpts.mirror) {
                                    largestTextWidth = 0
                                } else {
                                    largestTextWidth += tickPadding + lineSpace
                                }
                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);
                                me.paddingTop = tickFont.size / 2;
                                me.paddingBottom = tickFont.size / 2
                            }
                        }
                        me.handleMargins();
                        me.width = minSize.width;
                        me.height = minSize.height
                    },
                    handleMargins: function() {
                        var me = this;
                        if (me.margins) {
                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);
                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0)
                        }
                    },
                    afterFit: function() {
                        helpers.callback(this.options.afterFit, [this])
                    },
                    isHorizontal: function() {
                        return this.options.position === "top" || this.options.position === "bottom"
                    },
                    isFullWidth: function() {
                        return this.options.fullWidth
                    },
                    getRightValue: function(rawValue) {
                        if (helpers.isNullOrUndef(rawValue)) {
                            return NaN
                        }
                        if (typeof rawValue === "number" && !isFinite(rawValue)) {
                            return NaN
                        }
                        if (rawValue) {
                            if (this.isHorizontal()) {
                                if (rawValue.x !== undefined) {
                                    return this.getRightValue(rawValue.x)
                                }
                            } else if (rawValue.y !== undefined) {
                                return this.getRightValue(rawValue.y)
                            }
                        }
                        return rawValue
                    },
                    getLabelForIndex: helpers.noop,
                    getPixelForValue: helpers.noop,
                    getValueForPixel: helpers.noop,
                    getPixelForTick: function(index) {
                        var me = this;
                        var offset = me.options.offset;
                        if (me.isHorizontal()) {
                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
                            var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);
                            var pixel = tickWidth * index + me.paddingLeft;
                            if (offset) {
                                pixel += tickWidth / 2
                            }
                            var finalVal = me.left + Math.round(pixel);
                            finalVal += me.isFullWidth() ? me.margins.left : 0;
                            return finalVal
                        }
                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
                        return me.top + index * (innerHeight / (me._ticks.length - 1))
                    },
                    getPixelForDecimal: function(decimal) {
                        var me = this;
                        if (me.isHorizontal()) {
                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
                            var valueOffset = innerWidth * decimal + me.paddingLeft;
                            var finalVal = me.left + Math.round(valueOffset);
                            finalVal += me.isFullWidth() ? me.margins.left : 0;
                            return finalVal
                        }
                        return me.top + decimal * me.height
                    },
                    getBasePixel: function() {
                        return this.getPixelForValue(this.getBaseValue())
                    },
                    getBaseValue: function() {
                        var me = this;
                        var min = me.min;
                        var max = me.max;
                        return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0
                    },
                    _autoSkip: function(ticks) {
                        var skipRatio;
                        var me = this;
                        var isHorizontal = me.isHorizontal();
                        var optionTicks = me.options.ticks.minor;
                        var tickCount = ticks.length;
                        var labelRotationRadians = helpers.toRadians(me.labelRotation);
                        var cosRotation = Math.cos(labelRotationRadians);
                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;
                        var result = [];
                        var i, tick, shouldSkip;
                        var maxTicks;
                        if (optionTicks.maxTicksLimit) {
                            maxTicks = optionTicks.maxTicksLimit
                        }
                        if (isHorizontal) {
                            skipRatio = false;
                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {
                                skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)))
                            }
                            if (maxTicks && tickCount > maxTicks) {
                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks))
                            }
                        }
                        for (i = 0; i < tickCount; i++) {
                            tick = ticks[i];
                            shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;
                            if (shouldSkip && i !== tickCount - 1) {
                                delete tick.label
                            }
                            result.push(tick)
                        }
                        return result
                    },
                    draw: function(chartArea) {
                        var me = this;
                        var options = me.options;
                        if (!options.display) {
                            return
                        }
                        var context = me.ctx;
                        var globalDefaults = defaults.global;
                        var optionTicks = options.ticks.minor;
                        var optionMajorTicks = options.ticks.major || optionTicks;
                        var gridLines = options.gridLines;
                        var scaleLabel = options.scaleLabel;
                        var isRotated = me.labelRotation !== 0;
                        var isHorizontal = me.isHorizontal();
                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();
                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);
                        var tickFont = parseFontOptions(optionTicks);
                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);
                        var majorTickFont = parseFontOptions(optionMajorTicks);
                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;
                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);
                        var scaleLabelFont = parseFontOptions(scaleLabel);
                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);
                        var labelRotationRadians = helpers.toRadians(me.labelRotation);
                        var itemsToDraw = [];
                        var axisWidth = me.options.gridLines.lineWidth;
                        var xTickStart = options.position === "right" ? me.right : me.right - axisWidth - tl;
                        var xTickEnd = options.position === "right" ? me.right + tl : me.right;
                        var yTickStart = options.position === "bottom" ? me.top + axisWidth : me.bottom - tl - axisWidth;
                        var yTickEnd = options.position === "bottom" ? me.top + axisWidth + tl : me.bottom + axisWidth;
                        helpers.each(ticks, function(tick, index) {
                            if (helpers.isNullOrUndef(tick.label)) {
                                return
                            }
                            var label = tick.label;
                            var lineWidth, lineColor, borderDash, borderDashOffset;
                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {
                                lineWidth = gridLines.zeroLineWidth;
                                lineColor = gridLines.zeroLineColor;
                                borderDash = gridLines.zeroLineBorderDash;
                                borderDashOffset = gridLines.zeroLineBorderDashOffset
                            } else {
                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);
                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);
                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);
                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset)
                            }
                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;
                            var textAlign = "middle";
                            var textBaseline = "middle";
                            var tickPadding = optionTicks.padding;
                            if (isHorizontal) {
                                var labelYOffset = tl + tickPadding;
                                if (options.position === "bottom") {
                                    textBaseline = !isRotated ? "top" : "middle";
                                    textAlign = !isRotated ? "center" : "right";
                                    labelY = me.top + labelYOffset
                                } else {
                                    textBaseline = !isRotated ? "bottom" : "middle";
                                    textAlign = !isRotated ? "center" : "left";
                                    labelY = me.bottom - labelYOffset
                                }
                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);
                                if (xLineValue < me.left) {
                                    lineColor = "rgba(0,0,0,0)"
                                }
                                xLineValue += helpers.aliasPixel(lineWidth);
                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset;
                                tx1 = tx2 = x1 = x2 = xLineValue;
                                ty1 = yTickStart;
                                ty2 = yTickEnd;
                                y1 = chartArea.top;
                                y2 = chartArea.bottom + axisWidth
                            } else {
                                var isLeft = options.position === "left";
                                var labelXOffset;
                                if (optionTicks.mirror) {
                                    textAlign = isLeft ? "left" : "right";
                                    labelXOffset = tickPadding
                                } else {
                                    textAlign = isLeft ? "right" : "left";
                                    labelXOffset = tl + tickPadding
                                }
                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;
                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);
                                if (yLineValue < me.top) {
                                    lineColor = "rgba(0,0,0,0)"
                                }
                                yLineValue += helpers.aliasPixel(lineWidth);
                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;
                                tx1 = xTickStart;
                                tx2 = xTickEnd;
                                x1 = chartArea.left;
                                x2 = chartArea.right + axisWidth;
                                ty1 = ty2 = y1 = y2 = yLineValue
                            }
                            itemsToDraw.push({
                                tx1: tx1,
                                ty1: ty1,
                                tx2: tx2,
                                ty2: ty2,
                                x1: x1,
                                y1: y1,
                                x2: x2,
                                y2: y2,
                                labelX: labelX,
                                labelY: labelY,
                                glWidth: lineWidth,
                                glColor: lineColor,
                                glBorderDash: borderDash,
                                glBorderDashOffset: borderDashOffset,
                                rotation: -1 * labelRotationRadians,
                                label: label,
                                major: tick.major,
                                textBaseline: textBaseline,
                                textAlign: textAlign
                            })
                        });
                        helpers.each(itemsToDraw, function(itemToDraw) {
                            if (gridLines.display) {
                                context.save();
                                context.lineWidth = itemToDraw.glWidth;
                                context.strokeStyle = itemToDraw.glColor;
                                if (context.setLineDash) {
                                    context.setLineDash(itemToDraw.glBorderDash);
                                    context.lineDashOffset = itemToDraw.glBorderDashOffset
                                }
                                context.beginPath();
                                if (gridLines.drawTicks) {
                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);
                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2)
                                }
                                if (gridLines.drawOnChartArea) {
                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);
                                    context.lineTo(itemToDraw.x2, itemToDraw.y2)
                                }
                                context.stroke();
                                context.restore()
                            }
                            if (optionTicks.display) {
                                context.save();
                                context.translate(itemToDraw.labelX, itemToDraw.labelY);
                                context.rotate(itemToDraw.rotation);
                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;
                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;
                                context.textBaseline = itemToDraw.textBaseline;
                                context.textAlign = itemToDraw.textAlign;
                                var label = itemToDraw.label;
                                if (helpers.isArray(label)) {
                                    var lineCount = label.length;
                                    var lineHeight = tickFont.size * 1.5;
                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;
                                    for (var i = 0; i < lineCount; ++i) {
                                        context.fillText("" + label[i], 0, y);
                                        y += lineHeight
                                    }
                                } else {
                                    context.fillText(label, 0, 0)
                                }
                                context.restore()
                            }
                        });
                        if (scaleLabel.display) {
                            var scaleLabelX;
                            var scaleLabelY;
                            var rotation = 0;
                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;
                            if (isHorizontal) {
                                scaleLabelX = me.left + (me.right - me.left) / 2;
                                scaleLabelY = options.position === "bottom" ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top
                            } else {
                                var isLeft = options.position === "left";
                                scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;
                                scaleLabelY = me.top + (me.bottom - me.top) / 2;
                                rotation = isLeft ? -.5 * Math.PI : .5 * Math.PI
                            }
                            context.save();
                            context.translate(scaleLabelX, scaleLabelY);
                            context.rotate(rotation);
                            context.textAlign = "center";
                            context.textBaseline = "middle";
                            context.fillStyle = scaleLabelFontColor;
                            context.font = scaleLabelFont.font;
                            context.fillText(scaleLabel.labelString, 0, 0);
                            context.restore()
                        }
                        if (gridLines.drawBorder) {
                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);
                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);
                            var x1 = me.left;
                            var x2 = me.right + axisWidth;
                            var y1 = me.top;
                            var y2 = me.bottom + axisWidth;
                            var aliasPixel = helpers.aliasPixel(context.lineWidth);
                            if (isHorizontal) {
                                y1 = y2 = options.position === "top" ? me.bottom : me.top;
                                y1 += aliasPixel;
                                y2 += aliasPixel
                            } else {
                                x1 = x2 = options.position === "left" ? me.right : me.left;
                                x1 += aliasPixel;
                                x2 += aliasPixel
                            }
                            context.beginPath();
                            context.moveTo(x1, y1);
                            context.lineTo(x2, y2);
                            context.stroke()
                        }
                    }
                })
            }
        }, {
            25: 25,
            26: 26,
            34: 34,
            45: 45
        }],
        33: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var helpers = require(45);
            var layouts = require(30);
            module.exports = function(Chart) {
                Chart.scaleService = {
                    constructors: {},
                    defaults: {},
                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {
                        this.constructors[type] = scaleConstructor;
                        this.defaults[type] = helpers.clone(scaleDefaults)
                    },
                    getScaleConstructor: function(type) {
                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined
                    },
                    getScaleDefaults: function(type) {
                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {}
                    },
                    updateScaleDefaults: function(type, additions) {
                        var me = this;
                        if (me.defaults.hasOwnProperty(type)) {
                            me.defaults[type] = helpers.extend(me.defaults[type], additions)
                        }
                    },
                    addScalesToLayout: function(chart) {
                        helpers.each(chart.scales, function(scale) {
                            scale.fullWidth = scale.options.fullWidth;
                            scale.position = scale.options.position;
                            scale.weight = scale.options.weight;
                            layouts.addBox(chart, scale)
                        })
                    }
                }
            }
        }, {
            25: 25,
            30: 30,
            45: 45
        }],
        34: [function(require, module, exports) {
            "use strict";
            var helpers = require(45);
            module.exports = {
                formatters: {
                    values: function(value) {
                        return helpers.isArray(value) ? value : "" + value
                    },
                    linear: function(tickValue, index, ticks) {
                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];
                        if (Math.abs(delta) > 1) {
                            if (tickValue !== Math.floor(tickValue)) {
                                delta = tickValue - Math.floor(tickValue)
                            }
                        }
                        var logDelta = helpers.log10(Math.abs(delta));
                        var tickString = "";
                        if (tickValue !== 0) {
                            var numDecimal = -1 * Math.floor(logDelta);
                            numDecimal = Math.max(Math.min(numDecimal, 20), 0);
                            tickString = tickValue.toFixed(numDecimal)
                        } else {
                            tickString = "0"
                        }
                        return tickString
                    },
                    logarithmic: function(tickValue, index, ticks) {
                        var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));
                        if (tickValue === 0) {
                            return "0"
                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {
                            return tickValue.toExponential()
                        }
                        return ""
                    }
                }
            }
        }, {
            45: 45
        }],
        35: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var Element = require(26);
            var helpers = require(45);
            defaults._set("global", {
                tooltips: {
                    enabled: true,
                    custom: null,
                    mode: "nearest",
                    position: "average",
                    intersect: true,
                    backgroundColor: "rgba(0,0,0,0.8)",
                    titleFontStyle: "bold",
                    titleSpacing: 2,
                    titleMarginBottom: 6,
                    titleFontColor: "#fff",
                    titleAlign: "left",
                    bodySpacing: 2,
                    bodyFontColor: "#fff",
                    bodyAlign: "left",
                    footerFontStyle: "bold",
                    footerSpacing: 2,
                    footerMarginTop: 6,
                    footerFontColor: "#fff",
                    footerAlign: "left",
                    yPadding: 6,
                    xPadding: 6,
                    caretPadding: 2,
                    caretSize: 5,
                    cornerRadius: 6,
                    multiKeyBackground: "#fff",
                    displayColors: true,
                    borderColor: "rgba(0,0,0,0)",
                    borderWidth: 0,
                    callbacks: {
                        beforeTitle: helpers.noop,
                        title: function(tooltipItems, data) {
                            var title = "";
                            var labels = data.labels;
                            var labelCount = labels ? labels.length : 0;
                            if (tooltipItems.length > 0) {
                                var item = tooltipItems[0];
                                if (item.xLabel) {
                                    title = item.xLabel
                                } else if (labelCount > 0 && item.index < labelCount) {
                                    title = labels[item.index]
                                }
                            }
                            return title
                        },
                        afterTitle: helpers.noop,
                        beforeBody: helpers.noop,
                        beforeLabel: helpers.noop,
                        label: function(tooltipItem, data) {
                            var label = data.datasets[tooltipItem.datasetIndex].label || "";
                            if (label) {
                                label += ": "
                            }
                            label += tooltipItem.yLabel;
                            return label
                        },
                        labelColor: function(tooltipItem, chart) {
                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);
                            var activeElement = meta.data[tooltipItem.index];
                            var view = activeElement._view;
                            return {
                                borderColor: view.borderColor,
                                backgroundColor: view.backgroundColor
                            }
                        },
                        labelTextColor: function() {
                            return this._options.bodyFontColor
                        },
                        afterLabel: helpers.noop,
                        afterBody: helpers.noop,
                        beforeFooter: helpers.noop,
                        footer: helpers.noop,
                        afterFooter: helpers.noop
                    }
                }
            });
            module.exports = function(Chart) {
                function mergeOpacity(colorString, opacity) {
                    var color = helpers.color(colorString);
                    return color.alpha(opacity * color.alpha()).rgbaString()
                }

                function pushOrConcat(base, toPush) {
                    if (toPush) {
                        if (helpers.isArray(toPush)) {
                            Array.prototype.push.apply(base, toPush)
                        } else {
                            base.push(toPush)
                        }
                    }
                    return base
                }

                function createTooltipItem(element) {
                    var xScale = element._xScale;
                    var yScale = element._yScale || element._scale;
                    var index = element._index;
                    var datasetIndex = element._datasetIndex;
                    return {
                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : "",
                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : "",
                        index: index,
                        datasetIndex: datasetIndex,
                        x: element._model.x,
                        y: element._model.y
                    }
                }

                function getBaseModel(tooltipOpts) {
                    var globalDefaults = defaults.global;
                    var valueOrDefault = helpers.valueOrDefault;
                    return {
                        xPadding: tooltipOpts.xPadding,
                        yPadding: tooltipOpts.yPadding,
                        xAlign: tooltipOpts.xAlign,
                        yAlign: tooltipOpts.yAlign,
                        bodyFontColor: tooltipOpts.bodyFontColor,
                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),
                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),
                        _bodyAlign: tooltipOpts.bodyAlign,
                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),
                        bodySpacing: tooltipOpts.bodySpacing,
                        titleFontColor: tooltipOpts.titleFontColor,
                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),
                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),
                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),
                        _titleAlign: tooltipOpts.titleAlign,
                        titleSpacing: tooltipOpts.titleSpacing,
                        titleMarginBottom: tooltipOpts.titleMarginBottom,
                        footerFontColor: tooltipOpts.footerFontColor,
                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),
                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),
                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),
                        _footerAlign: tooltipOpts.footerAlign,
                        footerSpacing: tooltipOpts.footerSpacing,
                        footerMarginTop: tooltipOpts.footerMarginTop,
                        caretSize: tooltipOpts.caretSize,
                        cornerRadius: tooltipOpts.cornerRadius,
                        backgroundColor: tooltipOpts.backgroundColor,
                        opacity: 0,
                        legendColorBackground: tooltipOpts.multiKeyBackground,
                        displayColors: tooltipOpts.displayColors,
                        borderColor: tooltipOpts.borderColor,
                        borderWidth: tooltipOpts.borderWidth
                    }
                }

                function getTooltipSize(tooltip, model) {
                    var ctx = tooltip._chart.ctx;
                    var height = model.yPadding * 2;
                    var width = 0;
                    var body = model.body;
                    var combinedBodyLength = body.reduce(function(count, bodyItem) {
                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length
                    }, 0);
                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;
                    var titleLineCount = model.title.length;
                    var footerLineCount = model.footer.length;
                    var titleFontSize = model.titleFontSize;
                    var bodyFontSize = model.bodyFontSize;
                    var footerFontSize = model.footerFontSize;
                    height += titleLineCount * titleFontSize;
                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0;
                    height += titleLineCount ? model.titleMarginBottom : 0;
                    height += combinedBodyLength * bodyFontSize;
                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0;
                    height += footerLineCount ? model.footerMarginTop : 0;
                    height += footerLineCount * footerFontSize;
                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0;
                    var widthPadding = 0;
                    var maxLineWidth = function(line) {
                        width = Math.max(width, ctx.measureText(line).width + widthPadding)
                    };
                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);
                    helpers.each(model.title, maxLineWidth);
                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);
                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);
                    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;
                    helpers.each(body, function(bodyItem) {
                        helpers.each(bodyItem.before, maxLineWidth);
                        helpers.each(bodyItem.lines, maxLineWidth);
                        helpers.each(bodyItem.after, maxLineWidth)
                    });
                    widthPadding = 0;
                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);
                    helpers.each(model.footer, maxLineWidth);
                    width += 2 * model.xPadding;
                    return {
                        width: width,
                        height: height
                    }
                }

                function determineAlignment(tooltip, size) {
                    var model = tooltip._model;
                    var chart = tooltip._chart;
                    var chartArea = tooltip._chart.chartArea;
                    var xAlign = "center";
                    var yAlign = "center";
                    if (model.y < size.height) {
                        yAlign = "top"
                    } else if (model.y > chart.height - size.height) {
                        yAlign = "bottom"
                    }
                    var lf, rf;
                    var olf, orf;
                    var yf;
                    var midX = (chartArea.left + chartArea.right) / 2;
                    var midY = (chartArea.top + chartArea.bottom) / 2;
                    if (yAlign === "center") {
                        lf = function(x) {
                            return x <= midX
                        };
                        rf = function(x) {
                            return x > midX
                        }
                    } else {
                        lf = function(x) {
                            return x <= size.width / 2
                        };
                        rf = function(x) {
                            return x >= chart.width - size.width / 2
                        }
                    }
                    olf = function(x) {
                        return x + size.width + model.caretSize + model.caretPadding > chart.width
                    };
                    orf = function(x) {
                        return x - size.width - model.caretSize - model.caretPadding < 0
                    };
                    yf = function(y) {
                        return y <= midY ? "top" : "bottom"
                    };
                    if (lf(model.x)) {
                        xAlign = "left";
                        if (olf(model.x)) {
                            xAlign = "center";
                            yAlign = yf(model.y)
                        }
                    } else if (rf(model.x)) {
                        xAlign = "right";
                        if (orf(model.x)) {
                            xAlign = "center";
                            yAlign = yf(model.y)
                        }
                    }
                    var opts = tooltip._options;
                    return {
                        xAlign: opts.xAlign ? opts.xAlign : xAlign,
                        yAlign: opts.yAlign ? opts.yAlign : yAlign
                    }
                }

                function getBackgroundPoint(vm, size, alignment, chart) {
                    var x = vm.x;
                    var y = vm.y;
                    var caretSize = vm.caretSize;
                    var caretPadding = vm.caretPadding;
                    var cornerRadius = vm.cornerRadius;
                    var xAlign = alignment.xAlign;
                    var yAlign = alignment.yAlign;
                    var paddingAndSize = caretSize + caretPadding;
                    var radiusAndPadding = cornerRadius + caretPadding;
                    if (xAlign === "right") {
                        x -= size.width
                    } else if (xAlign === "center") {
                        x -= size.width / 2;
                        if (x + size.width > chart.width) {
                            x = chart.width - size.width
                        }
                        if (x < 0) {
                            x = 0
                        }
                    }
                    if (yAlign === "top") {
                        y += paddingAndSize
                    } else if (yAlign === "bottom") {
                        y -= size.height + paddingAndSize
                    } else {
                        y -= size.height / 2
                    }
                    if (yAlign === "center") {
                        if (xAlign === "left") {
                            x += paddingAndSize
                        } else if (xAlign === "right") {
                            x -= paddingAndSize
                        }
                    } else if (xAlign === "left") {
                        x -= radiusAndPadding
                    } else if (xAlign === "right") {
                        x += radiusAndPadding
                    }
                    return {
                        x: x,
                        y: y
                    }
                }
                Chart.Tooltip = Element.extend({
                    initialize: function() {
                        this._model = getBaseModel(this._options);
                        this._lastActive = []
                    },
                    getTitle: function() {
                        var me = this;
                        var opts = me._options;
                        var callbacks = opts.callbacks;
                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);
                        var title = callbacks.title.apply(me, arguments);
                        var afterTitle = callbacks.afterTitle.apply(me, arguments);
                        var lines = [];
                        lines = pushOrConcat(lines, beforeTitle);
                        lines = pushOrConcat(lines, title);
                        lines = pushOrConcat(lines, afterTitle);
                        return lines
                    },
                    getBeforeBody: function() {
                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);
                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : []
                    },
                    getBody: function(tooltipItems, data) {
                        var me = this;
                        var callbacks = me._options.callbacks;
                        var bodyItems = [];
                        helpers.each(tooltipItems, function(tooltipItem) {
                            var bodyItem = {
                                before: [],
                                lines: [],
                                after: []
                            };
                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));
                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));
                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));
                            bodyItems.push(bodyItem)
                        });
                        return bodyItems
                    },
                    getAfterBody: function() {
                        var lines = this._options.callbacks.afterBody.apply(this, arguments);
                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : []
                    },
                    getFooter: function() {
                        var me = this;
                        var callbacks = me._options.callbacks;
                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);
                        var footer = callbacks.footer.apply(me, arguments);
                        var afterFooter = callbacks.afterFooter.apply(me, arguments);
                        var lines = [];
                        lines = pushOrConcat(lines, beforeFooter);
                        lines = pushOrConcat(lines, footer);
                        lines = pushOrConcat(lines, afterFooter);
                        return lines
                    },
                    update: function(changed) {
                        var me = this;
                        var opts = me._options;
                        var existingModel = me._model;
                        var model = me._model = getBaseModel(opts);
                        var active = me._active;
                        var data = me._data;
                        var alignment = {
                            xAlign: existingModel.xAlign,
                            yAlign: existingModel.yAlign
                        };
                        var backgroundPoint = {
                            x: existingModel.x,
                            y: existingModel.y
                        };
                        var tooltipSize = {
                            width: existingModel.width,
                            height: existingModel.height
                        };
                        var tooltipPosition = {
                            x: existingModel.caretX,
                            y: existingModel.caretY
                        };
                        var i, len;
                        if (active.length) {
                            model.opacity = 1;
                            var labelColors = [];
                            var labelTextColors = [];
                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);
                            var tooltipItems = [];
                            for (i = 0, len = active.length; i < len; ++i) {
                                tooltipItems.push(createTooltipItem(active[i]))
                            }
                            if (opts.filter) {
                                tooltipItems = tooltipItems.filter(function(a) {
                                    return opts.filter(a, data)
                                })
                            }
                            if (opts.itemSort) {
                                tooltipItems = tooltipItems.sort(function(a, b) {
                                    return opts.itemSort(a, b, data)
                                })
                            }
                            helpers.each(tooltipItems, function(tooltipItem) {
                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));
                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart))
                            });
                            model.title = me.getTitle(tooltipItems, data);
                            model.beforeBody = me.getBeforeBody(tooltipItems, data);
                            model.body = me.getBody(tooltipItems, data);
                            model.afterBody = me.getAfterBody(tooltipItems, data);
                            model.footer = me.getFooter(tooltipItems, data);
                            model.x = Math.round(tooltipPosition.x);
                            model.y = Math.round(tooltipPosition.y);
                            model.caretPadding = opts.caretPadding;
                            model.labelColors = labelColors;
                            model.labelTextColors = labelTextColors;
                            model.dataPoints = tooltipItems;
                            tooltipSize = getTooltipSize(this, model);
                            alignment = determineAlignment(this, tooltipSize);
                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart)
                        } else {
                            model.opacity = 0
                        }
                        model.xAlign = alignment.xAlign;
                        model.yAlign = alignment.yAlign;
                        model.x = backgroundPoint.x;
                        model.y = backgroundPoint.y;
                        model.width = tooltipSize.width;
                        model.height = tooltipSize.height;
                        model.caretX = tooltipPosition.x;
                        model.caretY = tooltipPosition.y;
                        me._model = model;
                        if (changed && opts.custom) {
                            opts.custom.call(me, model)
                        }
                        return me
                    },
                    drawCaret: function(tooltipPoint, size) {
                        var ctx = this._chart.ctx;
                        var vm = this._view;
                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);
                        ctx.lineTo(caretPosition.x1, caretPosition.y1);
                        ctx.lineTo(caretPosition.x2, caretPosition.y2);
                        ctx.lineTo(caretPosition.x3, caretPosition.y3)
                    },
                    getCaretPosition: function(tooltipPoint, size, vm) {
                        var x1, x2, x3, y1, y2, y3;
                        var caretSize = vm.caretSize;
                        var cornerRadius = vm.cornerRadius;
                        var xAlign = vm.xAlign;
                        var yAlign = vm.yAlign;
                        var ptX = tooltipPoint.x;
                        var ptY = tooltipPoint.y;
                        var width = size.width;
                        var height = size.height;
                        if (yAlign === "center") {
                            y2 = ptY + height / 2;
                            if (xAlign === "left") {
                                x1 = ptX;
                                x2 = x1 - caretSize;
                                x3 = x1;
                                y1 = y2 + caretSize;
                                y3 = y2 - caretSize
                            } else {
                                x1 = ptX + width;
                                x2 = x1 + caretSize;
                                x3 = x1;
                                y1 = y2 - caretSize;
                                y3 = y2 + caretSize
                            }
                        } else {
                            if (xAlign === "left") {
                                x2 = ptX + cornerRadius + caretSize;
                                x1 = x2 - caretSize;
                                x3 = x2 + caretSize
                            } else if (xAlign === "right") {
                                x2 = ptX + width - cornerRadius - caretSize;
                                x1 = x2 - caretSize;
                                x3 = x2 + caretSize
                            } else {
                                x2 = vm.caretX;
                                x1 = x2 - caretSize;
                                x3 = x2 + caretSize
                            }
                            if (yAlign === "top") {
                                y1 = ptY;
                                y2 = y1 - caretSize;
                                y3 = y1
                            } else {
                                y1 = ptY + height;
                                y2 = y1 + caretSize;
                                y3 = y1;
                                var tmp = x3;
                                x3 = x1;
                                x1 = tmp
                            }
                        }
                        return {
                            x1: x1,
                            x2: x2,
                            x3: x3,
                            y1: y1,
                            y2: y2,
                            y3: y3
                        }
                    },
                    drawTitle: function(pt, vm, ctx, opacity) {
                        var title = vm.title;
                        if (title.length) {
                            ctx.textAlign = vm._titleAlign;
                            ctx.textBaseline = "top";
                            var titleFontSize = vm.titleFontSize;
                            var titleSpacing = vm.titleSpacing;
                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);
                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);
                            var i, len;
                            for (i = 0, len = title.length; i < len; ++i) {
                                ctx.fillText(title[i], pt.x, pt.y);
                                pt.y += titleFontSize + titleSpacing;
                                if (i + 1 === title.length) {
                                    pt.y += vm.titleMarginBottom - titleSpacing
                                }
                            }
                        }
                    },
                    drawBody: function(pt, vm, ctx, opacity) {
                        var bodyFontSize = vm.bodyFontSize;
                        var bodySpacing = vm.bodySpacing;
                        var body = vm.body;
                        ctx.textAlign = vm._bodyAlign;
                        ctx.textBaseline = "top";
                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);
                        var xLinePadding = 0;
                        var fillLineOfText = function(line) {
                            ctx.fillText(line, pt.x + xLinePadding, pt.y);
                            pt.y += bodyFontSize + bodySpacing
                        };
                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);
                        helpers.each(vm.beforeBody, fillLineOfText);
                        var drawColorBoxes = vm.displayColors;
                        xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0;
                        helpers.each(body, function(bodyItem, i) {
                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);
                            ctx.fillStyle = textColor;
                            helpers.each(bodyItem.before, fillLineOfText);
                            helpers.each(bodyItem.lines, function(line) {
                                if (drawColorBoxes) {
                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);
                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);
                                    ctx.lineWidth = 1;
                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);
                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);
                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);
                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);
                                    ctx.fillStyle = textColor
                                }
                                fillLineOfText(line)
                            });
                            helpers.each(bodyItem.after, fillLineOfText)
                        });
                        xLinePadding = 0;
                        helpers.each(vm.afterBody, fillLineOfText);
                        pt.y -= bodySpacing
                    },
                    drawFooter: function(pt, vm, ctx, opacity) {
                        var footer = vm.footer;
                        if (footer.length) {
                            pt.y += vm.footerMarginTop;
                            ctx.textAlign = vm._footerAlign;
                            ctx.textBaseline = "top";
                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);
                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);
                            helpers.each(footer, function(line) {
                                ctx.fillText(line, pt.x, pt.y);
                                pt.y += vm.footerFontSize + vm.footerSpacing
                            })
                        }
                    },
                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {
                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);
                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);
                        ctx.lineWidth = vm.borderWidth;
                        var xAlign = vm.xAlign;
                        var yAlign = vm.yAlign;
                        var x = pt.x;
                        var y = pt.y;
                        var width = tooltipSize.width;
                        var height = tooltipSize.height;
                        var radius = vm.cornerRadius;
                        ctx.beginPath();
                        ctx.moveTo(x + radius, y);
                        if (yAlign === "top") {
                            this.drawCaret(pt, tooltipSize)
                        }
                        ctx.lineTo(x + width - radius, y);
                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
                        if (yAlign === "center" && xAlign === "right") {
                            this.drawCaret(pt, tooltipSize)
                        }
                        ctx.lineTo(x + width, y + height - radius);
                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
                        if (yAlign === "bottom") {
                            this.drawCaret(pt, tooltipSize)
                        }
                        ctx.lineTo(x + radius, y + height);
                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
                        if (yAlign === "center" && xAlign === "left") {
                            this.drawCaret(pt, tooltipSize)
                        }
                        ctx.lineTo(x, y + radius);
                        ctx.quadraticCurveTo(x, y, x + radius, y);
                        ctx.closePath();
                        ctx.fill();
                        if (vm.borderWidth > 0) {
                            ctx.stroke()
                        }
                    },
                    draw: function() {
                        var ctx = this._chart.ctx;
                        var vm = this._view;
                        if (vm.opacity === 0) {
                            return
                        }
                        var tooltipSize = {
                            width: vm.width,
                            height: vm.height
                        };
                        var pt = {
                            x: vm.x,
                            y: vm.y
                        };
                        var opacity = Math.abs(vm.opacity < .001) ? 0 : vm.opacity;
                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;
                        if (this._options.enabled && hasTooltipContent) {
                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);
                            pt.x += vm.xPadding;
                            pt.y += vm.yPadding;
                            this.drawTitle(pt, vm, ctx, opacity);
                            this.drawBody(pt, vm, ctx, opacity);
                            this.drawFooter(pt, vm, ctx, opacity)
                        }
                    },
                    handleEvent: function(e) {
                        var me = this;
                        var options = me._options;
                        var changed = false;
                        me._lastActive = me._lastActive || [];
                        if (e.type === "mouseout") {
                            me._active = []
                        } else {
                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options)
                        }
                        changed = !helpers.arrayEquals(me._active, me._lastActive);
                        if (changed) {
                            me._lastActive = me._active;
                            if (options.enabled || options.custom) {
                                me._eventPosition = {
                                    x: e.x,
                                    y: e.y
                                };
                                me.update(true);
                                me.pivot()
                            }
                        }
                        return changed
                    }
                });
                Chart.Tooltip.positioners = {
                    average: function(elements) {
                        if (!elements.length) {
                            return false
                        }
                        var i, len;
                        var x = 0;
                        var y = 0;
                        var count = 0;
                        for (i = 0, len = elements.length; i < len; ++i) {
                            var el = elements[i];
                            if (el && el.hasValue()) {
                                var pos = el.tooltipPosition();
                                x += pos.x;
                                y += pos.y;
                                ++count
                            }
                        }
                        return {
                            x: Math.round(x / count),
                            y: Math.round(y / count)
                        }
                    },
                    nearest: function(elements, eventPosition) {
                        var x = eventPosition.x;
                        var y = eventPosition.y;
                        var minDistance = Number.POSITIVE_INFINITY;
                        var i, len, nearestElement;
                        for (i = 0, len = elements.length; i < len; ++i) {
                            var el = elements[i];
                            if (el && el.hasValue()) {
                                var center = el.getCenterPoint();
                                var d = helpers.distanceBetweenPoints(eventPosition, center);
                                if (d < minDistance) {
                                    minDistance = d;
                                    nearestElement = el
                                }
                            }
                        }
                        if (nearestElement) {
                            var tp = nearestElement.tooltipPosition();
                            x = tp.x;
                            y = tp.y
                        }
                        return {
                            x: x,
                            y: y
                        }
                    }
                }
            }
        }, {
            25: 25,
            26: 26,
            45: 45
        }],
        36: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var Element = require(26);
            var helpers = require(45);
            defaults._set("global", {
                elements: {
                    arc: {
                        backgroundColor: defaults.global.defaultColor,
                        borderColor: "#fff",
                        borderWidth: 2
                    }
                }
            });
            module.exports = Element.extend({
                inLabelRange: function(mouseX) {
                    var vm = this._view;
                    if (vm) {
                        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2)
                    }
                    return false
                },
                inRange: function(chartX, chartY) {
                    var vm = this._view;
                    if (vm) {
                        var pointRelativePosition = helpers.getAngleFromPoint(vm, {
                            x: chartX,
                            y: chartY
                        });
                        var angle = pointRelativePosition.angle;
                        var distance = pointRelativePosition.distance;
                        var startAngle = vm.startAngle;
                        var endAngle = vm.endAngle;
                        while (endAngle < startAngle) {
                            endAngle += 2 * Math.PI
                        }
                        while (angle > endAngle) {
                            angle -= 2 * Math.PI
                        }
                        while (angle < startAngle) {
                            angle += 2 * Math.PI
                        }
                        var betweenAngles = angle >= startAngle && angle <= endAngle;
                        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;
                        return betweenAngles && withinRadius
                    }
                    return false
                },
                getCenterPoint: function() {
                    var vm = this._view;
                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;
                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;
                    return {
                        x: vm.x + Math.cos(halfAngle) * halfRadius,
                        y: vm.y + Math.sin(halfAngle) * halfRadius
                    }
                },
                getArea: function() {
                    var vm = this._view;
                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2))
                },
                tooltipPosition: function() {
                    var vm = this._view;
                    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;
                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;
                    return {
                        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,
                        y: vm.y + Math.sin(centreAngle) * rangeFromCentre
                    }
                },
                draw: function() {
                    var ctx = this._chart.ctx;
                    var vm = this._view;
                    var sA = vm.startAngle;
                    var eA = vm.endAngle;
                    ctx.beginPath();
                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);
                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);
                    ctx.closePath();
                    ctx.strokeStyle = vm.borderColor;
                    ctx.lineWidth = vm.borderWidth;
                    ctx.fillStyle = vm.backgroundColor;
                    ctx.fill();
                    ctx.lineJoin = "bevel";
                    if (vm.borderWidth) {
                        ctx.stroke()
                    }
                }
            })
        }, {
            25: 25,
            26: 26,
            45: 45
        }],
        37: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var Element = require(26);
            var helpers = require(45);
            var globalDefaults = defaults.global;
            defaults._set("global", {
                elements: {
                    line: {
                        tension: .4,
                        backgroundColor: globalDefaults.defaultColor,
                        borderWidth: 3,
                        borderColor: globalDefaults.defaultColor,
                        borderCapStyle: "butt",
                        borderDash: [],
                        borderDashOffset: 0,
                        borderJoinStyle: "miter",
                        capBezierPoints: true,
                        fill: true
                    }
                }
            });
            module.exports = Element.extend({
                draw: function() {
                    var me = this;
                    var vm = me._view;
                    var ctx = me._chart.ctx;
                    var spanGaps = vm.spanGaps;
                    var points = me._children.slice();
                    var globalOptionLineElements = globalDefaults.elements.line;
                    var lastDrawnIndex = -1;
                    var index, current, previous, currentVM;
                    if (me._loop && points.length) {
                        points.push(points[0])
                    }
                    ctx.save();
                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;
                    if (ctx.setLineDash) {
                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash)
                    }
                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;
                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;
                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;
                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;
                    ctx.beginPath();
                    lastDrawnIndex = -1;
                    for (index = 0; index < points.length; ++index) {
                        current = points[index];
                        previous = helpers.previousItem(points, index);
                        currentVM = current._view;
                        if (index === 0) {
                            if (!currentVM.skip) {
                                ctx.moveTo(currentVM.x, currentVM.y);
                                lastDrawnIndex = index
                            }
                        } else {
                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];
                            if (!currentVM.skip) {
                                if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {
                                    ctx.moveTo(currentVM.x, currentVM.y)
                                } else {
                                    helpers.canvas.lineTo(ctx, previous._view, current._view)
                                }
                                lastDrawnIndex = index
                            }
                        }
                    }
                    ctx.stroke();
                    ctx.restore()
                }
            })
        }, {
            25: 25,
            26: 26,
            45: 45
        }],
        38: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var Element = require(26);
            var helpers = require(45);
            var defaultColor = defaults.global.defaultColor;
            defaults._set("global", {
                elements: {
                    point: {
                        radius: 3,
                        pointStyle: "circle",
                        backgroundColor: defaultColor,
                        borderColor: defaultColor,
                        borderWidth: 1,
                        hitRadius: 1,
                        hoverRadius: 4,
                        hoverBorderWidth: 1
                    }
                }
            });

            function xRange(mouseX) {
                var vm = this._view;
                return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false
            }

            function yRange(mouseY) {
                var vm = this._view;
                return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false
            }
            module.exports = Element.extend({
                inRange: function(mouseX, mouseY) {
                    var vm = this._view;
                    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false
                },
                inLabelRange: xRange,
                inXRange: xRange,
                inYRange: yRange,
                getCenterPoint: function() {
                    var vm = this._view;
                    return {
                        x: vm.x,
                        y: vm.y
                    }
                },
                getArea: function() {
                    return Math.PI * Math.pow(this._view.radius, 2)
                },
                tooltipPosition: function() {
                    var vm = this._view;
                    return {
                        x: vm.x,
                        y: vm.y,
                        padding: vm.radius + vm.borderWidth
                    }
                },
                draw: function(chartArea) {
                    var vm = this._view;
                    var model = this._model;
                    var ctx = this._chart.ctx;
                    var pointStyle = vm.pointStyle;
                    var radius = vm.radius;
                    var x = vm.x;
                    var y = vm.y;
                    var color = helpers.color;
                    var errMargin = 1.01;
                    var ratio = 0;
                    if (vm.skip) {
                        return
                    }
                    ctx.strokeStyle = vm.borderColor || defaultColor;
                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);
                    ctx.fillStyle = vm.backgroundColor || defaultColor;
                    if (chartArea !== undefined && (model.x < chartArea.left || chartArea.right * errMargin < model.x || model.y < chartArea.top || chartArea.bottom * errMargin < model.y)) {
                        if (model.x < chartArea.left) {
                            ratio = (x - model.x) / (chartArea.left - model.x)
                        } else if (chartArea.right * errMargin < model.x) {
                            ratio = (model.x - x) / (model.x - chartArea.right)
                        } else if (model.y < chartArea.top) {
                            ratio = (y - model.y) / (chartArea.top - model.y)
                        } else if (chartArea.bottom * errMargin < model.y) {
                            ratio = (model.y - y) / (model.y - chartArea.bottom)
                        }
                        ratio = Math.round(ratio * 100) / 100;
                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();
                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString()
                    }
                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y)
                }
            })
        }, {
            25: 25,
            26: 26,
            45: 45
        }],
        39: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var Element = require(26);
            defaults._set("global", {
                elements: {
                    rectangle: {
                        backgroundColor: defaults.global.defaultColor,
                        borderColor: defaults.global.defaultColor,
                        borderSkipped: "bottom",
                        borderWidth: 0
                    }
                }
            });

            function isVertical(bar) {
                return bar._view.width !== undefined
            }

            function getBarBounds(bar) {
                var vm = bar._view;
                var x1, x2, y1, y2;
                if (isVertical(bar)) {
                    var halfWidth = vm.width / 2;
                    x1 = vm.x - halfWidth;
                    x2 = vm.x + halfWidth;
                    y1 = Math.min(vm.y, vm.base);
                    y2 = Math.max(vm.y, vm.base)
                } else {
                    var halfHeight = vm.height / 2;
                    x1 = Math.min(vm.x, vm.base);
                    x2 = Math.max(vm.x, vm.base);
                    y1 = vm.y - halfHeight;
                    y2 = vm.y + halfHeight
                }
                return {
                    left: x1,
                    top: y1,
                    right: x2,
                    bottom: y2
                }
            }
            module.exports = Element.extend({
                draw: function() {
                    var ctx = this._chart.ctx;
                    var vm = this._view;
                    var left, right, top, bottom, signX, signY, borderSkipped;
                    var borderWidth = vm.borderWidth;
                    if (!vm.horizontal) {
                        left = vm.x - vm.width / 2;
                        right = vm.x + vm.width / 2;
                        top = vm.y;
                        bottom = vm.base;
                        signX = 1;
                        signY = bottom > top ? 1 : -1;
                        borderSkipped = vm.borderSkipped || "bottom"
                    } else {
                        left = vm.base;
                        right = vm.x;
                        top = vm.y - vm.height / 2;
                        bottom = vm.y + vm.height / 2;
                        signX = right > left ? 1 : -1;
                        signY = 1;
                        borderSkipped = vm.borderSkipped || "left"
                    }
                    if (borderWidth) {
                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));
                        borderWidth = borderWidth > barSize ? barSize : borderWidth;
                        var halfStroke = borderWidth / 2;
                        var borderLeft = left + (borderSkipped !== "left" ? halfStroke * signX : 0);
                        var borderRight = right + (borderSkipped !== "right" ? -halfStroke * signX : 0);
                        var borderTop = top + (borderSkipped !== "top" ? halfStroke * signY : 0);
                        var borderBottom = bottom + (borderSkipped !== "bottom" ? -halfStroke * signY : 0);
                        if (borderLeft !== borderRight) {
                            top = borderTop;
                            bottom = borderBottom
                        }
                        if (borderTop !== borderBottom) {
                            left = borderLeft;
                            right = borderRight
                        }
                    }
                    ctx.beginPath();
                    ctx.fillStyle = vm.backgroundColor;
                    ctx.strokeStyle = vm.borderColor;
                    ctx.lineWidth = borderWidth;
                    var corners = [
                        [left, bottom],
                        [left, top],
                        [right, top],
                        [right, bottom]
                    ];
                    var borders = ["bottom", "left", "top", "right"];
                    var startCorner = borders.indexOf(borderSkipped, 0);
                    if (startCorner === -1) {
                        startCorner = 0
                    }

                    function cornerAt(index) {
                        return corners[(startCorner + index) % 4]
                    }
                    var corner = cornerAt(0);
                    ctx.moveTo(corner[0], corner[1]);
                    for (var i = 1; i < 4; i++) {
                        corner = cornerAt(i);
                        ctx.lineTo(corner[0], corner[1])
                    }
                    ctx.fill();
                    if (borderWidth) {
                        ctx.stroke()
                    }
                },
                height: function() {
                    var vm = this._view;
                    return vm.base - vm.y
                },
                inRange: function(mouseX, mouseY) {
                    var inRange = false;
                    if (this._view) {
                        var bounds = getBarBounds(this);
                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom
                    }
                    return inRange
                },
                inLabelRange: function(mouseX, mouseY) {
                    var me = this;
                    if (!me._view) {
                        return false
                    }
                    var inRange = false;
                    var bounds = getBarBounds(me);
                    if (isVertical(me)) {
                        inRange = mouseX >= bounds.left && mouseX <= bounds.right
                    } else {
                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom
                    }
                    return inRange
                },
                inXRange: function(mouseX) {
                    var bounds = getBarBounds(this);
                    return mouseX >= bounds.left && mouseX <= bounds.right
                },
                inYRange: function(mouseY) {
                    var bounds = getBarBounds(this);
                    return mouseY >= bounds.top && mouseY <= bounds.bottom
                },
                getCenterPoint: function() {
                    var vm = this._view;
                    var x, y;
                    if (isVertical(this)) {
                        x = vm.x;
                        y = (vm.y + vm.base) / 2
                    } else {
                        x = (vm.x + vm.base) / 2;
                        y = vm.y
                    }
                    return {
                        x: x,
                        y: y
                    }
                },
                getArea: function() {
                    var vm = this._view;
                    return vm.width * Math.abs(vm.y - vm.base)
                },
                tooltipPosition: function() {
                    var vm = this._view;
                    return {
                        x: vm.x,
                        y: vm.y
                    }
                }
            })
        }, {
            25: 25,
            26: 26
        }],
        40: [function(require, module, exports) {
            "use strict";
            module.exports = {};
            module.exports.Arc = require(36);
            module.exports.Line = require(37);
            module.exports.Point = require(38);
            module.exports.Rectangle = require(39)
        }, {
            36: 36,
            37: 37,
            38: 38,
            39: 39
        }],
        41: [function(require, module, exports) {
            "use strict";
            var helpers = require(42);
            var exports = module.exports = {
                clear: function(chart) {
                    chart.ctx.clearRect(0, 0, chart.width, chart.height)
                },
                roundedRect: function(ctx, x, y, width, height, radius) {
                    if (radius) {
                        var rx = Math.min(radius, width / 2);
                        var ry = Math.min(radius, height / 2);
                        ctx.moveTo(x + rx, y);
                        ctx.lineTo(x + width - rx, y);
                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);
                        ctx.lineTo(x + width, y + height - ry);
                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);
                        ctx.lineTo(x + rx, y + height);
                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);
                        ctx.lineTo(x, y + ry);
                        ctx.quadraticCurveTo(x, y, x + rx, y)
                    } else {
                        ctx.rect(x, y, width, height)
                    }
                },
                drawPoint: function(ctx, style, radius, x, y) {
                    var type, edgeLength, xOffset, yOffset, height, size;
                    if (style && typeof style === "object") {
                        type = style.toString();
                        if (type === "[object HTMLImageElement]" || type === "[object HTMLCanvasElement]") {
                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);
                            return
                        }
                    }
                    if (isNaN(radius) || radius <= 0) {
                        return
                    }
                    switch (style) {
                        default: ctx.beginPath();ctx.arc(x, y, radius, 0, Math.PI * 2);ctx.closePath();ctx.fill();
                        break;
                        case "triangle":
                                ctx.beginPath();edgeLength = 3 * radius / Math.sqrt(3);height = edgeLength * Math.sqrt(3) / 2;ctx.moveTo(x - edgeLength / 2, y + height / 3);ctx.lineTo(x + edgeLength / 2, y + height / 3);ctx.lineTo(x, y - 2 * height / 3);ctx.closePath();ctx.fill();
                            break;
                        case "rect":
                                size = 1 / Math.SQRT2 * radius;ctx.beginPath();ctx.fillRect(x - size, y - size, 2 * size, 2 * size);ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);
                            break;
                        case "rectRounded":
                                var offset = radius / Math.SQRT2;
                            var leftX = x - offset;
                            var topY = y - offset;
                            var sideSize = Math.SQRT2 * radius;ctx.beginPath();this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);ctx.closePath();ctx.fill();
                            break;
                        case "rectRot":
                                size = 1 / Math.SQRT2 * radius;ctx.beginPath();ctx.moveTo(x - size, y);ctx.lineTo(x, y + size);ctx.lineTo(x + size, y);ctx.lineTo(x, y - size);ctx.closePath();ctx.fill();
                            break;
                        case "cross":
                                ctx.beginPath();ctx.moveTo(x, y + radius);ctx.lineTo(x, y - radius);ctx.moveTo(x - radius, y);ctx.lineTo(x + radius, y);ctx.closePath();
                            break;
                        case "crossRot":
                                ctx.beginPath();xOffset = Math.cos(Math.PI / 4) * radius;yOffset = Math.sin(Math.PI / 4) * radius;ctx.moveTo(x - xOffset, y - yOffset);ctx.lineTo(x + xOffset, y + yOffset);ctx.moveTo(x - xOffset, y + yOffset);ctx.lineTo(x + xOffset, y - yOffset);ctx.closePath();
                            break;
                        case "star":
                                ctx.beginPath();ctx.moveTo(x, y + radius);ctx.lineTo(x, y - radius);ctx.moveTo(x - radius, y);ctx.lineTo(x + radius, y);xOffset = Math.cos(Math.PI / 4) * radius;yOffset = Math.sin(Math.PI / 4) * radius;ctx.moveTo(x - xOffset, y - yOffset);ctx.lineTo(x + xOffset, y + yOffset);ctx.moveTo(x - xOffset, y + yOffset);ctx.lineTo(x + xOffset, y - yOffset);ctx.closePath();
                            break;
                        case "line":
                                ctx.beginPath();ctx.moveTo(x - radius, y);ctx.lineTo(x + radius, y);ctx.closePath();
                            break;
                        case "dash":
                                ctx.beginPath();ctx.moveTo(x, y);ctx.lineTo(x + radius, y);ctx.closePath();
                            break
                    }
                    ctx.stroke()
                },
                clipArea: function(ctx, area) {
                    ctx.save();
                    ctx.beginPath();
                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);
                    ctx.clip()
                },
                unclipArea: function(ctx) {
                    ctx.restore()
                },
                lineTo: function(ctx, previous, target, flip) {
                    if (target.steppedLine) {
                        if (target.steppedLine === "after" && !flip || target.steppedLine !== "after" && flip) {
                            ctx.lineTo(previous.x, target.y)
                        } else {
                            ctx.lineTo(target.x, previous.y)
                        }
                        ctx.lineTo(target.x, target.y);
                        return
                    }
                    if (!target.tension) {
                        ctx.lineTo(target.x, target.y);
                        return
                    }
                    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y)
                }
            };
            helpers.clear = exports.clear;
            helpers.drawRoundedRectangle = function(ctx) {
                ctx.beginPath();
                exports.roundedRect.apply(exports, arguments);
                ctx.closePath()
            }
        }, {
            42: 42
        }],
        42: [function(require, module, exports) {
            "use strict";
            var helpers = {
                noop: function() {},
                uid: function() {
                    var id = 0;
                    return function() {
                        return id++
                    }
                }(),
                isNullOrUndef: function(value) {
                    return value === null || typeof value === "undefined"
                },
                isArray: Array.isArray ? Array.isArray : function(value) {
                    return Object.prototype.toString.call(value) === "[object Array]"
                },
                isObject: function(value) {
                    return value !== null && Object.prototype.toString.call(value) === "[object Object]"
                },
                valueOrDefault: function(value, defaultValue) {
                    return typeof value === "undefined" ? defaultValue : value
                },
                valueAtIndexOrDefault: function(value, index, defaultValue) {
                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue)
                },
                callback: function(fn, args, thisArg) {
                    if (fn && typeof fn.call === "function") {
                        return fn.apply(thisArg, args)
                    }
                },
                each: function(loopable, fn, thisArg, reverse) {
                    var i, len, keys;
                    if (helpers.isArray(loopable)) {
                        len = loopable.length;
                        if (reverse) {
                            for (i = len - 1; i >= 0; i--) {
                                fn.call(thisArg, loopable[i], i)
                            }
                        } else {
                            for (i = 0; i < len; i++) {
                                fn.call(thisArg, loopable[i], i)
                            }
                        }
                    } else if (helpers.isObject(loopable)) {
                        keys = Object.keys(loopable);
                        len = keys.length;
                        for (i = 0; i < len; i++) {
                            fn.call(thisArg, loopable[keys[i]], keys[i])
                        }
                    }
                },
                arrayEquals: function(a0, a1) {
                    var i, ilen, v0, v1;
                    if (!a0 || !a1 || a0.length !== a1.length) {
                        return false
                    }
                    for (i = 0, ilen = a0.length; i < ilen; ++i) {
                        v0 = a0[i];
                        v1 = a1[i];
                        if (v0 instanceof Array && v1 instanceof Array) {
                            if (!helpers.arrayEquals(v0, v1)) {
                                return false
                            }
                        } else if (v0 !== v1) {
                            return false
                        }
                    }
                    return true
                },
                clone: function(source) {
                    if (helpers.isArray(source)) {
                        return source.map(helpers.clone)
                    }
                    if (helpers.isObject(source)) {
                        var target = {};
                        var keys = Object.keys(source);
                        var klen = keys.length;
                        var k = 0;
                        for (; k < klen; ++k) {
                            target[keys[k]] = helpers.clone(source[keys[k]])
                        }
                        return target
                    }
                    return source
                },
                _merger: function(key, target, source, options) {
                    var tval = target[key];
                    var sval = source[key];
                    if (helpers.isObject(tval) && helpers.isObject(sval)) {
                        helpers.merge(tval, sval, options)
                    } else {
                        target[key] = helpers.clone(sval)
                    }
                },
                _mergerIf: function(key, target, source) {
                    var tval = target[key];
                    var sval = source[key];
                    if (helpers.isObject(tval) && helpers.isObject(sval)) {
                        helpers.mergeIf(tval, sval)
                    } else if (!target.hasOwnProperty(key)) {
                        target[key] = helpers.clone(sval)
                    }
                },
                merge: function(target, source, options) {
                    var sources = helpers.isArray(source) ? source : [source];
                    var ilen = sources.length;
                    var merge, i, keys, klen, k;
                    if (!helpers.isObject(target)) {
                        return target
                    }
                    options = options || {};
                    merge = options.merger || helpers._merger;
                    for (i = 0; i < ilen; ++i) {
                        source = sources[i];
                        if (!helpers.isObject(source)) {
                            continue
                        }
                        keys = Object.keys(source);
                        for (k = 0, klen = keys.length; k < klen; ++k) {
                            merge(keys[k], target, source, options)
                        }
                    }
                    return target
                },
                mergeIf: function(target, source) {
                    return helpers.merge(target, source, {
                        merger: helpers._mergerIf
                    })
                },
                extend: function(target) {
                    var setFn = function(value, key) {
                        target[key] = value
                    };
                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {
                        helpers.each(arguments[i], setFn)
                    }
                    return target
                },
                inherits: function(extensions) {
                    var me = this;
                    var ChartElement = extensions && extensions.hasOwnProperty("constructor") ? extensions.constructor : function() {
                        return me.apply(this, arguments)
                    };
                    var Surrogate = function() {
                        this.constructor = ChartElement
                    };
                    Surrogate.prototype = me.prototype;
                    ChartElement.prototype = new Surrogate;
                    ChartElement.extend = helpers.inherits;
                    if (extensions) {
                        helpers.extend(ChartElement.prototype, extensions)
                    }
                    ChartElement.__super__ = me.prototype;
                    return ChartElement
                }
            };
            module.exports = helpers;
            helpers.callCallback = helpers.callback;
            helpers.indexOf = function(array, item, fromIndex) {
                return Array.prototype.indexOf.call(array, item, fromIndex)
            };
            helpers.getValueOrDefault = helpers.valueOrDefault;
            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault
        }, {}],
        43: [function(require, module, exports) {
            "use strict";
            var helpers = require(42);
            var effects = {
                linear: function(t) {
                    return t
                },
                easeInQuad: function(t) {
                    return t * t
                },
                easeOutQuad: function(t) {
                    return -t * (t - 2)
                },
                easeInOutQuad: function(t) {
                    if ((t /= .5) < 1) {
                        return .5 * t * t
                    }
                    return -.5 * (--t * (t - 2) - 1)
                },
                easeInCubic: function(t) {
                    return t * t * t
                },
                easeOutCubic: function(t) {
                    return (t = t - 1) * t * t + 1
                },
                easeInOutCubic: function(t) {
                    if ((t /= .5) < 1) {
                        return .5 * t * t * t
                    }
                    return .5 * ((t -= 2) * t * t + 2)
                },
                easeInQuart: function(t) {
                    return t * t * t * t
                },
                easeOutQuart: function(t) {
                    return -((t = t - 1) * t * t * t - 1)
                },
                easeInOutQuart: function(t) {
                    if ((t /= .5) < 1) {
                        return .5 * t * t * t * t
                    }
                    return -.5 * ((t -= 2) * t * t * t - 2)
                },
                easeInQuint: function(t) {
                    return t * t * t * t * t
                },
                easeOutQuint: function(t) {
                    return (t = t - 1) * t * t * t * t + 1
                },
                easeInOutQuint: function(t) {
                    if ((t /= .5) < 1) {
                        return .5 * t * t * t * t * t
                    }
                    return .5 * ((t -= 2) * t * t * t * t + 2)
                },
                easeInSine: function(t) {
                    return -Math.cos(t * (Math.PI / 2)) + 1
                },
                easeOutSine: function(t) {
                    return Math.sin(t * (Math.PI / 2))
                },
                easeInOutSine: function(t) {
                    return -.5 * (Math.cos(Math.PI * t) - 1)
                },
                easeInExpo: function(t) {
                    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1))
                },
                easeOutExpo: function(t) {
                    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1
                },
                easeInOutExpo: function(t) {
                    if (t === 0) {
                        return 0
                    }
                    if (t === 1) {
                        return 1
                    }
                    if ((t /= .5) < 1) {
                        return .5 * Math.pow(2, 10 * (t - 1))
                    }
                    return .5 * (-Math.pow(2, -10 * --t) + 2)
                },
                easeInCirc: function(t) {
                    if (t >= 1) {
                        return t
                    }
                    return -(Math.sqrt(1 - t * t) - 1)
                },
                easeOutCirc: function(t) {
                    return Math.sqrt(1 - (t = t - 1) * t)
                },
                easeInOutCirc: function(t) {
                    if ((t /= .5) < 1) {
                        return -.5 * (Math.sqrt(1 - t * t) - 1)
                    }
                    return .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
                },
                easeInElastic: function(t) {
                    var s = 1.70158;
                    var p = 0;
                    var a = 1;
                    if (t === 0) {
                        return 0
                    }
                    if (t === 1) {
                        return 1
                    }
                    if (!p) {
                        p = .3
                    }
                    if (a < 1) {
                        a = 1;
                        s = p / 4
                    } else {
                        s = p / (2 * Math.PI) * Math.asin(1 / a)
                    }
                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p))
                },
                easeOutElastic: function(t) {
                    var s = 1.70158;
                    var p = 0;
                    var a = 1;
                    if (t === 0) {
                        return 0
                    }
                    if (t === 1) {
                        return 1
                    }
                    if (!p) {
                        p = .3
                    }
                    if (a < 1) {
                        a = 1;
                        s = p / 4
                    } else {
                        s = p / (2 * Math.PI) * Math.asin(1 / a)
                    }
                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1
                },
                easeInOutElastic: function(t) {
                    var s = 1.70158;
                    var p = 0;
                    var a = 1;
                    if (t === 0) {
                        return 0
                    }
                    if ((t /= .5) === 2) {
                        return 1
                    }
                    if (!p) {
                        p = .45
                    }
                    if (a < 1) {
                        a = 1;
                        s = p / 4
                    } else {
                        s = p / (2 * Math.PI) * Math.asin(1 / a)
                    }
                    if (t < 1) {
                        return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p))
                    }
                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * .5 + 1
                },
                easeInBack: function(t) {
                    var s = 1.70158;
                    return t * t * ((s + 1) * t - s)
                },
                easeOutBack: function(t) {
                    var s = 1.70158;
                    return (t = t - 1) * t * ((s + 1) * t + s) + 1
                },
                easeInOutBack: function(t) {
                    var s = 1.70158;
                    if ((t /= .5) < 1) {
                        return .5 * (t * t * (((s *= 1.525) + 1) * t - s))
                    }
                    return .5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2)
                },
                easeInBounce: function(t) {
                    return 1 - effects.easeOutBounce(1 - t)
                },
                easeOutBounce: function(t) {
                    if (t < 1 / 2.75) {
                        return 7.5625 * t * t
                    }
                    if (t < 2 / 2.75) {
                        return 7.5625 * (t -= 1.5 / 2.75) * t + .75
                    }
                    if (t < 2.5 / 2.75) {
                        return 7.5625 * (t -= 2.25 / 2.75) * t + .9375
                    }
                    return 7.5625 * (t -= 2.625 / 2.75) * t + .984375
                },
                easeInOutBounce: function(t) {
                    if (t < .5) {
                        return effects.easeInBounce(t * 2) * .5
                    }
                    return effects.easeOutBounce(t * 2 - 1) * .5 + .5
                }
            };
            module.exports = {
                effects: effects
            };
            helpers.easingEffects = effects
        }, {
            42: 42
        }],
        44: [function(require, module, exports) {
            "use strict";
            var helpers = require(42);
            module.exports = {
                toLineHeight: function(value, size) {
                    var matches = ("" + value).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);
                    if (!matches || matches[1] === "normal") {
                        return size * 1.2
                    }
                    value = +matches[2];
                    switch (matches[3]) {
                        case "px":
                            return value;
                        case "%":
                            value /= 100;
                            break;
                        default:
                            break
                    }
                    return size * value
                },
                toPadding: function(value) {
                    var t, r, b, l;
                    if (helpers.isObject(value)) {
                        t = +value.top || 0;
                        r = +value.right || 0;
                        b = +value.bottom || 0;
                        l = +value.left || 0
                    } else {
                        t = r = b = l = +value || 0
                    }
                    return {
                        top: t,
                        right: r,
                        bottom: b,
                        left: l,
                        height: t + b,
                        width: l + r
                    }
                },
                resolve: function(inputs, context, index) {
                    var i, ilen, value;
                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {
                        value = inputs[i];
                        if (value === undefined) {
                            continue
                        }
                        if (context !== undefined && typeof value === "function") {
                            value = value(context)
                        }
                        if (index !== undefined && helpers.isArray(value)) {
                            value = value[index]
                        }
                        if (value !== undefined) {
                            return value
                        }
                    }
                }
            }
        }, {
            42: 42
        }],
        45: [function(require, module, exports) {
            "use strict";
            module.exports = require(42);
            module.exports.easing = require(43);
            module.exports.canvas = require(41);
            module.exports.options = require(44)
        }, {
            41: 41,
            42: 42,
            43: 43,
            44: 44
        }],
        46: [function(require, module, exports) {
            module.exports = {
                acquireContext: function(item) {
                    if (item && item.canvas) {
                        item = item.canvas
                    }
                    return item && item.getContext("2d") || null
                }
            }
        }, {}],
        47: [function(require, module, exports) {
            "use strict";
            var helpers = require(45);
            var EXPANDO_KEY = "$chartjs";
            var CSS_PREFIX = "chartjs-";
            var CSS_RENDER_MONITOR = CSS_PREFIX + "render-monitor";
            var CSS_RENDER_ANIMATION = CSS_PREFIX + "render-animation";
            var ANIMATION_START_EVENTS = ["animationstart", "webkitAnimationStart"];
            var EVENT_TYPES = {
                touchstart: "mousedown",
                touchmove: "mousemove",
                touchend: "mouseup",
                pointerenter: "mouseenter",
                pointerdown: "mousedown",
                pointermove: "mousemove",
                pointerup: "mouseup",
                pointerleave: "mouseout",
                pointerout: "mouseout"
            };

            function readUsedSize(element, property) {
                var value = helpers.getStyle(element, property);
                var matches = value && value.match(/^(\d+)(\.\d+)?px$/);
                return matches ? Number(matches[1]) : undefined
            }

            function initCanvas(canvas, config) {
                var style = canvas.style;
                var renderHeight = canvas.getAttribute("height");
                var renderWidth = canvas.getAttribute("width");
                canvas[EXPANDO_KEY] = {
                    initial: {
                        height: renderHeight,
                        width: renderWidth,
                        style: {
                            display: style.display,
                            height: style.height,
                            width: style.width
                        }
                    }
                };
                style.display = style.display || "block";
                if (renderWidth === null || renderWidth === "") {
                    var displayWidth = readUsedSize(canvas, "width");
                    if (displayWidth !== undefined) {
                        canvas.width = displayWidth
                    }
                }
                if (renderHeight === null || renderHeight === "") {
                    if (canvas.style.height === "") {
                        canvas.height = canvas.width / (config.options.aspectRatio || 2)
                    } else {
                        var displayHeight = readUsedSize(canvas, "height");
                        if (displayWidth !== undefined) {
                            canvas.height = displayHeight
                        }
                    }
                }
                return canvas
            }
            var supportsEventListenerOptions = function() {
                var supports = false;
                try {
                    var options = Object.defineProperty({}, "passive", {
                        get: function() {
                            supports = true
                        }
                    });
                    window.addEventListener("e", null, options)
                } catch (e) {}
                return supports
            }();
            var eventListenerOptions = supportsEventListenerOptions ? {
                passive: true
            } : false;

            function addEventListener(node, type, listener) {
                node.addEventListener(type, listener, eventListenerOptions)
            }

            function removeEventListener(node, type, listener) {
                node.removeEventListener(type, listener, eventListenerOptions)
            }

            function createEvent(type, chart, x, y, nativeEvent) {
                return {
                    type: type,
                    chart: chart,
                    native: nativeEvent || null,
                    x: x !== undefined ? x : null,
                    y: y !== undefined ? y : null
                }
            }

            function fromNativeEvent(event, chart) {
                var type = EVENT_TYPES[event.type] || event.type;
                var pos = helpers.getRelativePosition(event, chart);
                return createEvent(type, chart, pos.x, pos.y, event)
            }

            function throttled(fn, thisArg) {
                var ticking = false;
                var args = [];
                return function() {
                    args = Array.prototype.slice.call(arguments);
                    thisArg = thisArg || this;
                    if (!ticking) {
                        ticking = true;
                        helpers.requestAnimFrame.call(window, function() {
                            ticking = false;
                            fn.apply(thisArg, args)
                        })
                    }
                }
            }

            function createResizer(handler) {
                var resizer = document.createElement("div");
                var cls = CSS_PREFIX + "size-monitor";
                var maxSize = 1e6;
                var style = "position:absolute;" + "left:0;" + "top:0;" + "right:0;" + "bottom:0;" + "overflow:hidden;" + "pointer-events:none;" + "visibility:hidden;" + "z-index:-1;";
                resizer.style.cssText = style;
                resizer.className = cls;
                resizer.innerHTML = '<div class="' + cls + '-expand" style="' + style + '">' + '<div style="' + "position:absolute;" + "width:" + maxSize + "px;" + "height:" + maxSize + "px;" + "left:0;" + 'top:0">' + "</div>" + "</div>" + '<div class="' + cls + '-shrink" style="' + style + '">' + '<div style="' + "position:absolute;" + "width:200%;" + "height:200%;" + "left:0; " + 'top:0">' + "</div>" + "</div>";
                var expand = resizer.childNodes[0];
                var shrink = resizer.childNodes[1];
                resizer._reset = function() {
                    expand.scrollLeft = maxSize;
                    expand.scrollTop = maxSize;
                    shrink.scrollLeft = maxSize;
                    shrink.scrollTop = maxSize
                };
                var onScroll = function() {
                    resizer._reset();
                    handler()
                };
                addEventListener(expand, "scroll", onScroll.bind(expand, "expand"));
                addEventListener(shrink, "scroll", onScroll.bind(shrink, "shrink"));
                return resizer
            }

            function watchForRender(node, handler) {
                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});
                var proxy = expando.renderProxy = function(e) {
                    if (e.animationName === CSS_RENDER_ANIMATION) {
                        handler()
                    }
                };
                helpers.each(ANIMATION_START_EVENTS, function(type) {
                    addEventListener(node, type, proxy)
                });
                expando.reflow = !!node.offsetParent;
                node.classList.add(CSS_RENDER_MONITOR)
            }

            function unwatchForRender(node) {
                var expando = node[EXPANDO_KEY] || {};
                var proxy = expando.renderProxy;
                if (proxy) {
                    helpers.each(ANIMATION_START_EVENTS, function(type) {
                        removeEventListener(node, type, proxy)
                    });
                    delete expando.renderProxy
                }
                node.classList.remove(CSS_RENDER_MONITOR)
            }

            function addResizeListener(node, listener, chart) {
                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});
                var resizer = expando.resizer = createResizer(throttled(function() {
                    if (expando.resizer) {
                        return listener(createEvent("resize", chart))
                    }
                }));
                watchForRender(node, function() {
                    if (expando.resizer) {
                        var container = node.parentNode;
                        if (container && container !== resizer.parentNode) {
                            container.insertBefore(resizer, container.firstChild)
                        }
                        resizer._reset()
                    }
                })
            }

            function removeResizeListener(node) {
                var expando = node[EXPANDO_KEY] || {};
                var resizer = expando.resizer;
                delete expando.resizer;
                unwatchForRender(node);
                if (resizer && resizer.parentNode) {
                    resizer.parentNode.removeChild(resizer)
                }
            }

            function injectCSS(platform, css) {
                var style = platform._style || document.createElement("style");
                if (!platform._style) {
                    platform._style = style;
                    css = "/* Chart.js */\n" + css;
                    style.setAttribute("type", "text/css");
                    document.getElementsByTagName("head")[0].appendChild(style)
                }
                style.appendChild(document.createTextNode(css))
            }
            module.exports = {
                _enabled: typeof window !== "undefined" && typeof document !== "undefined",
                initialize: function() {
                    var keyframes = "from{opacity:0.99}to{opacity:1}";
                    injectCSS(this, "@-webkit-keyframes " + CSS_RENDER_ANIMATION + "{" + keyframes + "}" + "@keyframes " + CSS_RENDER_ANIMATION + "{" + keyframes + "}" + "." + CSS_RENDER_MONITOR + "{" + "-webkit-animation:" + CSS_RENDER_ANIMATION + " 0.001s;" + "animation:" + CSS_RENDER_ANIMATION + " 0.001s;" + "}")
                },
                acquireContext: function(item, config) {
                    if (typeof item === "string") {
                        item = document.getElementById(item)
                    } else if (item.length) {
                        item = item[0]
                    }
                    if (item && item.canvas) {
                        item = item.canvas
                    }
                    var context = item && item.getContext && item.getContext("2d");
                    if (context && context.canvas === item) {
                        initCanvas(item, config);
                        return context
                    }
                    return null
                },
                releaseContext: function(context) {
                    var canvas = context.canvas;
                    if (!canvas[EXPANDO_KEY]) {
                        return
                    }
                    var initial = canvas[EXPANDO_KEY].initial;
                    ["height", "width"].forEach(function(prop) {
                        var value = initial[prop];
                        if (helpers.isNullOrUndef(value)) {
                            canvas.removeAttribute(prop)
                        } else {
                            canvas.setAttribute(prop, value)
                        }
                    });
                    helpers.each(initial.style || {}, function(value, key) {
                        canvas.style[key] = value
                    });
                    canvas.width = canvas.width;
                    delete canvas[EXPANDO_KEY]
                },
                addEventListener: function(chart, type, listener) {
                    var canvas = chart.canvas;
                    if (type === "resize") {
                        addResizeListener(canvas, listener, chart);
                        return
                    }
                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});
                    var proxies = expando.proxies || (expando.proxies = {});
                    var proxy = proxies[chart.id + "_" + type] = function(event) {
                        listener(fromNativeEvent(event, chart))
                    };
                    addEventListener(canvas, type, proxy)
                },
                removeEventListener: function(chart, type, listener) {
                    var canvas = chart.canvas;
                    if (type === "resize") {
                        removeResizeListener(canvas, listener);
                        return
                    }
                    var expando = listener[EXPANDO_KEY] || {};
                    var proxies = expando.proxies || {};
                    var proxy = proxies[chart.id + "_" + type];
                    if (!proxy) {
                        return
                    }
                    removeEventListener(canvas, type, proxy)
                }
            };
            helpers.addEvent = addEventListener;
            helpers.removeEvent = removeEventListener
        }, {
            45: 45
        }],
        48: [function(require, module, exports) {
            "use strict";
            var helpers = require(45);
            var basic = require(46);
            var dom = require(47);
            var implementation = dom._enabled ? dom : basic;
            module.exports = helpers.extend({
                initialize: function() {},
                acquireContext: function() {},
                releaseContext: function() {},
                addEventListener: function() {},
                removeEventListener: function() {}
            }, implementation)
        }, {
            45: 45,
            46: 46,
            47: 47
        }],
        49: [function(require, module, exports) {
            "use strict";
            module.exports = {};
            module.exports.filler = require(50);
            module.exports.legend = require(51);
            module.exports.title = require(52)
        }, {
            50: 50,
            51: 51,
            52: 52
        }],
        50: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var elements = require(40);
            var helpers = require(45);
            defaults._set("global", {
                plugins: {
                    filler: {
                        propagate: true
                    }
                }
            });
            var mappers = {
                dataset: function(source) {
                    var index = source.fill;
                    var chart = source.chart;
                    var meta = chart.getDatasetMeta(index);
                    var visible = meta && chart.isDatasetVisible(index);
                    var points = visible && meta.dataset._children || [];
                    var length = points.length || 0;
                    return !length ? null : function(point, i) {
                        return i < length && points[i]._view || null
                    }
                },
                boundary: function(source) {
                    var boundary = source.boundary;
                    var x = boundary ? boundary.x : null;
                    var y = boundary ? boundary.y : null;
                    return function(point) {
                        return {
                            x: x === null ? point.x : x,
                            y: y === null ? point.y : y
                        }
                    }
                }
            };

            function decodeFill(el, index, count) {
                var model = el._model || {};
                var fill = model.fill;
                var target;
                if (fill === undefined) {
                    fill = !!model.backgroundColor
                }
                if (fill === false || fill === null) {
                    return false
                }
                if (fill === true) {
                    return "origin"
                }
                target = parseFloat(fill, 10);
                if (isFinite(target) && Math.floor(target) === target) {
                    if (fill[0] === "-" || fill[0] === "+") {
                        target = index + target
                    }
                    if (target === index || target < 0 || target >= count) {
                        return false
                    }
                    return target
                }
                switch (fill) {
                    case "bottom":
                        return "start";
                    case "top":
                        return "end";
                    case "zero":
                        return "origin";
                    case "origin":
                    case "start":
                    case "end":
                        return fill;
                    default:
                        return false
                }
            }

            function computeBoundary(source) {
                var model = source.el._model || {};
                var scale = source.el._scale || {};
                var fill = source.fill;
                var target = null;
                var horizontal;
                if (isFinite(fill)) {
                    return null
                }
                if (fill === "start") {
                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom
                } else if (fill === "end") {
                    target = model.scaleTop === undefined ? scale.top : model.scaleTop
                } else if (model.scaleZero !== undefined) {
                    target = model.scaleZero
                } else if (scale.getBasePosition) {
                    target = scale.getBasePosition()
                } else if (scale.getBasePixel) {
                    target = scale.getBasePixel()
                }
                if (target !== undefined && target !== null) {
                    if (target.x !== undefined && target.y !== undefined) {
                        return target
                    }
                    if (typeof target === "number" && isFinite(target)) {
                        horizontal = scale.isHorizontal();
                        return {
                            x: horizontal ? target : null,
                            y: horizontal ? null : target
                        }
                    }
                }
                return null
            }

            function resolveTarget(sources, index, propagate) {
                var source = sources[index];
                var fill = source.fill;
                var visited = [index];
                var target;
                if (!propagate) {
                    return fill
                }
                while (fill !== false && visited.indexOf(fill) === -1) {
                    if (!isFinite(fill)) {
                        return fill
                    }
                    target = sources[fill];
                    if (!target) {
                        return false
                    }
                    if (target.visible) {
                        return fill
                    }
                    visited.push(fill);
                    fill = target.fill
                }
                return false
            }

            function createMapper(source) {
                var fill = source.fill;
                var type = "dataset";
                if (fill === false) {
                    return null
                }
                if (!isFinite(fill)) {
                    type = "boundary"
                }
                return mappers[type](source)
            }

            function isDrawable(point) {
                return point && !point.skip
            }

            function drawArea(ctx, curve0, curve1, len0, len1) {
                var i;
                if (!len0 || !len1) {
                    return
                }
                ctx.moveTo(curve0[0].x, curve0[0].y);
                for (i = 1; i < len0; ++i) {
                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i])
                }
                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);
                for (i = len1 - 1; i > 0; --i) {
                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true)
                }
            }

            function doFill(ctx, points, mapper, view, color, loop) {
                var count = points.length;
                var span = view.spanGaps;
                var curve0 = [];
                var curve1 = [];
                var len0 = 0;
                var len1 = 0;
                var i, ilen, index, p0, p1, d0, d1;
                ctx.beginPath();
                for (i = 0, ilen = count + !!loop; i < ilen; ++i) {
                    index = i % count;
                    p0 = points[index]._view;
                    p1 = mapper(p0, index, view);
                    d0 = isDrawable(p0);
                    d1 = isDrawable(p1);
                    if (d0 && d1) {
                        len0 = curve0.push(p0);
                        len1 = curve1.push(p1)
                    } else if (len0 && len1) {
                        if (!span) {
                            drawArea(ctx, curve0, curve1, len0, len1);
                            len0 = len1 = 0;
                            curve0 = [];
                            curve1 = []
                        } else {
                            if (d0) {
                                curve0.push(p0)
                            }
                            if (d1) {
                                curve1.push(p1)
                            }
                        }
                    }
                }
                drawArea(ctx, curve0, curve1, len0, len1);
                ctx.closePath();
                ctx.fillStyle = color;
                ctx.fill()
            }
            module.exports = {
                id: "filler",
                afterDatasetsUpdate: function(chart, options) {
                    var count = (chart.data.datasets || []).length;
                    var propagate = options.propagate;
                    var sources = [];
                    var meta, i, el, source;
                    for (i = 0; i < count; ++i) {
                        meta = chart.getDatasetMeta(i);
                        el = meta.dataset;
                        source = null;
                        if (el && el._model && el instanceof elements.Line) {
                            source = {
                                visible: chart.isDatasetVisible(i),
                                fill: decodeFill(el, i, count),
                                chart: chart,
                                el: el
                            }
                        }
                        meta.$filler = source;
                        sources.push(source)
                    }
                    for (i = 0; i < count; ++i) {
                        source = sources[i];
                        if (!source) {
                            continue
                        }
                        source.fill = resolveTarget(sources, i, propagate);
                        source.boundary = computeBoundary(source);
                        source.mapper = createMapper(source)
                    }
                },
                beforeDatasetDraw: function(chart, args) {
                    var meta = args.meta.$filler;
                    if (!meta) {
                        return
                    }
                    var ctx = chart.ctx;
                    var el = meta.el;
                    var view = el._view;
                    var points = el._children || [];
                    var mapper = meta.mapper;
                    var color = view.backgroundColor || defaults.global.defaultColor;
                    if (mapper && color && points.length) {
                        helpers.canvas.clipArea(ctx, chart.chartArea);
                        doFill(ctx, points, mapper, view, color, el._loop);
                        helpers.canvas.unclipArea(ctx)
                    }
                }
            }
        }, {
            25: 25,
            40: 40,
            45: 45
        }],
        51: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var Element = require(26);
            var helpers = require(45);
            var layouts = require(30);
            var noop = helpers.noop;
            defaults._set("global", {
                legend: {
                    display: true,
                    position: "top",
                    fullWidth: true,
                    reverse: false,
                    weight: 1e3,
                    onClick: function(e, legendItem) {
                        var index = legendItem.datasetIndex;
                        var ci = this.chart;
                        var meta = ci.getDatasetMeta(index);
                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;
                        ci.update()
                    },
                    onHover: null,
                    labels: {
                        boxWidth: 40,
                        padding: 10,
                        generateLabels: function(chart) {
                            var data = chart.data;
                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {
                                return {
                                    text: dataset.label,
                                    fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],
                                    hidden: !chart.isDatasetVisible(i),
                                    lineCap: dataset.borderCapStyle,
                                    lineDash: dataset.borderDash,
                                    lineDashOffset: dataset.borderDashOffset,
                                    lineJoin: dataset.borderJoinStyle,
                                    lineWidth: dataset.borderWidth,
                                    strokeStyle: dataset.borderColor,
                                    pointStyle: dataset.pointStyle,
                                    datasetIndex: i
                                }
                            }, this) : []
                        }
                    }
                },
                legendCallback: function(chart) {
                    var text = [];
                    text.push('<ul class="' + chart.id + '-legend">');
                    for (var i = 0; i < chart.data.datasets.length; i++) {
                        text.push('<li><span style="background-color:' + chart.data.datasets[i].backgroundColor + '"></span>');
                        if (chart.data.datasets[i].label) {
                            text.push(chart.data.datasets[i].label)
                        }
                        text.push("</li>")
                    }
                    text.push("</ul>");
                    return text.join("")
                }
            });

            function getBoxWidth(labelOpts, fontSize) {
                return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth
            }
            var Legend = Element.extend({
                initialize: function(config) {
                    helpers.extend(this, config);
                    this.legendHitBoxes = [];
                    this.doughnutMode = false
                },
                beforeUpdate: noop,
                update: function(maxWidth, maxHeight, margins) {
                    var me = this;
                    me.beforeUpdate();
                    me.maxWidth = maxWidth;
                    me.maxHeight = maxHeight;
                    me.margins = margins;
                    me.beforeSetDimensions();
                    me.setDimensions();
                    me.afterSetDimensions();
                    me.beforeBuildLabels();
                    me.buildLabels();
                    me.afterBuildLabels();
                    me.beforeFit();
                    me.fit();
                    me.afterFit();
                    me.afterUpdate();
                    return me.minSize
                },
                afterUpdate: noop,
                beforeSetDimensions: noop,
                setDimensions: function() {
                    var me = this;
                    if (me.isHorizontal()) {
                        me.width = me.maxWidth;
                        me.left = 0;
                        me.right = me.width
                    } else {
                        me.height = me.maxHeight;
                        me.top = 0;
                        me.bottom = me.height
                    }
                    me.paddingLeft = 0;
                    me.paddingTop = 0;
                    me.paddingRight = 0;
                    me.paddingBottom = 0;
                    me.minSize = {
                        width: 0,
                        height: 0
                    }
                },
                afterSetDimensions: noop,
                beforeBuildLabels: noop,
                buildLabels: function() {
                    var me = this;
                    var labelOpts = me.options.labels || {};
                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];
                    if (labelOpts.filter) {
                        legendItems = legendItems.filter(function(item) {
                            return labelOpts.filter(item, me.chart.data)
                        })
                    }
                    if (me.options.reverse) {
                        legendItems.reverse()
                    }
                    me.legendItems = legendItems
                },
                afterBuildLabels: noop,
                beforeFit: noop,
                fit: function() {
                    var me = this;
                    var opts = me.options;
                    var labelOpts = opts.labels;
                    var display = opts.display;
                    var ctx = me.ctx;
                    var globalDefault = defaults.global;
                    var valueOrDefault = helpers.valueOrDefault;
                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);
                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);
                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);
                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);
                    var hitboxes = me.legendHitBoxes = [];
                    var minSize = me.minSize;
                    var isHorizontal = me.isHorizontal();
                    if (isHorizontal) {
                        minSize.width = me.maxWidth;
                        minSize.height = display ? 10 : 0
                    } else {
                        minSize.width = display ? 10 : 0;
                        minSize.height = me.maxHeight
                    }
                    if (display) {
                        ctx.font = labelFont;
                        if (isHorizontal) {
                            var lineWidths = me.lineWidths = [0];
                            var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;
                            ctx.textAlign = "left";
                            ctx.textBaseline = "top";
                            helpers.each(me.legendItems, function(legendItem, i) {
                                var boxWidth = getBoxWidth(labelOpts, fontSize);
                                var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;
                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {
                                    totalHeight += fontSize + labelOpts.padding;
                                    lineWidths[lineWidths.length] = me.left
                                }
                                hitboxes[i] = {
                                    left: 0,
                                    top: 0,
                                    width: width,
                                    height: fontSize
                                };
                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding
                            });
                            minSize.height += totalHeight
                        } else {
                            var vPadding = labelOpts.padding;
                            var columnWidths = me.columnWidths = [];
                            var totalWidth = labelOpts.padding;
                            var currentColWidth = 0;
                            var currentColHeight = 0;
                            var itemHeight = fontSize + vPadding;
                            helpers.each(me.legendItems, function(legendItem, i) {
                                var boxWidth = getBoxWidth(labelOpts, fontSize);
                                var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;
                                if (currentColHeight + itemHeight > minSize.height) {
                                    totalWidth += currentColWidth + labelOpts.padding;
                                    columnWidths.push(currentColWidth);
                                    currentColWidth = 0;
                                    currentColHeight = 0
                                }
                                currentColWidth = Math.max(currentColWidth, itemWidth);
                                currentColHeight += itemHeight;
                                hitboxes[i] = {
                                    left: 0,
                                    top: 0,
                                    width: itemWidth,
                                    height: fontSize
                                }
                            });
                            totalWidth += currentColWidth;
                            columnWidths.push(currentColWidth);
                            minSize.width += totalWidth
                        }
                    }
                    me.width = minSize.width;
                    me.height = minSize.height
                },
                afterFit: noop,
                isHorizontal: function() {
                    return this.options.position === "top" || this.options.position === "bottom"
                },
                draw: function() {
                    var me = this;
                    var opts = me.options;
                    var labelOpts = opts.labels;
                    var globalDefault = defaults.global;
                    var lineDefault = globalDefault.elements.line;
                    var legendWidth = me.width;
                    var lineWidths = me.lineWidths;
                    if (opts.display) {
                        var ctx = me.ctx;
                        var valueOrDefault = helpers.valueOrDefault;
                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);
                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);
                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);
                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);
                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);
                        var cursor;
                        ctx.textAlign = "left";
                        ctx.textBaseline = "middle";
                        ctx.lineWidth = .5;
                        ctx.strokeStyle = fontColor;
                        ctx.fillStyle = fontColor;
                        ctx.font = labelFont;
                        var boxWidth = getBoxWidth(labelOpts, fontSize);
                        var hitboxes = me.legendHitBoxes;
                        var drawLegendBox = function(x, y, legendItem) {
                            if (isNaN(boxWidth) || boxWidth <= 0) {
                                return
                            }
                            ctx.save();
                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);
                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);
                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);
                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);
                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);
                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);
                            var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;
                            if (ctx.setLineDash) {
                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash))
                            }
                            if (opts.labels && opts.labels.usePointStyle) {
                                var radius = fontSize * Math.SQRT2 / 2;
                                var offSet = radius / Math.SQRT2;
                                var centerX = x + offSet;
                                var centerY = y + offSet;
                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY)
                            } else {
                                if (!isLineWidthZero) {
                                    ctx.strokeRect(x, y, boxWidth, fontSize)
                                }
                                ctx.fillRect(x, y, boxWidth, fontSize)
                            }
                            ctx.restore()
                        };
                        var fillText = function(x, y, legendItem, textWidth) {
                            var halfFontSize = fontSize / 2;
                            var xLeft = boxWidth + halfFontSize + x;
                            var yMiddle = y + halfFontSize;
                            ctx.fillText(legendItem.text, xLeft, yMiddle);
                            if (legendItem.hidden) {
                                ctx.beginPath();
                                ctx.lineWidth = 2;
                                ctx.moveTo(xLeft, yMiddle);
                                ctx.lineTo(xLeft + textWidth, yMiddle);
                                ctx.stroke()
                            }
                        };
                        var isHorizontal = me.isHorizontal();
                        if (isHorizontal) {
                            cursor = {
                                x: me.left + (legendWidth - lineWidths[0]) / 2,
                                y: me.top + labelOpts.padding,
                                line: 0
                            }
                        } else {
                            cursor = {
                                x: me.left + labelOpts.padding,
                                y: me.top + labelOpts.padding,
                                line: 0
                            }
                        }
                        var itemHeight = fontSize + labelOpts.padding;
                        helpers.each(me.legendItems, function(legendItem, i) {
                            var textWidth = ctx.measureText(legendItem.text).width;
                            var width = boxWidth + fontSize / 2 + textWidth;
                            var x = cursor.x;
                            var y = cursor.y;
                            if (isHorizontal) {
                                if (x + width >= legendWidth) {
                                    y = cursor.y += itemHeight;
                                    cursor.line++;
                                    x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2
                                }
                            } else if (y + itemHeight > me.bottom) {
                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;
                                y = cursor.y = me.top + labelOpts.padding;
                                cursor.line++
                            }
                            drawLegendBox(x, y, legendItem);
                            hitboxes[i].left = x;
                            hitboxes[i].top = y;
                            fillText(x, y, legendItem, textWidth);
                            if (isHorizontal) {
                                cursor.x += width + labelOpts.padding
                            } else {
                                cursor.y += itemHeight
                            }
                        })
                    }
                },
                handleEvent: function(e) {
                    var me = this;
                    var opts = me.options;
                    var type = e.type === "mouseup" ? "click" : e.type;
                    var changed = false;
                    if (type === "mousemove") {
                        if (!opts.onHover) {
                            return
                        }
                    } else if (type === "click") {
                        if (!opts.onClick) {
                            return
                        }
                    } else {
                        return
                    }
                    var x = e.x;
                    var y = e.y;
                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {
                        var lh = me.legendHitBoxes;
                        for (var i = 0; i < lh.length; ++i) {
                            var hitBox = lh[i];
                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {
                                if (type === "click") {
                                    opts.onClick.call(me, e.native, me.legendItems[i]);
                                    changed = true;
                                    break
                                } else if (type === "mousemove") {
                                    opts.onHover.call(me, e.native, me.legendItems[i]);
                                    changed = true;
                                    break
                                }
                            }
                        }
                    }
                    return changed
                }
            });

            function createNewLegendAndAttach(chart, legendOpts) {
                var legend = new Legend({
                    ctx: chart.ctx,
                    options: legendOpts,
                    chart: chart
                });
                layouts.configure(chart, legend, legendOpts);
                layouts.addBox(chart, legend);
                chart.legend = legend
            }
            module.exports = {
                id: "legend",
                _element: Legend,
                beforeInit: function(chart) {
                    var legendOpts = chart.options.legend;
                    if (legendOpts) {
                        createNewLegendAndAttach(chart, legendOpts)
                    }
                },
                beforeUpdate: function(chart) {
                    var legendOpts = chart.options.legend;
                    var legend = chart.legend;
                    if (legendOpts) {
                        helpers.mergeIf(legendOpts, defaults.global.legend);
                        if (legend) {
                            layouts.configure(chart, legend, legendOpts);
                            legend.options = legendOpts
                        } else {
                            createNewLegendAndAttach(chart, legendOpts)
                        }
                    } else if (legend) {
                        layouts.removeBox(chart, legend);
                        delete chart.legend
                    }
                },
                afterEvent: function(chart, e) {
                    var legend = chart.legend;
                    if (legend) {
                        legend.handleEvent(e)
                    }
                }
            }
        }, {
            25: 25,
            26: 26,
            30: 30,
            45: 45
        }],
        52: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var Element = require(26);
            var helpers = require(45);
            var layouts = require(30);
            var noop = helpers.noop;
            defaults._set("global", {
                title: {
                    display: false,
                    fontStyle: "bold",
                    fullWidth: true,
                    lineHeight: 1.2,
                    padding: 10,
                    position: "top",
                    text: "",
                    weight: 2e3
                }
            });
            var Title = Element.extend({
                initialize: function(config) {
                    var me = this;
                    helpers.extend(me, config);
                    me.legendHitBoxes = []
                },
                beforeUpdate: noop,
                update: function(maxWidth, maxHeight, margins) {
                    var me = this;
                    me.beforeUpdate();
                    me.maxWidth = maxWidth;
                    me.maxHeight = maxHeight;
                    me.margins = margins;
                    me.beforeSetDimensions();
                    me.setDimensions();
                    me.afterSetDimensions();
                    me.beforeBuildLabels();
                    me.buildLabels();
                    me.afterBuildLabels();
                    me.beforeFit();
                    me.fit();
                    me.afterFit();
                    me.afterUpdate();
                    return me.minSize
                },
                afterUpdate: noop,
                beforeSetDimensions: noop,
                setDimensions: function() {
                    var me = this;
                    if (me.isHorizontal()) {
                        me.width = me.maxWidth;
                        me.left = 0;
                        me.right = me.width
                    } else {
                        me.height = me.maxHeight;
                        me.top = 0;
                        me.bottom = me.height
                    }
                    me.paddingLeft = 0;
                    me.paddingTop = 0;
                    me.paddingRight = 0;
                    me.paddingBottom = 0;
                    me.minSize = {
                        width: 0,
                        height: 0
                    }
                },
                afterSetDimensions: noop,
                beforeBuildLabels: noop,
                buildLabels: noop,
                afterBuildLabels: noop,
                beforeFit: noop,
                fit: function() {
                    var me = this;
                    var valueOrDefault = helpers.valueOrDefault;
                    var opts = me.options;
                    var display = opts.display;
                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);
                    var minSize = me.minSize;
                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;
                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);
                    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;
                    if (me.isHorizontal()) {
                        minSize.width = me.maxWidth;
                        minSize.height = textSize
                    } else {
                        minSize.width = textSize;
                        minSize.height = me.maxHeight
                    }
                    me.width = minSize.width;
                    me.height = minSize.height
                },
                afterFit: noop,
                isHorizontal: function() {
                    var pos = this.options.position;
                    return pos === "top" || pos === "bottom"
                },
                draw: function() {
                    var me = this;
                    var ctx = me.ctx;
                    var valueOrDefault = helpers.valueOrDefault;
                    var opts = me.options;
                    var globalDefaults = defaults.global;
                    if (opts.display) {
                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);
                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);
                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);
                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);
                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);
                        var offset = lineHeight / 2 + opts.padding;
                        var rotation = 0;
                        var top = me.top;
                        var left = me.left;
                        var bottom = me.bottom;
                        var right = me.right;
                        var maxWidth, titleX, titleY;
                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor);
                        ctx.font = titleFont;
                        if (me.isHorizontal()) {
                            titleX = left + (right - left) / 2;
                            titleY = top + offset;
                            maxWidth = right - left
                        } else {
                            titleX = opts.position === "left" ? left + offset : right - offset;
                            titleY = top + (bottom - top) / 2;
                            maxWidth = bottom - top;
                            rotation = Math.PI * (opts.position === "left" ? -.5 : .5)
                        }
                        ctx.save();
                        ctx.translate(titleX, titleY);
                        ctx.rotate(rotation);
                        ctx.textAlign = "center";
                        ctx.textBaseline = "middle";
                        var text = opts.text;
                        if (helpers.isArray(text)) {
                            var y = 0;
                            for (var i = 0; i < text.length; ++i) {
                                ctx.fillText(text[i], 0, y, maxWidth);
                                y += lineHeight
                            }
                        } else {
                            ctx.fillText(text, 0, 0, maxWidth)
                        }
                        ctx.restore()
                    }
                }
            });

            function createNewTitleBlockAndAttach(chart, titleOpts) {
                var title = new Title({
                    ctx: chart.ctx,
                    options: titleOpts,
                    chart: chart
                });
                layouts.configure(chart, title, titleOpts);
                layouts.addBox(chart, title);
                chart.titleBlock = title
            }
            module.exports = {
                id: "title",
                _element: Title,
                beforeInit: function(chart) {
                    var titleOpts = chart.options.title;
                    if (titleOpts) {
                        createNewTitleBlockAndAttach(chart, titleOpts)
                    }
                },
                beforeUpdate: function(chart) {
                    var titleOpts = chart.options.title;
                    var titleBlock = chart.titleBlock;
                    if (titleOpts) {
                        helpers.mergeIf(titleOpts, defaults.global.title);
                        if (titleBlock) {
                            layouts.configure(chart, titleBlock, titleOpts);
                            titleBlock.options = titleOpts
                        } else {
                            createNewTitleBlockAndAttach(chart, titleOpts)
                        }
                    } else if (titleBlock) {
                        layouts.removeBox(chart, titleBlock);
                        delete chart.titleBlock
                    }
                }
            }
        }, {
            25: 25,
            26: 26,
            30: 30,
            45: 45
        }],
        53: [function(require, module, exports) {
            "use strict";
            module.exports = function(Chart) {
                var defaultConfig = {
                    position: "bottom"
                };
                var DatasetScale = Chart.Scale.extend({
                    getLabels: function() {
                        var data = this.chart.data;
                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels
                    },
                    determineDataLimits: function() {
                        var me = this;
                        var labels = me.getLabels();
                        me.minIndex = 0;
                        me.maxIndex = labels.length - 1;
                        var findIndex;
                        if (me.options.ticks.min !== undefined) {
                            findIndex = labels.indexOf(me.options.ticks.min);
                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex
                        }
                        if (me.options.ticks.max !== undefined) {
                            findIndex = labels.indexOf(me.options.ticks.max);
                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex
                        }
                        me.min = labels[me.minIndex];
                        me.max = labels[me.maxIndex]
                    },
                    buildTicks: function() {
                        var me = this;
                        var labels = me.getLabels();
                        me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1)
                    },
                    getLabelForIndex: function(index, datasetIndex) {
                        var me = this;
                        var data = me.chart.data;
                        var isHorizontal = me.isHorizontal();
                        if (data.yLabels && !isHorizontal) {
                            return me.getRightValue(data.datasets[datasetIndex].data[index])
                        }
                        return me.ticks[index - me.minIndex]
                    },
                    getPixelForValue: function(value, index) {
                        var me = this;
                        var offset = me.options.offset;
                        var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1);
                        var valueCategory;
                        if (value !== undefined && value !== null) {
                            valueCategory = me.isHorizontal() ? value.x : value.y
                        }
                        if (valueCategory !== undefined || value !== undefined && isNaN(index)) {
                            var labels = me.getLabels();
                            value = valueCategory || value;
                            var idx = labels.indexOf(value);
                            index = idx !== -1 ? idx : index
                        }
                        if (me.isHorizontal()) {
                            var valueWidth = me.width / offsetAmt;
                            var widthOffset = valueWidth * (index - me.minIndex);
                            if (offset) {
                                widthOffset += valueWidth / 2
                            }
                            return me.left + Math.round(widthOffset)
                        }
                        var valueHeight = me.height / offsetAmt;
                        var heightOffset = valueHeight * (index - me.minIndex);
                        if (offset) {
                            heightOffset += valueHeight / 2
                        }
                        return me.top + Math.round(heightOffset)
                    },
                    getPixelForTick: function(index) {
                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null)
                    },
                    getValueForPixel: function(pixel) {
                        var me = this;
                        var offset = me.options.offset;
                        var value;
                        var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);
                        var horz = me.isHorizontal();
                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;
                        pixel -= horz ? me.left : me.top;
                        if (offset) {
                            pixel -= valueDimension / 2
                        }
                        if (pixel <= 0) {
                            value = 0
                        } else {
                            value = Math.round(pixel / valueDimension)
                        }
                        return value + me.minIndex
                    },
                    getBasePixel: function() {
                        return this.bottom
                    }
                });
                Chart.scaleService.registerScaleType("category", DatasetScale, defaultConfig)
            }
        }, {}],
        54: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var helpers = require(45);
            var Ticks = require(34);
            module.exports = function(Chart) {
                var defaultConfig = {
                    position: "left",
                    ticks: {
                        callback: Ticks.formatters.linear
                    }
                };
                var LinearScale = Chart.LinearScaleBase.extend({
                    determineDataLimits: function() {
                        var me = this;
                        var opts = me.options;
                        var chart = me.chart;
                        var data = chart.data;
                        var datasets = data.datasets;
                        var isHorizontal = me.isHorizontal();
                        var DEFAULT_MIN = 0;
                        var DEFAULT_MAX = 1;

                        function IDMatches(meta) {
                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id
                        }
                        me.min = null;
                        me.max = null;
                        var hasStacks = opts.stacked;
                        if (hasStacks === undefined) {
                            helpers.each(datasets, function(dataset, datasetIndex) {
                                if (hasStacks) {
                                    return
                                }
                                var meta = chart.getDatasetMeta(datasetIndex);
                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {
                                    hasStacks = true
                                }
                            })
                        }
                        if (opts.stacked || hasStacks) {
                            var valuesPerStack = {};
                            helpers.each(datasets, function(dataset, datasetIndex) {
                                var meta = chart.getDatasetMeta(datasetIndex);
                                var key = [meta.type, opts.stacked === undefined && meta.stack === undefined ? datasetIndex : "", meta.stack].join(".");
                                if (valuesPerStack[key] === undefined) {
                                    valuesPerStack[key] = {
                                        positiveValues: [],
                                        negativeValues: []
                                    }
                                }
                                var positiveValues = valuesPerStack[key].positiveValues;
                                var negativeValues = valuesPerStack[key].negativeValues;
                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                                    helpers.each(dataset.data, function(rawValue, index) {
                                        var value = +me.getRightValue(rawValue);
                                        if (isNaN(value) || meta.data[index].hidden) {
                                            return
                                        }
                                        positiveValues[index] = positiveValues[index] || 0;
                                        negativeValues[index] = negativeValues[index] || 0;
                                        if (opts.relativePoints) {
                                            positiveValues[index] = 100
                                        } else if (value < 0) {
                                            negativeValues[index] += value
                                        } else {
                                            positiveValues[index] += value
                                        }
                                    })
                                }
                            });
                            helpers.each(valuesPerStack, function(valuesForType) {
                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);
                                var minVal = helpers.min(values);
                                var maxVal = helpers.max(values);
                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);
                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal)
                            })
                        } else {
                            helpers.each(datasets, function(dataset, datasetIndex) {
                                var meta = chart.getDatasetMeta(datasetIndex);
                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                                    helpers.each(dataset.data, function(rawValue, index) {
                                        var value = +me.getRightValue(rawValue);
                                        if (isNaN(value) || meta.data[index].hidden) {
                                            return
                                        }
                                        if (me.min === null) {
                                            me.min = value
                                        } else if (value < me.min) {
                                            me.min = value
                                        }
                                        if (me.max === null) {
                                            me.max = value
                                        } else if (value > me.max) {
                                            me.max = value
                                        }
                                    })
                                }
                            })
                        }
                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;
                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;
                        this.handleTickRangeOptions()
                    },
                    getTickLimit: function() {
                        var maxTicks;
                        var me = this;
                        var tickOpts = me.options.ticks;
                        if (me.isHorizontal()) {
                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50))
                        } else {
                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);
                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)))
                        }
                        return maxTicks
                    },
                    handleDirectionalChanges: function() {
                        if (!this.isHorizontal()) {
                            this.ticks.reverse()
                        }
                    },
                    getLabelForIndex: function(index, datasetIndex) {
                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index])
                    },
                    getPixelForValue: function(value) {
                        var me = this;
                        var start = me.start;
                        var rightValue = +me.getRightValue(value);
                        var pixel;
                        var range = me.end - start;
                        if (me.isHorizontal()) {
                            pixel = me.left + me.width / range * (rightValue - start)
                        } else {
                            pixel = me.bottom - me.height / range * (rightValue - start)
                        }
                        return pixel
                    },
                    getValueForPixel: function(pixel) {
                        var me = this;
                        var isHorizontal = me.isHorizontal();
                        var innerDimension = isHorizontal ? me.width : me.height;
                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;
                        return me.start + (me.end - me.start) * offset
                    },
                    getPixelForTick: function(index) {
                        return this.getPixelForValue(this.ticksAsNumbers[index])
                    }
                });
                Chart.scaleService.registerScaleType("linear", LinearScale, defaultConfig)
            }
        }, {
            25: 25,
            34: 34,
            45: 45
        }],
        55: [function(require, module, exports) {
            "use strict";
            var helpers = require(45);

            function generateTicks(generationOptions, dataRange) {
                var ticks = [];
                var spacing;
                if (generationOptions.stepSize && generationOptions.stepSize > 0) {
                    spacing = generationOptions.stepSize
                } else {
                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);
                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true)
                }
                var niceMin = Math.floor(dataRange.min / spacing) * spacing;
                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;
                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {
                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1e3)) {
                        niceMin = generationOptions.min;
                        niceMax = generationOptions.max
                    }
                }
                var numSpaces = (niceMax - niceMin) / spacing;
                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1e3)) {
                    numSpaces = Math.round(numSpaces)
                } else {
                    numSpaces = Math.ceil(numSpaces)
                }
                var precision = 1;
                if (spacing < 1) {
                    precision = Math.pow(10, spacing.toString().length - 2);
                    niceMin = Math.round(niceMin * precision) / precision;
                    niceMax = Math.round(niceMax * precision) / precision
                }
                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);
                for (var j = 1; j < numSpaces; ++j) {
                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision)
                }
                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);
                return ticks
            }
            module.exports = function(Chart) {
                var noop = helpers.noop;
                Chart.LinearScaleBase = Chart.Scale.extend({
                    getRightValue: function(value) {
                        if (typeof value === "string") {
                            return +value
                        }
                        return Chart.Scale.prototype.getRightValue.call(this, value)
                    },
                    handleTickRangeOptions: function() {
                        var me = this;
                        var opts = me.options;
                        var tickOpts = opts.ticks;
                        if (tickOpts.beginAtZero) {
                            var minSign = helpers.sign(me.min);
                            var maxSign = helpers.sign(me.max);
                            if (minSign < 0 && maxSign < 0) {
                                me.max = 0
                            } else if (minSign > 0 && maxSign > 0) {
                                me.min = 0
                            }
                        }
                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;
                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;
                        if (tickOpts.min !== undefined) {
                            me.min = tickOpts.min
                        } else if (tickOpts.suggestedMin !== undefined) {
                            if (me.min === null) {
                                me.min = tickOpts.suggestedMin
                            } else {
                                me.min = Math.min(me.min, tickOpts.suggestedMin)
                            }
                        }
                        if (tickOpts.max !== undefined) {
                            me.max = tickOpts.max
                        } else if (tickOpts.suggestedMax !== undefined) {
                            if (me.max === null) {
                                me.max = tickOpts.suggestedMax
                            } else {
                                me.max = Math.max(me.max, tickOpts.suggestedMax)
                            }
                        }
                        if (setMin !== setMax) {
                            if (me.min >= me.max) {
                                if (setMin) {
                                    me.max = me.min + 1
                                } else {
                                    me.min = me.max - 1
                                }
                            }
                        }
                        if (me.min === me.max) {
                            me.max++;
                            if (!tickOpts.beginAtZero) {
                                me.min--
                            }
                        }
                    },
                    getTickLimit: noop,
                    handleDirectionalChanges: noop,
                    buildTicks: function() {
                        var me = this;
                        var opts = me.options;
                        var tickOpts = opts.ticks;
                        var maxTicks = me.getTickLimit();
                        maxTicks = Math.max(2, maxTicks);
                        var numericGeneratorOptions = {
                            maxTicks: maxTicks,
                            min: tickOpts.min,
                            max: tickOpts.max,
                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)
                        };
                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);
                        me.handleDirectionalChanges();
                        me.max = helpers.max(ticks);
                        me.min = helpers.min(ticks);
                        if (tickOpts.reverse) {
                            ticks.reverse();
                            me.start = me.max;
                            me.end = me.min
                        } else {
                            me.start = me.min;
                            me.end = me.max
                        }
                    },
                    convertTicksToLabels: function() {
                        var me = this;
                        me.ticksAsNumbers = me.ticks.slice();
                        me.zeroLineIndex = me.ticks.indexOf(0);
                        Chart.Scale.prototype.convertTicksToLabels.call(me)
                    }
                })
            }
        }, {
            45: 45
        }],
        56: [function(require, module, exports) {
            "use strict";
            var helpers = require(45);
            var Ticks = require(34);

            function generateTicks(generationOptions, dataRange) {
                var ticks = [];
                var valueOrDefault = helpers.valueOrDefault;
                var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));
                var endExp = Math.floor(helpers.log10(dataRange.max));
                var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));
                var exp, significand;
                if (tickVal === 0) {
                    exp = Math.floor(helpers.log10(dataRange.minNotZero));
                    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));
                    ticks.push(tickVal);
                    tickVal = significand * Math.pow(10, exp)
                } else {
                    exp = Math.floor(helpers.log10(tickVal));
                    significand = Math.floor(tickVal / Math.pow(10, exp))
                }
                var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;
                do {
                    ticks.push(tickVal);
                    ++significand;
                    if (significand === 10) {
                        significand = 1;
                        ++exp;
                        precision = exp >= 0 ? 1 : precision
                    }
                    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision
                } while (exp < endExp || exp === endExp && significand < endSignificand);
                var lastTick = valueOrDefault(generationOptions.max, tickVal);
                ticks.push(lastTick);
                return ticks
            }
            module.exports = function(Chart) {
                var defaultConfig = {
                    position: "left",
                    ticks: {
                        callback: Ticks.formatters.logarithmic
                    }
                };
                var LogarithmicScale = Chart.Scale.extend({
                    determineDataLimits: function() {
                        var me = this;
                        var opts = me.options;
                        var chart = me.chart;
                        var data = chart.data;
                        var datasets = data.datasets;
                        var isHorizontal = me.isHorizontal();

                        function IDMatches(meta) {
                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id
                        }
                        me.min = null;
                        me.max = null;
                        me.minNotZero = null;
                        var hasStacks = opts.stacked;
                        if (hasStacks === undefined) {
                            helpers.each(datasets, function(dataset, datasetIndex) {
                                if (hasStacks) {
                                    return
                                }
                                var meta = chart.getDatasetMeta(datasetIndex);
                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {
                                    hasStacks = true
                                }
                            })
                        }
                        if (opts.stacked || hasStacks) {
                            var valuesPerStack = {};
                            helpers.each(datasets, function(dataset, datasetIndex) {
                                var meta = chart.getDatasetMeta(datasetIndex);
                                var key = [meta.type, opts.stacked === undefined && meta.stack === undefined ? datasetIndex : "", meta.stack].join(".");
                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                                    if (valuesPerStack[key] === undefined) {
                                        valuesPerStack[key] = []
                                    }
                                    helpers.each(dataset.data, function(rawValue, index) {
                                        var values = valuesPerStack[key];
                                        var value = +me.getRightValue(rawValue);
                                        if (isNaN(value) || meta.data[index].hidden || value < 0) {
                                            return
                                        }
                                        values[index] = values[index] || 0;
                                        values[index] += value
                                    })
                                }
                            });
                            helpers.each(valuesPerStack, function(valuesForType) {
                                if (valuesForType.length > 0) {
                                    var minVal = helpers.min(valuesForType);
                                    var maxVal = helpers.max(valuesForType);
                                    me.min = me.min === null ? minVal : Math.min(me.min, minVal);
                                    me.max = me.max === null ? maxVal : Math.max(me.max, maxVal)
                                }
                            })
                        } else {
                            helpers.each(datasets, function(dataset, datasetIndex) {
                                var meta = chart.getDatasetMeta(datasetIndex);
                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                                    helpers.each(dataset.data, function(rawValue, index) {
                                        var value = +me.getRightValue(rawValue);
                                        if (isNaN(value) || meta.data[index].hidden || value < 0) {
                                            return
                                        }
                                        if (me.min === null) {
                                            me.min = value
                                        } else if (value < me.min) {
                                            me.min = value
                                        }
                                        if (me.max === null) {
                                            me.max = value
                                        } else if (value > me.max) {
                                            me.max = value
                                        }
                                        if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {
                                            me.minNotZero = value
                                        }
                                    })
                                }
                            })
                        }
                        this.handleTickRangeOptions()
                    },
                    handleTickRangeOptions: function() {
                        var me = this;
                        var opts = me.options;
                        var tickOpts = opts.ticks;
                        var valueOrDefault = helpers.valueOrDefault;
                        var DEFAULT_MIN = 1;
                        var DEFAULT_MAX = 10;
                        me.min = valueOrDefault(tickOpts.min, me.min);
                        me.max = valueOrDefault(tickOpts.max, me.max);
                        if (me.min === me.max) {
                            if (me.min !== 0 && me.min !== null) {
                                me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);
                                me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1)
                            } else {
                                me.min = DEFAULT_MIN;
                                me.max = DEFAULT_MAX
                            }
                        }
                        if (me.min === null) {
                            me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1)
                        }
                        if (me.max === null) {
                            me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX
                        }
                        if (me.minNotZero === null) {
                            if (me.min > 0) {
                                me.minNotZero = me.min
                            } else if (me.max < 1) {
                                me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)))
                            } else {
                                me.minNotZero = DEFAULT_MIN
                            }
                        }
                    },
                    buildTicks: function() {
                        var me = this;
                        var opts = me.options;
                        var tickOpts = opts.ticks;
                        var reverse = !me.isHorizontal();
                        var generationOptions = {
                            min: tickOpts.min,
                            max: tickOpts.max
                        };
                        var ticks = me.ticks = generateTicks(generationOptions, me);
                        me.max = helpers.max(ticks);
                        me.min = helpers.min(ticks);
                        if (tickOpts.reverse) {
                            reverse = !reverse;
                            me.start = me.max;
                            me.end = me.min
                        } else {
                            me.start = me.min;
                            me.end = me.max
                        }
                        if (reverse) {
                            ticks.reverse()
                        }
                    },
                    convertTicksToLabels: function() {
                        this.tickValues = this.ticks.slice();
                        Chart.Scale.prototype.convertTicksToLabels.call(this)
                    },
                    getLabelForIndex: function(index, datasetIndex) {
                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index])
                    },
                    getPixelForTick: function(index) {
                        return this.getPixelForValue(this.tickValues[index])
                    },
                    _getFirstTickValue: function(value) {
                        var exp = Math.floor(helpers.log10(value));
                        var significand = Math.floor(value / Math.pow(10, exp));
                        return significand * Math.pow(10, exp)
                    },
                    getPixelForValue: function(value) {
                        var me = this;
                        var reverse = me.options.ticks.reverse;
                        var log10 = helpers.log10;
                        var firstTickValue = me._getFirstTickValue(me.minNotZero);
                        var offset = 0;
                        var innerDimension, pixel, start, end, sign;
                        value = +me.getRightValue(value);
                        if (reverse) {
                            start = me.end;
                            end = me.start;
                            sign = -1
                        } else {
                            start = me.start;
                            end = me.end;
                            sign = 1
                        }
                        if (me.isHorizontal()) {
                            innerDimension = me.width;
                            pixel = reverse ? me.right : me.left
                        } else {
                            innerDimension = me.height;
                            sign *= -1;
                            pixel = reverse ? me.top : me.bottom
                        }
                        if (value !== start) {
                            if (start === 0) {
                                offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);
                                innerDimension -= offset;
                                start = firstTickValue
                            }
                            if (value !== 0) {
                                offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start))
                            }
                            pixel += sign * offset
                        }
                        return pixel
                    },
                    getValueForPixel: function(pixel) {
                        var me = this;
                        var reverse = me.options.ticks.reverse;
                        var log10 = helpers.log10;
                        var firstTickValue = me._getFirstTickValue(me.minNotZero);
                        var innerDimension, start, end, value;
                        if (reverse) {
                            start = me.end;
                            end = me.start
                        } else {
                            start = me.start;
                            end = me.end
                        }
                        if (me.isHorizontal()) {
                            innerDimension = me.width;
                            value = reverse ? me.right - pixel : pixel - me.left
                        } else {
                            innerDimension = me.height;
                            value = reverse ? pixel - me.top : me.bottom - pixel
                        }
                        if (value !== start) {
                            if (start === 0) {
                                var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);
                                value -= offset;
                                innerDimension -= offset;
                                start = firstTickValue
                            }
                            value *= log10(end) - log10(start);
                            value /= innerDimension;
                            value = Math.pow(10, log10(start) + value)
                        }
                        return value
                    }
                });
                Chart.scaleService.registerScaleType("logarithmic", LogarithmicScale, defaultConfig)
            }
        }, {
            34: 34,
            45: 45
        }],
        57: [function(require, module, exports) {
            "use strict";
            var defaults = require(25);
            var helpers = require(45);
            var Ticks = require(34);
            module.exports = function(Chart) {
                var globalDefaults = defaults.global;
                var defaultConfig = {
                    display: true,
                    animate: true,
                    position: "chartArea",
                    angleLines: {
                        display: true,
                        color: "rgba(0, 0, 0, 0.1)",
                        lineWidth: 1
                    },
                    gridLines: {
                        circular: false
                    },
                    ticks: {
                        showLabelBackdrop: true,
                        backdropColor: "rgba(255,255,255,0.75)",
                        backdropPaddingY: 2,
                        backdropPaddingX: 2,
                        callback: Ticks.formatters.linear
                    },
                    pointLabels: {
                        display: true,
                        fontSize: 10,
                        callback: function(label) {
                            return label
                        }
                    }
                };

                function getValueCount(scale) {
                    var opts = scale.options;
                    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0
                }

                function getPointLabelFontOptions(scale) {
                    var pointLabelOptions = scale.options.pointLabels;
                    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);
                    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);
                    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);
                    var font = helpers.fontString(fontSize, fontStyle, fontFamily);
                    return {
                        size: fontSize,
                        style: fontStyle,
                        family: fontFamily,
                        font: font
                    }
                }

                function measureLabelSize(ctx, fontSize, label) {
                    if (helpers.isArray(label)) {
                        return {
                            w: helpers.longestText(ctx, ctx.font, label),
                            h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize
                        }
                    }
                    return {
                        w: ctx.measureText(label).width,
                        h: fontSize
                    }
                }

                function determineLimits(angle, pos, size, min, max) {
                    if (angle === min || angle === max) {
                        return {
                            start: pos - size / 2,
                            end: pos + size / 2
                        }
                    } else if (angle < min || angle > max) {
                        return {
                            start: pos - size - 5,
                            end: pos
                        }
                    }
                    return {
                        start: pos,
                        end: pos + size + 5
                    }
                }

                function fitWithPointLabels(scale) {
                    var plFont = getPointLabelFontOptions(scale);
                    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
                    var furthestLimits = {
                        r: scale.width,
                        l: 0,
                        t: scale.height,
                        b: 0
                    };
                    var furthestAngles = {};
                    var i, textSize, pointPosition;
                    scale.ctx.font = plFont.font;
                    scale._pointLabelSizes = [];
                    var valueCount = getValueCount(scale);
                    for (i = 0; i < valueCount; i++) {
                        pointPosition = scale.getPointPosition(i, largestPossibleRadius);
                        textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || "");
                        scale._pointLabelSizes[i] = textSize;
                        var angleRadians = scale.getIndexAngle(i);
                        var angle = helpers.toDegrees(angleRadians) % 360;
                        var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);
                        var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);
                        if (hLimits.start < furthestLimits.l) {
                            furthestLimits.l = hLimits.start;
                            furthestAngles.l = angleRadians
                        }
                        if (hLimits.end > furthestLimits.r) {
                            furthestLimits.r = hLimits.end;
                            furthestAngles.r = angleRadians
                        }
                        if (vLimits.start < furthestLimits.t) {
                            furthestLimits.t = vLimits.start;
                            furthestAngles.t = angleRadians
                        }
                        if (vLimits.end > furthestLimits.b) {
                            furthestLimits.b = vLimits.end;
                            furthestAngles.b = angleRadians
                        }
                    }
                    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles)
                }

                function fit(scale) {
                    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
                    scale.drawingArea = Math.round(largestPossibleRadius);
                    scale.setCenterPoint(0, 0, 0, 0)
                }

                function getTextAlignForAngle(angle) {
                    if (angle === 0 || angle === 180) {
                        return "center"
                    } else if (angle < 180) {
                        return "left"
                    }
                    return "right"
                }

                function fillText(ctx, text, position, fontSize) {
                    if (helpers.isArray(text)) {
                        var y = position.y;
                        var spacing = 1.5 * fontSize;
                        for (var i = 0; i < text.length; ++i) {
                            ctx.fillText(text[i], position.x, y);
                            y += spacing
                        }
                    } else {
                        ctx.fillText(text, position.x, position.y)
                    }
                }

                function adjustPointPositionForLabelHeight(angle, textSize, position) {
                    if (angle === 90 || angle === 270) {
                        position.y -= textSize.h / 2
                    } else if (angle > 270 || angle < 90) {
                        position.y -= textSize.h
                    }
                }

                function drawPointLabels(scale) {
                    var ctx = scale.ctx;
                    var opts = scale.options;
                    var angleLineOpts = opts.angleLines;
                    var pointLabelOpts = opts.pointLabels;
                    ctx.lineWidth = angleLineOpts.lineWidth;
                    ctx.strokeStyle = angleLineOpts.color;
                    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);
                    var plFont = getPointLabelFontOptions(scale);
                    ctx.textBaseline = "top";
                    for (var i = getValueCount(scale) - 1; i >= 0; i--) {
                        if (angleLineOpts.display) {
                            var outerPosition = scale.getPointPosition(i, outerDistance);
                            ctx.beginPath();
                            ctx.moveTo(scale.xCenter, scale.yCenter);
                            ctx.lineTo(outerPosition.x, outerPosition.y);
                            ctx.stroke();
                            ctx.closePath()
                        }
                        if (pointLabelOpts.display) {
                            var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);
                            var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);
                            ctx.font = plFont.font;
                            ctx.fillStyle = pointLabelFontColor;
                            var angleRadians = scale.getIndexAngle(i);
                            var angle = helpers.toDegrees(angleRadians);
                            ctx.textAlign = getTextAlignForAngle(angle);
                            adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);
                            fillText(ctx, scale.pointLabels[i] || "", pointLabelPosition, plFont.size)
                        }
                    }
                }

                function drawRadiusLine(scale, gridLineOpts, radius, index) {
                    var ctx = scale.ctx;
                    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);
                    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);
                    if (scale.options.gridLines.circular) {
                        ctx.beginPath();
                        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);
                        ctx.closePath();
                        ctx.stroke()
                    } else {
                        var valueCount = getValueCount(scale);
                        if (valueCount === 0) {
                            return
                        }
                        ctx.beginPath();
                        var pointPosition = scale.getPointPosition(0, radius);
                        ctx.moveTo(pointPosition.x, pointPosition.y);
                        for (var i = 1; i < valueCount; i++) {
                            pointPosition = scale.getPointPosition(i, radius);
                            ctx.lineTo(pointPosition.x, pointPosition.y)
                        }
                        ctx.closePath();
                        ctx.stroke()
                    }
                }

                function numberOrZero(param) {
                    return helpers.isNumber(param) ? param : 0
                }
                var LinearRadialScale = Chart.LinearScaleBase.extend({
                    setDimensions: function() {
                        var me = this;
                        var opts = me.options;
                        var tickOpts = opts.ticks;
                        me.width = me.maxWidth;
                        me.height = me.maxHeight;
                        me.xCenter = Math.round(me.width / 2);
                        me.yCenter = Math.round(me.height / 2);
                        var minSize = helpers.min([me.height, me.width]);
                        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
                        me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2
                    },
                    determineDataLimits: function() {
                        var me = this;
                        var chart = me.chart;
                        var min = Number.POSITIVE_INFINITY;
                        var max = Number.NEGATIVE_INFINITY;
                        helpers.each(chart.data.datasets, function(dataset, datasetIndex) {
                            if (chart.isDatasetVisible(datasetIndex)) {
                                var meta = chart.getDatasetMeta(datasetIndex);
                                helpers.each(dataset.data, function(rawValue, index) {
                                    var value = +me.getRightValue(rawValue);
                                    if (isNaN(value) || meta.data[index].hidden) {
                                        return
                                    }
                                    min = Math.min(value, min);
                                    max = Math.max(value, max)
                                })
                            }
                        });
                        me.min = min === Number.POSITIVE_INFINITY ? 0 : min;
                        me.max = max === Number.NEGATIVE_INFINITY ? 0 : max;
                        me.handleTickRangeOptions()
                    },
                    getTickLimit: function() {
                        var tickOpts = this.options.ticks;
                        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
                        return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)))
                    },
                    convertTicksToLabels: function() {
                        var me = this;
                        Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me);
                        me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me)
                    },
                    getLabelForIndex: function(index, datasetIndex) {
                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index])
                    },
                    fit: function() {
                        if (this.options.pointLabels.display) {
                            fitWithPointLabels(this)
                        } else {
                            fit(this)
                        }
                    },
                    setReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {
                        var me = this;
                        var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);
                        var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);
                        var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);
                        var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);
                        radiusReductionLeft = numberOrZero(radiusReductionLeft);
                        radiusReductionRight = numberOrZero(radiusReductionRight);
                        radiusReductionTop = numberOrZero(radiusReductionTop);
                        radiusReductionBottom = numberOrZero(radiusReductionBottom);
                        me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));
                        me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom)
                    },
                    setCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {
                        var me = this;
                        var maxRight = me.width - rightMovement - me.drawingArea;
                        var maxLeft = leftMovement + me.drawingArea;
                        var maxTop = topMovement + me.drawingArea;
                        var maxBottom = me.height - bottomMovement - me.drawingArea;
                        me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);
                        me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top)
                    },
                    getIndexAngle: function(index) {
                        var angleMultiplier = Math.PI * 2 / getValueCount(this);
                        var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;
                        var startAngleRadians = startAngle * Math.PI * 2 / 360;
                        return index * angleMultiplier + startAngleRadians
                    },
                    getDistanceFromCenterForValue: function(value) {
                        var me = this;
                        if (value === null) {
                            return 0
                        }
                        var scalingFactor = me.drawingArea / (me.max - me.min);
                        if (me.options.ticks.reverse) {
                            return (me.max - value) * scalingFactor
                        }
                        return (value - me.min) * scalingFactor
                    },
                    getPointPosition: function(index, distanceFromCenter) {
                        var me = this;
                        var thisAngle = me.getIndexAngle(index) - Math.PI / 2;
                        return {
                            x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,
                            y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter
                        }
                    },
                    getPointPositionForValue: function(index, value) {
                        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value))
                    },
                    getBasePosition: function() {
                        var me = this;
                        var min = me.min;
                        var max = me.max;
                        return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0)
                    },
                    draw: function() {
                        var me = this;
                        var opts = me.options;
                        var gridLineOpts = opts.gridLines;
                        var tickOpts = opts.ticks;
                        var valueOrDefault = helpers.valueOrDefault;
                        if (opts.display) {
                            var ctx = me.ctx;
                            var startAngle = this.getIndexAngle(0);
                            var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
                            var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);
                            var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);
                            var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);
                            helpers.each(me.ticks, function(label, index) {
                                if (index > 0 || tickOpts.reverse) {
                                    var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);
                                    if (gridLineOpts.display && index !== 0) {
                                        drawRadiusLine(me, gridLineOpts, yCenterOffset, index)
                                    }
                                    if (tickOpts.display) {
                                        var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);
                                        ctx.font = tickLabelFont;
                                        ctx.save();
                                        ctx.translate(me.xCenter, me.yCenter);
                                        ctx.rotate(startAngle);
                                        if (tickOpts.showLabelBackdrop) {
                                            var labelWidth = ctx.measureText(label).width;
                                            ctx.fillStyle = tickOpts.backdropColor;
                                            ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2)
                                        }
                                        ctx.textAlign = "center";
                                        ctx.textBaseline = "middle";
                                        ctx.fillStyle = tickFontColor;
                                        ctx.fillText(label, 0, -yCenterOffset);
                                        ctx.restore()
                                    }
                                }
                            });
                            if (opts.angleLines.display || opts.pointLabels.display) {
                                drawPointLabels(me)
                            }
                        }
                    }
                });
                Chart.scaleService.registerScaleType("radialLinear", LinearRadialScale, defaultConfig)
            }
        }, {
            25: 25,
            34: 34,
            45: 45
        }],
        58: [function(require, module, exports) {
            "use strict";
            var moment = require(1);
            moment = typeof moment === "function" ? moment : window.moment;
            var defaults = require(25);
            var helpers = require(45);
            var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;
            var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;
            var INTERVALS = {
                millisecond: {
                    common: true,
                    size: 1,
                    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]
                },
                second: {
                    common: true,
                    size: 1e3,
                    steps: [1, 2, 5, 10, 30]
                },
                minute: {
                    common: true,
                    size: 6e4,
                    steps: [1, 2, 5, 10, 30]
                },
                hour: {
                    common: true,
                    size: 36e5,
                    steps: [1, 2, 3, 6, 12]
                },
                day: {
                    common: true,
                    size: 864e5,
                    steps: [1, 2, 5]
                },
                week: {
                    common: false,
                    size: 6048e5,
                    steps: [1, 2, 3, 4]
                },
                month: {
                    common: true,
                    size: 2628e6,
                    steps: [1, 2, 3]
                },
                quarter: {
                    common: false,
                    size: 7884e6,
                    steps: [1, 2, 3, 4]
                },
                year: {
                    common: true,
                    size: 3154e7
                }
            };
            var UNITS = Object.keys(INTERVALS);

            function sorter(a, b) {
                return a - b
            }

            function arrayUnique(items) {
                var hash = {};
                var out = [];
                var i, ilen, item;
                for (i = 0, ilen = items.length; i < ilen; ++i) {
                    item = items[i];
                    if (!hash[item]) {
                        hash[item] = true;
                        out.push(item)
                    }
                }
                return out
            }

            function buildLookupTable(timestamps, min, max, distribution) {
                if (distribution === "linear" || !timestamps.length) {
                    return [{
                        time: min,
                        pos: 0
                    }, {
                        time: max,
                        pos: 1
                    }]
                }
                var table = [];
                var items = [min];
                var i, ilen, prev, curr, next;
                for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
                    curr = timestamps[i];
                    if (curr > min && curr < max) {
                        items.push(curr)
                    }
                }
                items.push(max);
                for (i = 0, ilen = items.length; i < ilen; ++i) {
                    next = items[i + 1];
                    prev = items[i - 1];
                    curr = items[i];
                    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {
                        table.push({
                            time: curr,
                            pos: i / (ilen - 1)
                        })
                    }
                }
                return table
            }

            function lookup(table, key, value) {
                var lo = 0;
                var hi = table.length - 1;
                var mid, i0, i1;
                while (lo >= 0 && lo <= hi) {
                    mid = lo + hi >> 1;
                    i0 = table[mid - 1] || null;
                    i1 = table[mid];
                    if (!i0) {
                        return {
                            lo: null,
                            hi: i1
                        }
                    } else if (i1[key] < value) {
                        lo = mid + 1
                    } else if (i0[key] > value) {
                        hi = mid - 1
                    } else {
                        return {
                            lo: i0,
                            hi: i1
                        }
                    }
                }
                return {
                    lo: i1,
                    hi: null
                }
            }

            function interpolate(table, skey, sval, tkey) {
                var range = lookup(table, skey, sval);
                var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;
                var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;
                var span = next[skey] - prev[skey];
                var ratio = span ? (sval - prev[skey]) / span : 0;
                var offset = (next[tkey] - prev[tkey]) * ratio;
                return prev[tkey] + offset
            }

            function momentify(value, options) {
                var parser = options.parser;
                var format = options.parser || options.format;
                if (typeof parser === "function") {
                    return parser(value)
                }
                if (typeof value === "string" && typeof format === "string") {
                    return moment(value, format)
                }
                if (!(value instanceof moment)) {
                    value = moment(value)
                }
                if (value.isValid()) {
                    return value
                }
                if (typeof format === "function") {
                    return format(value)
                }
                return value
            }

            function parse(input, scale) {
                if (helpers.isNullOrUndef(input)) {
                    return null
                }
                var options = scale.options.time;
                var value = momentify(scale.getRightValue(input), options);
                if (!value.isValid()) {
                    return null
                }
                if (options.round) {
                    value.startOf(options.round)
                }
                return value.valueOf()
            }

            function determineStepSize(min, max, unit, capacity) {
                var range = max - min;
                var interval = INTERVALS[unit];
                var milliseconds = interval.size;
                var steps = interval.steps;
                var i, ilen, factor;
                if (!steps) {
                    return Math.ceil(range / (capacity * milliseconds))
                }
                for (i = 0, ilen = steps.length; i < ilen; ++i) {
                    factor = steps[i];
                    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {
                        break
                    }
                }
                return factor
            }

            function determineUnitForAutoTicks(minUnit, min, max, capacity) {
                var ilen = UNITS.length;
                var i, interval, factor;
                for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {
                    interval = INTERVALS[UNITS[i]];
                    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;
                    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {
                        return UNITS[i]
                    }
                }
                return UNITS[ilen - 1]
            }

            function determineUnitForFormatting(ticks, minUnit, min, max) {
                var duration = moment.duration(moment(max).diff(moment(min)));
                var ilen = UNITS.length;
                var i, unit;
                for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {
                    unit = UNITS[i];
                    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {
                        return unit
                    }
                }
                return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0]
            }

            function determineMajorUnit(unit) {
                for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {
                    if (INTERVALS[UNITS[i]].common) {
                        return UNITS[i]
                    }
                }
            }

            function generate(min, max, capacity, options) {
                var timeOpts = options.time;
                var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);
                var major = determineMajorUnit(minor);
                var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);
                var weekday = minor === "week" ? timeOpts.isoWeekday : false;
                var majorTicksEnabled = options.ticks.major.enabled;
                var interval = INTERVALS[minor];
                var first = moment(min);
                var last = moment(max);
                var ticks = [];
                var time;
                if (!stepSize) {
                    stepSize = determineStepSize(min, max, minor, capacity)
                }
                if (weekday) {
                    first = first.isoWeekday(weekday);
                    last = last.isoWeekday(weekday)
                }
                first = first.startOf(weekday ? "day" : minor);
                last = last.startOf(weekday ? "day" : minor);
                if (last < max) {
                    last.add(1, minor)
                }
                time = moment(first);
                if (majorTicksEnabled && major && !weekday && !timeOpts.round) {
                    time.startOf(major);
                    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor)
                }
                for (; time < last; time.add(stepSize, minor)) {
                    ticks.push(+time)
                }
                ticks.push(+time);
                return ticks
            }

            function computeOffsets(table, ticks, min, max, options) {
                var left = 0;
                var right = 0;
                var upper, lower;
                if (options.offset && ticks.length) {
                    if (!options.time.min) {
                        upper = ticks.length > 1 ? ticks[1] : max;
                        lower = ticks[0];
                        left = (interpolate(table, "time", upper, "pos") - interpolate(table, "time", lower, "pos")) / 2
                    }
                    if (!options.time.max) {
                        upper = ticks[ticks.length - 1];
                        lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;
                        right = (interpolate(table, "time", upper, "pos") - interpolate(table, "time", lower, "pos")) / 2
                    }
                }
                return {
                    left: left,
                    right: right
                }
            }

            function ticksFromTimestamps(values, majorUnit) {
                var ticks = [];
                var i, ilen, value, major;
                for (i = 0, ilen = values.length; i < ilen; ++i) {
                    value = values[i];
                    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;
                    ticks.push({
                        value: value,
                        major: major
                    })
                }
                return ticks
            }

            function determineLabelFormat(data, timeOpts) {
                var i, momentDate, hasTime;
                var ilen = data.length;
                for (i = 0; i < ilen; i++) {
                    momentDate = momentify(data[i], timeOpts);
                    if (momentDate.millisecond() !== 0) {
                        return "MMM D, YYYY h:mm:ss.SSS a"
                    }
                    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {
                        hasTime = true
                    }
                }
                if (hasTime) {
                    return "MMM D, YYYY h:mm:ss a"
                }
                return "MMM D, YYYY"
            }
            module.exports = function(Chart) {
                var defaultConfig = {
                    position: "bottom",
                    distribution: "linear",
                    bounds: "data",
                    time: {
                        parser: false,
                        format: false,
                        unit: false,
                        round: false,
                        displayFormat: false,
                        isoWeekday: false,
                        minUnit: "millisecond",
                        displayFormats: {
                            millisecond: "h:mm:ss.SSS a",
                            second: "h:mm:ss a",
                            minute: "h:mm a",
                            hour: "hA",
                            day: "MMM D",
                            week: "ll",
                            month: "MMM YYYY",
                            quarter: "[Q]Q - YYYY",
                            year: "YYYY"
                        }
                    },
                    ticks: {
                        autoSkip: false,
                        source: "auto",
                        major: {
                            enabled: false
                        }
                    }
                };
                var TimeScale = Chart.Scale.extend({
                    initialize: function() {
                        if (!moment) {
                            throw new Error("Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com")
                        }
                        this.mergeTicksOptions();
                        Chart.Scale.prototype.initialize.call(this)
                    },
                    update: function() {
                        var me = this;
                        var options = me.options;
                        if (options.time && options.time.format) {
                            console.warn("options.time.format is deprecated and replaced by options.time.parser.")
                        }
                        return Chart.Scale.prototype.update.apply(me, arguments)
                    },
                    getRightValue: function(rawValue) {
                        if (rawValue && rawValue.t !== undefined) {
                            rawValue = rawValue.t
                        }
                        return Chart.Scale.prototype.getRightValue.call(this, rawValue)
                    },
                    determineDataLimits: function() {
                        var me = this;
                        var chart = me.chart;
                        var timeOpts = me.options.time;
                        var unit = timeOpts.unit || "day";
                        var min = MAX_INTEGER;
                        var max = MIN_INTEGER;
                        var timestamps = [];
                        var datasets = [];
                        var labels = [];
                        var i, j, ilen, jlen, data, timestamp;
                        for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {
                            labels.push(parse(chart.data.labels[i], me))
                        }
                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
                            if (chart.isDatasetVisible(i)) {
                                data = chart.data.datasets[i].data;
                                if (helpers.isObject(data[0])) {
                                    datasets[i] = [];
                                    for (j = 0, jlen = data.length; j < jlen; ++j) {
                                        timestamp = parse(data[j], me);
                                        timestamps.push(timestamp);
                                        datasets[i][j] = timestamp
                                    }
                                } else {
                                    timestamps.push.apply(timestamps, labels);
                                    datasets[i] = labels.slice(0)
                                }
                            } else {
                                datasets[i] = []
                            }
                        }
                        if (labels.length) {
                            labels = arrayUnique(labels).sort(sorter);
                            min = Math.min(min, labels[0]);
                            max = Math.max(max, labels[labels.length - 1])
                        }
                        if (timestamps.length) {
                            timestamps = arrayUnique(timestamps).sort(sorter);
                            min = Math.min(min, timestamps[0]);
                            max = Math.max(max, timestamps[timestamps.length - 1])
                        }
                        min = parse(timeOpts.min, me) || min;
                        max = parse(timeOpts.max, me) || max;
                        min = min === MAX_INTEGER ? +moment().startOf(unit) : min;
                        max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;
                        me.min = Math.min(min, max);
                        me.max = Math.max(min + 1, max);
                        me._horizontal = me.isHorizontal();
                        me._table = [];
                        me._timestamps = {
                            data: timestamps,
                            datasets: datasets,
                            labels: labels
                        }
                    },
                    buildTicks: function() {
                        var me = this;
                        var min = me.min;
                        var max = me.max;
                        var options = me.options;
                        var timeOpts = options.time;
                        var timestamps = [];
                        var ticks = [];
                        var i, ilen, timestamp;
                        switch (options.ticks.source) {
                            case "data":
                                timestamps = me._timestamps.data;
                                break;
                            case "labels":
                                timestamps = me._timestamps.labels;
                                break;
                            case "auto":
                            default:
                                timestamps = generate(min, max, me.getLabelCapacity(min), options)
                        }
                        if (options.bounds === "ticks" && timestamps.length) {
                            min = timestamps[0];
                            max = timestamps[timestamps.length - 1]
                        }
                        min = parse(timeOpts.min, me) || min;
                        max = parse(timeOpts.max, me) || max;
                        for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
                            timestamp = timestamps[i];
                            if (timestamp >= min && timestamp <= max) {
                                ticks.push(timestamp)
                            }
                        }
                        me.min = min;
                        me.max = max;
                        me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);
                        me._majorUnit = determineMajorUnit(me._unit);
                        me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);
                        me._offsets = computeOffsets(me._table, ticks, min, max, options);
                        me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);
                        return ticksFromTimestamps(ticks, me._majorUnit)
                    },
                    getLabelForIndex: function(index, datasetIndex) {
                        var me = this;
                        var data = me.chart.data;
                        var timeOpts = me.options.time;
                        var label = data.labels && index < data.labels.length ? data.labels[index] : "";
                        var value = data.datasets[datasetIndex].data[index];
                        if (helpers.isObject(value)) {
                            label = me.getRightValue(value)
                        }
                        if (timeOpts.tooltipFormat) {
                            return momentify(label, timeOpts).format(timeOpts.tooltipFormat)
                        }
                        if (typeof label === "string") {
                            return label
                        }
                        return momentify(label, timeOpts).format(me._labelFormat)
                    },
                    tickFormatFunction: function(tick, index, ticks, formatOverride) {
                        var me = this;
                        var options = me.options;
                        var time = tick.valueOf();
                        var formats = options.time.displayFormats;
                        var minorFormat = formats[me._unit];
                        var majorUnit = me._majorUnit;
                        var majorFormat = formats[majorUnit];
                        var majorTime = tick.clone().startOf(majorUnit).valueOf();
                        var majorTickOpts = options.ticks.major;
                        var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;
                        var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);
                        var tickOpts = major ? majorTickOpts : options.ticks.minor;
                        var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);
                        return formatter ? formatter(label, index, ticks) : label
                    },
                    convertTicksToLabels: function(ticks) {
                        var labels = [];
                        var i, ilen;
                        for (i = 0, ilen = ticks.length; i < ilen; ++i) {
                            labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks))
                        }
                        return labels
                    },
                    getPixelForOffset: function(time) {
                        var me = this;
                        var size = me._horizontal ? me.width : me.height;
                        var start = me._horizontal ? me.left : me.top;
                        var pos = interpolate(me._table, "time", time, "pos");
                        return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right)
                    },
                    getPixelForValue: function(value, index, datasetIndex) {
                        var me = this;
                        var time = null;
                        if (index !== undefined && datasetIndex !== undefined) {
                            time = me._timestamps.datasets[datasetIndex][index]
                        }
                        if (time === null) {
                            time = parse(value, me)
                        }
                        if (time !== null) {
                            return me.getPixelForOffset(time)
                        }
                    },
                    getPixelForTick: function(index) {
                        var ticks = this.getTicks();
                        return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null
                    },
                    getValueForPixel: function(pixel) {
                        var me = this;
                        var size = me._horizontal ? me.width : me.height;
                        var start = me._horizontal ? me.left : me.top;
                        var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;
                        var time = interpolate(me._table, "pos", pos, "time");
                        return moment(time)
                    },
                    getLabelWidth: function(label) {
                        var me = this;
                        var ticksOpts = me.options.ticks;
                        var tickLabelWidth = me.ctx.measureText(label).width;
                        var angle = helpers.toRadians(ticksOpts.maxRotation);
                        var cosRotation = Math.cos(angle);
                        var sinRotation = Math.sin(angle);
                        var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);
                        return tickLabelWidth * cosRotation + tickFontSize * sinRotation
                    },
                    getLabelCapacity: function(exampleTime) {
                        var me = this;
                        var formatOverride = me.options.time.displayFormats.millisecond;
                        var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);
                        var tickLabelWidth = me.getLabelWidth(exampleLabel);
                        var innerWidth = me.isHorizontal() ? me.width : me.height;
                        var capacity = Math.floor(innerWidth / tickLabelWidth);
                        return capacity > 0 ? capacity : 1
                    }
                });
                Chart.scaleService.registerScaleType("time", TimeScale, defaultConfig)
            }
        }, {
            1: 1,
            25: 25,
            45: 45
        }]
    }, {}, [7])(7)
});
(function(modules) {
    var installedModules = {};

    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) {
            return installedModules[moduleId].exports
        }
        var module = installedModules[moduleId] = {
            i: moduleId,
            l: false,
            exports: {}
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.l = true;
        return module.exports
    }
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.i = function(value) {
        return value
    };
    __webpack_require__.d = function(exports, name, getter) {
        if (!__webpack_require__.o(exports, name)) {
            Object.defineProperty(exports, name, {
                configurable: false,
                enumerable: true,
                get: getter
            })
        }
    };
    __webpack_require__.n = function(module) {
        var getter = module && module.__esModule ? function getDefault() {
            return module["default"]
        } : function getModuleExports() {
            return module
        };
        __webpack_require__.d(getter, "a", getter);
        return getter
    };
    __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property)
    };
    __webpack_require__.p = "";
    return __webpack_require__(__webpack_require__.s = 39)
})({
    30: function(module, exports, __webpack_require__) {
        "use strict";
        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
            return typeof obj
        } : function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
        };
        (function(factory) {
            var globalObject = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && window || (typeof self === "undefined" ? "undefined" : _typeof(self)) === "object" && self;
            if (true) {
                factory(exports)
            } else if (globalObject) {
                globalObject.hljs = factory({});
                if (typeof define === "function" && define.amd) {
                    define([], function() {
                        return globalObject.hljs
                    })
                }
            }
        })(function(hljs) {
            var ArrayProto = [],
                objectKeys = Object.keys;
            var languages = {},
                aliases = {};
            var noHighlightRe = /^(no-?highlight|plain|text)$/i,
                languagePrefixRe = /\blang(?:uage)?-([\w-]+)\b/i,
                fixMarkupRe = /((^(<[^>]+>|\t|)+|(?:\n)))/gm;
            var spanEndTag = "</span>";
            var options = {
                classPrefix: "hljs-",
                tabReplace: null,
                useBR: false,
                languages: undefined
            };

            function escape(value) {
                return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
            }

            function tag(node) {
                return node.nodeName.toLowerCase()
            }

            function testRe(re, lexeme) {
                var match = re && re.exec(lexeme);
                return match && match.index === 0
            }

            function isNotHighlighted(language) {
                return noHighlightRe.test(language)
            }

            function blockLanguage(block) {
                var i, match, length, _class;
                var classes = block.className + " ";
                classes += block.parentNode ? block.parentNode.className : "";
                match = languagePrefixRe.exec(classes);
                if (match) {
                    return getLanguage(match[1]) ? match[1] : "no-highlight"
                }
                classes = classes.split(/\s+/);
                for (i = 0, length = classes.length; i < length; i++) {
                    _class = classes[i];
                    if (isNotHighlighted(_class) || getLanguage(_class)) {
                        return _class
                    }
                }
            }

            function inherit(parent) {
                var key;
                var result = {};
                var objects = Array.prototype.slice.call(arguments, 1);
                for (key in parent) {
                    result[key] = parent[key]
                }
                objects.forEach(function(obj) {
                    for (key in obj) {
                        result[key] = obj[key]
                    }
                });
                return result
            }

            function nodeStream(node) {
                var result = [];
                (function _nodeStream(node, offset) {
                    for (var child = node.firstChild; child; child = child.nextSibling) {
                        if (child.nodeType === 3) offset += child.nodeValue.length;
                        else if (child.nodeType === 1) {
                            result.push({
                                event: "start",
                                offset: offset,
                                node: child
                            });
                            offset = _nodeStream(child, offset);
                            if (!tag(child).match(/br|hr|img|input/)) {
                                result.push({
                                    event: "stop",
                                    offset: offset,
                                    node: child
                                })
                            }
                        }
                    }
                    return offset
                })(node, 0);
                return result
            }

            function mergeStreams(original, highlighted, value) {
                var processed = 0;
                var result = "";
                var nodeStack = [];

                function selectStream() {
                    if (!original.length || !highlighted.length) {
                        return original.length ? original : highlighted
                    }
                    if (original[0].offset !== highlighted[0].offset) {
                        return original[0].offset < highlighted[0].offset ? original : highlighted
                    }
                    return highlighted[0].event === "start" ? original : highlighted
                }

                function open(node) {
                    function attr_str(a) {
                        return " " + a.nodeName + '="' + escape(a.value).replace('"', "&quot;") + '"'
                    }
                    result += "<" + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join("") + ">"
                }

                function close(node) {
                    result += "</" + tag(node) + ">"
                }

                function render(event) {
                    (event.event === "start" ? open : close)(event.node)
                }
                while (original.length || highlighted.length) {
                    var stream = selectStream();
                    result += escape(value.substring(processed, stream[0].offset));
                    processed = stream[0].offset;
                    if (stream === original) {
                        nodeStack.reverse().forEach(close);
                        do {
                            render(stream.splice(0, 1)[0]);
                            stream = selectStream()
                        } while (stream === original && stream.length && stream[0].offset === processed);
                        nodeStack.reverse().forEach(open)
                    } else {
                        if (stream[0].event === "start") {
                            nodeStack.push(stream[0].node)
                        } else {
                            nodeStack.pop()
                        }
                        render(stream.splice(0, 1)[0])
                    }
                }
                return result + escape(value.substr(processed))
            }

            function expand_mode(mode) {
                if (mode.variants && !mode.cached_variants) {
                    mode.cached_variants = mode.variants.map(function(variant) {
                        return inherit(mode, {
                            variants: null
                        }, variant)
                    })
                }
                return mode.cached_variants || mode.endsWithParent && [inherit(mode)] || [mode]
            }

            function compileLanguage(language) {
                function reStr(re) {
                    return re && re.source || re
                }

                function langRe(value, global) {
                    return new RegExp(reStr(value), "m" + (language.case_insensitive ? "i" : "") + (global ? "g" : ""))
                }

                function compileMode(mode, parent) {
                    if (mode.compiled) return;
                    mode.compiled = true;
                    mode.keywords = mode.keywords || mode.beginKeywords;
                    if (mode.keywords) {
                        var compiled_keywords = {};
                        var flatten = function flatten(className, str) {
                            if (language.case_insensitive) {
                                str = str.toLowerCase()
                            }
                            str.split(" ").forEach(function(kw) {
                                var pair = kw.split("|");
                                compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1]
                            })
                        };
                        if (typeof mode.keywords === "string") {
                            flatten("keyword", mode.keywords)
                        } else {
                            objectKeys(mode.keywords).forEach(function(className) {
                                flatten(className, mode.keywords[className])
                            })
                        }
                        mode.keywords = compiled_keywords
                    }
                    mode.lexemesRe = langRe(mode.lexemes || /\w+/, true);
                    if (parent) {
                        if (mode.beginKeywords) {
                            mode.begin = "\\b(" + mode.beginKeywords.split(" ").join("|") + ")\\b"
                        }
                        if (!mode.begin) mode.begin = /\B|\b/;
                        mode.beginRe = langRe(mode.begin);
                        if (!mode.end && !mode.endsWithParent) mode.end = /\B|\b/;
                        if (mode.end) mode.endRe = langRe(mode.end);
                        mode.terminator_end = reStr(mode.end) || "";
                        if (mode.endsWithParent && parent.terminator_end) mode.terminator_end += (mode.end ? "|" : "") + parent.terminator_end
                    }
                    if (mode.illegal) mode.illegalRe = langRe(mode.illegal);
                    if (mode.relevance == null) mode.relevance = 1;
                    if (!mode.contains) {
                        mode.contains = []
                    }
                    mode.contains = Array.prototype.concat.apply([], mode.contains.map(function(c) {
                        return expand_mode(c === "self" ? mode : c)
                    }));
                    mode.contains.forEach(function(c) {
                        compileMode(c, mode)
                    });
                    if (mode.starts) {
                        compileMode(mode.starts, parent)
                    }
                    var terminators = mode.contains.map(function(c) {
                        return c.beginKeywords ? "\\.?(" + c.begin + ")\\.?" : c.begin
                    }).concat([mode.terminator_end, mode.illegal]).map(reStr).filter(Boolean);
                    mode.terminators = terminators.length ? langRe(terminators.join("|"), true) : {
                        exec: function exec() {
                            return null
                        }
                    }
                }
                compileMode(language)
            }

            function highlight(name, value, ignore_illegals, continuation) {
                function subMode(lexeme, mode) {
                    var i, length;
                    for (i = 0, length = mode.contains.length; i < length; i++) {
                        if (testRe(mode.contains[i].beginRe, lexeme)) {
                            return mode.contains[i]
                        }
                    }
                }

                function endOfMode(mode, lexeme) {
                    if (testRe(mode.endRe, lexeme)) {
                        while (mode.endsParent && mode.parent) {
                            mode = mode.parent
                        }
                        return mode
                    }
                    if (mode.endsWithParent) {
                        return endOfMode(mode.parent, lexeme)
                    }
                }

                function isIllegal(lexeme, mode) {
                    return !ignore_illegals && testRe(mode.illegalRe, lexeme)
                }

                function keywordMatch(mode, match) {
                    var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];
                    return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str]
                }

                function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {
                    var classPrefix = noPrefix ? "" : options.classPrefix,
                        openSpan = '<span class="' + classPrefix,
                        closeSpan = leaveOpen ? "" : spanEndTag;
                    openSpan += classname + '">';
                    return openSpan + insideSpan + closeSpan
                }

                function processKeywords() {
                    var keyword_match, last_index, match, result;
                    if (!top.keywords) return escape(mode_buffer);
                    result = "";
                    last_index = 0;
                    top.lexemesRe.lastIndex = 0;
                    match = top.lexemesRe.exec(mode_buffer);
                    while (match) {
                        result += escape(mode_buffer.substring(last_index, match.index));
                        keyword_match = keywordMatch(top, match);
                        if (keyword_match) {
                            relevance += keyword_match[1];
                            result += buildSpan(keyword_match[0], escape(match[0]))
                        } else {
                            result += escape(match[0])
                        }
                        last_index = top.lexemesRe.lastIndex;
                        match = top.lexemesRe.exec(mode_buffer)
                    }
                    return result + escape(mode_buffer.substr(last_index))
                }

                function processSubLanguage() {
                    var explicit = typeof top.subLanguage === "string";
                    if (explicit && !languages[top.subLanguage]) {
                        return escape(mode_buffer)
                    }
                    var result = explicit ? highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) : highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);
                    if (top.relevance > 0) {
                        relevance += result.relevance
                    }
                    if (explicit) {
                        continuations[top.subLanguage] = result.top
                    }
                    return buildSpan(result.language, result.value, false, true)
                }

                function processBuffer() {
                    result += top.subLanguage != null ? processSubLanguage() : processKeywords();
                    mode_buffer = ""
                }

                function startNewMode(mode) {
                    result += mode.className ? buildSpan(mode.className, "", true) : "";
                    top = Object.create(mode, {
                        parent: {
                            value: top
                        }
                    })
                }

                function processLexeme(buffer, lexeme) {
                    mode_buffer += buffer;
                    if (lexeme == null) {
                        processBuffer();
                        return 0
                    }
                    var new_mode = subMode(lexeme, top);
                    if (new_mode) {
                        if (new_mode.skip) {
                            mode_buffer += lexeme
                        } else {
                            if (new_mode.excludeBegin) {
                                mode_buffer += lexeme
                            }
                            processBuffer();
                            if (!new_mode.returnBegin && !new_mode.excludeBegin) {
                                mode_buffer = lexeme
                            }
                        }
                        startNewMode(new_mode, lexeme);
                        return new_mode.returnBegin ? 0 : lexeme.length
                    }
                    var end_mode = endOfMode(top, lexeme);
                    if (end_mode) {
                        var origin = top;
                        if (origin.skip) {
                            mode_buffer += lexeme
                        } else {
                            if (!(origin.returnEnd || origin.excludeEnd)) {
                                mode_buffer += lexeme
                            }
                            processBuffer();
                            if (origin.excludeEnd) {
                                mode_buffer = lexeme
                            }
                        }
                        do {
                            if (top.className) {
                                result += spanEndTag
                            }
                            if (!top.skip && !top.subLanguage) {
                                relevance += top.relevance
                            }
                            top = top.parent
                        } while (top !== end_mode.parent);
                        if (end_mode.starts) {
                            startNewMode(end_mode.starts, "")
                        }
                        return origin.returnEnd ? 0 : lexeme.length
                    }
                    if (isIllegal(lexeme, top)) throw new Error('Illegal lexeme "' + lexeme + '" for mode "' + (top.className || "<unnamed>") + '"');
                    mode_buffer += lexeme;
                    return lexeme.length || 1
                }
                var language = getLanguage(name);
                if (!language) {
                    throw new Error('Unknown language: "' + name + '"')
                }
                compileLanguage(language);
                var top = continuation || language;
                var continuations = {};
                var result = "",
                    current;
                for (current = top; current !== language; current = current.parent) {
                    if (current.className) {
                        result = buildSpan(current.className, "", true) + result
                    }
                }
                var mode_buffer = "";
                var relevance = 0;
                try {
                    var match, count, index = 0;
                    while (true) {
                        top.terminators.lastIndex = index;
                        match = top.terminators.exec(value);
                        if (!match) break;
                        count = processLexeme(value.substring(index, match.index), match[0]);
                        index = match.index + count
                    }
                    processLexeme(value.substr(index));
                    for (current = top; current.parent; current = current.parent) {
                        if (current.className) {
                            result += spanEndTag
                        }
                    }
                    return {
                        relevance: relevance,
                        value: result,
                        language: name,
                        top: top
                    }
                } catch (e) {
                    if (e.message && e.message.indexOf("Illegal") !== -1) {
                        return {
                            relevance: 0,
                            value: escape(value)
                        }
                    } else {
                        throw e
                    }
                }
            }

            function highlightAuto(text, languageSubset) {
                languageSubset = languageSubset || options.languages || objectKeys(languages);
                var result = {
                    relevance: 0,
                    value: escape(text)
                };
                var second_best = result;
                languageSubset.filter(getLanguage).forEach(function(name) {
                    var current = highlight(name, text, false);
                    current.language = name;
                    if (current.relevance > second_best.relevance) {
                        second_best = current
                    }
                    if (current.relevance > result.relevance) {
                        second_best = result;
                        result = current
                    }
                });
                if (second_best.language) {
                    result.second_best = second_best
                }
                return result
            }

            function fixMarkup(value) {
                return !(options.tabReplace || options.useBR) ? value : value.replace(fixMarkupRe, function(match, p1) {
                    if (options.useBR && match === "\n") {
                        return "<br>"
                    } else if (options.tabReplace) {
                        return p1.replace(/\t/g, options.tabReplace)
                    }
                    return ""
                })
            }

            function buildClassName(prevClassName, currentLang, resultLang) {
                var language = currentLang ? aliases[currentLang] : resultLang,
                    result = [prevClassName.trim()];
                if (!prevClassName.match(/\bhljs\b/)) {
                    result.push("hljs")
                }
                if (prevClassName.indexOf(language) === -1) {
                    result.push(language)
                }
                return result.join(" ").trim()
            }

            function highlightBlock(block) {
                var node, originalStream, result, resultNode, text;
                var language = blockLanguage(block);
                if (isNotHighlighted(language)) return;
                if (options.useBR) {
                    node = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
                    node.innerHTML = block.innerHTML.replace(/\n/g, "").replace(/<br[ \/]*>/g, "\n")
                } else {
                    node = block
                }
                text = node.textContent;
                result = language ? highlight(language, text, true) : highlightAuto(text);
                originalStream = nodeStream(node);
                if (originalStream.length) {
                    resultNode = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
                    resultNode.innerHTML = result.value;
                    result.value = mergeStreams(originalStream, nodeStream(resultNode), text)
                }
                result.value = fixMarkup(result.value);
                block.innerHTML = result.value;
                block.className = buildClassName(block.className, language, result.language);
                block.result = {
                    language: result.language,
                    re: result.relevance
                };
                if (result.second_best) {
                    block.second_best = {
                        language: result.second_best.language,
                        re: result.second_best.relevance
                    }
                }
            }

            function configure(user_options) {
                options = inherit(options, user_options)
            }

            function initHighlighting() {
                if (initHighlighting.called) return;
                initHighlighting.called = true;
                var blocks = document.querySelectorAll("pre code");
                ArrayProto.forEach.call(blocks, highlightBlock)
            }

            function initHighlightingOnLoad() {
                addEventListener("DOMContentLoaded", initHighlighting, false);
                addEventListener("load", initHighlighting, false)
            }

            function registerLanguage(name, language) {
                var lang = languages[name] = language(hljs);
                if (lang.aliases) {
                    lang.aliases.forEach(function(alias) {
                        aliases[alias] = name
                    })
                }
            }

            function listLanguages() {
                return objectKeys(languages)
            }

            function getLanguage(name) {
                name = (name || "").toLowerCase();
                return languages[name] || languages[aliases[name]]
            }
            hljs.highlight = highlight;
            hljs.highlightAuto = highlightAuto;
            hljs.fixMarkup = fixMarkup;
            hljs.highlightBlock = highlightBlock;
            hljs.configure = configure;
            hljs.initHighlighting = initHighlighting;
            hljs.initHighlightingOnLoad = initHighlightingOnLoad;
            hljs.registerLanguage = registerLanguage;
            hljs.listLanguages = listLanguages;
            hljs.getLanguage = getLanguage;
            hljs.inherit = inherit;
            hljs.IDENT_RE = "[a-zA-Z]\\w*";
            hljs.UNDERSCORE_IDENT_RE = "[a-zA-Z_]\\w*";
            hljs.NUMBER_RE = "\\b\\d+(\\.\\d+)?";
            hljs.C_NUMBER_RE = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)";
            hljs.BINARY_NUMBER_RE = "\\b(0b[01]+)";
            hljs.RE_STARTERS_RE = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~";
            hljs.BACKSLASH_ESCAPE = {
                begin: "\\\\[\\s\\S]",
                relevance: 0
            };
            hljs.APOS_STRING_MODE = {
                className: "string",
                begin: "'",
                end: "'",
                illegal: "\\n",
                contains: [hljs.BACKSLASH_ESCAPE]
            };
            hljs.QUOTE_STRING_MODE = {
                className: "string",
                begin: '"',
                end: '"',
                illegal: "\\n",
                contains: [hljs.BACKSLASH_ESCAPE]
            };
            hljs.PHRASAL_WORDS_MODE = {
                begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
            };
            hljs.COMMENT = function(begin, end, inherits) {
                var mode = hljs.inherit({
                    className: "comment",
                    begin: begin,
                    end: end,
                    contains: []
                }, inherits || {});
                mode.contains.push(hljs.PHRASAL_WORDS_MODE);
                mode.contains.push({
                    className: "doctag",
                    begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
                    relevance: 0
                });
                return mode
            };
            hljs.C_LINE_COMMENT_MODE = hljs.COMMENT("//", "$");
            hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT("/\\*", "\\*/");
            hljs.HASH_COMMENT_MODE = hljs.COMMENT("#", "$");
            hljs.NUMBER_MODE = {
                className: "number",
                begin: hljs.NUMBER_RE,
                relevance: 0
            };
            hljs.C_NUMBER_MODE = {
                className: "number",
                begin: hljs.C_NUMBER_RE,
                relevance: 0
            };
            hljs.BINARY_NUMBER_MODE = {
                className: "number",
                begin: hljs.BINARY_NUMBER_RE,
                relevance: 0
            };
            hljs.CSS_NUMBER_MODE = {
                className: "number",
                begin: hljs.NUMBER_RE + "(" + "%|em|ex|ch|rem" + "|vw|vh|vmin|vmax" + "|cm|mm|in|pt|pc|px" + "|deg|grad|rad|turn" + "|s|ms" + "|Hz|kHz" + "|dpi|dpcm|dppx" + ")?",
                relevance: 0
            };
            hljs.REGEXP_MODE = {
                className: "regexp",
                begin: /\//,
                end: /\/[gimuy]*/,
                illegal: /\n/,
                contains: [hljs.BACKSLASH_ESCAPE, {
                    begin: /\[/,
                    end: /\]/,
                    relevance: 0,
                    contains: [hljs.BACKSLASH_ESCAPE]
                }]
            };
            hljs.TITLE_MODE = {
                className: "title",
                begin: hljs.IDENT_RE,
                relevance: 0
            };
            hljs.UNDERSCORE_TITLE_MODE = {
                className: "title",
                begin: hljs.UNDERSCORE_IDENT_RE,
                relevance: 0
            };
            hljs.METHOD_GUARD = {
                begin: "\\.\\s*" + hljs.UNDERSCORE_IDENT_RE,
                relevance: 0
            };
            hljs.registerLanguage("javascript", function(hljs) {
                var IDENT_RE = "[A-Za-z$_][0-9A-Za-z$_]*";
                var KEYWORDS = {
                    keyword: "in of if for while finally var new function do return void else break catch " + "instanceof with throw case default try this switch continue typeof delete " + "let yield const export super debugger as async await static " + "import from as",
                    literal: "true false null undefined NaN Infinity",
                    built_in: "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent " + "encodeURI encodeURIComponent escape unescape Object Function Boolean Error " + "EvalError InternalError RangeError ReferenceError StopIteration SyntaxError " + "TypeError URIError Number Math Date String RegExp Array Float32Array " + "Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array " + "Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require " + "module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect " + "Promise"
                };
                var EXPRESSIONS;
                var NUMBER = {
                    className: "number",
                    variants: [{
                        begin: "\\b(0[bB][01]+)"
                    }, {
                        begin: "\\b(0[oO][0-7]+)"
                    }, {
                        begin: hljs.C_NUMBER_RE
                    }],
                    relevance: 0
                };
                var SUBST = {
                    className: "subst",
                    begin: "\\$\\{",
                    end: "\\}",
                    keywords: KEYWORDS,
                    contains: []
                };
                var TEMPLATE_STRING = {
                    className: "string",
                    begin: "`",
                    end: "`",
                    contains: [hljs.BACKSLASH_ESCAPE, SUBST]
                };
                SUBST.contains = [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, TEMPLATE_STRING, NUMBER, hljs.REGEXP_MODE];
                var PARAMS_CONTAINS = SUBST.contains.concat([hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE]);
                return {
                    aliases: ["js", "jsx"],
                    keywords: KEYWORDS,
                    contains: [{
                        className: "meta",
                        relevance: 10,
                        begin: /^\s*['"]use (strict|asm)['"]/
                    }, {
                        className: "meta",
                        begin: /^#!/,
                        end: /$/
                    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, TEMPLATE_STRING, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBER, {
                        begin: /[{,]\s*/,
                        relevance: 0,
                        contains: [{
                            begin: IDENT_RE + "\\s*:",
                            returnBegin: true,
                            relevance: 0,
                            contains: [{
                                className: "attr",
                                begin: IDENT_RE,
                                relevance: 0
                            }]
                        }]
                    }, {
                        begin: "(" + hljs.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
                        keywords: "return throw case",
                        contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.REGEXP_MODE, {
                            className: "function",
                            begin: "(\\(.*?\\)|" + IDENT_RE + ")\\s*=>",
                            returnBegin: true,
                            end: "\\s*=>",
                            contains: [{
                                className: "params",
                                variants: [{
                                    begin: IDENT_RE
                                }, {
                                    begin: /\(\s*\)/
                                }, {
                                    begin: /\(/,
                                    end: /\)/,
                                    excludeBegin: true,
                                    excludeEnd: true,
                                    keywords: KEYWORDS,
                                    contains: PARAMS_CONTAINS
                                }]
                            }]
                        }, {
                            begin: /</,
                            end: /(\/\w+|\w+\/)>/,
                            subLanguage: "xml",
                            contains: [{
                                begin: /<\w+\s*\/>/,
                                skip: true
                            }, {
                                begin: /<\w+/,
                                end: /(\/\w+|\w+\/)>/,
                                skip: true,
                                contains: [{
                                    begin: /<\w+\s*\/>/,
                                    skip: true
                                }, "self"]
                            }]
                        }],
                        relevance: 0
                    }, {
                        className: "function",
                        beginKeywords: "function",
                        end: /\{/,
                        excludeEnd: true,
                        contains: [hljs.inherit(hljs.TITLE_MODE, {
                            begin: IDENT_RE
                        }), {
                            className: "params",
                            begin: /\(/,
                            end: /\)/,
                            excludeBegin: true,
                            excludeEnd: true,
                            contains: PARAMS_CONTAINS
                        }],
                        illegal: /\[|%/
                    }, {
                        begin: /\$[(.]/
                    }, hljs.METHOD_GUARD, {
                        className: "class",
                        beginKeywords: "class",
                        end: /[{;=]/,
                        excludeEnd: true,
                        illegal: /[:"\[\]]/,
                        contains: [{
                            beginKeywords: "extends"
                        }, hljs.UNDERSCORE_TITLE_MODE]
                    }, {
                        beginKeywords: "constructor",
                        end: /\{/,
                        excludeEnd: true
                    }],
                    illegal: /#(?!!)/
                }
            });
            hljs.registerLanguage("php", function(hljs) {
                var VARIABLE = {
                    begin: "\\$+[a-zA-Z_-ÿ][a-zA-Z0-9_-ÿ]*"
                };
                var PREPROCESSOR = {
                    className: "meta",
                    begin: /<\?(php)?|\?>/
                };
                var STRING = {
                    className: "string",
                    contains: [hljs.BACKSLASH_ESCAPE, PREPROCESSOR],
                    variants: [{
                        begin: 'b"',
                        end: '"'
                    }, {
                        begin: "b'",
                        end: "'"
                    }, hljs.inherit(hljs.APOS_STRING_MODE, {
                        illegal: null
                    }), hljs.inherit(hljs.QUOTE_STRING_MODE, {
                        illegal: null
                    })]
                };
                var NUMBER = {
                    variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]
                };
                return {
                    aliases: ["php3", "php4", "php5", "php6"],
                    case_insensitive: true,
                    keywords: "and include_once list abstract global private echo interface as static endswitch " + "array null if endwhile or const for endforeach self var while isset public " + "protected exit foreach throw elseif include __FILE__ empty require_once do xor " + "return parent clone use __CLASS__ __LINE__ else break print eval new " + "catch __METHOD__ case exception default die require __FUNCTION__ " + "enddeclare final try switch continue endfor endif declare unset true false " + "trait goto instanceof insteadof __DIR__ __NAMESPACE__ " + "yield finally",
                    contains: [hljs.HASH_COMMENT_MODE, hljs.COMMENT("//", "$", {
                        contains: [PREPROCESSOR]
                    }), hljs.COMMENT("/\\*", "\\*/", {
                        contains: [{
                            className: "doctag",
                            begin: "@[A-Za-z]+"
                        }]
                    }), hljs.COMMENT("__halt_compiler.+?;", false, {
                        endsWithParent: true,
                        keywords: "__halt_compiler",
                        lexemes: hljs.UNDERSCORE_IDENT_RE
                    }), {
                        className: "string",
                        begin: /<<<['"]?\w+['"]?$/,
                        end: /^\w+;?$/,
                        contains: [hljs.BACKSLASH_ESCAPE, {
                            className: "subst",
                            variants: [{
                                begin: /\$\w+/
                            }, {
                                begin: /\{\$/,
                                end: /\}/
                            }]
                        }]
                    }, PREPROCESSOR, {
                        className: "keyword",
                        begin: /\$this\b/
                    }, VARIABLE, {
                        begin: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/
                    }, {
                        className: "function",
                        beginKeywords: "function",
                        end: /[;{]/,
                        excludeEnd: true,
                        illegal: "\\$|\\[|%",
                        contains: [hljs.UNDERSCORE_TITLE_MODE, {
                            className: "params",
                            begin: "\\(",
                            end: "\\)",
                            contains: ["self", VARIABLE, hljs.C_BLOCK_COMMENT_MODE, STRING, NUMBER]
                        }]
                    }, {
                        className: "class",
                        beginKeywords: "class interface",
                        end: "{",
                        excludeEnd: true,
                        illegal: /[:\(\$"]/,
                        contains: [{
                            beginKeywords: "extends implements"
                        }, hljs.UNDERSCORE_TITLE_MODE]
                    }, {
                        beginKeywords: "namespace",
                        end: ";",
                        illegal: /[\.']/,
                        contains: [hljs.UNDERSCORE_TITLE_MODE]
                    }, {
                        beginKeywords: "use",
                        end: ";",
                        contains: [hljs.UNDERSCORE_TITLE_MODE]
                    }, {
                        begin: "=>"
                    }, STRING, NUMBER]
                }
            });
            hljs.registerLanguage("xml", function(hljs) {
                var XML_IDENT_RE = "[A-Za-z0-9\\._:-]+";
                var TAG_INTERNALS = {
                    endsWithParent: true,
                    illegal: /</,
                    relevance: 0,
                    contains: [{
                        className: "attr",
                        begin: XML_IDENT_RE,
                        relevance: 0
                    }, {
                        begin: /=\s*/,
                        relevance: 0,
                        contains: [{
                            className: "string",
                            endsParent: true,
                            variants: [{
                                begin: /"/,
                                end: /"/
                            }, {
                                begin: /'/,
                                end: /'/
                            }, {
                                begin: /[^\s"'=<>`]+/
                            }]
                        }]
                    }]
                };
                return {
                    aliases: ["html", "xhtml", "rss", "atom", "xjb", "xsd", "xsl", "plist"],
                    case_insensitive: true,
                    contains: [{
                        className: "meta",
                        begin: "<!DOCTYPE",
                        end: ">",
                        relevance: 10,
                        contains: [{
                            begin: "\\[",
                            end: "\\]"
                        }]
                    }, hljs.COMMENT("\x3c!--", "--\x3e", {
                        relevance: 10
                    }), {
                        begin: "<\\!\\[CDATA\\[",
                        end: "\\]\\]>",
                        relevance: 10
                    }, {
                        className: "meta",
                        begin: /<\?xml/,
                        end: /\?>/,
                        relevance: 10
                    }, {
                        begin: /<\?(php)?/,
                        end: /\?>/,
                        subLanguage: "php",
                        contains: [{
                            begin: "/\\*",
                            end: "\\*/",
                            skip: true
                        }]
                    }, {
                        className: "tag",
                        begin: "<style(?=\\s|>|$)",
                        end: ">",
                        keywords: {
                            name: "style"
                        },
                        contains: [TAG_INTERNALS],
                        starts: {
                            end: "</style>",
                            returnEnd: true,
                            subLanguage: ["css", "xml"]
                        }
                    }, {
                        className: "tag",
                        begin: "<script(?=\\s|>|$)",
                        end: ">",
                        keywords: {
                            name: "script"
                        },
                        contains: [TAG_INTERNALS],
                        starts: {
                            end: "<\/script>",
                            returnEnd: true,
                            subLanguage: ["actionscript", "javascript", "handlebars", "xml"]
                        }
                    }, {
                        className: "tag",
                        begin: "</?",
                        end: "/?>",
                        contains: [{
                            className: "name",
                            begin: /[^\/><\s]+/,
                            relevance: 0
                        }, TAG_INTERNALS]
                    }]
                }
            });
            return hljs
        })
    },
    39: function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(6)
    },
    6: function(module, exports, __webpack_require__) {
        "use strict";
        var _highlightPack = __webpack_require__(30);
        var _highlightPack2 = _interopRequireDefault(_highlightPack);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }
        $(document).ready(function() {
            $("pre code").each(function(i, block) {
                _highlightPack2.default.highlightBlock(block)
            })
        })
    }
});
"use strict";
window.jscolor || (window.jscolor = function() {
    var e = {
        register: function() {
            e.attachDOMReadyEvent(e.init), e.attachEvent(document, "mousedown", e.onDocumentMouseDown), e.attachEvent(document, "touchstart", e.onDocumentTouchStart), e.attachEvent(window, "resize", e.onWindowResize)
        },
        init: function() {
            e.jscolor.lookupClass && e.jscolor.installByClassName(e.jscolor.lookupClass)
        },
        tryInstallOnElements: function(t, n) {
            var r = new RegExp("(^|\\s)(" + n + ")(\\s*(\\{[^}]*\\})|\\s|$)", "i");
            for (var i = 0; i < t.length; i += 1) {
                if (t[i].type !== undefined && t[i].type.toLowerCase() == "color" && e.isColorAttrSupported) continue;
                var s;
                if (!t[i].jscolor && t[i].className && (s = t[i].className.match(r))) {
                    var o = t[i],
                        u = null,
                        a = e.getDataAttr(o, "jscolor");
                    a !== null ? u = a : s[4] && (u = s[4]);
                    var f = {};
                    if (u) try {
                        f = new Function("return (" + u + ")")()
                    } catch (l) {
                        e.warn("Error parsing jscolor options: " + l + ":\n" + u)
                    }
                    o.jscolor = new e.jscolor(o, f)
                }
            }
        },
        isColorAttrSupported: function() {
            var e = document.createElement("input");
            if (e.setAttribute) {
                e.setAttribute("type", "color");
                if (e.type.toLowerCase() == "color") return !0
            }
            return !1
        }(),
        isCanvasSupported: function() {
            var e = document.createElement("canvas");
            return !!e.getContext && !!e.getContext("2d")
        }(),
        fetchElement: function(e) {
            return typeof e == "string" ? document.getElementById(e) : e
        },
        isElementType: function(e, t) {
            return e.nodeName.toLowerCase() === t.toLowerCase()
        },
        getDataAttr: function(e, t) {
            var n = "data-" + t,
                r = e.getAttribute(n);
            return r !== null ? r : null
        },
        attachEvent: function(e, t, n) {
            e.addEventListener ? e.addEventListener(t, n, !1) : e.attachEvent && e.attachEvent("on" + t, n)
        },
        detachEvent: function(e, t, n) {
            e.removeEventListener ? e.removeEventListener(t, n, !1) : e.detachEvent && e.detachEvent("on" + t, n)
        },
        _attachedGroupEvents: {},
        attachGroupEvent: function(t, n, r, i) {
            e._attachedGroupEvents.hasOwnProperty(t) || (e._attachedGroupEvents[t] = []), e._attachedGroupEvents[t].push([n, r, i]), e.attachEvent(n, r, i)
        },
        detachGroupEvents: function(t) {
            if (e._attachedGroupEvents.hasOwnProperty(t)) {
                for (var n = 0; n < e._attachedGroupEvents[t].length; n += 1) {
                    var r = e._attachedGroupEvents[t][n];
                    e.detachEvent(r[0], r[1], r[2])
                }
                delete e._attachedGroupEvents[t]
            }
        },
        attachDOMReadyEvent: function(e) {
            var t = !1,
                n = function() {
                    t || (t = !0, e())
                };
            if (document.readyState === "complete") {
                setTimeout(n, 1);
                return
            }
            if (document.addEventListener) document.addEventListener("DOMContentLoaded", n, !1), window.addEventListener("load", n, !1);
            else if (document.attachEvent) {
                document.attachEvent("onreadystatechange", function() {
                    document.readyState === "complete" && (document.detachEvent("onreadystatechange", arguments.callee), n())
                }), window.attachEvent("onload", n);
                if (document.documentElement.doScroll && window == window.top) {
                    var r = function() {
                        if (!document.body) return;
                        try {
                            document.documentElement.doScroll("left"), n()
                        } catch (e) {
                            setTimeout(r, 1)
                        }
                    };
                    r()
                }
            }
        },
        warn: function(e) {
            window.console && window.console.warn && window.console.warn(e)
        },
        preventDefault: function(e) {
            e.preventDefault && e.preventDefault(), e.returnValue = !1
        },
        captureTarget: function(t) {
            t.setCapture && (e._capturedTarget = t, e._capturedTarget.setCapture())
        },
        releaseTarget: function() {
            e._capturedTarget && (e._capturedTarget.releaseCapture(), e._capturedTarget = null)
        },
        fireEvent: function(e, t) {
            if (!e) return;
            if (document.createEvent) {
                var n = document.createEvent("HTMLEvents");
                n.initEvent(t, !0, !0), e.dispatchEvent(n)
            } else if (document.createEventObject) {
                var n = document.createEventObject();
                e.fireEvent("on" + t, n)
            } else e["on" + t] && e["on" + t]()
        },
        classNameToList: function(e) {
            return e.replace(/^\s+|\s+$/g, "").split(/\s+/)
        },
        hasClass: function(e, t) {
            return t ? -1 != (" " + e.className.replace(/\s+/g, " ") + " ").indexOf(" " + t + " ") : !1
        },
        setClass: function(t, n) {
            var r = e.classNameToList(n);
            for (var i = 0; i < r.length; i += 1) e.hasClass(t, r[i]) || (t.className += (t.className ? " " : "") + r[i])
        },
        unsetClass: function(t, n) {
            var r = e.classNameToList(n);
            for (var i = 0; i < r.length; i += 1) {
                var s = new RegExp("^\\s*" + r[i] + "\\s*|" + "\\s*" + r[i] + "\\s*$|" + "\\s+" + r[i] + "(\\s+)", "g");
                t.className = t.className.replace(s, "$1")
            }
        },
        getStyle: function(e) {
            return window.getComputedStyle ? window.getComputedStyle(e) : e.currentStyle
        },
        setStyle: function() {
            var e = document.createElement("div"),
                t = function(t) {
                    for (var n = 0; n < t.length; n += 1)
                        if (t[n] in e.style) return t[n]
                },
                n = {
                    borderRadius: t(["borderRadius", "MozBorderRadius", "webkitBorderRadius"]),
                    boxShadow: t(["boxShadow", "MozBoxShadow", "webkitBoxShadow"])
                };
            return function(e, t, r) {
                switch (t.toLowerCase()) {
                    case "opacity":
                        var i = Math.round(parseFloat(r) * 100);
                        e.style.opacity = r, e.style.filter = "alpha(opacity=" + i + ")";
                        break;
                    default:
                        e.style[n[t]] = r
                }
            }
        }(),
        setBorderRadius: function(t, n) {
            e.setStyle(t, "borderRadius", n || "0")
        },
        setBoxShadow: function(t, n) {
            e.setStyle(t, "boxShadow", n || "none")
        },
        getElementPos: function(t, n) {
            var r = 0,
                i = 0,
                s = t.getBoundingClientRect();
            r = s.left, i = s.top;
            if (!n) {
                var o = e.getViewPos();
                r += o[0], i += o[1]
            }
            return [r, i]
        },
        getElementSize: function(e) {
            return [e.offsetWidth, e.offsetHeight]
        },
        getAbsPointerPos: function(e) {
            e || (e = window.event);
            var t = 0,
                n = 0;
            return typeof e.changedTouches != "undefined" && e.changedTouches.length ? (t = e.changedTouches[0].clientX, n = e.changedTouches[0].clientY) : typeof e.clientX == "number" && (t = e.clientX, n = e.clientY), {
                x: t,
                y: n
            }
        },
        getRelPointerPos: function(e) {
            e || (e = window.event);
            var t = e.target || e.srcElement,
                n = t.getBoundingClientRect(),
                r = 0,
                i = 0,
                s = 0,
                o = 0;
            return typeof e.changedTouches != "undefined" && e.changedTouches.length ? (s = e.changedTouches[0].clientX, o = e.changedTouches[0].clientY) : typeof e.clientX == "number" && (s = e.clientX, o = e.clientY), r = s - n.left, i = o - n.top, {
                x: r,
                y: i
            }
        },
        getViewPos: function() {
            var e = document.documentElement;
            return [(window.pageXOffset || e.scrollLeft) - (e.clientLeft || 0), (window.pageYOffset || e.scrollTop) - (e.clientTop || 0)]
        },
        getViewSize: function() {
            var e = document.documentElement;
            return [window.innerWidth || e.clientWidth, window.innerHeight || e.clientHeight]
        },
        redrawPosition: function() {
            if (e.picker && e.picker.owner) {
                var t = e.picker.owner,
                    n, r;
                t.fixed ? (n = e.getElementPos(t.targetElement, !0), r = [0, 0]) : (n = e.getElementPos(t.targetElement), r = e.getViewPos());
                var i = e.getElementSize(t.targetElement),
                    s = e.getViewSize(),
                    o = e.getPickerOuterDims(t),
                    u, a, f;
                switch (t.position.toLowerCase()) {
                    case "left":
                        u = 1, a = 0, f = -1;
                        break;
                    case "right":
                        u = 1, a = 0, f = 1;
                        break;
                    case "top":
                        u = 0, a = 1, f = -1;
                        break;
                    default:
                        u = 0, a = 1, f = 1
                }
                var l = (i[a] + o[a]) / 2;
                if (!t.smartPosition) var c = [n[u], n[a] + i[a] - l + l * f];
                else var c = [-r[u] + n[u] + o[u] > s[u] ? -r[u] + n[u] + i[u] / 2 > s[u] / 2 && n[u] + i[u] - o[u] >= 0 ? n[u] + i[u] - o[u] : n[u] : n[u], -r[a] + n[a] + i[a] + o[a] - l + l * f > s[a] ? -r[a] + n[a] + i[a] / 2 > s[a] / 2 && n[a] + i[a] - l - l * f >= 0 ? n[a] + i[a] - l - l * f : n[a] + i[a] - l + l * f : n[a] + i[a] - l + l * f >= 0 ? n[a] + i[a] - l + l * f : n[a] + i[a] - l - l * f];
                var h = c[u],
                    p = c[a],
                    d = t.fixed ? "fixed" : "absolute",
                    v = (c[0] + o[0] > n[0] || c[0] < n[0] + i[0]) && c[1] + o[1] < n[1] + i[1];
                e._drawPosition(t, h, p, d, v)
            }
        },
        _drawPosition: function(t, n, r, i, s) {
            var o = s ? 0 : t.shadowBlur;
            e.picker.wrap.style.position = i, e.picker.wrap.style.left = n + "px", e.picker.wrap.style.top = r + "px", e.setBoxShadow(e.picker.boxS, t.shadow ? new e.BoxShadow(0, o, t.shadowBlur, 0, t.shadowColor) : null)
        },
        getPickerDims: function(t) {
            var n = !!e.getSliderComponent(t),
                r = [2 * t.insetWidth + 2 * t.padding + t.width + (n ? 2 * t.insetWidth + e.getPadToSliderPadding(t) + t.sliderSize : 0), 2 * t.insetWidth + 2 * t.padding + t.height + (t.closable ? 2 * t.insetWidth + t.padding + t.buttonHeight : 0)];
            return r
        },
        getPickerOuterDims: function(t) {
            var n = e.getPickerDims(t);
            return [n[0] + 2 * t.borderWidth, n[1] + 2 * t.borderWidth]
        },
        getPadToSliderPadding: function(e) {
            return Math.max(e.padding, 1.5 * (2 * e.pointerBorderWidth + e.pointerThickness))
        },
        getPadYComponent: function(e) {
            switch (e.mode.charAt(1).toLowerCase()) {
                case "v":
                    return "v"
            }
            return "s"
        },
        getSliderComponent: function(e) {
            if (e.mode.length > 2) switch (e.mode.charAt(2).toLowerCase()) {
                case "s":
                    return "s";
                case "v":
                    return "v"
            }
            return null
        },
        onDocumentMouseDown: function(t) {
            t || (t = window.event);
            var n = t.target || t.srcElement;
            n._jscLinkedInstance ? n._jscLinkedInstance.showOnClick && n._jscLinkedInstance.show() : n._jscControlName ? e.onControlPointerStart(t, n, n._jscControlName, "mouse") : e.picker && e.picker.owner && e.picker.owner.hide()
        },
        onDocumentTouchStart: function(t) {
            t || (t = window.event);
            var n = t.target || t.srcElement;
            n._jscLinkedInstance ? n._jscLinkedInstance.showOnClick && n._jscLinkedInstance.show() : n._jscControlName ? e.onControlPointerStart(t, n, n._jscControlName, "touch") : e.picker && e.picker.owner && e.picker.owner.hide()
        },
        onWindowResize: function(t) {
            e.redrawPosition()
        },
        onParentScroll: function(t) {
            e.picker && e.picker.owner && e.picker.owner.hide()
        },
        _pointerMoveEvent: {
            mouse: "mousemove",
            touch: "touchmove"
        },
        _pointerEndEvent: {
            mouse: "mouseup",
            touch: "touchend"
        },
        _pointerOrigin: null,
        _capturedTarget: null,
        onControlPointerStart: function(t, n, r, i) {
            var s = n._jscInstance;
            e.preventDefault(t), e.captureTarget(n);
            var o = function(s, o) {
                e.attachGroupEvent("drag", s, e._pointerMoveEvent[i], e.onDocumentPointerMove(t, n, r, i, o)), e.attachGroupEvent("drag", s, e._pointerEndEvent[i], e.onDocumentPointerEnd(t, n, r, i))
            };
            o(document, [0, 0]);
            if (window.parent && window.frameElement) {
                var u = window.frameElement.getBoundingClientRect(),
                    a = [-u.left, -u.top];
                o(window.parent.window.document, a)
            }
            var f = e.getAbsPointerPos(t),
                l = e.getRelPointerPos(t);
            e._pointerOrigin = {
                x: f.x - l.x,
                y: f.y - l.y
            };
            switch (r) {
                case "pad":
                    switch (e.getSliderComponent(s)) {
                        case "s":
                            s.hsv[1] === 0 && s.fromHSV(null, 100, null);
                            break;
                        case "v":
                            s.hsv[2] === 0 && s.fromHSV(null, null, 100)
                    }
                    e.setPad(s, t, 0, 0);
                    break;
                case "sld":
                    e.setSld(s, t, 0)
            }
            e.dispatchFineChange(s)
        },
        onDocumentPointerMove: function(t, n, r, i, s) {
            return function(t) {
                var i = n._jscInstance;
                switch (r) {
                    case "pad":
                        t || (t = window.event), e.setPad(i, t, s[0], s[1]), e.dispatchFineChange(i);
                        break;
                    case "sld":
                        t || (t = window.event), e.setSld(i, t, s[1]), e.dispatchFineChange(i)
                }
            }
        },
        onDocumentPointerEnd: function(t, n, r, i) {
            return function(t) {
                var r = n._jscInstance;
                e.detachGroupEvents("drag"), e.releaseTarget(), e.dispatchChange(r)
            }
        },
        dispatchChange: function(t) {
            t.valueElement && e.isElementType(t.valueElement, "input") && e.fireEvent(t.valueElement, "change")
        },
        dispatchFineChange: function(e) {
            if (e.onFineChange) {
                var t;
                typeof e.onFineChange == "string" ? t = new Function(e.onFineChange) : t = e.onFineChange, t.call(e)
            }
        },
        setPad: function(t, n, r, i) {
            var s = e.getAbsPointerPos(n),
                o = r + s.x - e._pointerOrigin.x - t.padding - t.insetWidth,
                u = i + s.y - e._pointerOrigin.y - t.padding - t.insetWidth,
                a = o * (360 / (t.width - 1)),
                f = 100 - u * (100 / (t.height - 1));
            switch (e.getPadYComponent(t)) {
                case "s":
                    t.fromHSV(a, f, null, e.leaveSld);
                    break;
                case "v":
                    t.fromHSV(a, null, f, e.leaveSld)
            }
        },
        setSld: function(t, n, r) {
            var i = e.getAbsPointerPos(n),
                s = r + i.y - e._pointerOrigin.y - t.padding - t.insetWidth,
                o = 100 - s * (100 / (t.height - 1));
            switch (e.getSliderComponent(t)) {
                case "s":
                    t.fromHSV(null, o, null, e.leavePad);
                    break;
                case "v":
                    t.fromHSV(null, null, o, e.leavePad)
            }
        },
        _vmlNS: "jsc_vml_",
        _vmlCSS: "jsc_vml_css_",
        _vmlReady: !1,
        initVML: function() {
            if (!e._vmlReady) {
                var t = document;
                t.namespaces[e._vmlNS] || t.namespaces.add(e._vmlNS, "urn:schemas-microsoft-com:vml");
                if (!t.styleSheets[e._vmlCSS]) {
                    var n = ["shape", "shapetype", "group", "background", "path", "formulas", "handles", "fill", "stroke", "shadow", "textbox", "textpath", "imagedata", "line", "polyline", "curve", "rect", "roundrect", "oval", "arc", "image"],
                        r = t.createStyleSheet();
                    r.owningElement.id = e._vmlCSS;
                    for (var i = 0; i < n.length; i += 1) r.addRule(e._vmlNS + "\\:" + n[i], "behavior:url(#default#VML);")
                }
                e._vmlReady = !0
            }
        },
        createPalette: function() {
            var t = {
                elm: null,
                draw: null
            };
            if (e.isCanvasSupported) {
                var n = document.createElement("canvas"),
                    r = n.getContext("2d"),
                    i = function(e, t, i) {
                        n.width = e, n.height = t, r.clearRect(0, 0, n.width, n.height);
                        var s = r.createLinearGradient(0, 0, n.width, 0);
                        s.addColorStop(0, "#F00"), s.addColorStop(1 / 6, "#FF0"), s.addColorStop(2 / 6, "#0F0"), s.addColorStop(.5, "#0FF"), s.addColorStop(4 / 6, "#00F"), s.addColorStop(5 / 6, "#F0F"), s.addColorStop(1, "#F00"), r.fillStyle = s, r.fillRect(0, 0, n.width, n.height);
                        var o = r.createLinearGradient(0, 0, 0, n.height);
                        switch (i.toLowerCase()) {
                            case "s":
                                o.addColorStop(0, "rgba(255,255,255,0)"), o.addColorStop(1, "rgba(255,255,255,1)");
                                break;
                            case "v":
                                o.addColorStop(0, "rgba(0,0,0,0)"), o.addColorStop(1, "rgba(0,0,0,1)")
                        }
                        r.fillStyle = o, r.fillRect(0, 0, n.width, n.height)
                    };
                t.elm = n, t.draw = i
            } else {
                e.initVML();
                var s = document.createElement("div");
                s.style.position = "relative", s.style.overflow = "hidden";
                var o = document.createElement(e._vmlNS + ":fill");
                o.type = "gradient", o.method = "linear", o.angle = "90", o.colors = "16.67% #F0F, 33.33% #00F, 50% #0FF, 66.67% #0F0, 83.33% #FF0";
                var u = document.createElement(e._vmlNS + ":rect");
                u.style.position = "absolute", u.style.left = "-1px", u.style.top = "-1px", u.stroked = !1, u.appendChild(o), s.appendChild(u);
                var a = document.createElement(e._vmlNS + ":fill");
                a.type = "gradient", a.method = "linear", a.angle = "180", a.opacity = "0";
                var f = document.createElement(e._vmlNS + ":rect");
                f.style.position = "absolute", f.style.left = "-1px", f.style.top = "-1px", f.stroked = !1, f.appendChild(a), s.appendChild(f);
                var i = function(e, t, n) {
                    s.style.width = e + "px", s.style.height = t + "px", u.style.width = f.style.width = e + 1 + "px", u.style.height = f.style.height = t + 1 + "px", o.color = "#F00", o.color2 = "#F00";
                    switch (n.toLowerCase()) {
                        case "s":
                            a.color = a.color2 = "#FFF";
                            break;
                        case "v":
                            a.color = a.color2 = "#000"
                    }
                };
                t.elm = s, t.draw = i
            }
            return t
        },
        createSliderGradient: function() {
            var t = {
                elm: null,
                draw: null
            };
            if (e.isCanvasSupported) {
                var n = document.createElement("canvas"),
                    r = n.getContext("2d"),
                    i = function(e, t, i, s) {
                        n.width = e, n.height = t, r.clearRect(0, 0, n.width, n.height);
                        var o = r.createLinearGradient(0, 0, 0, n.height);
                        o.addColorStop(0, i), o.addColorStop(1, s), r.fillStyle = o, r.fillRect(0, 0, n.width, n.height)
                    };
                t.elm = n, t.draw = i
            } else {
                e.initVML();
                var s = document.createElement("div");
                s.style.position = "relative", s.style.overflow = "hidden";
                var o = document.createElement(e._vmlNS + ":fill");
                o.type = "gradient", o.method = "linear", o.angle = "180";
                var u = document.createElement(e._vmlNS + ":rect");
                u.style.position = "absolute", u.style.left = "-1px", u.style.top = "-1px", u.stroked = !1, u.appendChild(o), s.appendChild(u);
                var i = function(e, t, n, r) {
                    s.style.width = e + "px", s.style.height = t + "px", u.style.width = e + 1 + "px", u.style.height = t + 1 + "px", o.color = n, o.color2 = r
                };
                t.elm = s, t.draw = i
            }
            return t
        },
        leaveValue: 1,
        leaveStyle: 2,
        leavePad: 4,
        leaveSld: 8,
        BoxShadow: function() {
            var e = function(e, t, n, r, i, s) {
                this.hShadow = e, this.vShadow = t, this.blur = n, this.spread = r, this.color = i, this.inset = !!s
            };
            return e.prototype.toString = function() {
                var e = [Math.round(this.hShadow) + "px", Math.round(this.vShadow) + "px", Math.round(this.blur) + "px", Math.round(this.spread) + "px", this.color];
                return this.inset && e.push("inset"), e.join(" ")
            }, e
        }(),
        jscolor: function(t, n) {
            function i(e, t, n) {
                e /= 255, t /= 255, n /= 255;
                var r = Math.min(Math.min(e, t), n),
                    i = Math.max(Math.max(e, t), n),
                    s = i - r;
                if (s === 0) return [null, 0, 100 * i];
                var o = e === r ? 3 + (n - t) / s : t === r ? 5 + (e - n) / s : 1 + (t - e) / s;
                return [60 * (o === 6 ? 0 : o), 100 * (s / i), 100 * i]
            }

            function s(e, t, n) {
                var r = 255 * (n / 100);
                if (e === null) return [r, r, r];
                e /= 60, t /= 100;
                var i = Math.floor(e),
                    s = i % 2 ? e - i : 1 - (e - i),
                    o = r * (1 - t),
                    u = r * (1 - t * s);
                switch (i) {
                    case 6:
                    case 0:
                        return [r, u, o];
                    case 1:
                        return [u, r, o];
                    case 2:
                        return [o, r, u];
                    case 3:
                        return [o, u, r];
                    case 4:
                        return [u, o, r];
                    case 5:
                        return [r, o, u]
                }
            }

            function o() {
                e.unsetClass(d.targetElement, d.activeClass), e.picker.wrap.parentNode.removeChild(e.picker.wrap), delete e.picker.owner
            }

            function u() {
                function l() {
                    var e = d.insetColor.split(/\s+/),
                        n = e.length < 2 ? e[0] : e[1] + " " + e[0] + " " + e[0] + " " + e[1];
                    t.btn.style.borderColor = n
                }
                d._processParentElementsInDOM(), e.picker || (e.picker = {
                    owner: null,
                    wrap: document.createElement("div"),
                    box: document.createElement("div"),
                    boxS: document.createElement("div"),
                    boxB: document.createElement("div"),
                    pad: document.createElement("div"),
                    padB: document.createElement("div"),
                    padM: document.createElement("div"),
                    padPal: e.createPalette(),
                    cross: document.createElement("div"),
                    crossBY: document.createElement("div"),
                    crossBX: document.createElement("div"),
                    crossLY: document.createElement("div"),
                    crossLX: document.createElement("div"),
                    sld: document.createElement("div"),
                    sldB: document.createElement("div"),
                    sldM: document.createElement("div"),
                    sldGrad: e.createSliderGradient(),
                    sldPtrS: document.createElement("div"),
                    sldPtrIB: document.createElement("div"),
                    sldPtrMB: document.createElement("div"),
                    sldPtrOB: document.createElement("div"),
                    btn: document.createElement("div"),
                    btnT: document.createElement("span")
                }, e.picker.pad.appendChild(e.picker.padPal.elm), e.picker.padB.appendChild(e.picker.pad), e.picker.cross.appendChild(e.picker.crossBY), e.picker.cross.appendChild(e.picker.crossBX), e.picker.cross.appendChild(e.picker.crossLY), e.picker.cross.appendChild(e.picker.crossLX), e.picker.padB.appendChild(e.picker.cross), e.picker.box.appendChild(e.picker.padB), e.picker.box.appendChild(e.picker.padM), e.picker.sld.appendChild(e.picker.sldGrad.elm), e.picker.sldB.appendChild(e.picker.sld), e.picker.sldB.appendChild(e.picker.sldPtrOB), e.picker.sldPtrOB.appendChild(e.picker.sldPtrMB), e.picker.sldPtrMB.appendChild(e.picker.sldPtrIB), e.picker.sldPtrIB.appendChild(e.picker.sldPtrS), e.picker.box.appendChild(e.picker.sldB), e.picker.box.appendChild(e.picker.sldM), e.picker.btn.appendChild(e.picker.btnT), e.picker.box.appendChild(e.picker.btn), e.picker.boxB.appendChild(e.picker.box), e.picker.wrap.appendChild(e.picker.boxS), e.picker.wrap.appendChild(e.picker.boxB));
                var t = e.picker,
                    n = !!e.getSliderComponent(d),
                    r = e.getPickerDims(d),
                    i = 2 * d.pointerBorderWidth + d.pointerThickness + 2 * d.crossSize,
                    s = e.getPadToSliderPadding(d),
                    o = Math.min(d.borderRadius, Math.round(d.padding * Math.PI)),
                    u = "crosshair";
                t.wrap.style.clear = "both", t.wrap.style.width = r[0] + 2 * d.borderWidth + "px", t.wrap.style.height = r[1] + 2 * d.borderWidth + "px", t.wrap.style.zIndex = d.zIndex, t.box.style.width = r[0] + "px", t.box.style.height = r[1] + "px", t.boxS.style.position = "absolute", t.boxS.style.left = "0", t.boxS.style.top = "0", t.boxS.style.width = "100%", t.boxS.style.height = "100%", e.setBorderRadius(t.boxS, o + "px"), t.boxB.style.position = "relative", t.boxB.style.border = d.borderWidth + "px solid", t.boxB.style.borderColor = d.borderColor, t.boxB.style.background = d.backgroundColor, e.setBorderRadius(t.boxB, o + "px"), t.padM.style.background = t.sldM.style.background = "#FFF", e.setStyle(t.padM, "opacity", "0"), e.setStyle(t.sldM, "opacity", "0"), t.pad.style.position = "relative", t.pad.style.width = d.width + "px", t.pad.style.height = d.height + "px", t.padPal.draw(d.width, d.height, e.getPadYComponent(d)), t.padB.style.position = "absolute", t.padB.style.left = d.padding + "px", t.padB.style.top = d.padding + "px", t.padB.style.border = d.insetWidth + "px solid", t.padB.style.borderColor = d.insetColor, t.padM._jscInstance = d, t.padM._jscControlName = "pad", t.padM.style.position = "absolute", t.padM.style.left = "0", t.padM.style.top = "0", t.padM.style.width = d.padding + 2 * d.insetWidth + d.width + s / 2 + "px", t.padM.style.height = r[1] + "px", t.padM.style.cursor = u, t.cross.style.position = "absolute", t.cross.style.left = t.cross.style.top = "0", t.cross.style.width = t.cross.style.height = i + "px", t.crossBY.style.position = t.crossBX.style.position = "absolute", t.crossBY.style.background = t.crossBX.style.background = d.pointerBorderColor, t.crossBY.style.width = t.crossBX.style.height = 2 * d.pointerBorderWidth + d.pointerThickness + "px", t.crossBY.style.height = t.crossBX.style.width = i + "px", t.crossBY.style.left = t.crossBX.style.top = Math.floor(i / 2) - Math.floor(d.pointerThickness / 2) - d.pointerBorderWidth + "px", t.crossBY.style.top = t.crossBX.style.left = "0", t.crossLY.style.position = t.crossLX.style.position = "absolute", t.crossLY.style.background = t.crossLX.style.background = d.pointerColor, t.crossLY.style.height = t.crossLX.style.width = i - 2 * d.pointerBorderWidth + "px", t.crossLY.style.width = t.crossLX.style.height = d.pointerThickness + "px", t.crossLY.style.left = t.crossLX.style.top = Math.floor(i / 2) - Math.floor(d.pointerThickness / 2) + "px", t.crossLY.style.top = t.crossLX.style.left = d.pointerBorderWidth + "px", t.sld.style.overflow = "hidden", t.sld.style.width = d.sliderSize + "px", t.sld.style.height = d.height + "px", t.sldGrad.draw(d.sliderSize, d.height, "#000", "#000"), t.sldB.style.display = n ? "block" : "none", t.sldB.style.position = "absolute", t.sldB.style.right = d.padding + "px", t.sldB.style.top = d.padding + "px", t.sldB.style.border = d.insetWidth + "px solid", t.sldB.style.borderColor = d.insetColor, t.sldM._jscInstance = d, t.sldM._jscControlName = "sld", t.sldM.style.display = n ? "block" : "none", t.sldM.style.position = "absolute", t.sldM.style.right = "0", t.sldM.style.top = "0", t.sldM.style.width = d.sliderSize + s / 2 + d.padding + 2 * d.insetWidth + "px", t.sldM.style.height = r[1] + "px", t.sldM.style.cursor = "default", t.sldPtrIB.style.border = t.sldPtrOB.style.border = d.pointerBorderWidth + "px solid " + d.pointerBorderColor, t.sldPtrOB.style.position = "absolute", t.sldPtrOB.style.left = -(2 * d.pointerBorderWidth + d.pointerThickness) + "px", t.sldPtrOB.style.top = "0", t.sldPtrMB.style.border = d.pointerThickness + "px solid " + d.pointerColor, t.sldPtrS.style.width = d.sliderSize + "px", t.sldPtrS.style.height = m + "px", t.btn.style.display = d.closable ? "block" : "none", t.btn.style.position = "absolute", t.btn.style.left = d.padding + "px", t.btn.style.bottom = d.padding + "px", t.btn.style.padding = "0 15px", t.btn.style.height = d.buttonHeight + "px", t.btn.style.border = d.insetWidth + "px solid", l(), t.btn.style.color = d.buttonColor, t.btn.style.font = "12px sans-serif", t.btn.style.textAlign = "center";
                try {
                    t.btn.style.cursor = "pointer"
                } catch (c) {
                    t.btn.style.cursor = "hand"
                }
                t.btn.onmousedown = function() {
                    d.hide()
                }, t.btnT.style.lineHeight = d.buttonHeight + "px", t.btnT.innerHTML = "", t.btnT.appendChild(document.createTextNode(d.closeText)), a(), f(), e.picker.owner && e.picker.owner !== d && e.unsetClass(e.picker.owner.targetElement, d.activeClass), e.picker.owner = d, e.isElementType(v, "body") ? e.redrawPosition() : e._drawPosition(d, 0, 0, "relative", !1), t.wrap.parentNode != v && v.appendChild(t.wrap), e.setClass(d.targetElement, d.activeClass)
            }

            function a() {
                switch (e.getPadYComponent(d)) {
                    case "s":
                        var t = 1;
                        break;
                    case "v":
                        var t = 2
                }
                var n = Math.round(d.hsv[0] / 360 * (d.width - 1)),
                    r = Math.round((1 - d.hsv[t] / 100) * (d.height - 1)),
                    i = 2 * d.pointerBorderWidth + d.pointerThickness + 2 * d.crossSize,
                    o = -Math.floor(i / 2);
                e.picker.cross.style.left = n + o + "px", e.picker.cross.style.top = r + o + "px";
                switch (e.getSliderComponent(d)) {
                    case "s":
                        var u = s(d.hsv[0], 100, d.hsv[2]),
                            a = s(d.hsv[0], 0, d.hsv[2]),
                            f = "rgb(" + Math.round(u[0]) + "," + Math.round(u[1]) + "," + Math.round(u[2]) + ")",
                            l = "rgb(" + Math.round(a[0]) + "," + Math.round(a[1]) + "," + Math.round(a[2]) + ")";
                        e.picker.sldGrad.draw(d.sliderSize, d.height, f, l);
                        break;
                    case "v":
                        var c = s(d.hsv[0], d.hsv[1], 100),
                            f = "rgb(" + Math.round(c[0]) + "," + Math.round(c[1]) + "," + Math.round(c[2]) + ")",
                            l = "#000";
                        e.picker.sldGrad.draw(d.sliderSize, d.height, f, l)
                }
            }

            function f() {
                var t = e.getSliderComponent(d);
                if (t) {
                    switch (t) {
                        case "s":
                            var n = 1;
                            break;
                        case "v":
                            var n = 2
                    }
                    var r = Math.round((1 - d.hsv[n] / 100) * (d.height - 1));
                    e.picker.sldPtrOB.style.top = r - (2 * d.pointerBorderWidth + d.pointerThickness) - Math.floor(m / 2) + "px"
                }
            }

            function l() {
                return e.picker && e.picker.owner === d
            }

            function c() {
                d.importColor()
            }
            this.value = null, this.valueElement = t, this.styleElement = t, this.required = !0, this.refine = !0, this.hash = !1, this.uppercase = !0, this.onFineChange = null, this.activeClass = "jscolor-active", this.minS = 0, this.maxS = 100, this.minV = 0, this.maxV = 100, this.hsv = [0, 0, 100], this.rgb = [255, 255, 255], this.width = 181, this.height = 101, this.showOnClick = !0, this.mode = "HSV", this.position = "bottom", this.smartPosition = !0, this.sliderSize = 16, this.crossSize = 8, this.closable = !1, this.closeText = "Close", this.buttonColor = "#000000", this.buttonHeight = 18, this.padding = 12, this.backgroundColor = "#FFFFFF", this.borderWidth = 1, this.borderColor = "#BBBBBB", this.borderRadius = 8, this.insetWidth = 1, this.insetColor = "#BBBBBB", this.shadow = !0, this.shadowBlur = 15, this.shadowColor = "rgba(0,0,0,0.2)", this.pointerColor = "#4C4C4C", this.pointerBorderColor = "#FFFFFF", this.pointerBorderWidth = 1, this.pointerThickness = 2, this.zIndex = 1100, this.container = null;
            for (var r in n) n.hasOwnProperty(r) && (this[r] = n[r]);
            this.hide = function() {
                l() && o()
            }, this.show = function() {
                u()
            }, this.redraw = function() {
                l() && u()
            }, this.importColor = function() {
                this.valueElement ? e.isElementType(this.valueElement, "input") ? this.refine ? !this.required && /^\s*$/.test(this.valueElement.value) ? (this.valueElement.value = "", this.styleElement && (this.styleElement.style.backgroundImage = this.styleElement._jscOrigStyle.backgroundImage, this.styleElement.style.backgroundColor = this.styleElement._jscOrigStyle.backgroundColor, this.styleElement.style.color = this.styleElement._jscOrigStyle.color), this.exportColor(e.leaveValue | e.leaveStyle)) : this.fromString(this.valueElement.value) || this.exportColor() : this.fromString(this.valueElement.value, e.leaveValue) || (this.styleElement && (this.styleElement.style.backgroundImage = this.styleElement._jscOrigStyle.backgroundImage, this.styleElement.style.backgroundColor = this.styleElement._jscOrigStyle.backgroundColor, this.styleElement.style.color = this.styleElement._jscOrigStyle.color), this.exportColor(e.leaveValue | e.leaveStyle)) : this.exportColor() : this.exportColor()
            }, this.exportColor = function(t) {
                if (!(t & e.leaveValue) && this.valueElement) {
                    var n = this.toString();
                    this.uppercase && (n = n.toUpperCase()), this.hash && (n = "#" + n), e.isElementType(this.valueElement, "input") ? this.valueElement.value = n : this.valueElement.innerHTML = n
                }
                t & e.leaveStyle || this.styleElement && (this.styleElement.style.backgroundImage = "none", this.styleElement.style.backgroundColor = "#" + this.toString(), this.styleElement.style.color = this.isLight() ? "#000" : "#FFF"), !(t & e.leavePad) && l() && a(), !(t & e.leaveSld) && l() && f()
            }, this.fromHSV = function(e, t, n, r) {
                if (e !== null) {
                    if (isNaN(e)) return !1;
                    e = Math.max(0, Math.min(360, e))
                }
                if (t !== null) {
                    if (isNaN(t)) return !1;
                    t = Math.max(0, Math.min(100, this.maxS, t), this.minS)
                }
                if (n !== null) {
                    if (isNaN(n)) return !1;
                    n = Math.max(0, Math.min(100, this.maxV, n), this.minV)
                }
                this.rgb = s(e === null ? this.hsv[0] : this.hsv[0] = e, t === null ? this.hsv[1] : this.hsv[1] = t, n === null ? this.hsv[2] : this.hsv[2] = n), this.exportColor(r)
            }, this.fromRGB = function(e, t, n, r) {
                if (e !== null) {
                    if (isNaN(e)) return !1;
                    e = Math.max(0, Math.min(255, e))
                }
                if (t !== null) {
                    if (isNaN(t)) return !1;
                    t = Math.max(0, Math.min(255, t))
                }
                if (n !== null) {
                    if (isNaN(n)) return !1;
                    n = Math.max(0, Math.min(255, n))
                }
                var o = i(e === null ? this.rgb[0] : e, t === null ? this.rgb[1] : t, n === null ? this.rgb[2] : n);
                o[0] !== null && (this.hsv[0] = Math.max(0, Math.min(360, o[0]))), o[2] !== 0 && (this.hsv[1] = o[1] === null ? null : Math.max(0, this.minS, Math.min(100, this.maxS, o[1]))), this.hsv[2] = o[2] === null ? null : Math.max(0, this.minV, Math.min(100, this.maxV, o[2]));
                var u = s(this.hsv[0], this.hsv[1], this.hsv[2]);
                this.rgb[0] = u[0], this.rgb[1] = u[1], this.rgb[2] = u[2], this.exportColor(r)
            }, this.fromString = function(e, t) {
                var n;
                if (n = e.match(/^\W*([0-9A-F]{3}([0-9A-F]{3})?)\W*$/i)) return n[1].length === 6 ? this.fromRGB(parseInt(n[1].substr(0, 2), 16), parseInt(n[1].substr(2, 2), 16), parseInt(n[1].substr(4, 2), 16), t) : this.fromRGB(parseInt(n[1].charAt(0) + n[1].charAt(0), 16), parseInt(n[1].charAt(1) + n[1].charAt(1), 16), parseInt(n[1].charAt(2) + n[1].charAt(2), 16), t), !0;
                if (n = e.match(/^\W*rgba?\(([^)]*)\)\W*$/i)) {
                    var r = n[1].split(","),
                        i = /^\s*(\d*)(\.\d+)?\s*$/,
                        s, o, u;
                    if (r.length >= 3 && (s = r[0].match(i)) && (o = r[1].match(i)) && (u = r[2].match(i))) {
                        var a = parseFloat((s[1] || "0") + (s[2] || "")),
                            f = parseFloat((o[1] || "0") + (o[2] || "")),
                            l = parseFloat((u[1] || "0") + (u[2] || ""));
                        return this.fromRGB(a, f, l, t), !0
                    }
                }
                return !1
            }, this.toString = function() {
                return (256 | Math.round(this.rgb[0])).toString(16).substr(1) + (256 | Math.round(this.rgb[1])).toString(16).substr(1) + (256 | Math.round(this.rgb[2])).toString(16).substr(1)
            }, this.toHEXString = function() {
                return "#" + this.toString().toUpperCase()
            }, this.toRGBString = function() {
                return "rgb(" + Math.round(this.rgb[0]) + "," + Math.round(this.rgb[1]) + "," + Math.round(this.rgb[2]) + ")"
            }, this.isLight = function() {
                return .213 * this.rgb[0] + .715 * this.rgb[1] + .072 * this.rgb[2] > 127.5
            }, this._processParentElementsInDOM = function() {
                if (this._linkedElementsProcessed) return;
                this._linkedElementsProcessed = !0;
                var t = this.targetElement;
                do {
                    var n = e.getStyle(t);
                    n && n.position.toLowerCase() === "fixed" && (this.fixed = !0), t !== this.targetElement && (t._jscEventsAttached || (e.attachEvent(t, "scroll", e.onParentScroll), t._jscEventsAttached = !0))
                } while ((t = t.parentNode) && !e.isElementType(t, "body"))
            };
            if (typeof t == "string") {
                var h = t,
                    p = document.getElementById(h);
                p ? this.targetElement = p : e.warn("Could not find target element with ID '" + h + "'")
            } else t ? this.targetElement = t : e.warn("Invalid target element: '" + t + "'");
            if (this.targetElement._jscLinkedInstance) {
                e.warn("Cannot link jscolor twice to the same element. Skipping.");
                return
            }
            this.targetElement._jscLinkedInstance = this, this.valueElement = e.fetchElement(this.valueElement), this.styleElement = e.fetchElement(this.styleElement);
            var d = this,
                v = this.container ? e.fetchElement(this.container) : document.getElementsByTagName("body")[0],
                m = 3;
            if (e.isElementType(this.targetElement, "button"))
                if (this.targetElement.onclick) {
                    var g = this.targetElement.onclick;
                    this.targetElement.onclick = function(e) {
                        return g.call(this, e), !1
                    }
                } else this.targetElement.onclick = function() {
                    return !1
                };
            if (this.valueElement && e.isElementType(this.valueElement, "input")) {
                var y = function() {
                    d.fromString(d.valueElement.value, e.leaveValue), e.dispatchFineChange(d)
                };
                e.attachEvent(this.valueElement, "keyup", y), e.attachEvent(this.valueElement, "input", y), e.attachEvent(this.valueElement, "blur", c), this.valueElement.setAttribute("autocomplete", "off")
            }
            this.styleElement && (this.styleElement._jscOrigStyle = {
                backgroundImage: this.styleElement.style.backgroundImage,
                backgroundColor: this.styleElement.style.backgroundColor,
                color: this.styleElement.style.color
            }), this.value ? this.fromString(this.value) || this.exportColor() : this.importColor()
        }
    };
    return e.jscolor.lookupClass = "jscolor", e.jscolor.installByClassName = function(t) {
        var n = document.getElementsByTagName("input"),
            r = document.getElementsByTagName("button");
        e.tryInstallOnElements(n, t), e.tryInstallOnElements(r, t)
    }, e.register(), e.jscolor
}());
(function(modules) {
    var installedModules = {};

    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) {
            return installedModules[moduleId].exports
        }
        var module = installedModules[moduleId] = {
            i: moduleId,
            l: false,
            exports: {}
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.l = true;
        return module.exports
    }
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.i = function(value) {
        return value
    };
    __webpack_require__.d = function(exports, name, getter) {
        if (!__webpack_require__.o(exports, name)) {
            Object.defineProperty(exports, name, {
                configurable: false,
                enumerable: true,
                get: getter
            })
        }
    };
    __webpack_require__.n = function(module) {
        var getter = module && module.__esModule ? function getDefault() {
            return module["default"]
        } : function getModuleExports() {
            return module
        };
        __webpack_require__.d(getter, "a", getter);
        return getter
    };
    __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property)
    };
    __webpack_require__.p = "";
    return __webpack_require__(__webpack_require__.s = 40)
})({
    0: function(module, exports, __webpack_require__) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var _jquery = __webpack_require__(1);
        var _jquery2 = _interopRequireDefault(_jquery);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }
        var Util = function() {
            var transition = false;
            var MAX_UID = 1e6;
            var TransitionEndEvent = {
                WebkitTransition: "webkitTransitionEnd",
                MozTransition: "transitionend",
                OTransition: "oTransitionEnd otransitionend",
                transition: "transitionend"
            };

            function toType(obj) {
                return {}.toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase()
            }

            function getSpecialTransitionEndEvent() {
                return {
                    bindType: transition.end,
                    delegateType: transition.end,
                    handle: function handle(event) {
                        if ((0, _jquery2.default)(event.target).is(this)) {
                            return event.handleObj.handler.apply(this, arguments)
                        }
                        return undefined
                    }
                }
            }

            function transitionEndTest() {
                if (window.QUnit) {
                    return false
                }
                var el = document.createElement("bootstrap");
                for (var name in TransitionEndEvent) {
                    if (typeof el.style[name] !== "undefined") {
                        return {
                            end: TransitionEndEvent[name]
                        }
                    }
                }
                return false
            }

            function transitionEndEmulator(duration) {
                var _this = this;
                var called = false;
                (0, _jquery2.default)(this).one(Util.TRANSITION_END, function() {
                    called = true
                });
                setTimeout(function() {
                    if (!called) {
                        Util.triggerTransitionEnd(_this)
                    }
                }, duration);
                return this
            }

            function setTransitionEndSupport() {
                transition = transitionEndTest();
                _jquery2.default.fn.emulateTransitionEnd = transitionEndEmulator;
                if (Util.supportsTransitionEnd()) {
                    _jquery2.default.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()
                }
            }

            function parseOption(item) {
                if ("true" === item) {
                    return true
                } else if ("false" === item) {
                    return false
                } else if (!isNaN(item * 1)) {
                    return parseFloat(item)
                } else {
                    return item
                }
            }
            var Util = {
                TRANSITION_END: "bsTransitionEnd",
                getUID: function getUID(prefix) {
                    do {
                        prefix += ~~(Math.random() * MAX_UID)
                    } while (document.getElementById(prefix));
                    return prefix
                },
                getSelectorFromElement: function getSelectorFromElement(element) {
                    var selector = element.getAttribute("data-target");
                    if (!selector || selector === "#") {
                        selector = element.getAttribute("href") || ""
                    }
                    try {
                        var $selector = (0, _jquery2.default)(document).find(selector);
                        return $selector.length > 0 ? selector : null
                    } catch (error) {
                        return null
                    }
                },
                reflow: function reflow(element) {
                    return element.offsetHeight
                },
                triggerTransitionEnd: function triggerTransitionEnd(element) {
                    (0, _jquery2.default)(element).trigger(transition.end)
                },
                supportsTransitionEnd: function supportsTransitionEnd() {
                    return Boolean(transition)
                },
                isElement: function isElement(obj) {
                    return (obj[0] || obj).nodeType
                },
                typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {
                    for (var property in configTypes) {
                        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
                            var expectedTypes = configTypes[property];
                            var value = config[property];
                            var valueType = value && Util.isElement(value) ? "element" : toType(value);
                            if (!new RegExp(expectedTypes).test(valueType)) {
                                throw new Error(componentName.toUpperCase() + ": " + ('Option "' + property + '" provided type "' + valueType + '" ') + ('but expected type "' + expectedTypes + '".'))
                            }
                        }
                    }
                },
                parseDataOptions: function parseDataOptions(dataOptions) {
                    var options = [];
                    var string = dataOptions.split(";");
                    string.forEach(function(item, index) {
                        var option = item.split(":");
                        option = option.map(function(item) {
                            return item.trim()
                        });
                        if (option[0]) {
                            options[option[0]] = parseOption(option[1])
                        }
                    });
                    return options
                }
            };
            setTransitionEndSupport();
            return Util
        }(_jquery2.default);
        exports.default = Util
    },
    1: function(module, exports) {
        module.exports = jQuery
    },
    10: function(module, exports, __webpack_require__) {
        "use strict";
        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
            return typeof obj
        } : function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
        };
        (function(factory) {
            if (true) {
                !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function($) {
                    return factory($, window, document)
                }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
            } else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === "object") {
                module.exports = function(root, $) {
                    if (!root) {
                        root = window
                    }
                    if (!$ || !$.fn.dataTable) {
                        $ = require("datatables.net")(root, $).$
                    }
                    return factory($, root, root.document)
                }
            } else {
                factory(jQuery, window, document)
            }
        })(function($, window, document, undefined) {
            "use strict";
            var DataTable = $.fn.dataTable;
            var Responsive = function Responsive(settings, opts) {
                if (!DataTable.versionCheck || !DataTable.versionCheck("1.10.3")) {
                    throw "DataTables Responsive requires DataTables 1.10.3 or newer"
                }
                this.s = {
                    dt: new DataTable.Api(settings),
                    columns: [],
                    current: []
                };
                if (this.s.dt.settings()[0].responsive) {
                    return
                }
                if (opts && typeof opts.details === "string") {
                    opts.details = {
                        type: opts.details
                    }
                } else if (opts && opts.details === false) {
                    opts.details = {
                        type: false
                    }
                } else if (opts && opts.details === true) {
                    opts.details = {
                        type: "inline"
                    }
                }
                this.c = $.extend(true, {}, Responsive.defaults, DataTable.defaults.responsive, opts);
                settings.responsive = this;
                this._constructor()
            };
            $.extend(Responsive.prototype, {
                _constructor: function _constructor() {
                    var that = this;
                    var dt = this.s.dt;
                    var dtPrivateSettings = dt.settings()[0];
                    var oldWindowWidth = $(window).width();
                    dt.settings()[0]._responsive = this;
                    $(window).on("resize.dtr orientationchange.dtr", DataTable.util.throttle(function() {
                        var width = $(window).width();
                        if (width !== oldWindowWidth) {
                            that._resize();
                            oldWindowWidth = width
                        }
                    }));
                    dtPrivateSettings.oApi._fnCallbackReg(dtPrivateSettings, "aoRowCreatedCallback", function(tr, data, idx) {
                        if ($.inArray(false, that.s.current) !== -1) {
                            $(">td, >th", tr).each(function(i) {
                                var idx = dt.column.index("toData", i);
                                if (that.s.current[idx] === false) {
                                    $(this).css("display", "none")
                                }
                            })
                        }
                    });
                    dt.on("destroy.dtr", function() {
                        dt.off(".dtr");
                        $(dt.table().body()).off(".dtr");
                        $(window).off("resize.dtr orientationchange.dtr");
                        $.each(that.s.current, function(i, val) {
                            if (val === false) {
                                that._setColumnVis(i, true)
                            }
                        })
                    });
                    this.c.breakpoints.sort(function(a, b) {
                        return a.width < b.width ? 1 : a.width > b.width ? -1 : 0
                    });
                    this._classLogic();
                    this._resizeAuto();
                    var details = this.c.details;
                    if (details.type !== false) {
                        that._detailsInit();
                        dt.on("column-visibility.dtr", function(e, ctx, col, vis) {
                            that._classLogic();
                            that._resizeAuto();
                            that._resize()
                        });
                        dt.on("draw.dtr", function() {
                            that._redrawChildren()
                        });
                        $(dt.table().node()).addClass("dtr-" + details.type)
                    }
                    dt.on("column-reorder.dtr", function(e, settings, details) {
                        that._classLogic();
                        that._resizeAuto();
                        that._resize()
                    });
                    dt.on("column-sizing.dtr", function() {
                        that._resizeAuto();
                        that._resize()
                    });
                    dt.on("preXhr.dtr", function() {
                        var rowIds = [];
                        dt.rows().every(function() {
                            if (this.child.isShown()) {
                                rowIds.push(this.id(true))
                            }
                        });
                        dt.one("draw.dtr", function() {
                            dt.rows(rowIds).every(function() {
                                that._detailsDisplay(this, false)
                            })
                        })
                    });
                    dt.on("init.dtr", function(e, settings, details) {
                        that._resizeAuto();
                        that._resize();
                        if ($.inArray(false, that.s.current)) {
                            dt.columns.adjust()
                        }
                    });
                    this._resize()
                },
                _columnsVisiblity: function _columnsVisiblity(breakpoint) {
                    var dt = this.s.dt;
                    var columns = this.s.columns;
                    var i, ien;
                    var order = columns.map(function(col, idx) {
                        return {
                            columnIdx: idx,
                            priority: col.priority
                        }
                    }).sort(function(a, b) {
                        if (a.priority !== b.priority) {
                            return a.priority - b.priority
                        }
                        return a.columnIdx - b.columnIdx
                    });
                    var display = $.map(columns, function(col) {
                        return col.auto && col.minWidth === null ? false : col.auto === true ? "-" : $.inArray(breakpoint, col.includeIn) !== -1
                    });
                    var requiredWidth = 0;
                    for (i = 0, ien = display.length; i < ien; i++) {
                        if (display[i] === true) {
                            requiredWidth += columns[i].minWidth
                        }
                    }
                    var scrolling = dt.settings()[0].oScroll;
                    var bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;
                    var widthAvailable = dt.table().container().offsetWidth - bar;
                    var usedWidth = widthAvailable - requiredWidth;
                    for (i = 0, ien = display.length; i < ien; i++) {
                        if (columns[i].control) {
                            usedWidth -= columns[i].minWidth
                        }
                    }
                    var empty = false;
                    for (i = 0, ien = order.length; i < ien; i++) {
                        var colIdx = order[i].columnIdx;
                        if (display[colIdx] === "-" && !columns[colIdx].control && columns[colIdx].minWidth) {
                            if (empty || usedWidth - columns[colIdx].minWidth < 0) {
                                empty = true;
                                display[colIdx] = false
                            } else {
                                display[colIdx] = true
                            }
                            usedWidth -= columns[colIdx].minWidth
                        }
                    }
                    var showControl = false;
                    for (i = 0, ien = columns.length; i < ien; i++) {
                        if (!columns[i].control && !columns[i].never && !display[i]) {
                            showControl = true;
                            break
                        }
                    }
                    for (i = 0, ien = columns.length; i < ien; i++) {
                        if (columns[i].control) {
                            display[i] = showControl
                        }
                    }
                    if ($.inArray(true, display) === -1) {
                        display[0] = true
                    }
                    return display
                },
                _classLogic: function _classLogic() {
                    var that = this;
                    var calc = {};
                    var breakpoints = this.c.breakpoints;
                    var dt = this.s.dt;
                    var columns = dt.columns().eq(0).map(function(i) {
                        var column = this.column(i);
                        var className = column.header().className;
                        var priority = dt.settings()[0].aoColumns[i].responsivePriority;
                        if (priority === undefined) {
                            var dataPriority = $(column.header()).data("priority");
                            priority = dataPriority !== undefined ? dataPriority * 1 : 1e4
                        }
                        return {
                            className: className,
                            includeIn: [],
                            auto: false,
                            control: false,
                            never: className.match(/\bnever\b/) ? true : false,
                            priority: priority
                        }
                    });
                    var add = function add(colIdx, name) {
                        var includeIn = columns[colIdx].includeIn;
                        if ($.inArray(name, includeIn) === -1) {
                            includeIn.push(name)
                        }
                    };
                    var column = function column(colIdx, name, operator, matched) {
                        var size, i, ien;
                        if (!operator) {
                            columns[colIdx].includeIn.push(name)
                        } else if (operator === "max-") {
                            size = that._find(name).width;
                            for (i = 0, ien = breakpoints.length; i < ien; i++) {
                                if (breakpoints[i].width <= size) {
                                    add(colIdx, breakpoints[i].name)
                                }
                            }
                        } else if (operator === "min-") {
                            size = that._find(name).width;
                            for (i = 0, ien = breakpoints.length; i < ien; i++) {
                                if (breakpoints[i].width >= size) {
                                    add(colIdx, breakpoints[i].name)
                                }
                            }
                        } else if (operator === "not-") {
                            for (i = 0, ien = breakpoints.length; i < ien; i++) {
                                if (breakpoints[i].name.indexOf(matched) === -1) {
                                    add(colIdx, breakpoints[i].name)
                                }
                            }
                        }
                    };
                    columns.each(function(col, i) {
                        var classNames = col.className.split(" ");
                        var hasClass = false;
                        for (var k = 0, ken = classNames.length; k < ken; k++) {
                            var className = $.trim(classNames[k]);
                            if (className === "all") {
                                hasClass = true;
                                col.includeIn = $.map(breakpoints, function(a) {
                                    return a.name
                                });
                                return
                            } else if (className === "none" || col.never) {
                                hasClass = true;
                                return
                            } else if (className === "control") {
                                hasClass = true;
                                col.control = true;
                                return
                            }
                            $.each(breakpoints, function(j, breakpoint) {
                                var brokenPoint = breakpoint.name.split("-");
                                var re = new RegExp("(min\\-|max\\-|not\\-)?(" + brokenPoint[0] + ")(\\-[_a-zA-Z0-9])?");
                                var match = className.match(re);
                                if (match) {
                                    hasClass = true;
                                    if (match[2] === brokenPoint[0] && match[3] === "-" + brokenPoint[1]) {
                                        column(i, breakpoint.name, match[1], match[2] + match[3])
                                    } else if (match[2] === brokenPoint[0] && !match[3]) {
                                        column(i, breakpoint.name, match[1], match[2])
                                    }
                                }
                            })
                        }
                        if (!hasClass) {
                            col.auto = true
                        }
                    });
                    this.s.columns = columns
                },
                _detailsDisplay: function _detailsDisplay(row, update) {
                    var that = this;
                    var dt = this.s.dt;
                    var details = this.c.details;
                    if (details && details.type !== false) {
                        var res = details.display(row, update, function() {
                            return details.renderer(dt, row[0], that._detailsObj(row[0]))
                        });
                        if (res === true || res === false) {
                            $(dt.table().node()).triggerHandler("responsive-display.dt", [dt, row, res, update])
                        }
                    }
                },
                _detailsInit: function _detailsInit() {
                    var that = this;
                    var dt = this.s.dt;
                    var details = this.c.details;
                    if (details.type === "inline") {
                        details.target = "td:first-child, th:first-child"
                    }
                    dt.on("draw.dtr", function() {
                        that._tabIndexes()
                    });
                    that._tabIndexes();
                    $(dt.table().body()).on("keyup.dtr", "td, th", function(e) {
                        if (e.keyCode === 13 && $(this).data("dtr-keyboard")) {
                            $(this).click()
                        }
                    });
                    var target = details.target;
                    var selector = typeof target === "string" ? target : "td, th";
                    $(dt.table().body()).on("click.dtr mousedown.dtr mouseup.dtr", selector, function(e) {
                        if (!$(dt.table().node()).hasClass("collapsed")) {
                            return
                        }
                        if ($.inArray($(this).closest("tr").get(0), dt.rows().nodes().toArray()) === -1) {
                            return
                        }
                        if (typeof target === "number") {
                            var targetIdx = target < 0 ? dt.columns().eq(0).length + target : target;
                            if (dt.cell(this).index().column !== targetIdx) {
                                return
                            }
                        }
                        var row = dt.row($(this).closest("tr"));
                        if (e.type === "click") {
                            that._detailsDisplay(row, false)
                        } else if (e.type === "mousedown") {
                            $(this).css("outline", "none")
                        } else if (e.type === "mouseup") {
                            $(this).blur().css("outline", "")
                        }
                    })
                },
                _detailsObj: function _detailsObj(rowIdx) {
                    var that = this;
                    var dt = this.s.dt;
                    return $.map(this.s.columns, function(col, i) {
                        if (col.never || col.control) {
                            return
                        }
                        return {
                            title: dt.settings()[0].aoColumns[i].sTitle,
                            data: dt.cell(rowIdx, i).render(that.c.orthogonal),
                            hidden: dt.column(i).visible() && !that.s.current[i],
                            columnIndex: i,
                            rowIndex: rowIdx
                        }
                    })
                },
                _find: function _find(name) {
                    var breakpoints = this.c.breakpoints;
                    for (var i = 0, ien = breakpoints.length; i < ien; i++) {
                        if (breakpoints[i].name === name) {
                            return breakpoints[i]
                        }
                    }
                },
                _redrawChildren: function _redrawChildren() {
                    var that = this;
                    var dt = this.s.dt;
                    dt.rows({
                        page: "current"
                    }).iterator("row", function(settings, idx) {
                        var row = dt.row(idx);
                        that._detailsDisplay(dt.row(idx), true)
                    })
                },
                _resize: function _resize() {
                    var that = this;
                    var dt = this.s.dt;
                    var width = $(window).width();
                    var breakpoints = this.c.breakpoints;
                    var breakpoint = breakpoints[0].name;
                    var columns = this.s.columns;
                    var i, ien;
                    var oldVis = this.s.current.slice();
                    for (i = breakpoints.length - 1; i >= 0; i--) {
                        if (width <= breakpoints[i].width) {
                            breakpoint = breakpoints[i].name;
                            break
                        }
                    }
                    var columnsVis = this._columnsVisiblity(breakpoint);
                    this.s.current = columnsVis;
                    var collapsedClass = false;
                    for (i = 0, ien = columns.length; i < ien; i++) {
                        if (columnsVis[i] === false && !columns[i].never && !columns[i].control) {
                            collapsedClass = true;
                            break
                        }
                    }
                    $(dt.table().node()).toggleClass("collapsed", collapsedClass);
                    var changed = false;
                    dt.columns().eq(0).each(function(colIdx, i) {
                        if (columnsVis[i] !== oldVis[i]) {
                            changed = true;
                            that._setColumnVis(colIdx, columnsVis[i])
                        }
                    });
                    if (changed) {
                        this._redrawChildren();
                        $(dt.table().node()).trigger("responsive-resize.dt", [dt, this.s.current]);
                        if (dt.page.info().recordsDisplay === 0) {
                            dt.draw()
                        }
                    }
                },
                _resizeAuto: function _resizeAuto() {
                    var dt = this.s.dt;
                    var columns = this.s.columns;
                    if (!this.c.auto) {
                        return
                    }
                    if ($.inArray(true, $.map(columns, function(c) {
                            return c.auto
                        })) === -1) {
                        return
                    }
                    if (!$.isEmptyObject(_childNodeStore)) {
                        $.each(_childNodeStore, function(key) {
                            var idx = key.split("-");
                            _childNodesRestore(dt, idx[0] * 1, idx[1] * 1)
                        })
                    }
                    var tableWidth = dt.table().node().offsetWidth;
                    var columnWidths = dt.columns;
                    var clonedTable = dt.table().node().cloneNode(false);
                    var clonedHeader = $(dt.table().header().cloneNode(false)).appendTo(clonedTable);
                    var clonedBody = $(dt.table().body()).clone(false, false).empty().appendTo(clonedTable);
                    var headerCells = dt.columns().header().filter(function(idx) {
                        return dt.column(idx).visible()
                    }).to$().clone(false).css("display", "table-cell");
                    $(clonedBody).append($(dt.rows({
                        page: "current"
                    }).nodes()).clone(false)).find("th, td").css("display", "");
                    var footer = dt.table().footer();
                    if (footer) {
                        var clonedFooter = $(footer.cloneNode(false)).appendTo(clonedTable);
                        var footerCells = dt.columns().footer().filter(function(idx) {
                            return dt.column(idx).visible()
                        }).to$().clone(false).css("display", "table-cell");
                        $("<tr/>").append(footerCells).appendTo(clonedFooter)
                    }
                    $("<tr/>").append(headerCells).appendTo(clonedHeader);
                    if (this.c.details.type === "inline") {
                        $(clonedTable).addClass("dtr-inline collapsed")
                    }
                    $(clonedTable).find("[name]").removeAttr("name");
                    var inserted = $("<div/>").css({
                        width: 1,
                        height: 1,
                        overflow: "hidden",
                        clear: "both"
                    }).append(clonedTable);
                    inserted.insertBefore(dt.table().node());
                    headerCells.each(function(i) {
                        var idx = dt.column.index("fromVisible", i);
                        columns[idx].minWidth = this.offsetWidth || 0
                    });
                    inserted.remove()
                },
                _setColumnVis: function _setColumnVis(col, showHide) {
                    var dt = this.s.dt;
                    var display = showHide ? "" : "none";
                    $(dt.column(col).header()).css("display", display);
                    $(dt.column(col).footer()).css("display", display);
                    dt.column(col).nodes().to$().css("display", display);
                    if (!$.isEmptyObject(_childNodeStore)) {
                        dt.cells(null, col).indexes().each(function(idx) {
                            _childNodesRestore(dt, idx.row, idx.column)
                        })
                    }
                },
                _tabIndexes: function _tabIndexes() {
                    var dt = this.s.dt;
                    var cells = dt.cells({
                        page: "current"
                    }).nodes().to$();
                    var ctx = dt.settings()[0];
                    var target = this.c.details.target;
                    cells.filter("[data-dtr-keyboard]").removeData("[data-dtr-keyboard]");
                    var selector = typeof target === "number" ? ":eq(" + target + ")" : target;
                    if (selector === "td:first-child, th:first-child") {
                        selector = ">td:first-child, >th:first-child"
                    }
                    $(selector, dt.rows({
                        page: "current"
                    }).nodes()).attr("tabIndex", ctx.iTabIndex).data("dtr-keyboard", 1)
                }
            });
            Responsive.breakpoints = [{
                name: "desktop",
                width: Infinity
            }, {
                name: "tablet-l",
                width: 1024
            }, {
                name: "tablet-p",
                width: 768
            }, {
                name: "mobile-l",
                width: 480
            }, {
                name: "mobile-p",
                width: 320
            }];
            Responsive.display = {
                childRow: function childRow(row, update, render) {
                    if (update) {
                        if ($(row.node()).hasClass("parent")) {
                            row.child(render(), "child").show();
                            return true
                        }
                    } else {
                        if (!row.child.isShown()) {
                            row.child(render(), "child").show();
                            $(row.node()).addClass("parent");
                            return true
                        } else {
                            row.child(false);
                            $(row.node()).removeClass("parent");
                            return false
                        }
                    }
                },
                childRowImmediate: function childRowImmediate(row, update, render) {
                    if (!update && row.child.isShown() || !row.responsive.hasHidden()) {
                        row.child(false);
                        $(row.node()).removeClass("parent");
                        return false
                    } else {
                        row.child(render(), "child").show();
                        $(row.node()).addClass("parent");
                        return true
                    }
                },
                modal: function modal(options) {
                    return function(row, update, render) {
                        if (!update) {
                            var close = function close() {
                                modal.remove();
                                $(document).off("keypress.dtr")
                            };
                            var modal = $('<div class="dtr-modal"/>').append($('<div class="dtr-modal-display"/>').append($('<div class="dtr-modal-content"/>').append(render())).append($('<div class="dtr-modal-close">&times;</div>').click(function() {
                                close()
                            }))).append($('<div class="dtr-modal-background"/>').click(function() {
                                close()
                            })).appendTo("body");
                            $(document).on("keyup.dtr", function(e) {
                                if (e.keyCode === 27) {
                                    e.stopPropagation();
                                    close()
                                }
                            })
                        } else {
                            $("div.dtr-modal-content").empty().append(render())
                        }
                        if (options && options.header) {
                            $("div.dtr-modal-content").prepend("<h2>" + options.header(row) + "</h2>")
                        }
                    }
                }
            };
            var _childNodeStore = {};

            function _childNodes(dt, row, col) {
                var name = row + "-" + col;
                if (_childNodeStore[name]) {
                    return _childNodeStore[name]
                }
                var nodes = [];
                var children = dt.cell(row, col).node().childNodes;
                for (var i = 0, ien = children.length; i < ien; i++) {
                    nodes.push(children[i])
                }
                _childNodeStore[name] = nodes;
                return nodes
            }

            function _childNodesRestore(dt, row, col) {
                var name = row + "-" + col;
                if (!_childNodeStore[name]) {
                    return
                }
                var node = dt.cell(row, col).node();
                var store = _childNodeStore[name];
                var parent = store[0].parentNode;
                var parentChildren = parent.childNodes;
                var a = [];
                for (var i = 0, ien = parentChildren.length; i < ien; i++) {
                    a.push(parentChildren[i])
                }
                for (var j = 0, jen = a.length; j < jen; j++) {
                    node.appendChild(a[j])
                }
                _childNodeStore[name] = undefined
            }
            Responsive.renderer = {
                listHiddenNodes: function listHiddenNodes() {
                    return function(api, rowIdx, columns) {
                        var ul = $('<ul data-dtr-index="' + rowIdx + '" class="dtr-details"/>');
                        var found = false;
                        var data = $.each(columns, function(i, col) {
                            if (col.hidden) {
                                $('<li data-dtr-index="' + col.columnIndex + '" data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '">' + '<span class="dtr-title">' + col.title + "</span> " + "</li>").append($('<span class="dtr-data"/>').append(_childNodes(api, col.rowIndex, col.columnIndex))).appendTo(ul);
                                found = true
                            }
                        });
                        return found ? ul : false
                    }
                },
                listHidden: function listHidden() {
                    return function(api, rowIdx, columns) {
                        var data = $.map(columns, function(col) {
                            return col.hidden ? '<li data-dtr-index="' + col.columnIndex + '" data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '">' + '<span class="dtr-title">' + col.title + "</span> " + '<span class="dtr-data">' + col.data + "</span>" + "</li>" : ""
                        }).join("");
                        return data ? $('<ul data-dtr-index="' + rowIdx + '" class="dtr-details"/>').append(data) : false
                    }
                },
                tableAll: function tableAll(options) {
                    options = $.extend({
                        tableClass: ""
                    }, options);
                    return function(api, rowIdx, columns) {
                        var data = $.map(columns, function(col) {
                            return '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '">' + "<td>" + col.title + ":" + "</td> " + "<td>" + col.data + "</td>" + "</tr>"
                        }).join("");
                        return $('<table class="' + options.tableClass + ' dtr-details" width="100%"/>').append(data)
                    }
                }
            };
            Responsive.defaults = {
                breakpoints: Responsive.breakpoints,
                auto: true,
                details: {
                    display: Responsive.display.childRow,
                    renderer: Responsive.renderer.listHidden(),
                    target: 0,
                    type: "inline"
                },
                orthogonal: "display"
            };
            var Api = $.fn.dataTable.Api;
            Api.register("responsive()", function() {
                return this
            });
            Api.register("responsive.index()", function(li) {
                li = $(li);
                return {
                    column: li.data("dtr-index"),
                    row: li.parent().data("dtr-index")
                }
            });
            Api.register("responsive.rebuild()", function() {
                return this.iterator("table", function(ctx) {
                    if (ctx._responsive) {
                        ctx._responsive._classLogic()
                    }
                })
            });
            Api.register("responsive.recalc()", function() {
                return this.iterator("table", function(ctx) {
                    if (ctx._responsive) {
                        ctx._responsive._resizeAuto();
                        ctx._responsive._resize()
                    }
                })
            });
            Api.register("responsive.hasHidden()", function() {
                var ctx = this.context[0];
                return ctx._responsive ? $.inArray(false, ctx._responsive.s.current) !== -1 : false
            });
            Responsive.version = "2.2.0";
            $.fn.dataTable.Responsive = Responsive;
            $.fn.DataTable.Responsive = Responsive;
            $(document).on("preInit.dt.dtr", function(e, settings, json) {
                if (e.namespace !== "dt") {
                    return
                }
                if ($(settings.nTable).hasClass("responsive") || $(settings.nTable).hasClass("dt-responsive") || settings.oInit.responsive || DataTable.defaults.responsive) {
                    var init = settings.oInit.responsive;
                    if (init !== false) {
                        new Responsive(settings, $.isPlainObject(init) ? init : {})
                    }
                }
            });
            return Responsive
        })
    },
    2: function(module, exports, __webpack_require__) {
        "use strict";
        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
            return typeof obj
        } : function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
        };
        (function(factory) {
            "use strict";
            if (true) {
                !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function($) {
                    return factory($, window, document)
                }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
            } else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === "object") {
                module.exports = function(root, $) {
                    if (!root) {
                        root = window
                    }
                    if (!$) {
                        $ = typeof window !== "undefined" ? require("jquery") : require("jquery")(root)
                    }
                    return factory($, root, root.document)
                }
            } else {
                factory(jQuery, window, document)
            }
        })(function($, window, document, undefined) {
            "use strict";
            var DataTable = function DataTable(options) {
                this.$ = function(sSelector, oOpts) {
                    return this.api(true).$(sSelector, oOpts)
                };
                this._ = function(sSelector, oOpts) {
                    return this.api(true).rows(sSelector, oOpts).data()
                };
                this.api = function(traditional) {
                    return traditional ? new _Api2(_fnSettingsFromNode(this[_ext.iApiIndex])) : new _Api2(this)
                };
                this.fnAddData = function(data, redraw) {
                    var api = this.api(true);
                    var rows = $.isArray(data) && ($.isArray(data[0]) || $.isPlainObject(data[0])) ? api.rows.add(data) : api.row.add(data);
                    if (redraw === undefined || redraw) {
                        api.draw()
                    }
                    return rows.flatten().toArray()
                };
                this.fnAdjustColumnSizing = function(bRedraw) {
                    var api = this.api(true).columns.adjust();
                    var settings = api.settings()[0];
                    var scroll = settings.oScroll;
                    if (bRedraw === undefined || bRedraw) {
                        api.draw(false)
                    } else if (scroll.sX !== "" || scroll.sY !== "") {
                        _fnScrollDraw(settings)
                    }
                };
                this.fnClearTable = function(bRedraw) {
                    var api = this.api(true).clear();
                    if (bRedraw === undefined || bRedraw) {
                        api.draw()
                    }
                };
                this.fnClose = function(nTr) {
                    this.api(true).row(nTr).child.hide()
                };
                this.fnDeleteRow = function(target, callback, redraw) {
                    var api = this.api(true);
                    var rows = api.rows(target);
                    var settings = rows.settings()[0];
                    var data = settings.aoData[rows[0][0]];
                    rows.remove();
                    if (callback) {
                        callback.call(this, settings, data)
                    }
                    if (redraw === undefined || redraw) {
                        api.draw()
                    }
                    return data
                };
                this.fnDestroy = function(remove) {
                    this.api(true).destroy(remove)
                };
                this.fnDraw = function(complete) {
                    this.api(true).draw(complete)
                };
                this.fnFilter = function(sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {
                    var api = this.api(true);
                    if (iColumn === null || iColumn === undefined) {
                        api.search(sInput, bRegex, bSmart, bCaseInsensitive)
                    } else {
                        api.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive)
                    }
                    api.draw()
                };
                this.fnGetData = function(src, col) {
                    var api = this.api(true);
                    if (src !== undefined) {
                        var type = src.nodeName ? src.nodeName.toLowerCase() : "";
                        return col !== undefined || type == "td" || type == "th" ? api.cell(src, col).data() : api.row(src).data() || null
                    }
                    return api.data().toArray()
                };
                this.fnGetNodes = function(iRow) {
                    var api = this.api(true);
                    return iRow !== undefined ? api.row(iRow).node() : api.rows().nodes().flatten().toArray()
                };
                this.fnGetPosition = function(node) {
                    var api = this.api(true);
                    var nodeName = node.nodeName.toUpperCase();
                    if (nodeName == "TR") {
                        return api.row(node).index()
                    } else if (nodeName == "TD" || nodeName == "TH") {
                        var cell = api.cell(node).index();
                        return [cell.row, cell.columnVisible, cell.column]
                    }
                    return null
                };
                this.fnIsOpen = function(nTr) {
                    return this.api(true).row(nTr).child.isShown()
                };
                this.fnOpen = function(nTr, mHtml, sClass) {
                    return this.api(true).row(nTr).child(mHtml, sClass).show().child()[0]
                };
                this.fnPageChange = function(mAction, bRedraw) {
                    var api = this.api(true).page(mAction);
                    if (bRedraw === undefined || bRedraw) {
                        api.draw(false)
                    }
                };
                this.fnSetColumnVis = function(iCol, bShow, bRedraw) {
                    var api = this.api(true).column(iCol).visible(bShow);
                    if (bRedraw === undefined || bRedraw) {
                        api.columns.adjust().draw()
                    }
                };
                this.fnSettings = function() {
                    return _fnSettingsFromNode(this[_ext.iApiIndex])
                };
                this.fnSort = function(aaSort) {
                    this.api(true).order(aaSort).draw()
                };
                this.fnSortListener = function(nNode, iColumn, fnCallback) {
                    this.api(true).order.listener(nNode, iColumn, fnCallback)
                };
                this.fnUpdate = function(mData, mRow, iColumn, bRedraw, bAction) {
                    var api = this.api(true);
                    if (iColumn === undefined || iColumn === null) {
                        api.row(mRow).data(mData)
                    } else {
                        api.cell(mRow, iColumn).data(mData)
                    }
                    if (bAction === undefined || bAction) {
                        api.columns.adjust()
                    }
                    if (bRedraw === undefined || bRedraw) {
                        api.draw()
                    }
                    return 0
                };
                this.fnVersionCheck = _ext.fnVersionCheck;
                var _that = this;
                var emptyInit = options === undefined;
                var len = this.length;
                if (emptyInit) {
                    options = {}
                }
                this.oApi = this.internal = _ext.internal;
                for (var fn in DataTable.ext.internal) {
                    if (fn) {
                        this[fn] = _fnExternApiFunc(fn)
                    }
                }
                this.each(function() {
                    var o = {};
                    var oInit = len > 1 ? _fnExtend(o, options, true) : options;
                    var i = 0,
                        iLen, j, jLen, k, kLen;
                    var sId = this.getAttribute("id");
                    var bInitHandedOff = false;
                    var defaults = DataTable.defaults;
                    var $this = $(this);
                    if (this.nodeName.toLowerCase() != "table") {
                        _fnLog(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
                        return
                    }
                    _fnCompatOpts(defaults);
                    _fnCompatCols(defaults.column);
                    _fnCamelToHungarian(defaults, defaults, true);
                    _fnCamelToHungarian(defaults.column, defaults.column, true);
                    _fnCamelToHungarian(defaults, $.extend(oInit, $this.data()));
                    var allSettings = DataTable.settings;
                    for (i = 0, iLen = allSettings.length; i < iLen; i++) {
                        var s = allSettings[i];
                        if (s.nTable == this || s.nTHead.parentNode == this || s.nTFoot && s.nTFoot.parentNode == this) {
                            var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;
                            var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;
                            if (emptyInit || bRetrieve) {
                                return s.oInstance
                            } else if (bDestroy) {
                                s.oInstance.fnDestroy();
                                break
                            } else {
                                _fnLog(s, 0, "Cannot reinitialise DataTable", 3);
                                return
                            }
                        }
                        if (s.sTableId == this.id) {
                            allSettings.splice(i, 1);
                            break
                        }
                    }
                    if (sId === null || sId === "") {
                        sId = "DataTables_Table_" + DataTable.ext._unique++;
                        this.id = sId
                    }
                    var oSettings = $.extend(true, {}, DataTable.models.oSettings, {
                        sDestroyWidth: $this[0].style.width,
                        sInstance: sId,
                        sTableId: sId
                    });
                    oSettings.nTable = this;
                    oSettings.oApi = _that.internal;
                    oSettings.oInit = oInit;
                    allSettings.push(oSettings);
                    oSettings.oInstance = _that.length === 1 ? _that : $this.dataTable();
                    _fnCompatOpts(oInit);
                    if (oInit.oLanguage) {
                        _fnLanguageCompat(oInit.oLanguage)
                    }
                    if (oInit.aLengthMenu && !oInit.iDisplayLength) {
                        oInit.iDisplayLength = $.isArray(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0]
                    }
                    oInit = _fnExtend($.extend(true, {}, defaults), oInit);
                    _fnMap(oSettings.oFeatures, oInit, ["bPaginate", "bLengthChange", "bFilter", "bSort", "bSortMulti", "bInfo", "bProcessing", "bAutoWidth", "bSortClasses", "bServerSide", "bDeferRender"]);
                    _fnMap(oSettings, oInit, ["asStripeClasses", "ajax", "fnServerData", "fnFormatNumber", "sServerMethod", "aaSorting", "aaSortingFixed", "aLengthMenu", "sPaginationType", "sAjaxSource", "sAjaxDataProp", "iStateDuration", "sDom", "bSortCellsTop", "iTabIndex", "fnStateLoadCallback", "fnStateSaveCallback", "renderer", "searchDelay", "rowId", ["iCookieDuration", "iStateDuration"],
                        ["oSearch", "oPreviousSearch"],
                        ["aoSearchCols", "aoPreSearchCols"],
                        ["iDisplayLength", "_iDisplayLength"]
                    ]);
                    _fnMap(oSettings.oScroll, oInit, [
                        ["sScrollX", "sX"],
                        ["sScrollXInner", "sXInner"],
                        ["sScrollY", "sY"],
                        ["bScrollCollapse", "bCollapse"]
                    ]);
                    _fnMap(oSettings.oLanguage, oInit, "fnInfoCallback");
                    _fnCallbackReg(oSettings, "aoDrawCallback", oInit.fnDrawCallback, "user");
                    _fnCallbackReg(oSettings, "aoServerParams", oInit.fnServerParams, "user");
                    _fnCallbackReg(oSettings, "aoStateSaveParams", oInit.fnStateSaveParams, "user");
                    _fnCallbackReg(oSettings, "aoStateLoadParams", oInit.fnStateLoadParams, "user");
                    _fnCallbackReg(oSettings, "aoStateLoaded", oInit.fnStateLoaded, "user");
                    _fnCallbackReg(oSettings, "aoRowCallback", oInit.fnRowCallback, "user");
                    _fnCallbackReg(oSettings, "aoRowCreatedCallback", oInit.fnCreatedRow, "user");
                    _fnCallbackReg(oSettings, "aoHeaderCallback", oInit.fnHeaderCallback, "user");
                    _fnCallbackReg(oSettings, "aoFooterCallback", oInit.fnFooterCallback, "user");
                    _fnCallbackReg(oSettings, "aoInitComplete", oInit.fnInitComplete, "user");
                    _fnCallbackReg(oSettings, "aoPreDrawCallback", oInit.fnPreDrawCallback, "user");
                    oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);
                    _fnBrowserDetect(oSettings);
                    var oClasses = oSettings.oClasses;
                    $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);
                    $this.addClass(oClasses.sTable);
                    if (oSettings.iInitDisplayStart === undefined) {
                        oSettings.iInitDisplayStart = oInit.iDisplayStart;
                        oSettings._iDisplayStart = oInit.iDisplayStart
                    }
                    if (oInit.iDeferLoading !== null) {
                        oSettings.bDeferLoading = true;
                        var tmp = $.isArray(oInit.iDeferLoading);
                        oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
                        oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading
                    }
                    var oLanguage = oSettings.oLanguage;
                    $.extend(true, oLanguage, oInit.oLanguage);
                    if (oLanguage.sUrl) {
                        $.ajax({
                            dataType: "json",
                            url: oLanguage.sUrl,
                            success: function success(json) {
                                _fnLanguageCompat(json);
                                _fnCamelToHungarian(defaults.oLanguage, json);
                                $.extend(true, oLanguage, json);
                                _fnInitialise(oSettings)
                            },
                            error: function error() {
                                _fnInitialise(oSettings)
                            }
                        });
                        bInitHandedOff = true
                    }
                    if (oInit.asStripeClasses === null) {
                        oSettings.asStripeClasses = [oClasses.sStripeOdd, oClasses.sStripeEven]
                    }
                    var stripeClasses = oSettings.asStripeClasses;
                    var rowOne = $this.children("tbody").find("tr").eq(0);
                    if ($.inArray(true, $.map(stripeClasses, function(el, i) {
                            return rowOne.hasClass(el)
                        })) !== -1) {
                        $("tbody tr", this).removeClass(stripeClasses.join(" "));
                        oSettings.asDestroyStripes = stripeClasses.slice()
                    }
                    var anThs = [];
                    var aoColumnsInit;
                    var nThead = this.getElementsByTagName("thead");
                    if (nThead.length !== 0) {
                        _fnDetectHeader(oSettings.aoHeader, nThead[0]);
                        anThs = _fnGetUniqueThs(oSettings)
                    }
                    if (oInit.aoColumns === null) {
                        aoColumnsInit = [];
                        for (i = 0, iLen = anThs.length; i < iLen; i++) {
                            aoColumnsInit.push(null)
                        }
                    } else {
                        aoColumnsInit = oInit.aoColumns
                    }
                    for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {
                        _fnAddColumn(oSettings, anThs ? anThs[i] : null)
                    }
                    _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function(iCol, oDef) {
                        _fnColumnOptions(oSettings, iCol, oDef)
                    });
                    if (rowOne.length) {
                        var a = function a(cell, name) {
                            return cell.getAttribute("data-" + name) !== null ? name : null
                        };
                        $(rowOne[0]).children("th, td").each(function(i, cell) {
                            var col = oSettings.aoColumns[i];
                            if (col.mData === i) {
                                var sort = a(cell, "sort") || a(cell, "order");
                                var filter = a(cell, "filter") || a(cell, "search");
                                if (sort !== null || filter !== null) {
                                    col.mData = {
                                        _: i + ".display",
                                        sort: sort !== null ? i + ".@data-" + sort : undefined,
                                        type: sort !== null ? i + ".@data-" + sort : undefined,
                                        filter: filter !== null ? i + ".@data-" + filter : undefined
                                    };
                                    _fnColumnOptions(oSettings, i)
                                }
                            }
                        })
                    }
                    var features = oSettings.oFeatures;
                    var loadedInit = function loadedInit() {
                        if (oInit.aaSorting === undefined) {
                            var sorting = oSettings.aaSorting;
                            for (i = 0, iLen = sorting.length; i < iLen; i++) {
                                sorting[i][1] = oSettings.aoColumns[i].asSorting[0]
                            }
                        }
                        _fnSortingClasses(oSettings);
                        if (features.bSort) {
                            _fnCallbackReg(oSettings, "aoDrawCallback", function() {
                                if (oSettings.bSorted) {
                                    var aSort = _fnSortFlatten(oSettings);
                                    var sortedColumns = {};
                                    $.each(aSort, function(i, val) {
                                        sortedColumns[val.src] = val.dir
                                    });
                                    _fnCallbackFire(oSettings, null, "order", [oSettings, aSort, sortedColumns]);
                                    _fnSortAria(oSettings)
                                }
                            })
                        }
                        _fnCallbackReg(oSettings, "aoDrawCallback", function() {
                            if (oSettings.bSorted || _fnDataSource(oSettings) === "ssp" || features.bDeferRender) {
                                _fnSortingClasses(oSettings)
                            }
                        }, "sc");
                        var captions = $this.children("caption").each(function() {
                            this._captionSide = $(this).css("caption-side")
                        });
                        var thead = $this.children("thead");
                        if (thead.length === 0) {
                            thead = $("<thead/>").appendTo($this)
                        }
                        oSettings.nTHead = thead[0];
                        var tbody = $this.children("tbody");
                        if (tbody.length === 0) {
                            tbody = $("<tbody/>").appendTo($this)
                        }
                        oSettings.nTBody = tbody[0];
                        var tfoot = $this.children("tfoot");
                        if (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "")) {
                            tfoot = $("<tfoot/>").appendTo($this)
                        }
                        if (tfoot.length === 0 || tfoot.children().length === 0) {
                            $this.addClass(oClasses.sNoFooter)
                        } else if (tfoot.length > 0) {
                            oSettings.nTFoot = tfoot[0];
                            _fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot)
                        }
                        if (oInit.aaData) {
                            for (i = 0; i < oInit.aaData.length; i++) {
                                _fnAddData(oSettings, oInit.aaData[i])
                            }
                        } else if (oSettings.bDeferLoading || _fnDataSource(oSettings) == "dom") {
                            _fnAddTr(oSettings, $(oSettings.nTBody).children("tr"))
                        }
                        oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
                        oSettings.bInitialised = true;
                        if (bInitHandedOff === false) {
                            _fnInitialise(oSettings)
                        }
                    };
                    if (oInit.bStateSave) {
                        features.bStateSave = true;
                        _fnCallbackReg(oSettings, "aoDrawCallback", _fnSaveState, "state_save");
                        _fnLoadState(oSettings, oInit, loadedInit)
                    } else {
                        loadedInit()
                    }
                });
                _that = null;
                return this
            };
            var _ext;
            var _Api2;
            var _api_register;
            var _api_registerPlural;
            var _re_dic = {};
            var _re_new_lines = /[\r\n]/g;
            var _re_html = /<.*?>/g;
            var _re_date = /^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/;
            var _re_escape_regex = new RegExp("(\\" + ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^", "-"].join("|\\") + ")", "g");
            var _re_formatted_numeric = /[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfk]/gi;
            var _empty = function _empty(d) {
                return !d || d === true || d === "-" ? true : false
            };
            var _intVal = function _intVal(s) {
                var integer = parseInt(s, 10);
                return !isNaN(integer) && isFinite(s) ? integer : null
            };
            var _numToDecimal = function _numToDecimal(num, decimalPoint) {
                if (!_re_dic[decimalPoint]) {
                    _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), "g")
                }
                return typeof num === "string" && decimalPoint !== "." ? num.replace(/\./g, "").replace(_re_dic[decimalPoint], ".") : num
            };
            var _isNumber = function _isNumber(d, decimalPoint, formatted) {
                var strType = typeof d === "string";
                if (_empty(d)) {
                    return true
                }
                if (decimalPoint && strType) {
                    d = _numToDecimal(d, decimalPoint)
                }
                if (formatted && strType) {
                    d = d.replace(_re_formatted_numeric, "")
                }
                return !isNaN(parseFloat(d)) && isFinite(d)
            };
            var _isHtml = function _isHtml(d) {
                return _empty(d) || typeof d === "string"
            };
            var _htmlNumeric = function _htmlNumeric(d, decimalPoint, formatted) {
                if (_empty(d)) {
                    return true
                }
                var html = _isHtml(d);
                return !html ? null : _isNumber(_stripHtml(d), decimalPoint, formatted) ? true : null
            };
            var _pluck = function _pluck(a, prop, prop2) {
                var out = [];
                var i = 0,
                    ien = a.length;
                if (prop2 !== undefined) {
                    for (; i < ien; i++) {
                        if (a[i] && a[i][prop]) {
                            out.push(a[i][prop][prop2])
                        }
                    }
                } else {
                    for (; i < ien; i++) {
                        if (a[i]) {
                            out.push(a[i][prop])
                        }
                    }
                }
                return out
            };
            var _pluck_order = function _pluck_order(a, order, prop, prop2) {
                var out = [];
                var i = 0,
                    ien = order.length;
                if (prop2 !== undefined) {
                    for (; i < ien; i++) {
                        if (a[order[i]][prop]) {
                            out.push(a[order[i]][prop][prop2])
                        }
                    }
                } else {
                    for (; i < ien; i++) {
                        out.push(a[order[i]][prop])
                    }
                }
                return out
            };
            var _range = function _range(len, start) {
                var out = [];
                var end;
                if (start === undefined) {
                    start = 0;
                    end = len
                } else {
                    end = start;
                    start = len
                }
                for (var i = start; i < end; i++) {
                    out.push(i)
                }
                return out
            };
            var _removeEmpty = function _removeEmpty(a) {
                var out = [];
                for (var i = 0, ien = a.length; i < ien; i++) {
                    if (a[i]) {
                        out.push(a[i])
                    }
                }
                return out
            };
            var _stripHtml = function _stripHtml(d) {
                return d.replace(_re_html, "")
            };
            var _areAllUnique = function _areAllUnique(src) {
                if (src.length < 2) {
                    return true
                }
                var sorted = src.slice().sort();
                var last = sorted[0];
                for (var i = 1, ien = sorted.length; i < ien; i++) {
                    if (sorted[i] === last) {
                        return false
                    }
                    last = sorted[i]
                }
                return true
            };
            var _unique = function _unique(src) {
                if (_areAllUnique(src)) {
                    return src.slice()
                }
                var out = [],
                    val, i, ien = src.length,
                    j, k = 0;
                again: for (i = 0; i < ien; i++) {
                    val = src[i];
                    for (j = 0; j < k; j++) {
                        if (out[j] === val) {
                            continue again
                        }
                    }
                    out.push(val);
                    k++
                }
                return out
            };
            DataTable.util = {
                throttle: function throttle(fn, freq) {
                    var frequency = freq !== undefined ? freq : 200,
                        last, timer;
                    return function() {
                        var that = this,
                            now = +new Date,
                            args = arguments;
                        if (last && now < last + frequency) {
                            clearTimeout(timer);
                            timer = setTimeout(function() {
                                last = undefined;
                                fn.apply(that, args)
                            }, frequency)
                        } else {
                            last = now;
                            fn.apply(that, args)
                        }
                    }
                },
                escapeRegex: function escapeRegex(val) {
                    return val.replace(_re_escape_regex, "\\$1")
                }
            };

            function _fnHungarianMap(o) {
                var hungarian = "a aa ai ao as b fn i m o s ",
                    match, newKey, map = {};
                $.each(o, function(key, val) {
                    match = key.match(/^([^A-Z]+?)([A-Z])/);
                    if (match && hungarian.indexOf(match[1] + " ") !== -1) {
                        newKey = key.replace(match[0], match[2].toLowerCase());
                        map[newKey] = key;
                        if (match[1] === "o") {
                            _fnHungarianMap(o[key])
                        }
                    }
                });
                o._hungarianMap = map
            }

            function _fnCamelToHungarian(src, user, force) {
                if (!src._hungarianMap) {
                    _fnHungarianMap(src)
                }
                var hungarianKey;
                $.each(user, function(key, val) {
                    hungarianKey = src._hungarianMap[key];
                    if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {
                        if (hungarianKey.charAt(0) === "o") {
                            if (!user[hungarianKey]) {
                                user[hungarianKey] = {}
                            }
                            $.extend(true, user[hungarianKey], user[key]);
                            _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force)
                        } else {
                            user[hungarianKey] = user[key]
                        }
                    }
                })
            }

            function _fnLanguageCompat(lang) {
                var defaults = DataTable.defaults.oLanguage;
                var zeroRecords = lang.sZeroRecords;
                if (!lang.sEmptyTable && zeroRecords && defaults.sEmptyTable === "No data available in table") {
                    _fnMap(lang, lang, "sZeroRecords", "sEmptyTable")
                }
                if (!lang.sLoadingRecords && zeroRecords && defaults.sLoadingRecords === "Loading...") {
                    _fnMap(lang, lang, "sZeroRecords", "sLoadingRecords")
                }
                if (lang.sInfoThousands) {
                    lang.sThousands = lang.sInfoThousands
                }
                var decimal = lang.sDecimal;
                if (decimal) {
                    _addNumericSort(decimal)
                }
            }
            var _fnCompatMap = function _fnCompatMap(o, knew, old) {
                if (o[knew] !== undefined) {
                    o[old] = o[knew]
                }
            };

            function _fnCompatOpts(init) {
                _fnCompatMap(init, "ordering", "bSort");
                _fnCompatMap(init, "orderMulti", "bSortMulti");
                _fnCompatMap(init, "orderClasses", "bSortClasses");
                _fnCompatMap(init, "orderCellsTop", "bSortCellsTop");
                _fnCompatMap(init, "order", "aaSorting");
                _fnCompatMap(init, "orderFixed", "aaSortingFixed");
                _fnCompatMap(init, "paging", "bPaginate");
                _fnCompatMap(init, "pagingType", "sPaginationType");
                _fnCompatMap(init, "pageLength", "iDisplayLength");
                _fnCompatMap(init, "searching", "bFilter");
                if (typeof init.sScrollX === "boolean") {
                    init.sScrollX = init.sScrollX ? "100%" : ""
                }
                if (typeof init.scrollX === "boolean") {
                    init.scrollX = init.scrollX ? "100%" : ""
                }
                var searchCols = init.aoSearchCols;
                if (searchCols) {
                    for (var i = 0, ien = searchCols.length; i < ien; i++) {
                        if (searchCols[i]) {
                            _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i])
                        }
                    }
                }
            }

            function _fnCompatCols(init) {
                _fnCompatMap(init, "orderable", "bSortable");
                _fnCompatMap(init, "orderData", "aDataSort");
                _fnCompatMap(init, "orderSequence", "asSorting");
                _fnCompatMap(init, "orderDataType", "sortDataType");
                var dataSort = init.aDataSort;
                if (typeof dataSort === "number" && !$.isArray(dataSort)) {
                    init.aDataSort = [dataSort]
                }
            }

            function _fnBrowserDetect(settings) {
                if (!DataTable.__browser) {
                    var browser = {};
                    DataTable.__browser = browser;
                    var n = $("<div/>").css({
                        position: "fixed",
                        top: 0,
                        left: $(window).scrollLeft() * -1,
                        height: 1,
                        width: 1,
                        overflow: "hidden"
                    }).append($("<div/>").css({
                        position: "absolute",
                        top: 1,
                        left: 1,
                        width: 100,
                        overflow: "scroll"
                    }).append($("<div/>").css({
                        width: "100%",
                        height: 10
                    }))).appendTo("body");
                    var outer = n.children();
                    var inner = outer.children();
                    browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;
                    browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;
                    browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;
                    browser.bBounding = n[0].getBoundingClientRect().width ? true : false;
                    n.remove()
                }
                $.extend(settings.oBrowser, DataTable.__browser);
                settings.oScroll.iBarWidth = DataTable.__browser.barWidth
            }

            function _fnReduce(that, fn, init, start, end, inc) {
                var i = start,
                    value, isSet = false;
                if (init !== undefined) {
                    value = init;
                    isSet = true
                }
                while (i !== end) {
                    if (!that.hasOwnProperty(i)) {
                        continue
                    }
                    value = isSet ? fn(value, that[i], i, that) : that[i];
                    isSet = true;
                    i += inc
                }
                return value
            }

            function _fnAddColumn(oSettings, nTh) {
                var oDefaults = DataTable.defaults.column;
                var iCol = oSettings.aoColumns.length;
                var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {
                    nTh: nTh ? nTh : document.createElement("th"),
                    sTitle: oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : "",
                    aDataSort: oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
                    mData: oDefaults.mData ? oDefaults.mData : iCol,
                    idx: iCol
                });
                oSettings.aoColumns.push(oCol);
                var searchCols = oSettings.aoPreSearchCols;
                searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]);
                _fnColumnOptions(oSettings, iCol, $(nTh).data())
            }

            function _fnColumnOptions(oSettings, iCol, oOptions) {
                var oCol = oSettings.aoColumns[iCol];
                var oClasses = oSettings.oClasses;
                var th = $(oCol.nTh);
                if (!oCol.sWidthOrig) {
                    oCol.sWidthOrig = th.attr("width") || null;
                    var t = (th.attr("style") || "").match(/width:\s*(\d+[pxem%]+)/);
                    if (t) {
                        oCol.sWidthOrig = t[1]
                    }
                }
                if (oOptions !== undefined && oOptions !== null) {
                    _fnCompatCols(oOptions);
                    _fnCamelToHungarian(DataTable.defaults.column, oOptions);
                    if (oOptions.mDataProp !== undefined && !oOptions.mData) {
                        oOptions.mData = oOptions.mDataProp
                    }
                    if (oOptions.sType) {
                        oCol._sManualType = oOptions.sType
                    }
                    if (oOptions.className && !oOptions.sClass) {
                        oOptions.sClass = oOptions.className
                    }
                    if (oOptions.sClass) {
                        th.addClass(oOptions.sClass)
                    }
                    $.extend(oCol, oOptions);
                    _fnMap(oCol, oOptions, "sWidth", "sWidthOrig");
                    if (oOptions.iDataSort !== undefined) {
                        oCol.aDataSort = [oOptions.iDataSort]
                    }
                    _fnMap(oCol, oOptions, "aDataSort")
                }
                var mDataSrc = oCol.mData;
                var mData = _fnGetObjectDataFn(mDataSrc);
                var mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;
                var attrTest = function attrTest(src) {
                    return typeof src === "string" && src.indexOf("@") !== -1
                };
                oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter));
                oCol._setter = null;
                oCol.fnGetData = function(rowData, type, meta) {
                    var innerData = mData(rowData, type, undefined, meta);
                    return mRender && type ? mRender(innerData, type, rowData, meta) : innerData
                };
                oCol.fnSetData = function(rowData, val, meta) {
                    return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta)
                };
                if (typeof mDataSrc !== "number") {
                    oSettings._rowReadObject = true
                }
                if (!oSettings.oFeatures.bSort) {
                    oCol.bSortable = false;
                    th.addClass(oClasses.sSortableNone)
                }
                var bAsc = $.inArray("asc", oCol.asSorting) !== -1;
                var bDesc = $.inArray("desc", oCol.asSorting) !== -1;
                if (!oCol.bSortable || !bAsc && !bDesc) {
                    oCol.sSortingClass = oClasses.sSortableNone;
                    oCol.sSortingClassJUI = ""
                } else if (bAsc && !bDesc) {
                    oCol.sSortingClass = oClasses.sSortableAsc;
                    oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed
                } else if (!bAsc && bDesc) {
                    oCol.sSortingClass = oClasses.sSortableDesc;
                    oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed
                } else {
                    oCol.sSortingClass = oClasses.sSortable;
                    oCol.sSortingClassJUI = oClasses.sSortJUI
                }
            }

            function _fnAdjustColumnSizing(settings) {
                if (settings.oFeatures.bAutoWidth !== false) {
                    var columns = settings.aoColumns;
                    _fnCalculateColumnWidths(settings);
                    for (var i = 0, iLen = columns.length; i < iLen; i++) {
                        columns[i].nTh.style.width = columns[i].sWidth
                    }
                }
                var scroll = settings.oScroll;
                if (scroll.sY !== "" || scroll.sX !== "") {
                    _fnScrollDraw(settings)
                }
                _fnCallbackFire(settings, null, "column-sizing", [settings])
            }

            function _fnVisibleToColumnIndex(oSettings, iMatch) {
                var aiVis = _fnGetColumns(oSettings, "bVisible");
                return typeof aiVis[iMatch] === "number" ? aiVis[iMatch] : null
            }

            function _fnColumnIndexToVisible(oSettings, iMatch) {
                var aiVis = _fnGetColumns(oSettings, "bVisible");
                var iPos = $.inArray(iMatch, aiVis);
                return iPos !== -1 ? iPos : null
            }

            function _fnVisbleColumns(oSettings) {
                var vis = 0;
                $.each(oSettings.aoColumns, function(i, col) {
                    if (col.bVisible && $(col.nTh).css("display") !== "none") {
                        vis++
                    }
                });
                return vis
            }

            function _fnGetColumns(oSettings, sParam) {
                var a = [];
                $.map(oSettings.aoColumns, function(val, i) {
                    if (val[sParam]) {
                        a.push(i)
                    }
                });
                return a
            }

            function _fnColumnTypes(settings) {
                var columns = settings.aoColumns;
                var data = settings.aoData;
                var types = DataTable.ext.type.detect;
                var i, ien, j, jen, k, ken;
                var col, cell, detectedType, cache;
                for (i = 0, ien = columns.length; i < ien; i++) {
                    col = columns[i];
                    cache = [];
                    if (!col.sType && col._sManualType) {
                        col.sType = col._sManualType
                    } else if (!col.sType) {
                        for (j = 0, jen = types.length; j < jen; j++) {
                            for (k = 0, ken = data.length; k < ken; k++) {
                                if (cache[k] === undefined) {
                                    cache[k] = _fnGetCellData(settings, k, i, "type")
                                }
                                detectedType = types[j](cache[k], settings);
                                if (!detectedType && j !== types.length - 1) {
                                    break
                                }
                                if (detectedType === "html") {
                                    break
                                }
                            }
                            if (detectedType) {
                                col.sType = detectedType;
                                break
                            }
                        }
                        if (!col.sType) {
                            col.sType = "string"
                        }
                    }
                }
            }

            function _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn) {
                var i, iLen, j, jLen, k, kLen, def;
                var columns = oSettings.aoColumns;
                if (aoColDefs) {
                    for (i = aoColDefs.length - 1; i >= 0; i--) {
                        def = aoColDefs[i];
                        var aTargets = def.targets !== undefined ? def.targets : def.aTargets;
                        if (!$.isArray(aTargets)) {
                            aTargets = [aTargets]
                        }
                        for (j = 0, jLen = aTargets.length; j < jLen; j++) {
                            if (typeof aTargets[j] === "number" && aTargets[j] >= 0) {
                                while (columns.length <= aTargets[j]) {
                                    _fnAddColumn(oSettings)
                                }
                                fn(aTargets[j], def)
                            } else if (typeof aTargets[j] === "number" && aTargets[j] < 0) {
                                fn(columns.length + aTargets[j], def)
                            } else if (typeof aTargets[j] === "string") {
                                for (k = 0, kLen = columns.length; k < kLen; k++) {
                                    if (aTargets[j] == "_all" || $(columns[k].nTh).hasClass(aTargets[j])) {
                                        fn(k, def)
                                    }
                                }
                            }
                        }
                    }
                }
                if (aoCols) {
                    for (i = 0, iLen = aoCols.length; i < iLen; i++) {
                        fn(i, aoCols[i])
                    }
                }
            }

            function _fnAddData(oSettings, aDataIn, nTr, anTds) {
                var iRow = oSettings.aoData.length;
                var oData = $.extend(true, {}, DataTable.models.oRow, {
                    src: nTr ? "dom" : "data",
                    idx: iRow
                });
                oData._aData = aDataIn;
                oSettings.aoData.push(oData);
                var nTd, sThisType;
                var columns = oSettings.aoColumns;
                for (var i = 0, iLen = columns.length; i < iLen; i++) {
                    columns[i].sType = null
                }
                oSettings.aiDisplayMaster.push(iRow);
                var id = oSettings.rowIdFn(aDataIn);
                if (id !== undefined) {
                    oSettings.aIds[id] = oData
                }
                if (nTr || !oSettings.oFeatures.bDeferRender) {
                    _fnCreateTr(oSettings, iRow, nTr, anTds)
                }
                return iRow
            }

            function _fnAddTr(settings, trs) {
                var row;
                if (!(trs instanceof $)) {
                    trs = $(trs)
                }
                return trs.map(function(i, el) {
                    row = _fnGetRowElements(settings, el);
                    return _fnAddData(settings, row.data, el, row.cells)
                })
            }

            function _fnNodeToDataIndex(oSettings, n) {
                return n._DT_RowIndex !== undefined ? n._DT_RowIndex : null
            }

            function _fnNodeToColumnIndex(oSettings, iRow, n) {
                return $.inArray(n, oSettings.aoData[iRow].anCells)
            }

            function _fnGetCellData(settings, rowIdx, colIdx, type) {
                var draw = settings.iDraw;
                var col = settings.aoColumns[colIdx];
                var rowData = settings.aoData[rowIdx]._aData;
                var defaultContent = col.sDefaultContent;
                var cellData = col.fnGetData(rowData, type, {
                    settings: settings,
                    row: rowIdx,
                    col: colIdx
                });
                if (cellData === undefined) {
                    if (settings.iDrawError != draw && defaultContent === null) {
                        _fnLog(settings, 0, "Requested unknown parameter " + (typeof col.mData == "function" ? "{function}" : "'" + col.mData + "'") + " for row " + rowIdx + ", column " + colIdx, 4);
                        settings.iDrawError = draw
                    }
                    return defaultContent
                }
                if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {
                    cellData = defaultContent
                } else if (typeof cellData === "function") {
                    return cellData.call(rowData)
                }
                if (cellData === null && type == "display") {
                    return ""
                }
                return cellData
            }

            function _fnSetCellData(settings, rowIdx, colIdx, val) {
                var col = settings.aoColumns[colIdx];
                var rowData = settings.aoData[rowIdx]._aData;
                col.fnSetData(rowData, val, {
                    settings: settings,
                    row: rowIdx,
                    col: colIdx
                })
            }
            var __reArray = /\[.*?\]$/;
            var __reFn = /\(\)$/;

            function _fnSplitObjNotation(str) {
                return $.map(str.match(/(\\.|[^\.])+/g) || [""], function(s) {
                    return s.replace(/\\\./g, ".")
                })
            }

            function _fnGetObjectDataFn(mSource) {
                if ($.isPlainObject(mSource)) {
                    var o = {};
                    $.each(mSource, function(key, val) {
                        if (val) {
                            o[key] = _fnGetObjectDataFn(val)
                        }
                    });
                    return function(data, type, row, meta) {
                        var t = o[type] || o._;
                        return t !== undefined ? t(data, type, row, meta) : data
                    }
                } else if (mSource === null) {
                    return function(data) {
                        return data
                    }
                } else if (typeof mSource === "function") {
                    return function(data, type, row, meta) {
                        return mSource(data, type, row, meta)
                    }
                } else if (typeof mSource === "string" && (mSource.indexOf(".") !== -1 || mSource.indexOf("[") !== -1 || mSource.indexOf("(") !== -1)) {
                    var fetchData = function fetchData(data, type, src) {
                        var arrayNotation, funcNotation, out, innerSrc;
                        if (src !== "") {
                            var a = _fnSplitObjNotation(src);
                            for (var i = 0, iLen = a.length; i < iLen; i++) {
                                arrayNotation = a[i].match(__reArray);
                                funcNotation = a[i].match(__reFn);
                                if (arrayNotation) {
                                    a[i] = a[i].replace(__reArray, "");
                                    if (a[i] !== "") {
                                        data = data[a[i]]
                                    }
                                    out = [];
                                    a.splice(0, i + 1);
                                    innerSrc = a.join(".");
                                    if ($.isArray(data)) {
                                        for (var j = 0, jLen = data.length; j < jLen; j++) {
                                            out.push(fetchData(data[j], type, innerSrc))
                                        }
                                    }
                                    var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);
                                    data = join === "" ? out : out.join(join);
                                    break
                                } else if (funcNotation) {
                                    a[i] = a[i].replace(__reFn, "");
                                    data = data[a[i]]();
                                    continue
                                }
                                if (data === null || data[a[i]] === undefined) {
                                    return undefined
                                }
                                data = data[a[i]]
                            }
                        }
                        return data
                    };
                    return function(data, type) {
                        return fetchData(data, type, mSource)
                    }
                } else {
                    return function(data, type) {
                        return data[mSource]
                    }
                }
            }

            function _fnSetObjectDataFn(mSource) {
                if ($.isPlainObject(mSource)) {
                    return _fnSetObjectDataFn(mSource._)
                } else if (mSource === null) {
                    return function() {}
                } else if (typeof mSource === "function") {
                    return function(data, val, meta) {
                        mSource(data, "set", val, meta)
                    }
                } else if (typeof mSource === "string" && (mSource.indexOf(".") !== -1 || mSource.indexOf("[") !== -1 || mSource.indexOf("(") !== -1)) {
                    var setData = function setData(data, val, src) {
                        var a = _fnSplitObjNotation(src),
                            b;
                        var aLast = a[a.length - 1];
                        var arrayNotation, funcNotation, o, innerSrc;
                        for (var i = 0, iLen = a.length - 1; i < iLen; i++) {
                            arrayNotation = a[i].match(__reArray);
                            funcNotation = a[i].match(__reFn);
                            if (arrayNotation) {
                                a[i] = a[i].replace(__reArray, "");
                                data[a[i]] = [];
                                b = a.slice();
                                b.splice(0, i + 1);
                                innerSrc = b.join(".");
                                if ($.isArray(val)) {
                                    for (var j = 0, jLen = val.length; j < jLen; j++) {
                                        o = {};
                                        setData(o, val[j], innerSrc);
                                        data[a[i]].push(o)
                                    }
                                } else {
                                    data[a[i]] = val
                                }
                                return
                            } else if (funcNotation) {
                                a[i] = a[i].replace(__reFn, "");
                                data = data[a[i]](val)
                            }
                            if (data[a[i]] === null || data[a[i]] === undefined) {
                                data[a[i]] = {}
                            }
                            data = data[a[i]]
                        }
                        if (aLast.match(__reFn)) {
                            data = data[aLast.replace(__reFn, "")](val)
                        } else {
                            data[aLast.replace(__reArray, "")] = val
                        }
                    };
                    return function(data, val) {
                        return setData(data, val, mSource)
                    }
                } else {
                    return function(data, val) {
                        data[mSource] = val
                    }
                }
            }

            function _fnGetDataMaster(settings) {
                return _pluck(settings.aoData, "_aData")
            }

            function _fnClearTable(settings) {
                settings.aoData.length = 0;
                settings.aiDisplayMaster.length = 0;
                settings.aiDisplay.length = 0;
                settings.aIds = {}
            }

            function _fnDeleteIndex(a, iTarget, splice) {
                var iTargetIndex = -1;
                for (var i = 0, iLen = a.length; i < iLen; i++) {
                    if (a[i] == iTarget) {
                        iTargetIndex = i
                    } else if (a[i] > iTarget) {
                        a[i]--
                    }
                }
                if (iTargetIndex != -1 && splice === undefined) {
                    a.splice(iTargetIndex, 1)
                }
            }

            function _fnInvalidate(settings, rowIdx, src, colIdx) {
                var row = settings.aoData[rowIdx];
                var i, ien;
                var cellWrite = function cellWrite(cell, col) {
                    while (cell.childNodes.length) {
                        cell.removeChild(cell.firstChild)
                    }
                    cell.innerHTML = _fnGetCellData(settings, rowIdx, col, "display")
                };
                if (src === "dom" || (!src || src === "auto") && row.src === "dom") {
                    row._aData = _fnGetRowElements(settings, row, colIdx, colIdx === undefined ? undefined : row._aData).data
                } else {
                    var cells = row.anCells;
                    if (cells) {
                        if (colIdx !== undefined) {
                            cellWrite(cells[colIdx], colIdx)
                        } else {
                            for (i = 0, ien = cells.length; i < ien; i++) {
                                cellWrite(cells[i], i)
                            }
                        }
                    }
                }
                row._aSortData = null;
                row._aFilterData = null;
                var cols = settings.aoColumns;
                if (colIdx !== undefined) {
                    cols[colIdx].sType = null
                } else {
                    for (i = 0, ien = cols.length; i < ien; i++) {
                        cols[i].sType = null
                    }
                    _fnRowAttributes(settings, row)
                }
            }

            function _fnGetRowElements(settings, row, colIdx, d) {
                var tds = [],
                    td = row.firstChild,
                    name, col, o, i = 0,
                    contents, columns = settings.aoColumns,
                    objectRead = settings._rowReadObject;
                d = d !== undefined ? d : objectRead ? {} : [];
                var attr = function attr(str, td) {
                    if (typeof str === "string") {
                        var idx = str.indexOf("@");
                        if (idx !== -1) {
                            var attr = str.substring(idx + 1);
                            var setter = _fnSetObjectDataFn(str);
                            setter(d, td.getAttribute(attr))
                        }
                    }
                };
                var cellProcess = function cellProcess(cell) {
                    if (colIdx === undefined || colIdx === i) {
                        col = columns[i];
                        contents = $.trim(cell.innerHTML);
                        if (col && col._bAttrSrc) {
                            var setter = _fnSetObjectDataFn(col.mData._);
                            setter(d, contents);
                            attr(col.mData.sort, cell);
                            attr(col.mData.type, cell);
                            attr(col.mData.filter, cell)
                        } else {
                            if (objectRead) {
                                if (!col._setter) {
                                    col._setter = _fnSetObjectDataFn(col.mData)
                                }
                                col._setter(d, contents)
                            } else {
                                d[i] = contents
                            }
                        }
                    }
                    i++
                };
                if (td) {
                    while (td) {
                        name = td.nodeName.toUpperCase();
                        if (name == "TD" || name == "TH") {
                            cellProcess(td);
                            tds.push(td)
                        }
                        td = td.nextSibling
                    }
                } else {
                    tds = row.anCells;
                    for (var j = 0, jen = tds.length; j < jen; j++) {
                        cellProcess(tds[j])
                    }
                }
                var rowNode = row.firstChild ? row : row.nTr;
                if (rowNode) {
                    var id = rowNode.getAttribute("id");
                    if (id) {
                        _fnSetObjectDataFn(settings.rowId)(d, id)
                    }
                }
                return {
                    data: d,
                    cells: tds
                }
            }

            function _fnCreateTr(oSettings, iRow, nTrIn, anTds) {
                var row = oSettings.aoData[iRow],
                    rowData = row._aData,
                    cells = [],
                    nTr, nTd, oCol, i, iLen;
                if (row.nTr === null) {
                    nTr = nTrIn || document.createElement("tr");
                    row.nTr = nTr;
                    row.anCells = cells;
                    nTr._DT_RowIndex = iRow;
                    _fnRowAttributes(oSettings, row);
                    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {
                        oCol = oSettings.aoColumns[i];
                        nTd = nTrIn ? anTds[i] : document.createElement(oCol.sCellType);
                        nTd._DT_CellIndex = {
                            row: iRow,
                            column: i
                        };
                        cells.push(nTd);
                        if ((!nTrIn || oCol.mRender || oCol.mData !== i) && (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + ".display")) {
                            nTd.innerHTML = _fnGetCellData(oSettings, iRow, i, "display")
                        }
                        if (oCol.sClass) {
                            nTd.className += " " + oCol.sClass
                        }
                        if (oCol.bVisible && !nTrIn) {
                            nTr.appendChild(nTd)
                        } else if (!oCol.bVisible && nTrIn) {
                            nTd.parentNode.removeChild(nTd)
                        }
                        if (oCol.fnCreatedCell) {
                            oCol.fnCreatedCell.call(oSettings.oInstance, nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i)
                        }
                    }
                    _fnCallbackFire(oSettings, "aoRowCreatedCallback", null, [nTr, rowData, iRow])
                }
                row.nTr.setAttribute("role", "row")
            }

            function _fnRowAttributes(settings, row) {
                var tr = row.nTr;
                var data = row._aData;
                if (tr) {
                    var id = settings.rowIdFn(data);
                    if (id) {
                        tr.id = id
                    }
                    if (data.DT_RowClass) {
                        var a = data.DT_RowClass.split(" ");
                        row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a)) : a;
                        $(tr).removeClass(row.__rowc.join(" ")).addClass(data.DT_RowClass)
                    }
                    if (data.DT_RowAttr) {
                        $(tr).attr(data.DT_RowAttr)
                    }
                    if (data.DT_RowData) {
                        $(tr).data(data.DT_RowData)
                    }
                }
            }

            function _fnBuildHead(oSettings) {
                var i, ien, cell, row, column;
                var thead = oSettings.nTHead;
                var tfoot = oSettings.nTFoot;
                var createHeader = $("th, td", thead).length === 0;
                var classes = oSettings.oClasses;
                var columns = oSettings.aoColumns;
                if (createHeader) {
                    row = $("<tr/>").appendTo(thead)
                }
                for (i = 0, ien = columns.length; i < ien; i++) {
                    column = columns[i];
                    cell = $(column.nTh).addClass(column.sClass);
                    if (createHeader) {
                        cell.appendTo(row)
                    }
                    if (oSettings.oFeatures.bSort) {
                        cell.addClass(column.sSortingClass);
                        if (column.bSortable !== false) {
                            cell.attr("tabindex", oSettings.iTabIndex).attr("aria-controls", oSettings.sTableId);
                            _fnSortAttachListener(oSettings, column.nTh, i)
                        }
                    }
                    if (column.sTitle != cell[0].innerHTML) {
                        cell.html(column.sTitle)
                    }
                    _fnRenderer(oSettings, "header")(oSettings, cell, column, classes)
                }
                if (createHeader) {
                    _fnDetectHeader(oSettings.aoHeader, thead)
                }
                $(thead).find(">tr").attr("role", "row");
                $(thead).find(">tr>th, >tr>td").addClass(classes.sHeaderTH);
                $(tfoot).find(">tr>th, >tr>td").addClass(classes.sFooterTH);
                if (tfoot !== null) {
                    var cells = oSettings.aoFooter[0];
                    for (i = 0, ien = cells.length; i < ien; i++) {
                        column = columns[i];
                        column.nTf = cells[i].cell;
                        if (column.sClass) {
                            $(column.nTf).addClass(column.sClass)
                        }
                    }
                }
            }

            function _fnDrawHead(oSettings, aoSource, bIncludeHidden) {
                var i, iLen, j, jLen, k, kLen, n, nLocalTr;
                var aoLocal = [];
                var aApplied = [];
                var iColumns = oSettings.aoColumns.length;
                var iRowspan, iColspan;
                if (!aoSource) {
                    return
                }
                if (bIncludeHidden === undefined) {
                    bIncludeHidden = false
                }
                for (i = 0, iLen = aoSource.length; i < iLen; i++) {
                    aoLocal[i] = aoSource[i].slice();
                    aoLocal[i].nTr = aoSource[i].nTr;
                    for (j = iColumns - 1; j >= 0; j--) {
                        if (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {
                            aoLocal[i].splice(j, 1)
                        }
                    }
                    aApplied.push([])
                }
                for (i = 0, iLen = aoLocal.length; i < iLen; i++) {
                    nLocalTr = aoLocal[i].nTr;
                    if (nLocalTr) {
                        while (n = nLocalTr.firstChild) {
                            nLocalTr.removeChild(n)
                        }
                    }
                    for (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {
                        iRowspan = 1;
                        iColspan = 1;
                        if (aApplied[i][j] === undefined) {
                            nLocalTr.appendChild(aoLocal[i][j].cell);
                            aApplied[i][j] = 1;
                            while (aoLocal[i + iRowspan] !== undefined && aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {
                                aApplied[i + iRowspan][j] = 1;
                                iRowspan++
                            }
                            while (aoLocal[i][j + iColspan] !== undefined && aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {
                                for (k = 0; k < iRowspan; k++) {
                                    aApplied[i + k][j + iColspan] = 1
                                }
                                iColspan++
                            }
                            $(aoLocal[i][j].cell).attr("rowspan", iRowspan).attr("colspan", iColspan)
                        }
                    }
                }
            }

            function _fnDraw(oSettings) {
                var aPreDraw = _fnCallbackFire(oSettings, "aoPreDrawCallback", "preDraw", [oSettings]);
                if ($.inArray(false, aPreDraw) !== -1) {
                    _fnProcessingDisplay(oSettings, false);
                    return
                }
                var i, iLen, n;
                var anRows = [];
                var iRowCount = 0;
                var asStripeClasses = oSettings.asStripeClasses;
                var iStripes = asStripeClasses.length;
                var iOpenRows = oSettings.aoOpenRows.length;
                var oLang = oSettings.oLanguage;
                var iInitDisplayStart = oSettings.iInitDisplayStart;
                var bServerSide = _fnDataSource(oSettings) == "ssp";
                var aiDisplay = oSettings.aiDisplay;
                oSettings.bDrawing = true;
                if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {
                    oSettings._iDisplayStart = bServerSide ? iInitDisplayStart : iInitDisplayStart >= oSettings.fnRecordsDisplay() ? 0 : iInitDisplayStart;
                    oSettings.iInitDisplayStart = -1
                }
                var iDisplayStart = oSettings._iDisplayStart;
                var iDisplayEnd = oSettings.fnDisplayEnd();
                if (oSettings.bDeferLoading) {
                    oSettings.bDeferLoading = false;
                    oSettings.iDraw++;
                    _fnProcessingDisplay(oSettings, false)
                } else if (!bServerSide) {
                    oSettings.iDraw++
                } else if (!oSettings.bDestroying && !_fnAjaxUpdate(oSettings)) {
                    return
                }
                if (aiDisplay.length !== 0) {
                    var iStart = bServerSide ? 0 : iDisplayStart;
                    var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;
                    for (var j = iStart; j < iEnd; j++) {
                        var iDataIndex = aiDisplay[j];
                        var aoData = oSettings.aoData[iDataIndex];
                        if (aoData.nTr === null) {
                            _fnCreateTr(oSettings, iDataIndex)
                        }
                        var nRow = aoData.nTr;
                        if (iStripes !== 0) {
                            var sStripe = asStripeClasses[iRowCount % iStripes];
                            if (aoData._sRowStripe != sStripe) {
                                $(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);
                                aoData._sRowStripe = sStripe
                            }
                        }
                        _fnCallbackFire(oSettings, "aoRowCallback", null, [nRow, aoData._aData, iRowCount, j]);
                        anRows.push(nRow);
                        iRowCount++
                    }
                } else {
                    var sZero = oLang.sZeroRecords;
                    if (oSettings.iDraw == 1 && _fnDataSource(oSettings) == "ajax") {
                        sZero = oLang.sLoadingRecords
                    } else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {
                        sZero = oLang.sEmptyTable
                    }
                    anRows[0] = $("<tr/>", {
                        class: iStripes ? asStripeClasses[0] : ""
                    }).append($("<td />", {
                        valign: "top",
                        colSpan: _fnVisbleColumns(oSettings),
                        class: oSettings.oClasses.sRowEmpty
                    }).html(sZero))[0]
                }
                _fnCallbackFire(oSettings, "aoHeaderCallback", "header", [$(oSettings.nTHead).children("tr")[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);
                _fnCallbackFire(oSettings, "aoFooterCallback", "footer", [$(oSettings.nTFoot).children("tr")[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);
                var body = $(oSettings.nTBody);
                body.children().detach();
                body.append($(anRows));
                _fnCallbackFire(oSettings, "aoDrawCallback", "draw", [oSettings]);
                oSettings.bSorted = false;
                oSettings.bFiltered = false;
                oSettings.bDrawing = false
            }

            function _fnReDraw(settings, holdPosition) {
                var features = settings.oFeatures,
                    sort = features.bSort,
                    filter = features.bFilter;
                if (sort) {
                    _fnSort(settings)
                }
                if (filter) {
                    _fnFilterComplete(settings, settings.oPreviousSearch)
                } else {
                    settings.aiDisplay = settings.aiDisplayMaster.slice()
                }
                if (holdPosition !== true) {
                    settings._iDisplayStart = 0
                }
                settings._drawHold = holdPosition;
                _fnDraw(settings);
                settings._drawHold = false
            }

            function _fnAddOptionsHtml(oSettings) {
                var classes = oSettings.oClasses;
                var table = $(oSettings.nTable);
                var holding = $("<div/>").insertBefore(table);
                var features = oSettings.oFeatures;
                var insert = $("<div/>", {
                    id: oSettings.sTableId + "_wrapper",
                    class: classes.sWrapper + (oSettings.nTFoot ? "" : " " + classes.sNoFooter)
                });
                oSettings.nHolding = holding[0];
                oSettings.nTableWrapper = insert[0];
                oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;
                var aDom = oSettings.sDom.split("");
                var featureNode, cOption, nNewNode, cNext, sAttr, j;
                for (var i = 0; i < aDom.length; i++) {
                    featureNode = null;
                    cOption = aDom[i];
                    if (cOption == "<") {
                        nNewNode = $("<div/>")[0];
                        cNext = aDom[i + 1];
                        if (cNext == "'" || cNext == '"') {
                            sAttr = "";
                            j = 2;
                            while (aDom[i + j] != cNext) {
                                sAttr += aDom[i + j];
                                j++
                            }
                            if (sAttr == "H") {
                                sAttr = classes.sJUIHeader
                            } else if (sAttr == "F") {
                                sAttr = classes.sJUIFooter
                            }
                            if (sAttr.indexOf(".") != -1) {
                                var aSplit = sAttr.split(".");
                                nNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);
                                nNewNode.className = aSplit[1]
                            } else if (sAttr.charAt(0) == "#") {
                                nNewNode.id = sAttr.substr(1, sAttr.length - 1)
                            } else {
                                nNewNode.className = sAttr
                            }
                            i += j
                        }
                        insert.append(nNewNode);
                        insert = $(nNewNode)
                    } else if (cOption == ">") {
                        insert = insert.parent()
                    } else if (cOption == "l" && features.bPaginate && features.bLengthChange) {
                        featureNode = _fnFeatureHtmlLength(oSettings)
                    } else if (cOption == "f" && features.bFilter) {
                        featureNode = _fnFeatureHtmlFilter(oSettings)
                    } else if (cOption == "r" && features.bProcessing) {
                        featureNode = _fnFeatureHtmlProcessing(oSettings)
                    } else if (cOption == "t") {
                        featureNode = _fnFeatureHtmlTable(oSettings)
                    } else if (cOption == "i" && features.bInfo) {
                        featureNode = _fnFeatureHtmlInfo(oSettings)
                    } else if (cOption == "p" && features.bPaginate) {
                        featureNode = _fnFeatureHtmlPaginate(oSettings)
                    } else if (DataTable.ext.feature.length !== 0) {
                        var aoFeatures = DataTable.ext.feature;
                        for (var k = 0, kLen = aoFeatures.length; k < kLen; k++) {
                            if (cOption == aoFeatures[k].cFeature) {
                                featureNode = aoFeatures[k].fnInit(oSettings);
                                break
                            }
                        }
                    }
                    if (featureNode) {
                        var aanFeatures = oSettings.aanFeatures;
                        if (!aanFeatures[cOption]) {
                            aanFeatures[cOption] = []
                        }
                        aanFeatures[cOption].push(featureNode);
                        insert.append(featureNode)
                    }
                }
                holding.replaceWith(insert);
                oSettings.nHolding = null
            }

            function _fnDetectHeader(aLayout, nThead) {
                var nTrs = $(nThead).children("tr");
                var nTr, nCell;
                var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
                var bUnique;
                var fnShiftCol = function fnShiftCol(a, i, j) {
                    var k = a[i];
                    while (k[j]) {
                        j++
                    }
                    return j
                };
                aLayout.splice(0, aLayout.length);
                for (i = 0, iLen = nTrs.length; i < iLen; i++) {
                    aLayout.push([])
                }
                for (i = 0, iLen = nTrs.length; i < iLen; i++) {
                    nTr = nTrs[i];
                    iColumn = 0;
                    nCell = nTr.firstChild;
                    while (nCell) {
                        if (nCell.nodeName.toUpperCase() == "TD" || nCell.nodeName.toUpperCase() == "TH") {
                            iColspan = nCell.getAttribute("colspan") * 1;
                            iRowspan = nCell.getAttribute("rowspan") * 1;
                            iColspan = !iColspan || iColspan === 0 || iColspan === 1 ? 1 : iColspan;
                            iRowspan = !iRowspan || iRowspan === 0 || iRowspan === 1 ? 1 : iRowspan;
                            iColShifted = fnShiftCol(aLayout, i, iColumn);
                            bUnique = iColspan === 1 ? true : false;
                            for (l = 0; l < iColspan; l++) {
                                for (k = 0; k < iRowspan; k++) {
                                    aLayout[i + k][iColShifted + l] = {
                                        cell: nCell,
                                        unique: bUnique
                                    };
                                    aLayout[i + k].nTr = nTr
                                }
                            }
                        }
                        nCell = nCell.nextSibling
                    }
                }
            }

            function _fnGetUniqueThs(oSettings, nHeader, aLayout) {
                var aReturn = [];
                if (!aLayout) {
                    aLayout = oSettings.aoHeader;
                    if (nHeader) {
                        aLayout = [];
                        _fnDetectHeader(aLayout, nHeader)
                    }
                }
                for (var i = 0, iLen = aLayout.length; i < iLen; i++) {
                    for (var j = 0, jLen = aLayout[i].length; j < jLen; j++) {
                        if (aLayout[i][j].unique && (!aReturn[j] || !oSettings.bSortCellsTop)) {
                            aReturn[j] = aLayout[i][j].cell
                        }
                    }
                }
                return aReturn
            }

            function _fnBuildAjax(oSettings, data, fn) {
                _fnCallbackFire(oSettings, "aoServerParams", "serverParams", [data]);
                if (data && $.isArray(data)) {
                    var tmp = {};
                    var rbracket = /(.*?)\[\]$/;
                    $.each(data, function(key, val) {
                        var match = val.name.match(rbracket);
                        if (match) {
                            var name = match[0];
                            if (!tmp[name]) {
                                tmp[name] = []
                            }
                            tmp[name].push(val.value)
                        } else {
                            tmp[val.name] = val.value
                        }
                    });
                    data = tmp
                }
                var ajaxData;
                var ajax = oSettings.ajax;
                var instance = oSettings.oInstance;
                var callback = function callback(json) {
                    _fnCallbackFire(oSettings, null, "xhr", [oSettings, json, oSettings.jqXHR]);
                    fn(json)
                };
                if ($.isPlainObject(ajax) && ajax.data) {
                    ajaxData = ajax.data;
                    var newData = $.isFunction(ajaxData) ? ajaxData(data, oSettings) : ajaxData;
                    data = $.isFunction(ajaxData) && newData ? newData : $.extend(true, data, newData);
                    delete ajax.data
                }
                var baseAjax = {
                    data: data,
                    success: function success(json) {
                        var error = json.error || json.sError;
                        if (error) {
                            _fnLog(oSettings, 0, error)
                        }
                        oSettings.json = json;
                        callback(json)
                    },
                    dataType: "json",
                    cache: false,
                    type: oSettings.sServerMethod,
                    error: function error(xhr, _error, thrown) {
                        var ret = _fnCallbackFire(oSettings, null, "xhr", [oSettings, null, oSettings.jqXHR]);
                        if ($.inArray(true, ret) === -1) {
                            if (_error == "parsererror") {
                                _fnLog(oSettings, 0, "Invalid JSON response", 1)
                            } else if (xhr.readyState === 4) {
                                _fnLog(oSettings, 0, "Ajax error", 7)
                            }
                        }
                        _fnProcessingDisplay(oSettings, false)
                    }
                };
                oSettings.oAjaxData = data;
                _fnCallbackFire(oSettings, null, "preXhr", [oSettings, data]);
                if (oSettings.fnServerData) {
                    oSettings.fnServerData.call(instance, oSettings.sAjaxSource, $.map(data, function(val, key) {
                        return {
                            name: key,
                            value: val
                        }
                    }), callback, oSettings)
                } else if (oSettings.sAjaxSource || typeof ajax === "string") {
                    oSettings.jqXHR = $.ajax($.extend(baseAjax, {
                        url: ajax || oSettings.sAjaxSource
                    }))
                } else if ($.isFunction(ajax)) {
                    oSettings.jqXHR = ajax.call(instance, data, callback, oSettings)
                } else {
                    oSettings.jqXHR = $.ajax($.extend(baseAjax, ajax));
                    ajax.data = ajaxData
                }
            }

            function _fnAjaxUpdate(settings) {
                if (settings.bAjaxDataGet) {
                    settings.iDraw++;
                    _fnProcessingDisplay(settings, true);
                    _fnBuildAjax(settings, _fnAjaxParameters(settings), function(json) {
                        _fnAjaxUpdateDraw(settings, json)
                    });
                    return false
                }
                return true
            }

            function _fnAjaxParameters(settings) {
                var columns = settings.aoColumns,
                    columnCount = columns.length,
                    features = settings.oFeatures,
                    preSearch = settings.oPreviousSearch,
                    preColSearch = settings.aoPreSearchCols,
                    i, data = [],
                    dataProp, column, columnSearch, sort = _fnSortFlatten(settings),
                    displayStart = settings._iDisplayStart,
                    displayLength = features.bPaginate !== false ? settings._iDisplayLength : -1;
                var param = function param(name, value) {
                    data.push({
                        name: name,
                        value: value
                    })
                };
                param("sEcho", settings.iDraw);
                param("iColumns", columnCount);
                param("sColumns", _pluck(columns, "sName").join(","));
                param("iDisplayStart", displayStart);
                param("iDisplayLength", displayLength);
                var d = {
                    draw: settings.iDraw,
                    columns: [],
                    order: [],
                    start: displayStart,
                    length: displayLength,
                    search: {
                        value: preSearch.sSearch,
                        regex: preSearch.bRegex
                    }
                };
                for (i = 0; i < columnCount; i++) {
                    column = columns[i];
                    columnSearch = preColSearch[i];
                    dataProp = typeof column.mData == "function" ? "function" : column.mData;
                    d.columns.push({
                        data: dataProp,
                        name: column.sName,
                        searchable: column.bSearchable,
                        orderable: column.bSortable,
                        search: {
                            value: columnSearch.sSearch,
                            regex: columnSearch.bRegex
                        }
                    });
                    param("mDataProp_" + i, dataProp);
                    if (features.bFilter) {
                        param("sSearch_" + i, columnSearch.sSearch);
                        param("bRegex_" + i, columnSearch.bRegex);
                        param("bSearchable_" + i, column.bSearchable)
                    }
                    if (features.bSort) {
                        param("bSortable_" + i, column.bSortable)
                    }
                }
                if (features.bFilter) {
                    param("sSearch", preSearch.sSearch);
                    param("bRegex", preSearch.bRegex)
                }
                if (features.bSort) {
                    $.each(sort, function(i, val) {
                        d.order.push({
                            column: val.col,
                            dir: val.dir
                        });
                        param("iSortCol_" + i, val.col);
                        param("sSortDir_" + i, val.dir)
                    });
                    param("iSortingCols", sort.length)
                }
                var legacy = DataTable.ext.legacy.ajax;
                if (legacy === null) {
                    return settings.sAjaxSource ? data : d
                }
                return legacy ? data : d
            }

            function _fnAjaxUpdateDraw(settings, json) {
                var compat = function compat(old, modern) {
                    return json[old] !== undefined ? json[old] : json[modern]
                };
                var data = _fnAjaxDataSrc(settings, json);
                var draw = compat("sEcho", "draw");
                var recordsTotal = compat("iTotalRecords", "recordsTotal");
                var recordsFiltered = compat("iTotalDisplayRecords", "recordsFiltered");
                if (draw) {
                    if (draw * 1 < settings.iDraw) {
                        return
                    }
                    settings.iDraw = draw * 1
                }
                _fnClearTable(settings);
                settings._iRecordsTotal = parseInt(recordsTotal, 10);
                settings._iRecordsDisplay = parseInt(recordsFiltered, 10);
                for (var i = 0, ien = data.length; i < ien; i++) {
                    _fnAddData(settings, data[i])
                }
                settings.aiDisplay = settings.aiDisplayMaster.slice();
                settings.bAjaxDataGet = false;
                _fnDraw(settings);
                if (!settings._bInitComplete) {
                    _fnInitComplete(settings, json)
                }
                settings.bAjaxDataGet = true;
                _fnProcessingDisplay(settings, false)
            }

            function _fnAjaxDataSrc(oSettings, json) {
                var dataSrc = $.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined ? oSettings.ajax.dataSrc : oSettings.sAjaxDataProp;
                if (dataSrc === "data") {
                    return json.aaData || json[dataSrc]
                }
                return dataSrc !== "" ? _fnGetObjectDataFn(dataSrc)(json) : json
            }

            function _fnFeatureHtmlFilter(settings) {
                var classes = settings.oClasses;
                var tableId = settings.sTableId;
                var language = settings.oLanguage;
                var previousSearch = settings.oPreviousSearch;
                var features = settings.aanFeatures;
                var input = '<input type="search" class="' + classes.sFilterInput + '"/>';
                var str = language.sSearch;
                str = str.match(/_INPUT_/) ? str.replace("_INPUT_", input) : str + input;
                var filter = $("<div/>", {
                    id: !features.f ? tableId + "_filter" : null,
                    class: classes.sFilter
                }).append($("<label/>").append(str));
                var searchFn = function searchFn() {
                    var n = features.f;
                    var val = !this.value ? "" : this.value;
                    if (val != previousSearch.sSearch) {
                        _fnFilterComplete(settings, {
                            sSearch: val,
                            bRegex: previousSearch.bRegex,
                            bSmart: previousSearch.bSmart,
                            bCaseInsensitive: previousSearch.bCaseInsensitive
                        });
                        settings._iDisplayStart = 0;
                        _fnDraw(settings)
                    }
                };
                var searchDelay = settings.searchDelay !== null ? settings.searchDelay : _fnDataSource(settings) === "ssp" ? 400 : 0;
                var jqFilter = $("input", filter).val(previousSearch.sSearch).attr("placeholder", language.sSearchPlaceholder).on("keyup.DT search.DT input.DT paste.DT cut.DT", searchDelay ? _fnThrottle(searchFn, searchDelay) : searchFn).on("keypress.DT", function(e) {
                    if (e.keyCode == 13) {
                        return false
                    }
                }).attr("aria-controls", tableId);
                $(settings.nTable).on("search.dt.DT", function(ev, s) {
                    if (settings === s) {
                        try {
                            if (jqFilter[0] !== document.activeElement) {
                                jqFilter.val(previousSearch.sSearch)
                            }
                        } catch (e) {}
                    }
                });
                return filter[0]
            }

            function _fnFilterComplete(oSettings, oInput, iForce) {
                var oPrevSearch = oSettings.oPreviousSearch;
                var aoPrevSearch = oSettings.aoPreSearchCols;
                var fnSaveFilter = function fnSaveFilter(oFilter) {
                    oPrevSearch.sSearch = oFilter.sSearch;
                    oPrevSearch.bRegex = oFilter.bRegex;
                    oPrevSearch.bSmart = oFilter.bSmart;
                    oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive
                };
                var fnRegex = function fnRegex(o) {
                    return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex
                };
                _fnColumnTypes(oSettings);
                if (_fnDataSource(oSettings) != "ssp") {
                    _fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive);
                    fnSaveFilter(oInput);
                    for (var i = 0; i < aoPrevSearch.length; i++) {
                        _fnFilterColumn(oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]), aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive)
                    }
                    _fnFilterCustom(oSettings)
                } else {
                    fnSaveFilter(oInput)
                }
                oSettings.bFiltered = true;
                _fnCallbackFire(oSettings, null, "search", [oSettings])
            }

            function _fnFilterCustom(settings) {
                var filters = DataTable.ext.search;
                var displayRows = settings.aiDisplay;
                var row, rowIdx;
                for (var i = 0, ien = filters.length; i < ien; i++) {
                    var rows = [];
                    for (var j = 0, jen = displayRows.length; j < jen; j++) {
                        rowIdx = displayRows[j];
                        row = settings.aoData[rowIdx];
                        if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {
                            rows.push(rowIdx)
                        }
                    }
                    displayRows.length = 0;
                    $.merge(displayRows, rows)
                }
            }

            function _fnFilterColumn(settings, searchStr, colIdx, regex, smart, caseInsensitive) {
                if (searchStr === "") {
                    return
                }
                var data;
                var out = [];
                var display = settings.aiDisplay;
                var rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive);
                for (var i = 0; i < display.length; i++) {
                    data = settings.aoData[display[i]]._aFilterData[colIdx];
                    if (rpSearch.test(data)) {
                        out.push(display[i])
                    }
                }
                settings.aiDisplay = out
            }

            function _fnFilter(settings, input, force, regex, smart, caseInsensitive) {
                var rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive);
                var prevSearch = settings.oPreviousSearch.sSearch;
                var displayMaster = settings.aiDisplayMaster;
                var display, invalidated, i;
                var filtered = [];
                if (DataTable.ext.search.length !== 0) {
                    force = true
                }
                invalidated = _fnFilterData(settings);
                if (input.length <= 0) {
                    settings.aiDisplay = displayMaster.slice()
                } else {
                    if (invalidated || force || prevSearch.length > input.length || input.indexOf(prevSearch) !== 0 || settings.bSorted) {
                        settings.aiDisplay = displayMaster.slice()
                    }
                    display = settings.aiDisplay;
                    for (i = 0; i < display.length; i++) {
                        if (rpSearch.test(settings.aoData[display[i]]._sFilterRow)) {
                            filtered.push(display[i])
                        }
                    }
                    settings.aiDisplay = filtered
                }
            }

            function _fnFilterCreateSearch(search, regex, smart, caseInsensitive) {
                search = regex ? search : _fnEscapeRegex(search);
                if (smart) {
                    var a = $.map(search.match(/"[^"]+"|[^ ]+/g) || [""], function(word) {
                        if (word.charAt(0) === '"') {
                            var m = word.match(/^"(.*)"$/);
                            word = m ? m[1] : word
                        }
                        return word.replace('"', "")
                    });
                    search = "^(?=.*?" + a.join(")(?=.*?") + ").*$"
                }
                return new RegExp(search, caseInsensitive ? "i" : "")
            }
            var _fnEscapeRegex = DataTable.util.escapeRegex;
            var __filter_div = $("<div>")[0];
            var __filter_div_textContent = __filter_div.textContent !== undefined;

            function _fnFilterData(settings) {
                var columns = settings.aoColumns;
                var column;
                var i, j, ien, jen, filterData, cellData, row;
                var fomatters = DataTable.ext.type.search;
                var wasInvalidated = false;
                for (i = 0, ien = settings.aoData.length; i < ien; i++) {
                    row = settings.aoData[i];
                    if (!row._aFilterData) {
                        filterData = [];
                        for (j = 0, jen = columns.length; j < jen; j++) {
                            column = columns[j];
                            if (column.bSearchable) {
                                cellData = _fnGetCellData(settings, i, j, "filter");
                                if (fomatters[column.sType]) {
                                    cellData = fomatters[column.sType](cellData)
                                }
                                if (cellData === null) {
                                    cellData = ""
                                }
                                if (typeof cellData !== "string" && cellData.toString) {
                                    cellData = cellData.toString()
                                }
                            } else {
                                cellData = ""
                            }
                            if (cellData.indexOf && cellData.indexOf("&") !== -1) {
                                __filter_div.innerHTML = cellData;
                                cellData = __filter_div_textContent ? __filter_div.textContent : __filter_div.innerText
                            }
                            if (cellData.replace) {
                                cellData = cellData.replace(/[\r\n]/g, "")
                            }
                            filterData.push(cellData)
                        }
                        row._aFilterData = filterData;
                        row._sFilterRow = filterData.join("  ");
                        wasInvalidated = true
                    }
                }
                return wasInvalidated
            }

            function _fnSearchToCamel(obj) {
                return {
                    search: obj.sSearch,
                    smart: obj.bSmart,
                    regex: obj.bRegex,
                    caseInsensitive: obj.bCaseInsensitive
                }
            }

            function _fnSearchToHung(obj) {
                return {
                    sSearch: obj.search,
                    bSmart: obj.smart,
                    bRegex: obj.regex,
                    bCaseInsensitive: obj.caseInsensitive
                }
            }

            function _fnFeatureHtmlInfo(settings) {
                var tid = settings.sTableId,
                    nodes = settings.aanFeatures.i,
                    n = $("<div/>", {
                        class: settings.oClasses.sInfo,
                        id: !nodes ? tid + "_info" : null
                    });
                if (!nodes) {
                    settings.aoDrawCallback.push({
                        fn: _fnUpdateInfo,
                        sName: "information"
                    });
                    n.attr("role", "status").attr("aria-live", "polite");
                    $(settings.nTable).attr("aria-describedby", tid + "_info")
                }
                return n[0]
            }

            function _fnUpdateInfo(settings) {
                var nodes = settings.aanFeatures.i;
                if (nodes.length === 0) {
                    return
                }
                var lang = settings.oLanguage,
                    start = settings._iDisplayStart + 1,
                    end = settings.fnDisplayEnd(),
                    max = settings.fnRecordsTotal(),
                    total = settings.fnRecordsDisplay(),
                    out = total ? lang.sInfo : lang.sInfoEmpty;
                if (total !== max) {
                    out += " " + lang.sInfoFiltered
                }
                out += lang.sInfoPostFix;
                out = _fnInfoMacros(settings, out);
                var callback = lang.fnInfoCallback;
                if (callback !== null) {
                    out = callback.call(settings.oInstance, settings, start, end, max, total, out)
                }
                $(nodes).html(out)
            }

            function _fnInfoMacros(settings, str) {
                var formatter = settings.fnFormatNumber,
                    start = settings._iDisplayStart + 1,
                    len = settings._iDisplayLength,
                    vis = settings.fnRecordsDisplay(),
                    all = len === -1;
                return str.replace(/_START_/g, formatter.call(settings, start)).replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).replace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal())).replace(/_TOTAL_/g, formatter.call(settings, vis)).replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)))
            }

            function _fnInitialise(settings) {
                var i, iLen, iAjaxStart = settings.iInitDisplayStart;
                var columns = settings.aoColumns,
                    column;
                var features = settings.oFeatures;
                var deferLoading = settings.bDeferLoading;
                if (!settings.bInitialised) {
                    setTimeout(function() {
                        _fnInitialise(settings)
                    }, 200);
                    return
                }
                _fnAddOptionsHtml(settings);
                _fnBuildHead(settings);
                _fnDrawHead(settings, settings.aoHeader);
                _fnDrawHead(settings, settings.aoFooter);
                _fnProcessingDisplay(settings, true);
                if (features.bAutoWidth) {
                    _fnCalculateColumnWidths(settings)
                }
                for (i = 0, iLen = columns.length; i < iLen; i++) {
                    column = columns[i];
                    if (column.sWidth) {
                        column.nTh.style.width = _fnStringToCss(column.sWidth)
                    }
                }
                _fnCallbackFire(settings, null, "preInit", [settings]);
                _fnReDraw(settings);
                var dataSrc = _fnDataSource(settings);
                if (dataSrc != "ssp" || deferLoading) {
                    if (dataSrc == "ajax") {
                        _fnBuildAjax(settings, [], function(json) {
                            var aData = _fnAjaxDataSrc(settings, json);
                            for (i = 0; i < aData.length; i++) {
                                _fnAddData(settings, aData[i])
                            }
                            settings.iInitDisplayStart = iAjaxStart;
                            _fnReDraw(settings);
                            _fnProcessingDisplay(settings, false);
                            _fnInitComplete(settings, json)
                        }, settings)
                    } else {
                        _fnProcessingDisplay(settings, false);
                        _fnInitComplete(settings)
                    }
                }
            }

            function _fnInitComplete(settings, json) {
                settings._bInitComplete = true;
                if (json || settings.oInit.aaData) {
                    _fnAdjustColumnSizing(settings)
                }
                _fnCallbackFire(settings, null, "plugin-init", [settings, json]);
                _fnCallbackFire(settings, "aoInitComplete", "init", [settings, json])
            }

            function _fnLengthChange(settings, val) {
                var len = parseInt(val, 10);
                settings._iDisplayLength = len;
                _fnLengthOverflow(settings);
                _fnCallbackFire(settings, null, "length", [settings, len])
            }

            function _fnFeatureHtmlLength(settings) {
                var classes = settings.oClasses,
                    tableId = settings.sTableId,
                    menu = settings.aLengthMenu,
                    d2 = $.isArray(menu[0]),
                    lengths = d2 ? menu[0] : menu,
                    language = d2 ? menu[1] : menu;
                var select = $("<select/>", {
                    name: tableId + "_length",
                    "aria-controls": tableId,
                    class: classes.sLengthSelect
                });
                for (var i = 0, ien = lengths.length; i < ien; i++) {
                    select[0][i] = new Option(typeof language[i] === "number" ? settings.fnFormatNumber(language[i]) : language[i], lengths[i])
                }
                var div = $("<div><label/></div>").addClass(classes.sLength);
                if (!settings.aanFeatures.l) {
                    div[0].id = tableId + "_length"
                }
                div.children().append(settings.oLanguage.sLengthMenu.replace("_MENU_", select[0].outerHTML));
                $("select", div).val(settings._iDisplayLength).on("change.DT", function(e) {
                    _fnLengthChange(settings, $(this).val());
                    _fnDraw(settings)
                });
                $(settings.nTable).on("length.dt.DT", function(e, s, len) {
                    if (settings === s) {
                        $("select", div).val(len)
                    }
                });
                return div[0]
            }

            function _fnFeatureHtmlPaginate(settings) {
                var type = settings.sPaginationType,
                    plugin = DataTable.ext.pager[type],
                    modern = typeof plugin === "function",
                    redraw = function redraw(settings) {
                        _fnDraw(settings)
                    },
                    node = $("<div/>").addClass(settings.oClasses.sPaging + type)[0],
                    features = settings.aanFeatures;
                if (!modern) {
                    plugin.fnInit(settings, node, redraw)
                }
                if (!features.p) {
                    node.id = settings.sTableId + "_paginate";
                    settings.aoDrawCallback.push({
                        fn: function fn(settings) {
                            if (modern) {
                                var start = settings._iDisplayStart,
                                    len = settings._iDisplayLength,
                                    visRecords = settings.fnRecordsDisplay(),
                                    all = len === -1,
                                    page = all ? 0 : Math.ceil(start / len),
                                    pages = all ? 1 : Math.ceil(visRecords / len),
                                    buttons = plugin(page, pages),
                                    i, ien;
                                for (i = 0, ien = features.p.length; i < ien; i++) {
                                    _fnRenderer(settings, "pageButton")(settings, features.p[i], i, buttons, page, pages)
                                }
                            } else {
                                plugin.fnUpdate(settings, redraw)
                            }
                        },
                        sName: "pagination"
                    })
                }
                return node
            }

            function _fnPageChange(settings, action, redraw) {
                var start = settings._iDisplayStart,
                    len = settings._iDisplayLength,
                    records = settings.fnRecordsDisplay();
                if (records === 0 || len === -1) {
                    start = 0
                } else if (typeof action === "number") {
                    start = action * len;
                    if (start > records) {
                        start = 0
                    }
                } else if (action == "first") {
                    start = 0
                } else if (action == "previous") {
                    start = len >= 0 ? start - len : 0;
                    if (start < 0) {
                        start = 0
                    }
                } else if (action == "next") {
                    if (start + len < records) {
                        start += len
                    }
                } else if (action == "last") {
                    start = Math.floor((records - 1) / len) * len
                } else {
                    _fnLog(settings, 0, "Unknown paging action: " + action, 5)
                }
                var changed = settings._iDisplayStart !== start;
                settings._iDisplayStart = start;
                if (changed) {
                    _fnCallbackFire(settings, null, "page", [settings]);
                    if (redraw) {
                        _fnDraw(settings)
                    }
                }
                return changed
            }

            function _fnFeatureHtmlProcessing(settings) {
                return $("<div/>", {
                    id: !settings.aanFeatures.r ? settings.sTableId + "_processing" : null,
                    class: settings.oClasses.sProcessing
                }).html(settings.oLanguage.sProcessing).insertBefore(settings.nTable)[0]
            }

            function _fnProcessingDisplay(settings, show) {
                if (settings.oFeatures.bProcessing) {
                    $(settings.aanFeatures.r).css("display", show ? "block" : "none")
                }
                _fnCallbackFire(settings, null, "processing", [settings, show])
            }

            function _fnFeatureHtmlTable(settings) {
                var table = $(settings.nTable);
                table.attr("role", "grid");
                var scroll = settings.oScroll;
                if (scroll.sX === "" && scroll.sY === "") {
                    return settings.nTable
                }
                var scrollX = scroll.sX;
                var scrollY = scroll.sY;
                var classes = settings.oClasses;
                var caption = table.children("caption");
                var captionSide = caption.length ? caption[0]._captionSide : null;
                var headerClone = $(table[0].cloneNode(false));
                var footerClone = $(table[0].cloneNode(false));
                var footer = table.children("tfoot");
                var _div = "<div/>";
                var size = function size(s) {
                    return !s ? null : _fnStringToCss(s)
                };
                if (!footer.length) {
                    footer = null
                }
                var scroller = $(_div, {
                    class: classes.sScrollWrapper
                }).append($(_div, {
                    class: classes.sScrollHead
                }).css({
                    overflow: "hidden",
                    position: "relative",
                    border: 0,
                    width: scrollX ? size(scrollX) : "100%"
                }).append($(_div, {
                    class: classes.sScrollHeadInner
                }).css({
                    "box-sizing": "content-box",
                    width: scroll.sXInner || "100%"
                }).append(headerClone.removeAttr("id").css("margin-left", 0).append(captionSide === "top" ? caption : null).append(table.children("thead"))))).append($(_div, {
                    class: classes.sScrollBody
                }).css({
                    position: "relative",
                    overflow: "auto",
                    width: size(scrollX)
                }).append(table));
                if (footer) {
                    scroller.append($(_div, {
                        class: classes.sScrollFoot
                    }).css({
                        overflow: "hidden",
                        border: 0,
                        width: scrollX ? size(scrollX) : "100%"
                    }).append($(_div, {
                        class: classes.sScrollFootInner
                    }).append(footerClone.removeAttr("id").css("margin-left", 0).append(captionSide === "bottom" ? caption : null).append(table.children("tfoot")))))
                }
                var children = scroller.children();
                var scrollHead = children[0];
                var scrollBody = children[1];
                var scrollFoot = footer ? children[2] : null;
                if (scrollX) {
                    $(scrollBody).on("scroll.DT", function(e) {
                        var scrollLeft = this.scrollLeft;
                        scrollHead.scrollLeft = scrollLeft;
                        if (footer) {
                            scrollFoot.scrollLeft = scrollLeft
                        }
                    })
                }
                $(scrollBody).css(scrollY && scroll.bCollapse ? "max-height" : "height", scrollY);
                settings.nScrollHead = scrollHead;
                settings.nScrollBody = scrollBody;
                settings.nScrollFoot = scrollFoot;
                settings.aoDrawCallback.push({
                    fn: _fnScrollDraw,
                    sName: "scrolling"
                });
                return scroller[0]
            }

            function _fnScrollDraw(settings) {
                var scroll = settings.oScroll,
                    scrollX = scroll.sX,
                    scrollXInner = scroll.sXInner,
                    scrollY = scroll.sY,
                    barWidth = scroll.iBarWidth,
                    divHeader = $(settings.nScrollHead),
                    divHeaderStyle = divHeader[0].style,
                    divHeaderInner = divHeader.children("div"),
                    divHeaderInnerStyle = divHeaderInner[0].style,
                    divHeaderTable = divHeaderInner.children("table"),
                    divBodyEl = settings.nScrollBody,
                    divBody = $(divBodyEl),
                    divBodyStyle = divBodyEl.style,
                    divFooter = $(settings.nScrollFoot),
                    divFooterInner = divFooter.children("div"),
                    divFooterTable = divFooterInner.children("table"),
                    header = $(settings.nTHead),
                    table = $(settings.nTable),
                    tableEl = table[0],
                    tableStyle = tableEl.style,
                    footer = settings.nTFoot ? $(settings.nTFoot) : null,
                    browser = settings.oBrowser,
                    ie67 = browser.bScrollOversize,
                    dtHeaderCells = _pluck(settings.aoColumns, "nTh"),
                    headerTrgEls, footerTrgEls, headerSrcEls, footerSrcEls, headerCopy, footerCopy, headerWidths = [],
                    footerWidths = [],
                    headerContent = [],
                    footerContent = [],
                    idx, correction, sanityWidth, zeroOut = function zeroOut(nSizer) {
                        var style = nSizer.style;
                        style.paddingTop = "0";
                        style.paddingBottom = "0";
                        style.borderTopWidth = "0";
                        style.borderBottomWidth = "0";
                        style.height = 0
                    };
                var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;
                if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {
                    settings.scrollBarVis = scrollBarVis;
                    _fnAdjustColumnSizing(settings);
                    return
                } else {
                    settings.scrollBarVis = scrollBarVis
                }
                table.children("thead, tfoot").remove();
                if (footer) {
                    footerCopy = footer.clone().prependTo(table);
                    footerTrgEls = footer.find("tr");
                    footerSrcEls = footerCopy.find("tr")
                }
                headerCopy = header.clone().prependTo(table);
                headerTrgEls = header.find("tr");
                headerSrcEls = headerCopy.find("tr");
                headerCopy.find("th, td").removeAttr("tabindex");
                if (!scrollX) {
                    divBodyStyle.width = "100%";
                    divHeader[0].style.width = "100%"
                }
                $.each(_fnGetUniqueThs(settings, headerCopy), function(i, el) {
                    idx = _fnVisibleToColumnIndex(settings, i);
                    el.style.width = settings.aoColumns[idx].sWidth
                });
                if (footer) {
                    _fnApplyToChildren(function(n) {
                        n.style.width = ""
                    }, footerSrcEls)
                }
                sanityWidth = table.outerWidth();
                if (scrollX === "") {
                    tableStyle.width = "100%";
                    if (ie67 && (table.find("tbody").height() > divBodyEl.offsetHeight || divBody.css("overflow-y") == "scroll")) {
                        tableStyle.width = _fnStringToCss(table.outerWidth() - barWidth)
                    }
                    sanityWidth = table.outerWidth()
                } else if (scrollXInner !== "") {
                    tableStyle.width = _fnStringToCss(scrollXInner);
                    sanityWidth = table.outerWidth()
                }
                _fnApplyToChildren(zeroOut, headerSrcEls);
                _fnApplyToChildren(function(nSizer) {
                    headerContent.push(nSizer.innerHTML);
                    headerWidths.push(_fnStringToCss($(nSizer).css("width")))
                }, headerSrcEls);
                _fnApplyToChildren(function(nToSize, i) {
                    if ($.inArray(nToSize, dtHeaderCells) !== -1) {
                        nToSize.style.width = headerWidths[i]
                    }
                }, headerTrgEls);
                $(headerSrcEls).height(0);
                if (footer) {
                    _fnApplyToChildren(zeroOut, footerSrcEls);
                    _fnApplyToChildren(function(nSizer) {
                        footerContent.push(nSizer.innerHTML);
                        footerWidths.push(_fnStringToCss($(nSizer).css("width")))
                    }, footerSrcEls);
                    _fnApplyToChildren(function(nToSize, i) {
                        nToSize.style.width = footerWidths[i]
                    }, footerTrgEls);
                    $(footerSrcEls).height(0)
                }
                _fnApplyToChildren(function(nSizer, i) {
                    nSizer.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">' + headerContent[i] + "</div>";
                    nSizer.style.width = headerWidths[i]
                }, headerSrcEls);
                if (footer) {
                    _fnApplyToChildren(function(nSizer, i) {
                        nSizer.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">' + footerContent[i] + "</div>";
                        nSizer.style.width = footerWidths[i]
                    }, footerSrcEls)
                }
                if (table.outerWidth() < sanityWidth) {
                    correction = divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css("overflow-y") == "scroll" ? sanityWidth + barWidth : sanityWidth;
                    if (ie67 && (divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css("overflow-y") == "scroll")) {
                        tableStyle.width = _fnStringToCss(correction - barWidth)
                    }
                    if (scrollX === "" || scrollXInner !== "") {
                        _fnLog(settings, 1, "Possible column misalignment", 6)
                    }
                } else {
                    correction = "100%"
                }
                divBodyStyle.width = _fnStringToCss(correction);
                divHeaderStyle.width = _fnStringToCss(correction);
                if (footer) {
                    settings.nScrollFoot.style.width = _fnStringToCss(correction)
                }
                if (!scrollY) {
                    if (ie67) {
                        divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth)
                    }
                }
                var iOuterWidth = table.outerWidth();
                divHeaderTable[0].style.width = _fnStringToCss(iOuterWidth);
                divHeaderInnerStyle.width = _fnStringToCss(iOuterWidth);
                var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css("overflow-y") == "scroll";
                var padding = "padding" + (browser.bScrollbarLeft ? "Left" : "Right");
                divHeaderInnerStyle[padding] = bScrolling ? barWidth + "px" : "0px";
                if (footer) {
                    divFooterTable[0].style.width = _fnStringToCss(iOuterWidth);
                    divFooterInner[0].style.width = _fnStringToCss(iOuterWidth);
                    divFooterInner[0].style[padding] = bScrolling ? barWidth + "px" : "0px"
                }
                table.children("colgroup").insertBefore(table.children("thead"));
                divBody.scroll();
                if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {
                    divBodyEl.scrollTop = 0
                }
            }

            function _fnApplyToChildren(fn, an1, an2) {
                var index = 0,
                    i = 0,
                    iLen = an1.length;
                var nNode1, nNode2;
                while (i < iLen) {
                    nNode1 = an1[i].firstChild;
                    nNode2 = an2 ? an2[i].firstChild : null;
                    while (nNode1) {
                        if (nNode1.nodeType === 1) {
                            if (an2) {
                                fn(nNode1, nNode2, index)
                            } else {
                                fn(nNode1, index)
                            }
                            index++
                        }
                        nNode1 = nNode1.nextSibling;
                        nNode2 = an2 ? nNode2.nextSibling : null
                    }
                    i++
                }
            }
            var __re_html_remove = /<.*?>/g;

            function _fnCalculateColumnWidths(oSettings) {
                var table = oSettings.nTable,
                    columns = oSettings.aoColumns,
                    scroll = oSettings.oScroll,
                    scrollY = scroll.sY,
                    scrollX = scroll.sX,
                    scrollXInner = scroll.sXInner,
                    columnCount = columns.length,
                    visibleColumns = _fnGetColumns(oSettings, "bVisible"),
                    headerCells = $("th", oSettings.nTHead),
                    tableWidthAttr = table.getAttribute("width"),
                    tableContainer = table.parentNode,
                    userInputs = false,
                    i, column, columnIdx, width, outerWidth, browser = oSettings.oBrowser,
                    ie67 = browser.bScrollOversize;
                var styleWidth = table.style.width;
                if (styleWidth && styleWidth.indexOf("%") !== -1) {
                    tableWidthAttr = styleWidth
                }
                for (i = 0; i < visibleColumns.length; i++) {
                    column = columns[visibleColumns[i]];
                    if (column.sWidth !== null) {
                        column.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer);
                        userInputs = true
                    }
                }
                if (ie67 || !userInputs && !scrollX && !scrollY && columnCount == _fnVisbleColumns(oSettings) && columnCount == headerCells.length) {
                    for (i = 0; i < columnCount; i++) {
                        var colIdx = _fnVisibleToColumnIndex(oSettings, i);
                        if (colIdx !== null) {
                            columns[colIdx].sWidth = _fnStringToCss(headerCells.eq(i).width())
                        }
                    }
                } else {
                    var tmpTable = $(table).clone().css("visibility", "hidden").removeAttr("id");
                    tmpTable.find("tbody tr").remove();
                    var tr = $("<tr/>").appendTo(tmpTable.find("tbody"));
                    tmpTable.find("thead, tfoot").remove();
                    tmpTable.append($(oSettings.nTHead).clone()).append($(oSettings.nTFoot).clone());
                    tmpTable.find("tfoot th, tfoot td").css("width", "");
                    headerCells = _fnGetUniqueThs(oSettings, tmpTable.find("thead")[0]);
                    for (i = 0; i < visibleColumns.length; i++) {
                        column = columns[visibleColumns[i]];
                        headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== "" ? _fnStringToCss(column.sWidthOrig) : "";
                        if (column.sWidthOrig && scrollX) {
                            $(headerCells[i]).append($("<div/>").css({
                                width: column.sWidthOrig,
                                margin: 0,
                                padding: 0,
                                border: 0,
                                height: 1
                            }))
                        }
                    }
                    if (oSettings.aoData.length) {
                        for (i = 0; i < visibleColumns.length; i++) {
                            columnIdx = visibleColumns[i];
                            column = columns[columnIdx];
                            $(_fnGetWidestNode(oSettings, columnIdx)).clone(false).append(column.sContentPadding).appendTo(tr)
                        }
                    }
                    $("[name]", tmpTable).removeAttr("name");
                    var holder = $("<div/>").css(scrollX || scrollY ? {
                        position: "absolute",
                        top: 0,
                        left: 0,
                        height: 1,
                        right: 0,
                        overflow: "hidden"
                    } : {}).append(tmpTable).appendTo(tableContainer);
                    if (scrollX && scrollXInner) {
                        tmpTable.width(scrollXInner)
                    } else if (scrollX) {
                        tmpTable.css("width", "auto");
                        tmpTable.removeAttr("width");
                        if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {
                            tmpTable.width(tableContainer.clientWidth)
                        }
                    } else if (scrollY) {
                        tmpTable.width(tableContainer.clientWidth)
                    } else if (tableWidthAttr) {
                        tmpTable.width(tableWidthAttr)
                    }
                    var total = 0;
                    for (i = 0; i < visibleColumns.length; i++) {
                        var cell = $(headerCells[i]);
                        var border = cell.outerWidth() - cell.width();
                        var bounding = browser.bBounding ? Math.ceil(headerCells[i].getBoundingClientRect().width) : cell.outerWidth();
                        total += bounding;
                        columns[visibleColumns[i]].sWidth = _fnStringToCss(bounding - border)
                    }
                    table.style.width = _fnStringToCss(total);
                    holder.remove()
                }
                if (tableWidthAttr) {
                    table.style.width = _fnStringToCss(tableWidthAttr)
                }
                if ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {
                    var bindResize = function bindResize() {
                        $(window).on("resize.DT-" + oSettings.sInstance, _fnThrottle(function() {
                            _fnAdjustColumnSizing(oSettings)
                        }))
                    };
                    if (ie67) {
                        setTimeout(bindResize, 1e3)
                    } else {
                        bindResize()
                    }
                    oSettings._reszEvt = true
                }
            }
            var _fnThrottle = DataTable.util.throttle;

            function _fnConvertToWidth(width, parent) {
                if (!width) {
                    return 0
                }
                var n = $("<div/>").css("width", _fnStringToCss(width)).appendTo(parent || document.body);
                var val = n[0].offsetWidth;
                n.remove();
                return val
            }

            function _fnGetWidestNode(settings, colIdx) {
                var idx = _fnGetMaxLenString(settings, colIdx);
                if (idx < 0) {
                    return null
                }
                var data = settings.aoData[idx];
                return !data.nTr ? $("<td/>").html(_fnGetCellData(settings, idx, colIdx, "display"))[0] : data.anCells[colIdx]
            }

            function _fnGetMaxLenString(settings, colIdx) {
                var s, max = -1,
                    maxIdx = -1;
                for (var i = 0, ien = settings.aoData.length; i < ien; i++) {
                    s = _fnGetCellData(settings, i, colIdx, "display") + "";
                    s = s.replace(__re_html_remove, "");
                    s = s.replace(/&nbsp;/g, " ");
                    if (s.length > max) {
                        max = s.length;
                        maxIdx = i
                    }
                }
                return maxIdx
            }

            function _fnStringToCss(s) {
                if (s === null) {
                    return "0px"
                }
                if (typeof s == "number") {
                    return s < 0 ? "0px" : s + "px"
                }
                return s.match(/\d$/) ? s + "px" : s
            }

            function _fnSortFlatten(settings) {
                var i, iLen, k, kLen, aSort = [],
                    aiOrig = [],
                    aoColumns = settings.aoColumns,
                    aDataSort, iCol, sType, srcCol, fixed = settings.aaSortingFixed,
                    fixedObj = $.isPlainObject(fixed),
                    nestedSort = [],
                    add = function add(a) {
                        if (a.length && !$.isArray(a[0])) {
                            nestedSort.push(a)
                        } else {
                            $.merge(nestedSort, a)
                        }
                    };
                if ($.isArray(fixed)) {
                    add(fixed)
                }
                if (fixedObj && fixed.pre) {
                    add(fixed.pre)
                }
                add(settings.aaSorting);
                if (fixedObj && fixed.post) {
                    add(fixed.post)
                }
                for (i = 0; i < nestedSort.length; i++) {
                    srcCol = nestedSort[i][0];
                    aDataSort = aoColumns[srcCol].aDataSort;
                    for (k = 0, kLen = aDataSort.length; k < kLen; k++) {
                        iCol = aDataSort[k];
                        sType = aoColumns[iCol].sType || "string";
                        if (nestedSort[i]._idx === undefined) {
                            nestedSort[i]._idx = $.inArray(nestedSort[i][1], aoColumns[iCol].asSorting)
                        }
                        aSort.push({
                            src: srcCol,
                            col: iCol,
                            dir: nestedSort[i][1],
                            index: nestedSort[i]._idx,
                            type: sType,
                            formatter: DataTable.ext.type.order[sType + "-pre"]
                        })
                    }
                }
                return aSort
            }

            function _fnSort(oSettings) {
                var i, ien, iLen, j, jLen, k, kLen, sDataType, nTh, aiOrig = [],
                    oExtSort = DataTable.ext.type.order,
                    aoData = oSettings.aoData,
                    aoColumns = oSettings.aoColumns,
                    aDataSort, data, iCol, sType, oSort, formatters = 0,
                    sortCol, displayMaster = oSettings.aiDisplayMaster,
                    aSort;
                _fnColumnTypes(oSettings);
                aSort = _fnSortFlatten(oSettings);
                for (i = 0, ien = aSort.length; i < ien; i++) {
                    sortCol = aSort[i];
                    if (sortCol.formatter) {
                        formatters++
                    }
                    _fnSortData(oSettings, sortCol.col)
                }
                if (_fnDataSource(oSettings) != "ssp" && aSort.length !== 0) {
                    for (i = 0, iLen = displayMaster.length; i < iLen; i++) {
                        aiOrig[displayMaster[i]] = i
                    }
                    if (formatters === aSort.length) {
                        displayMaster.sort(function(a, b) {
                            var x, y, k, test, sort, len = aSort.length,
                                dataA = aoData[a]._aSortData,
                                dataB = aoData[b]._aSortData;
                            for (k = 0; k < len; k++) {
                                sort = aSort[k];
                                x = dataA[sort.col];
                                y = dataB[sort.col];
                                test = x < y ? -1 : x > y ? 1 : 0;
                                if (test !== 0) {
                                    return sort.dir === "asc" ? test : -test
                                }
                            }
                            x = aiOrig[a];
                            y = aiOrig[b];
                            return x < y ? -1 : x > y ? 1 : 0
                        })
                    } else {
                        displayMaster.sort(function(a, b) {
                            var x, y, k, l, test, sort, fn, len = aSort.length,
                                dataA = aoData[a]._aSortData,
                                dataB = aoData[b]._aSortData;
                            for (k = 0; k < len; k++) {
                                sort = aSort[k];
                                x = dataA[sort.col];
                                y = dataB[sort.col];
                                fn = oExtSort[sort.type + "-" + sort.dir] || oExtSort["string-" + sort.dir];
                                test = fn(x, y);
                                if (test !== 0) {
                                    return test
                                }
                            }
                            x = aiOrig[a];
                            y = aiOrig[b];
                            return x < y ? -1 : x > y ? 1 : 0
                        })
                    }
                }
                oSettings.bSorted = true
            }

            function _fnSortAria(settings) {
                var label;
                var nextSort;
                var columns = settings.aoColumns;
                var aSort = _fnSortFlatten(settings);
                var oAria = settings.oLanguage.oAria;
                for (var i = 0, iLen = columns.length; i < iLen; i++) {
                    var col = columns[i];
                    var asSorting = col.asSorting;
                    var sTitle = col.sTitle.replace(/<.*?>/g, "");
                    var th = col.nTh;
                    th.removeAttribute("aria-sort");
                    if (col.bSortable) {
                        if (aSort.length > 0 && aSort[0].col == i) {
                            th.setAttribute("aria-sort", aSort[0].dir == "asc" ? "ascending" : "descending");
                            nextSort = asSorting[aSort[0].index + 1] || asSorting[0]
                        } else {
                            nextSort = asSorting[0]
                        }
                        label = sTitle + (nextSort === "asc" ? oAria.sSortAscending : oAria.sSortDescending)
                    } else {
                        label = sTitle
                    }
                    th.setAttribute("aria-label", label)
                }
            }

            function _fnSortListener(settings, colIdx, append, callback) {
                var col = settings.aoColumns[colIdx];
                var sorting = settings.aaSorting;
                var asSorting = col.asSorting;
                var nextSortIdx;
                var next = function next(a, overflow) {
                    var idx = a._idx;
                    if (idx === undefined) {
                        idx = $.inArray(a[1], asSorting)
                    }
                    return idx + 1 < asSorting.length ? idx + 1 : overflow ? null : 0
                };
                if (typeof sorting[0] === "number") {
                    sorting = settings.aaSorting = [sorting]
                }
                if (append && settings.oFeatures.bSortMulti) {
                    var sortIdx = $.inArray(colIdx, _pluck(sorting, "0"));
                    if (sortIdx !== -1) {
                        nextSortIdx = next(sorting[sortIdx], true);
                        if (nextSortIdx === null && sorting.length === 1) {
                            nextSortIdx = 0
                        }
                        if (nextSortIdx === null) {
                            sorting.splice(sortIdx, 1)
                        } else {
                            sorting[sortIdx][1] = asSorting[nextSortIdx];
                            sorting[sortIdx]._idx = nextSortIdx
                        }
                    } else {
                        sorting.push([colIdx, asSorting[0], 0]);
                        sorting[sorting.length - 1]._idx = 0
                    }
                } else if (sorting.length && sorting[0][0] == colIdx) {
                    nextSortIdx = next(sorting[0]);
                    sorting.length = 1;
                    sorting[0][1] = asSorting[nextSortIdx];
                    sorting[0]._idx = nextSortIdx
                } else {
                    sorting.length = 0;
                    sorting.push([colIdx, asSorting[0]]);
                    sorting[0]._idx = 0
                }
                _fnReDraw(settings);
                if (typeof callback == "function") {
                    callback(settings)
                }
            }

            function _fnSortAttachListener(settings, attachTo, colIdx, callback) {
                var col = settings.aoColumns[colIdx];
                _fnBindAction(attachTo, {}, function(e) {
                    if (col.bSortable === false) {
                        return
                    }
                    if (settings.oFeatures.bProcessing) {
                        _fnProcessingDisplay(settings, true);
                        setTimeout(function() {
                            _fnSortListener(settings, colIdx, e.shiftKey, callback);
                            if (_fnDataSource(settings) !== "ssp") {
                                _fnProcessingDisplay(settings, false)
                            }
                        }, 0)
                    } else {
                        _fnSortListener(settings, colIdx, e.shiftKey, callback)
                    }
                })
            }

            function _fnSortingClasses(settings) {
                var oldSort = settings.aLastSort;
                var sortClass = settings.oClasses.sSortColumn;
                var sort = _fnSortFlatten(settings);
                var features = settings.oFeatures;
                var i, ien, colIdx;
                if (features.bSort && features.bSortClasses) {
                    for (i = 0, ien = oldSort.length; i < ien; i++) {
                        colIdx = oldSort[i].src;
                        $(_pluck(settings.aoData, "anCells", colIdx)).removeClass(sortClass + (i < 2 ? i + 1 : 3))
                    }
                    for (i = 0, ien = sort.length; i < ien; i++) {
                        colIdx = sort[i].src;
                        $(_pluck(settings.aoData, "anCells", colIdx)).addClass(sortClass + (i < 2 ? i + 1 : 3))
                    }
                }
                settings.aLastSort = sort
            }

            function _fnSortData(settings, idx) {
                var column = settings.aoColumns[idx];
                var customSort = DataTable.ext.order[column.sSortDataType];
                var customData;
                if (customSort) {
                    customData = customSort.call(settings.oInstance, settings, idx, _fnColumnIndexToVisible(settings, idx))
                }
                var row, cellData;
                var formatter = DataTable.ext.type.order[column.sType + "-pre"];
                for (var i = 0, ien = settings.aoData.length; i < ien; i++) {
                    row = settings.aoData[i];
                    if (!row._aSortData) {
                        row._aSortData = []
                    }
                    if (!row._aSortData[idx] || customSort) {
                        cellData = customSort ? customData[i] : _fnGetCellData(settings, i, idx, "sort");
                        row._aSortData[idx] = formatter ? formatter(cellData) : cellData
                    }
                }
            }

            function _fnSaveState(settings) {
                if (!settings.oFeatures.bStateSave || settings.bDestroying) {
                    return
                }
                var state = {
                    time: +new Date,
                    start: settings._iDisplayStart,
                    length: settings._iDisplayLength,
                    order: $.extend(true, [], settings.aaSorting),
                    search: _fnSearchToCamel(settings.oPreviousSearch),
                    columns: $.map(settings.aoColumns, function(col, i) {
                        return {
                            visible: col.bVisible,
                            search: _fnSearchToCamel(settings.aoPreSearchCols[i])
                        }
                    })
                };
                _fnCallbackFire(settings, "aoStateSaveParams", "stateSaveParams", [settings, state]);
                settings.oSavedState = state;
                settings.fnStateSaveCallback.call(settings.oInstance, settings, state)
            }

            function _fnLoadState(settings, oInit, callback) {
                var i, ien;
                var columns = settings.aoColumns;
                var loaded = function loaded(s) {
                    if (!s || !s.time) {
                        callback();
                        return
                    }
                    var abStateLoad = _fnCallbackFire(settings, "aoStateLoadParams", "stateLoadParams", [settings, s]);
                    if ($.inArray(false, abStateLoad) !== -1) {
                        callback();
                        return
                    }
                    var duration = settings.iStateDuration;
                    if (duration > 0 && s.time < +new Date - duration * 1e3) {
                        callback();
                        return
                    }
                    if (s.columns && columns.length !== s.columns.length) {
                        callback();
                        return
                    }
                    settings.oLoadedState = $.extend(true, {}, s);
                    if (s.start !== undefined) {
                        settings._iDisplayStart = s.start;
                        settings.iInitDisplayStart = s.start
                    }
                    if (s.length !== undefined) {
                        settings._iDisplayLength = s.length
                    }
                    if (s.order !== undefined) {
                        settings.aaSorting = [];
                        $.each(s.order, function(i, col) {
                            settings.aaSorting.push(col[0] >= columns.length ? [0, col[1]] : col)
                        })
                    }
                    if (s.search !== undefined) {
                        $.extend(settings.oPreviousSearch, _fnSearchToHung(s.search))
                    }
                    if (s.columns) {
                        for (i = 0, ien = s.columns.length; i < ien; i++) {
                            var col = s.columns[i];
                            if (col.visible !== undefined) {
                                columns[i].bVisible = col.visible
                            }
                            if (col.search !== undefined) {
                                $.extend(settings.aoPreSearchCols[i], _fnSearchToHung(col.search))
                            }
                        }
                    }
                    _fnCallbackFire(settings, "aoStateLoaded", "stateLoaded", [settings, s]);
                    callback()
                };
                if (!settings.oFeatures.bStateSave) {
                    callback();
                    return
                }
                var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);
                if (state !== undefined) {
                    loaded(state)
                }
            }

            function _fnSettingsFromNode(table) {
                var settings = DataTable.settings;
                var idx = $.inArray(table, _pluck(settings, "nTable"));
                return idx !== -1 ? settings[idx] : null
            }

            function _fnLog(settings, level, msg, tn) {
                msg = "DataTables warning: " + (settings ? "table id=" + settings.sTableId + " - " : "") + msg;
                if (tn) {
                    msg += ". For more information about this error, please see " + "http://datatables.net/tn/" + tn
                }
                if (!level) {
                    var ext = DataTable.ext;
                    var type = ext.sErrMode || ext.errMode;
                    if (settings) {
                        _fnCallbackFire(settings, null, "error", [settings, tn, msg])
                    }
                    if (type == "alert") {
                        alert(msg)
                    } else if (type == "throw") {
                        throw new Error(msg)
                    } else if (typeof type == "function") {
                        type(settings, tn, msg)
                    }
                } else if (window.console && console.log) {
                    console.log(msg)
                }
            }

            function _fnMap(ret, src, name, mappedName) {
                if ($.isArray(name)) {
                    $.each(name, function(i, val) {
                        if ($.isArray(val)) {
                            _fnMap(ret, src, val[0], val[1])
                        } else {
                            _fnMap(ret, src, val)
                        }
                    });
                    return
                }
                if (mappedName === undefined) {
                    mappedName = name
                }
                if (src[name] !== undefined) {
                    ret[mappedName] = src[name]
                }
            }

            function _fnExtend(out, extender, breakRefs) {
                var val;
                for (var prop in extender) {
                    if (extender.hasOwnProperty(prop)) {
                        val = extender[prop];
                        if ($.isPlainObject(val)) {
                            if (!$.isPlainObject(out[prop])) {
                                out[prop] = {}
                            }
                            $.extend(true, out[prop], val)
                        } else if (breakRefs && prop !== "data" && prop !== "aaData" && $.isArray(val)) {
                            out[prop] = val.slice()
                        } else {
                            out[prop] = val
                        }
                    }
                }
                return out
            }

            function _fnBindAction(n, oData, fn) {
                $(n).on("click.DT", oData, function(e) {
                    n.blur();
                    fn(e)
                }).on("keypress.DT", oData, function(e) {
                    if (e.which === 13) {
                        e.preventDefault();
                        fn(e)
                    }
                }).on("selectstart.DT", function() {
                    return false
                })
            }

            function _fnCallbackReg(oSettings, sStore, fn, sName) {
                if (fn) {
                    oSettings[sStore].push({
                        fn: fn,
                        sName: sName
                    })
                }
            }

            function _fnCallbackFire(settings, callbackArr, eventName, args) {
                var ret = [];
                if (callbackArr) {
                    ret = $.map(settings[callbackArr].slice().reverse(), function(val, i) {
                        return val.fn.apply(settings.oInstance, args)
                    })
                }
                if (eventName !== null) {
                    var e = $.Event(eventName + ".dt");
                    $(settings.nTable).trigger(e, args);
                    ret.push(e.result)
                }
                return ret
            }

            function _fnLengthOverflow(settings) {
                var start = settings._iDisplayStart,
                    end = settings.fnDisplayEnd(),
                    len = settings._iDisplayLength;
                if (start >= end) {
                    start = end - len
                }
                start -= start % len;
                if (len === -1 || start < 0) {
                    start = 0
                }
                settings._iDisplayStart = start
            }

            function _fnRenderer(settings, type) {
                var renderer = settings.renderer;
                var host = DataTable.ext.renderer[type];
                if ($.isPlainObject(renderer) && renderer[type]) {
                    return host[renderer[type]] || host._
                } else if (typeof renderer === "string") {
                    return host[renderer] || host._
                }
                return host._
            }

            function _fnDataSource(settings) {
                if (settings.oFeatures.bServerSide) {
                    return "ssp"
                } else if (settings.ajax || settings.sAjaxSource) {
                    return "ajax"
                }
                return "dom"
            }
            var __apiStruct = [];
            var __arrayProto = Array.prototype;
            var _toSettings = function _toSettings(mixed) {
                var idx, jq;
                var settings = DataTable.settings;
                var tables = $.map(settings, function(el, i) {
                    return el.nTable
                });
                if (!mixed) {
                    return []
                } else if (mixed.nTable && mixed.oApi) {
                    return [mixed]
                } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === "table") {
                    idx = $.inArray(mixed, tables);
                    return idx !== -1 ? [settings[idx]] : null
                } else if (mixed && typeof mixed.settings === "function") {
                    return mixed.settings().toArray()
                } else if (typeof mixed === "string") {
                    jq = $(mixed)
                } else if (mixed instanceof $) {
                    jq = mixed
                }
                if (jq) {
                    return jq.map(function(i) {
                        idx = $.inArray(this, tables);
                        return idx !== -1 ? settings[idx] : null
                    }).toArray()
                }
            };
            _Api2 = function _Api(context, data) {
                if (!(this instanceof _Api2)) {
                    return new _Api2(context, data)
                }
                var settings = [];
                var ctxSettings = function ctxSettings(o) {
                    var a = _toSettings(o);
                    if (a) {
                        settings = settings.concat(a)
                    }
                };
                if ($.isArray(context)) {
                    for (var i = 0, ien = context.length; i < ien; i++) {
                        ctxSettings(context[i])
                    }
                } else {
                    ctxSettings(context)
                }
                this.context = _unique(settings);
                if (data) {
                    $.merge(this, data)
                }
                this.selector = {
                    rows: null,
                    cols: null,
                    opts: null
                };
                _Api2.extend(this, this, __apiStruct)
            };
            DataTable.Api = _Api2;
            $.extend(_Api2.prototype, {
                any: function any() {
                    return this.count() !== 0
                },
                concat: __arrayProto.concat,
                context: [],
                count: function count() {
                    return this.flatten().length
                },
                each: function each(fn) {
                    for (var i = 0, ien = this.length; i < ien; i++) {
                        fn.call(this, this[i], i, this)
                    }
                    return this
                },
                eq: function eq(idx) {
                    var ctx = this.context;
                    return ctx.length > idx ? new _Api2(ctx[idx], this[idx]) : null
                },
                filter: function filter(fn) {
                    var a = [];
                    if (__arrayProto.filter) {
                        a = __arrayProto.filter.call(this, fn, this)
                    } else {
                        for (var i = 0, ien = this.length; i < ien; i++) {
                            if (fn.call(this, this[i], i, this)) {
                                a.push(this[i])
                            }
                        }
                    }
                    return new _Api2(this.context, a)
                },
                flatten: function flatten() {
                    var a = [];
                    return new _Api2(this.context, a.concat.apply(a, this.toArray()))
                },
                join: __arrayProto.join,
                indexOf: __arrayProto.indexOf || function(obj, start) {
                    for (var i = start || 0, ien = this.length; i < ien; i++) {
                        if (this[i] === obj) {
                            return i
                        }
                    }
                    return -1
                },
                iterator: function iterator(flatten, type, fn, alwaysNew) {
                    var a = [],
                        ret, i, ien, j, jen, context = this.context,
                        rows, items, item, selector = this.selector;
                    if (typeof flatten === "string") {
                        alwaysNew = fn;
                        fn = type;
                        type = flatten;
                        flatten = false
                    }
                    for (i = 0, ien = context.length; i < ien; i++) {
                        var apiInst = new _Api2(context[i]);
                        if (type === "table") {
                            ret = fn.call(apiInst, context[i], i);
                            if (ret !== undefined) {
                                a.push(ret)
                            }
                        } else if (type === "columns" || type === "rows") {
                            ret = fn.call(apiInst, context[i], this[i], i);
                            if (ret !== undefined) {
                                a.push(ret)
                            }
                        } else if (type === "column" || type === "column-rows" || type === "row" || type === "cell") {
                            items = this[i];
                            if (type === "column-rows") {
                                rows = _selector_row_indexes(context[i], selector.opts)
                            }
                            for (j = 0, jen = items.length; j < jen; j++) {
                                item = items[j];
                                if (type === "cell") {
                                    ret = fn.call(apiInst, context[i], item.row, item.column, i, j)
                                } else {
                                    ret = fn.call(apiInst, context[i], item, i, j, rows)
                                }
                                if (ret !== undefined) {
                                    a.push(ret)
                                }
                            }
                        }
                    }
                    if (a.length || alwaysNew) {
                        var api = new _Api2(context, flatten ? a.concat.apply([], a) : a);
                        var apiSelector = api.selector;
                        apiSelector.rows = selector.rows;
                        apiSelector.cols = selector.cols;
                        apiSelector.opts = selector.opts;
                        return api
                    }
                    return this
                },
                lastIndexOf: __arrayProto.lastIndexOf || function(obj, start) {
                    return this.indexOf.apply(this.toArray.reverse(), arguments)
                },
                length: 0,
                map: function map(fn) {
                    var a = [];
                    if (__arrayProto.map) {
                        a = __arrayProto.map.call(this, fn, this)
                    } else {
                        for (var i = 0, ien = this.length; i < ien; i++) {
                            a.push(fn.call(this, this[i], i))
                        }
                    }
                    return new _Api2(this.context, a)
                },
                pluck: function pluck(prop) {
                    return this.map(function(el) {
                        return el[prop]
                    })
                },
                pop: __arrayProto.pop,
                push: __arrayProto.push,
                reduce: __arrayProto.reduce || function(fn, init) {
                    return _fnReduce(this, fn, init, 0, this.length, 1)
                },
                reduceRight: __arrayProto.reduceRight || function(fn, init) {
                    return _fnReduce(this, fn, init, this.length - 1, -1, -1)
                },
                reverse: __arrayProto.reverse,
                selector: null,
                shift: __arrayProto.shift,
                slice: function slice() {
                    return new _Api2(this.context, this)
                },
                sort: __arrayProto.sort,
                splice: __arrayProto.splice,
                toArray: function toArray() {
                    return __arrayProto.slice.call(this)
                },
                to$: function to$() {
                    return $(this)
                },
                toJQuery: function toJQuery() {
                    return $(this)
                },
                unique: function unique() {
                    return new _Api2(this.context, _unique(this))
                },
                unshift: __arrayProto.unshift
            });
            _Api2.extend = function(scope, obj, ext) {
                if (!ext.length || !obj || !(obj instanceof _Api2) && !obj.__dt_wrapper) {
                    return
                }
                var i, ien, j, jen, struct, inner, methodScoping = function methodScoping(scope, fn, struc) {
                    return function() {
                        var ret = fn.apply(scope, arguments);
                        _Api2.extend(ret, ret, struc.methodExt);
                        return ret
                    }
                };
                for (i = 0, ien = ext.length; i < ien; i++) {
                    struct = ext[i];
                    obj[struct.name] = typeof struct.val === "function" ? methodScoping(scope, struct.val, struct) : $.isPlainObject(struct.val) ? {} : struct.val;
                    obj[struct.name].__dt_wrapper = true;
                    _Api2.extend(scope, obj[struct.name], struct.propExt)
                }
            };
            _Api2.register = _api_register = function _api_register(name, val) {
                if ($.isArray(name)) {
                    for (var j = 0, jen = name.length; j < jen; j++) {
                        _Api2.register(name[j], val)
                    }
                    return
                }
                var i, ien, heir = name.split("."),
                    struct = __apiStruct,
                    key, method;
                var find = function find(src, name) {
                    for (var i = 0, ien = src.length; i < ien; i++) {
                        if (src[i].name === name) {
                            return src[i]
                        }
                    }
                    return null
                };
                for (i = 0, ien = heir.length; i < ien; i++) {
                    method = heir[i].indexOf("()") !== -1;
                    key = method ? heir[i].replace("()", "") : heir[i];
                    var src = find(struct, key);
                    if (!src) {
                        src = {
                            name: key,
                            val: {},
                            methodExt: [],
                            propExt: []
                        };
                        struct.push(src)
                    }
                    if (i === ien - 1) {
                        src.val = val
                    } else {
                        struct = method ? src.methodExt : src.propExt
                    }
                }
            };
            _Api2.registerPlural = _api_registerPlural = function _api_registerPlural(pluralName, singularName, val) {
                _Api2.register(pluralName, val);
                _Api2.register(singularName, function() {
                    var ret = val.apply(this, arguments);
                    if (ret === this) {
                        return this
                    } else if (ret instanceof _Api2) {
                        return ret.length ? $.isArray(ret[0]) ? new _Api2(ret.context, ret[0]) : ret[0] : undefined
                    }
                    return ret
                })
            };
            var __table_selector = function __table_selector(selector, a) {
                if (typeof selector === "number") {
                    return [a[selector]]
                }
                var nodes = $.map(a, function(el, i) {
                    return el.nTable
                });
                return $(nodes).filter(selector).map(function(i) {
                    var idx = $.inArray(this, nodes);
                    return a[idx]
                }).toArray()
            };
            _api_register("tables()", function(selector) {
                return selector ? new _Api2(__table_selector(selector, this.context)) : this
            });
            _api_register("table()", function(selector) {
                var tables = this.tables(selector);
                var ctx = tables.context;
                return ctx.length ? new _Api2(ctx[0]) : tables
            });
            _api_registerPlural("tables().nodes()", "table().node()", function() {
                return this.iterator("table", function(ctx) {
                    return ctx.nTable
                }, 1)
            });
            _api_registerPlural("tables().body()", "table().body()", function() {
                return this.iterator("table", function(ctx) {
                    return ctx.nTBody
                }, 1)
            });
            _api_registerPlural("tables().header()", "table().header()", function() {
                return this.iterator("table", function(ctx) {
                    return ctx.nTHead
                }, 1)
            });
            _api_registerPlural("tables().footer()", "table().footer()", function() {
                return this.iterator("table", function(ctx) {
                    return ctx.nTFoot
                }, 1)
            });
            _api_registerPlural("tables().containers()", "table().container()", function() {
                return this.iterator("table", function(ctx) {
                    return ctx.nTableWrapper
                }, 1)
            });
            _api_register("draw()", function(paging) {
                return this.iterator("table", function(settings) {
                    if (paging === "page") {
                        _fnDraw(settings)
                    } else {
                        if (typeof paging === "string") {
                            paging = paging === "full-hold" ? false : true
                        }
                        _fnReDraw(settings, paging === false)
                    }
                })
            });
            _api_register("page()", function(action) {
                if (action === undefined) {
                    return this.page.info().page
                }
                return this.iterator("table", function(settings) {
                    _fnPageChange(settings, action)
                })
            });
            _api_register("page.info()", function(action) {
                if (this.context.length === 0) {
                    return undefined
                }
                var settings = this.context[0],
                    start = settings._iDisplayStart,
                    len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,
                    visRecords = settings.fnRecordsDisplay(),
                    all = len === -1;
                return {
                    page: all ? 0 : Math.floor(start / len),
                    pages: all ? 1 : Math.ceil(visRecords / len),
                    start: start,
                    end: settings.fnDisplayEnd(),
                    length: len,
                    recordsTotal: settings.fnRecordsTotal(),
                    recordsDisplay: visRecords,
                    serverSide: _fnDataSource(settings) === "ssp"
                }
            });
            _api_register("page.len()", function(len) {
                if (len === undefined) {
                    return this.context.length !== 0 ? this.context[0]._iDisplayLength : undefined
                }
                return this.iterator("table", function(settings) {
                    _fnLengthChange(settings, len)
                })
            });
            var __reload = function __reload(settings, holdPosition, callback) {
                if (callback) {
                    var api = new _Api2(settings);
                    api.one("draw", function() {
                        callback(api.ajax.json())
                    })
                }
                if (_fnDataSource(settings) == "ssp") {
                    _fnReDraw(settings, holdPosition)
                } else {
                    _fnProcessingDisplay(settings, true);
                    var xhr = settings.jqXHR;
                    if (xhr && xhr.readyState !== 4) {
                        xhr.abort()
                    }
                    _fnBuildAjax(settings, [], function(json) {
                        _fnClearTable(settings);
                        var data = _fnAjaxDataSrc(settings, json);
                        for (var i = 0, ien = data.length; i < ien; i++) {
                            _fnAddData(settings, data[i])
                        }
                        _fnReDraw(settings, holdPosition);
                        _fnProcessingDisplay(settings, false)
                    })
                }
            };
            _api_register("ajax.json()", function() {
                var ctx = this.context;
                if (ctx.length > 0) {
                    return ctx[0].json
                }
            });
            _api_register("ajax.params()", function() {
                var ctx = this.context;
                if (ctx.length > 0) {
                    return ctx[0].oAjaxData
                }
            });
            _api_register("ajax.reload()", function(callback, resetPaging) {
                return this.iterator("table", function(settings) {
                    __reload(settings, resetPaging === false, callback)
                })
            });
            _api_register("ajax.url()", function(url) {
                var ctx = this.context;
                if (url === undefined) {
                    if (ctx.length === 0) {
                        return undefined
                    }
                    ctx = ctx[0];
                    return ctx.ajax ? $.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax : ctx.sAjaxSource
                }
                return this.iterator("table", function(settings) {
                    if ($.isPlainObject(settings.ajax)) {
                        settings.ajax.url = url
                    } else {
                        settings.ajax = url
                    }
                })
            });
            _api_register("ajax.url().load()", function(callback, resetPaging) {
                return this.iterator("table", function(ctx) {
                    __reload(ctx, resetPaging === false, callback)
                })
            });
            var _selector_run = function _selector_run(type, selector, selectFn, settings, opts) {
                var out = [],
                    res, a, i, ien, j, jen, selectorType = typeof selector === "undefined" ? "undefined" : _typeof(selector);
                if (!selector || selectorType === "string" || selectorType === "function" || selector.length === undefined) {
                    selector = [selector]
                }
                for (i = 0, ien = selector.length; i < ien; i++) {
                    a = selector[i] && selector[i].split && !selector[i].match(/[\[\(:]/) ? selector[i].split(",") : [selector[i]];
                    for (j = 0, jen = a.length; j < jen; j++) {
                        res = selectFn(typeof a[j] === "string" ? $.trim(a[j]) : a[j]);
                        if (res && res.length) {
                            out = out.concat(res)
                        }
                    }
                }
                var ext = _ext.selector[type];
                if (ext.length) {
                    for (i = 0, ien = ext.length; i < ien; i++) {
                        out = ext[i](settings, opts, out)
                    }
                }
                return _unique(out)
            };
            var _selector_opts = function _selector_opts(opts) {
                if (!opts) {
                    opts = {}
                }
                if (opts.filter && opts.search === undefined) {
                    opts.search = opts.filter
                }
                return $.extend({
                    search: "none",
                    order: "current",
                    page: "all"
                }, opts)
            };
            var _selector_first = function _selector_first(inst) {
                for (var i = 0, ien = inst.length; i < ien; i++) {
                    if (inst[i].length > 0) {
                        inst[0] = inst[i];
                        inst[0].length = 1;
                        inst.length = 1;
                        inst.context = [inst.context[i]];
                        return inst
                    }
                }
                inst.length = 0;
                return inst
            };
            var _selector_row_indexes = function _selector_row_indexes(settings, opts) {
                var i, ien, tmp, a = [],
                    displayFiltered = settings.aiDisplay,
                    displayMaster = settings.aiDisplayMaster;
                var search = opts.search,
                    order = opts.order,
                    page = opts.page;
                if (_fnDataSource(settings) == "ssp") {
                    return search === "removed" ? [] : _range(0, displayMaster.length)
                } else if (page == "current") {
                    for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {
                        a.push(displayFiltered[i])
                    }
                } else if (order == "current" || order == "applied") {
                    a = search == "none" ? displayMaster.slice() : search == "applied" ? displayFiltered.slice() : $.map(displayMaster, function(el, i) {
                        return $.inArray(el, displayFiltered) === -1 ? el : null
                    })
                } else if (order == "index" || order == "original") {
                    for (i = 0, ien = settings.aoData.length; i < ien; i++) {
                        if (search == "none") {
                            a.push(i)
                        } else {
                            tmp = $.inArray(i, displayFiltered);
                            if (tmp === -1 && search == "removed" || tmp >= 0 && search == "applied") {
                                a.push(i)
                            }
                        }
                    }
                }
                return a
            };
            var __row_selector = function __row_selector(settings, selector, opts) {
                var rows;
                var run = function run(sel) {
                    var selInt = _intVal(sel);
                    var i, ien;
                    if (selInt !== null && !opts) {
                        return [selInt]
                    }
                    if (!rows) {
                        rows = _selector_row_indexes(settings, opts)
                    }
                    if (selInt !== null && $.inArray(selInt, rows) !== -1) {
                        return [selInt]
                    } else if (sel === null || sel === undefined || sel === "") {
                        return rows
                    }
                    if (typeof sel === "function") {
                        return $.map(rows, function(idx) {
                            var row = settings.aoData[idx];
                            return sel(idx, row._aData, row.nTr) ? idx : null
                        })
                    }
                    var nodes = _removeEmpty(_pluck_order(settings.aoData, rows, "nTr"));
                    if (sel.nodeName) {
                        if (sel._DT_RowIndex !== undefined) {
                            return [sel._DT_RowIndex]
                        } else if (sel._DT_CellIndex) {
                            return [sel._DT_CellIndex.row]
                        } else {
                            var host = $(sel).closest("*[data-dt-row]");
                            return host.length ? [host.data("dt-row")] : []
                        }
                    }
                    if (typeof sel === "string" && sel.charAt(0) === "#") {
                        var rowObj = settings.aIds[sel.replace(/^#/, "")];
                        if (rowObj !== undefined) {
                            return [rowObj.idx]
                        }
                    }
                    return $(nodes).filter(sel).map(function() {
                        return this._DT_RowIndex
                    }).toArray()
                };
                return _selector_run("row", selector, run, settings, opts)
            };
            _api_register("rows()", function(selector, opts) {
                if (selector === undefined) {
                    selector = ""
                } else if ($.isPlainObject(selector)) {
                    opts = selector;
                    selector = ""
                }
                opts = _selector_opts(opts);
                var inst = this.iterator("table", function(settings) {
                    return __row_selector(settings, selector, opts)
                }, 1);
                inst.selector.rows = selector;
                inst.selector.opts = opts;
                return inst
            });
            _api_register("rows().nodes()", function() {
                return this.iterator("row", function(settings, row) {
                    return settings.aoData[row].nTr || undefined
                }, 1)
            });
            _api_register("rows().data()", function() {
                return this.iterator(true, "rows", function(settings, rows) {
                    return _pluck_order(settings.aoData, rows, "_aData")
                }, 1)
            });
            _api_registerPlural("rows().cache()", "row().cache()", function(type) {
                return this.iterator("row", function(settings, row) {
                    var r = settings.aoData[row];
                    return type === "search" ? r._aFilterData : r._aSortData
                }, 1)
            });
            _api_registerPlural("rows().invalidate()", "row().invalidate()", function(src) {
                return this.iterator("row", function(settings, row) {
                    _fnInvalidate(settings, row, src)
                })
            });
            _api_registerPlural("rows().indexes()", "row().index()", function() {
                return this.iterator("row", function(settings, row) {
                    return row
                }, 1)
            });
            _api_registerPlural("rows().ids()", "row().id()", function(hash) {
                var a = [];
                var context = this.context;
                for (var i = 0, ien = context.length; i < ien; i++) {
                    for (var j = 0, jen = this[i].length; j < jen; j++) {
                        var id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);
                        a.push((hash === true ? "#" : "") + id)
                    }
                }
                return new _Api2(context, a)
            });
            _api_registerPlural("rows().remove()", "row().remove()", function() {
                var that = this;
                this.iterator("row", function(settings, row, thatIdx) {
                    var data = settings.aoData;
                    var rowData = data[row];
                    var i, ien, j, jen;
                    var loopRow, loopCells;
                    data.splice(row, 1);
                    for (i = 0, ien = data.length; i < ien; i++) {
                        loopRow = data[i];
                        loopCells = loopRow.anCells;
                        if (loopRow.nTr !== null) {
                            loopRow.nTr._DT_RowIndex = i
                        }
                        if (loopCells !== null) {
                            for (j = 0, jen = loopCells.length; j < jen; j++) {
                                loopCells[j]._DT_CellIndex.row = i
                            }
                        }
                    }
                    _fnDeleteIndex(settings.aiDisplayMaster, row);
                    _fnDeleteIndex(settings.aiDisplay, row);
                    _fnDeleteIndex(that[thatIdx], row, false);
                    if (settings._iRecordsDisplay > 0) {
                        settings._iRecordsDisplay--
                    }
                    _fnLengthOverflow(settings);
                    var id = settings.rowIdFn(rowData._aData);
                    if (id !== undefined) {
                        delete settings.aIds[id]
                    }
                });
                this.iterator("table", function(settings) {
                    for (var i = 0, ien = settings.aoData.length; i < ien; i++) {
                        settings.aoData[i].idx = i
                    }
                });
                return this
            });
            _api_register("rows.add()", function(rows) {
                var newRows = this.iterator("table", function(settings) {
                    var row, i, ien;
                    var out = [];
                    for (i = 0, ien = rows.length; i < ien; i++) {
                        row = rows[i];
                        if (row.nodeName && row.nodeName.toUpperCase() === "TR") {
                            out.push(_fnAddTr(settings, row)[0])
                        } else {
                            out.push(_fnAddData(settings, row))
                        }
                    }
                    return out
                }, 1);
                var modRows = this.rows(-1);
                modRows.pop();
                $.merge(modRows, newRows);
                return modRows
            });
            _api_register("row()", function(selector, opts) {
                return _selector_first(this.rows(selector, opts))
            });
            _api_register("row().data()", function(data) {
                var ctx = this.context;
                if (data === undefined) {
                    return ctx.length && this.length ? ctx[0].aoData[this[0]]._aData : undefined
                }
                ctx[0].aoData[this[0]]._aData = data;
                _fnInvalidate(ctx[0], this[0], "data");
                return this
            });
            _api_register("row().node()", function() {
                var ctx = this.context;
                return ctx.length && this.length ? ctx[0].aoData[this[0]].nTr || null : null
            });
            _api_register("row.add()", function(row) {
                if (row instanceof $ && row.length) {
                    row = row[0]
                }
                var rows = this.iterator("table", function(settings) {
                    if (row.nodeName && row.nodeName.toUpperCase() === "TR") {
                        return _fnAddTr(settings, row)[0]
                    }
                    return _fnAddData(settings, row)
                });
                return this.row(rows[0])
            });
            var __details_add = function __details_add(ctx, row, data, klass) {
                var rows = [];
                var addRow = function addRow(r, k) {
                    if ($.isArray(r) || r instanceof $) {
                        for (var i = 0, ien = r.length; i < ien; i++) {
                            addRow(r[i], k)
                        }
                        return
                    }
                    if (r.nodeName && r.nodeName.toLowerCase() === "tr") {
                        rows.push(r)
                    } else {
                        var created = $("<tr><td/></tr>").addClass(k);
                        $("td", created).addClass(k).html(r)[0].colSpan = _fnVisbleColumns(ctx);
                        rows.push(created[0])
                    }
                };
                addRow(data, klass);
                if (row._details) {
                    row._details.detach()
                }
                row._details = $(rows);
                if (row._detailsShow) {
                    row._details.insertAfter(row.nTr)
                }
            };
            var __details_remove = function __details_remove(api, idx) {
                var ctx = api.context;
                if (ctx.length) {
                    var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];
                    if (row && row._details) {
                        row._details.remove();
                        row._detailsShow = undefined;
                        row._details = undefined
                    }
                }
            };
            var __details_display = function __details_display(api, show) {
                var ctx = api.context;
                if (ctx.length && api.length) {
                    var row = ctx[0].aoData[api[0]];
                    if (row._details) {
                        row._detailsShow = show;
                        if (show) {
                            row._details.insertAfter(row.nTr)
                        } else {
                            row._details.detach()
                        }
                        __details_events(ctx[0])
                    }
                }
            };
            var __details_events = function __details_events(settings) {
                var api = new _Api2(settings);
                var namespace = ".dt.DT_details";
                var drawEvent = "draw" + namespace;
                var colvisEvent = "column-visibility" + namespace;
                var destroyEvent = "destroy" + namespace;
                var data = settings.aoData;
                api.off(drawEvent + " " + colvisEvent + " " + destroyEvent);
                if (_pluck(data, "_details").length > 0) {
                    api.on(drawEvent, function(e, ctx) {
                        if (settings !== ctx) {
                            return
                        }
                        api.rows({
                            page: "current"
                        }).eq(0).each(function(idx) {
                            var row = data[idx];
                            if (row._detailsShow) {
                                row._details.insertAfter(row.nTr)
                            }
                        })
                    });
                    api.on(colvisEvent, function(e, ctx, idx, vis) {
                        if (settings !== ctx) {
                            return
                        }
                        var row, visible = _fnVisbleColumns(ctx);
                        for (var i = 0, ien = data.length; i < ien; i++) {
                            row = data[i];
                            if (row._details) {
                                row._details.children("td[colspan]").attr("colspan", visible)
                            }
                        }
                    });
                    api.on(destroyEvent, function(e, ctx) {
                        if (settings !== ctx) {
                            return
                        }
                        for (var i = 0, ien = data.length; i < ien; i++) {
                            if (data[i]._details) {
                                __details_remove(api, i)
                            }
                        }
                    })
                }
            };
            var _emp = "";
            var _child_obj = _emp + "row().child";
            var _child_mth = _child_obj + "()";
            _api_register(_child_mth, function(data, klass) {
                var ctx = this.context;
                if (data === undefined) {
                    return ctx.length && this.length ? ctx[0].aoData[this[0]]._details : undefined
                } else if (data === true) {
                    this.child.show()
                } else if (data === false) {
                    __details_remove(this)
                } else if (ctx.length && this.length) {
                    __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass)
                }
                return this
            });
            _api_register([_child_obj + ".show()", _child_mth + ".show()"], function(show) {
                __details_display(this, true);
                return this
            });
            _api_register([_child_obj + ".hide()", _child_mth + ".hide()"], function() {
                __details_display(this, false);
                return this
            });
            _api_register([_child_obj + ".remove()", _child_mth + ".remove()"], function() {
                __details_remove(this);
                return this
            });
            _api_register(_child_obj + ".isShown()", function() {
                var ctx = this.context;
                if (ctx.length && this.length) {
                    return ctx[0].aoData[this[0]]._detailsShow || false
                }
                return false
            });
            var __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;
            var __columnData = function __columnData(settings, column, r1, r2, rows) {
                var a = [];
                for (var row = 0, ien = rows.length; row < ien; row++) {
                    a.push(_fnGetCellData(settings, rows[row], column))
                }
                return a
            };
            var __column_selector = function __column_selector(settings, selector, opts) {
                var columns = settings.aoColumns,
                    names = _pluck(columns, "sName"),
                    nodes = _pluck(columns, "nTh");
                var run = function run(s) {
                    var selInt = _intVal(s);
                    if (s === "") {
                        return _range(columns.length)
                    }
                    if (selInt !== null) {
                        return [selInt >= 0 ? selInt : columns.length + selInt]
                    }
                    if (typeof s === "function") {
                        var rows = _selector_row_indexes(settings, opts);
                        return $.map(columns, function(col, idx) {
                            return s(idx, __columnData(settings, idx, 0, 0, rows), nodes[idx]) ? idx : null
                        })
                    }
                    var match = typeof s === "string" ? s.match(__re_column_selector) : "";
                    if (match) {
                        switch (match[2]) {
                            case "visIdx":
                            case "visible":
                                var idx = parseInt(match[1], 10);
                                if (idx < 0) {
                                    var visColumns = $.map(columns, function(col, i) {
                                        return col.bVisible ? i : null
                                    });
                                    return [visColumns[visColumns.length + idx]]
                                }
                                return [_fnVisibleToColumnIndex(settings, idx)];
                            case "name":
                                return $.map(names, function(name, i) {
                                    return name === match[1] ? i : null
                                });
                            default:
                                return []
                        }
                    }
                    if (s.nodeName && s._DT_CellIndex) {
                        return [s._DT_CellIndex.column]
                    }
                    var jqResult = $(nodes).filter(s).map(function() {
                        return $.inArray(this, nodes)
                    }).toArray();
                    if (jqResult.length || !s.nodeName) {
                        return jqResult
                    }
                    var host = $(s).closest("*[data-dt-column]");
                    return host.length ? [host.data("dt-column")] : []
                };
                return _selector_run("column", selector, run, settings, opts)
            };
            var __setColumnVis = function __setColumnVis(settings, column, vis) {
                var cols = settings.aoColumns,
                    col = cols[column],
                    data = settings.aoData,
                    row, cells, i, ien, tr;
                if (vis === undefined) {
                    return col.bVisible
                }
                if (col.bVisible === vis) {
                    return
                }
                if (vis) {
                    var insertBefore = $.inArray(true, _pluck(cols, "bVisible"), column + 1);
                    for (i = 0, ien = data.length; i < ien; i++) {
                        tr = data[i].nTr;
                        cells = data[i].anCells;
                        if (tr) {
                            tr.insertBefore(cells[column], cells[insertBefore] || null)
                        }
                    }
                } else {
                    $(_pluck(settings.aoData, "anCells", column)).detach()
                }
                col.bVisible = vis;
                _fnDrawHead(settings, settings.aoHeader);
                _fnDrawHead(settings, settings.aoFooter);
                _fnSaveState(settings)
            };
            _api_register("columns()", function(selector, opts) {
                if (selector === undefined) {
                    selector = ""
                } else if ($.isPlainObject(selector)) {
                    opts = selector;
                    selector = ""
                }
                opts = _selector_opts(opts);
                var inst = this.iterator("table", function(settings) {
                    return __column_selector(settings, selector, opts)
                }, 1);
                inst.selector.cols = selector;
                inst.selector.opts = opts;
                return inst
            });
            _api_registerPlural("columns().header()", "column().header()", function(selector, opts) {
                return this.iterator("column", function(settings, column) {
                    return settings.aoColumns[column].nTh
                }, 1)
            });
            _api_registerPlural("columns().footer()", "column().footer()", function(selector, opts) {
                return this.iterator("column", function(settings, column) {
                    return settings.aoColumns[column].nTf
                }, 1)
            });
            _api_registerPlural("columns().data()", "column().data()", function() {
                return this.iterator("column-rows", __columnData, 1)
            });
            _api_registerPlural("columns().dataSrc()", "column().dataSrc()", function() {
                return this.iterator("column", function(settings, column) {
                    return settings.aoColumns[column].mData
                }, 1)
            });
            _api_registerPlural("columns().cache()", "column().cache()", function(type) {
                return this.iterator("column-rows", function(settings, column, i, j, rows) {
                    return _pluck_order(settings.aoData, rows, type === "search" ? "_aFilterData" : "_aSortData", column)
                }, 1)
            });
            _api_registerPlural("columns().nodes()", "column().nodes()", function() {
                return this.iterator("column-rows", function(settings, column, i, j, rows) {
                    return _pluck_order(settings.aoData, rows, "anCells", column)
                }, 1)
            });
            _api_registerPlural("columns().visible()", "column().visible()", function(vis, calc) {
                var ret = this.iterator("column", function(settings, column) {
                    if (vis === undefined) {
                        return settings.aoColumns[column].bVisible
                    }
                    __setColumnVis(settings, column, vis)
                });
                if (vis !== undefined) {
                    this.iterator("column", function(settings, column) {
                        _fnCallbackFire(settings, null, "column-visibility", [settings, column, vis, calc])
                    });
                    if (calc === undefined || calc) {
                        this.columns.adjust()
                    }
                }
                return ret
            });
            _api_registerPlural("columns().indexes()", "column().index()", function(type) {
                return this.iterator("column", function(settings, column) {
                    return type === "visible" ? _fnColumnIndexToVisible(settings, column) : column
                }, 1)
            });
            _api_register("columns.adjust()", function() {
                return this.iterator("table", function(settings) {
                    _fnAdjustColumnSizing(settings)
                }, 1)
            });
            _api_register("column.index()", function(type, idx) {
                if (this.context.length !== 0) {
                    var ctx = this.context[0];
                    if (type === "fromVisible" || type === "toData") {
                        return _fnVisibleToColumnIndex(ctx, idx)
                    } else if (type === "fromData" || type === "toVisible") {
                        return _fnColumnIndexToVisible(ctx, idx)
                    }
                }
            });
            _api_register("column()", function(selector, opts) {
                return _selector_first(this.columns(selector, opts))
            });
            var __cell_selector = function __cell_selector(settings, selector, opts) {
                var data = settings.aoData;
                var rows = _selector_row_indexes(settings, opts);
                var cells = _removeEmpty(_pluck_order(data, rows, "anCells"));
                var allCells = $([].concat.apply([], cells));
                var row;
                var columns = settings.aoColumns.length;
                var a, i, ien, j, o, host;
                var run = function run(s) {
                    var fnSelector = typeof s === "function";
                    if (s === null || s === undefined || fnSelector) {
                        a = [];
                        for (i = 0, ien = rows.length; i < ien; i++) {
                            row = rows[i];
                            for (j = 0; j < columns; j++) {
                                o = {
                                    row: row,
                                    column: j
                                };
                                if (fnSelector) {
                                    host = data[row];
                                    if (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {
                                        a.push(o)
                                    }
                                } else {
                                    a.push(o)
                                }
                            }
                        }
                        return a
                    }
                    if ($.isPlainObject(s)) {
                        return [s]
                    }
                    var jqResult = allCells.filter(s).map(function(i, el) {
                        return {
                            row: el._DT_CellIndex.row,
                            column: el._DT_CellIndex.column
                        }
                    }).toArray();
                    if (jqResult.length || !s.nodeName) {
                        return jqResult
                    }
                    host = $(s).closest("*[data-dt-row]");
                    return host.length ? [{
                        row: host.data("dt-row"),
                        column: host.data("dt-column")
                    }] : []
                };
                return _selector_run("cell", selector, run, settings, opts)
            };
            _api_register("cells()", function(rowSelector, columnSelector, opts) {
                if ($.isPlainObject(rowSelector)) {
                    if (rowSelector.row === undefined) {
                        opts = rowSelector;
                        rowSelector = null
                    } else {
                        opts = columnSelector;
                        columnSelector = null
                    }
                }
                if ($.isPlainObject(columnSelector)) {
                    opts = columnSelector;
                    columnSelector = null
                }
                if (columnSelector === null || columnSelector === undefined) {
                    return this.iterator("table", function(settings) {
                        return __cell_selector(settings, rowSelector, _selector_opts(opts))
                    })
                }
                var columns = this.columns(columnSelector, opts);
                var rows = this.rows(rowSelector, opts);
                var a, i, ien, j, jen;
                var cells = this.iterator("table", function(settings, idx) {
                    a = [];
                    for (i = 0, ien = rows[idx].length; i < ien; i++) {
                        for (j = 0, jen = columns[idx].length; j < jen; j++) {
                            a.push({
                                row: rows[idx][i],
                                column: columns[idx][j]
                            })
                        }
                    }
                    return a
                }, 1);
                $.extend(cells.selector, {
                    cols: columnSelector,
                    rows: rowSelector,
                    opts: opts
                });
                return cells
            });
            _api_registerPlural("cells().nodes()", "cell().node()", function() {
                return this.iterator("cell", function(settings, row, column) {
                    var data = settings.aoData[row];
                    return data && data.anCells ? data.anCells[column] : undefined
                }, 1)
            });
            _api_register("cells().data()", function() {
                return this.iterator("cell", function(settings, row, column) {
                    return _fnGetCellData(settings, row, column)
                }, 1)
            });
            _api_registerPlural("cells().cache()", "cell().cache()", function(type) {
                type = type === "search" ? "_aFilterData" : "_aSortData";
                return this.iterator("cell", function(settings, row, column) {
                    return settings.aoData[row][type][column]
                }, 1)
            });
            _api_registerPlural("cells().render()", "cell().render()", function(type) {
                return this.iterator("cell", function(settings, row, column) {
                    return _fnGetCellData(settings, row, column, type)
                }, 1)
            });
            _api_registerPlural("cells().indexes()", "cell().index()", function() {
                return this.iterator("cell", function(settings, row, column) {
                    return {
                        row: row,
                        column: column,
                        columnVisible: _fnColumnIndexToVisible(settings, column)
                    }
                }, 1)
            });
            _api_registerPlural("cells().invalidate()", "cell().invalidate()", function(src) {
                return this.iterator("cell", function(settings, row, column) {
                    _fnInvalidate(settings, row, src, column)
                })
            });
            _api_register("cell()", function(rowSelector, columnSelector, opts) {
                return _selector_first(this.cells(rowSelector, columnSelector, opts))
            });
            _api_register("cell().data()", function(data) {
                var ctx = this.context;
                var cell = this[0];
                if (data === undefined) {
                    return ctx.length && cell.length ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column) : undefined
                }
                _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);
                _fnInvalidate(ctx[0], cell[0].row, "data", cell[0].column);
                return this
            });
            _api_register("order()", function(order, dir) {
                var ctx = this.context;
                if (order === undefined) {
                    return ctx.length !== 0 ? ctx[0].aaSorting : undefined
                }
                if (typeof order === "number") {
                    order = [
                        [order, dir]
                    ]
                } else if (order.length && !$.isArray(order[0])) {
                    order = Array.prototype.slice.call(arguments)
                }
                return this.iterator("table", function(settings) {
                    settings.aaSorting = order.slice()
                })
            });
            _api_register("order.listener()", function(node, column, callback) {
                return this.iterator("table", function(settings) {
                    _fnSortAttachListener(settings, node, column, callback)
                })
            });
            _api_register("order.fixed()", function(set) {
                if (!set) {
                    var ctx = this.context;
                    var fixed = ctx.length ? ctx[0].aaSortingFixed : undefined;
                    return $.isArray(fixed) ? {
                        pre: fixed
                    } : fixed
                }
                return this.iterator("table", function(settings) {
                    settings.aaSortingFixed = $.extend(true, {}, set)
                })
            });
            _api_register(["columns().order()", "column().order()"], function(dir) {
                var that = this;
                return this.iterator("table", function(settings, i) {
                    var sort = [];
                    $.each(that[i], function(j, col) {
                        sort.push([col, dir])
                    });
                    settings.aaSorting = sort
                })
            });
            _api_register("search()", function(input, regex, smart, caseInsen) {
                var ctx = this.context;
                if (input === undefined) {
                    return ctx.length !== 0 ? ctx[0].oPreviousSearch.sSearch : undefined
                }
                return this.iterator("table", function(settings) {
                    if (!settings.oFeatures.bFilter) {
                        return
                    }
                    _fnFilterComplete(settings, $.extend({}, settings.oPreviousSearch, {
                        sSearch: input + "",
                        bRegex: regex === null ? false : regex,
                        bSmart: smart === null ? true : smart,
                        bCaseInsensitive: caseInsen === null ? true : caseInsen
                    }), 1)
                })
            });
            _api_registerPlural("columns().search()", "column().search()", function(input, regex, smart, caseInsen) {
                return this.iterator("column", function(settings, column) {
                    var preSearch = settings.aoPreSearchCols;
                    if (input === undefined) {
                        return preSearch[column].sSearch
                    }
                    if (!settings.oFeatures.bFilter) {
                        return
                    }
                    $.extend(preSearch[column], {
                        sSearch: input + "",
                        bRegex: regex === null ? false : regex,
                        bSmart: smart === null ? true : smart,
                        bCaseInsensitive: caseInsen === null ? true : caseInsen
                    });
                    _fnFilterComplete(settings, settings.oPreviousSearch, 1)
                })
            });
            _api_register("state()", function() {
                return this.context.length ? this.context[0].oSavedState : null
            });
            _api_register("state.clear()", function() {
                return this.iterator("table", function(settings) {
                    settings.fnStateSaveCallback.call(settings.oInstance, settings, {})
                })
            });
            _api_register("state.loaded()", function() {
                return this.context.length ? this.context[0].oLoadedState : null
            });
            _api_register("state.save()", function() {
                return this.iterator("table", function(settings) {
                    _fnSaveState(settings)
                })
            });
            DataTable.versionCheck = DataTable.fnVersionCheck = function(version) {
                var aThis = DataTable.version.split(".");
                var aThat = version.split(".");
                var iThis, iThat;
                for (var i = 0, iLen = aThat.length; i < iLen; i++) {
                    iThis = parseInt(aThis[i], 10) || 0;
                    iThat = parseInt(aThat[i], 10) || 0;
                    if (iThis === iThat) {
                        continue
                    }
                    return iThis > iThat
                }
                return true
            };
            DataTable.isDataTable = DataTable.fnIsDataTable = function(table) {
                var t = $(table).get(0);
                var is = false;
                if (table instanceof DataTable.Api) {
                    return true
                }
                $.each(DataTable.settings, function(i, o) {
                    var head = o.nScrollHead ? $("table", o.nScrollHead)[0] : null;
                    var foot = o.nScrollFoot ? $("table", o.nScrollFoot)[0] : null;
                    if (o.nTable === t || head === t || foot === t) {
                        is = true
                    }
                });
                return is
            };
            DataTable.tables = DataTable.fnTables = function(visible) {
                var api = false;
                if ($.isPlainObject(visible)) {
                    api = visible.api;
                    visible = visible.visible
                }
                var a = $.map(DataTable.settings, function(o) {
                    if (!visible || visible && $(o.nTable).is(":visible")) {
                        return o.nTable
                    }
                });
                return api ? new _Api2(a) : a
            };
            DataTable.camelToHungarian = _fnCamelToHungarian;
            _api_register("$()", function(selector, opts) {
                var rows = this.rows(opts).nodes(),
                    jqRows = $(rows);
                return $([].concat(jqRows.filter(selector).toArray(), jqRows.find(selector).toArray()))
            });
            $.each(["on", "one", "off"], function(i, key) {
                _api_register(key + "()", function() {
                    var args = Array.prototype.slice.call(arguments);
                    args[0] = $.map(args[0].split(/\s/), function(e) {
                        return !e.match(/\.dt\b/) ? e + ".dt" : e
                    }).join(" ");
                    var inst = $(this.tables().nodes());
                    inst[key].apply(inst, args);
                    return this
                })
            });
            _api_register("clear()", function() {
                return this.iterator("table", function(settings) {
                    _fnClearTable(settings)
                })
            });
            _api_register("settings()", function() {
                return new _Api2(this.context, this.context)
            });
            _api_register("init()", function() {
                var ctx = this.context;
                return ctx.length ? ctx[0].oInit : null
            });
            _api_register("data()", function() {
                return this.iterator("table", function(settings) {
                    return _pluck(settings.aoData, "_aData")
                }).flatten()
            });
            _api_register("destroy()", function(remove) {
                remove = remove || false;
                return this.iterator("table", function(settings) {
                    var orig = settings.nTableWrapper.parentNode;
                    var classes = settings.oClasses;
                    var table = settings.nTable;
                    var tbody = settings.nTBody;
                    var thead = settings.nTHead;
                    var tfoot = settings.nTFoot;
                    var jqTable = $(table);
                    var jqTbody = $(tbody);
                    var jqWrapper = $(settings.nTableWrapper);
                    var rows = $.map(settings.aoData, function(r) {
                        return r.nTr
                    });
                    var i, ien;
                    settings.bDestroying = true;
                    _fnCallbackFire(settings, "aoDestroyCallback", "destroy", [settings]);
                    if (!remove) {
                        new _Api2(settings).columns().visible(true)
                    }
                    jqWrapper.off(".DT").find(":not(tbody *)").off(".DT");
                    $(window).off(".DT-" + settings.sInstance);
                    if (table != thead.parentNode) {
                        jqTable.children("thead").detach();
                        jqTable.append(thead)
                    }
                    if (tfoot && table != tfoot.parentNode) {
                        jqTable.children("tfoot").detach();
                        jqTable.append(tfoot)
                    }
                    settings.aaSorting = [];
                    settings.aaSortingFixed = [];
                    _fnSortingClasses(settings);
                    $(rows).removeClass(settings.asStripeClasses.join(" "));
                    $("th, td", thead).removeClass(classes.sSortable + " " + classes.sSortableAsc + " " + classes.sSortableDesc + " " + classes.sSortableNone);
                    jqTbody.children().detach();
                    jqTbody.append(rows);
                    var removedMethod = remove ? "remove" : "detach";
                    jqTable[removedMethod]();
                    jqWrapper[removedMethod]();
                    if (!remove && orig) {
                        orig.insertBefore(table, settings.nTableReinsertBefore);
                        jqTable.css("width", settings.sDestroyWidth).removeClass(classes.sTable);
                        ien = settings.asDestroyStripes.length;
                        if (ien) {
                            jqTbody.children().each(function(i) {
                                $(this).addClass(settings.asDestroyStripes[i % ien])
                            })
                        }
                    }
                    var idx = $.inArray(settings, DataTable.settings);
                    if (idx !== -1) {
                        DataTable.settings.splice(idx, 1)
                    }
                })
            });
            $.each(["column", "row", "cell"], function(i, type) {
                _api_register(type + "s().every()", function(fn) {
                    var opts = this.selector.opts;
                    var api = this;
                    return this.iterator(type, function(settings, arg1, arg2, arg3, arg4) {
                        fn.call(api[type](arg1, type === "cell" ? arg2 : opts, type === "cell" ? opts : undefined), arg1, arg2, arg3, arg4)
                    })
                })
            });
            _api_register("i18n()", function(token, def, plural) {
                var ctx = this.context[0];
                var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);
                if (resolved === undefined) {
                    resolved = def
                }
                if (plural !== undefined && $.isPlainObject(resolved)) {
                    resolved = resolved[plural] !== undefined ? resolved[plural] : resolved._
                }
                return resolved.replace("%d", plural)
            });
            DataTable.version = "1.10.16";
            DataTable.settings = [];
            DataTable.models = {};
            DataTable.models.oSearch = {
                bCaseInsensitive: true,
                sSearch: "",
                bRegex: false,
                bSmart: true
            };
            DataTable.models.oRow = {
                nTr: null,
                anCells: null,
                _aData: [],
                _aSortData: null,
                _aFilterData: null,
                _sFilterRow: null,
                _sRowStripe: "",
                src: null,
                idx: -1
            };
            DataTable.models.oColumn = {
                idx: null,
                aDataSort: null,
                asSorting: null,
                bSearchable: null,
                bSortable: null,
                bVisible: null,
                _sManualType: null,
                _bAttrSrc: false,
                fnCreatedCell: null,
                fnGetData: null,
                fnSetData: null,
                mData: null,
                mRender: null,
                nTh: null,
                nTf: null,
                sClass: null,
                sContentPadding: null,
                sDefaultContent: null,
                sName: null,
                sSortDataType: "std",
                sSortingClass: null,
                sSortingClassJUI: null,
                sTitle: null,
                sType: null,
                sWidth: null,
                sWidthOrig: null
            };
            DataTable.defaults = {
                aaData: null,
                aaSorting: [
                    [0, "asc"]
                ],
                aaSortingFixed: [],
                ajax: null,
                aLengthMenu: [10, 25, 50, 100],
                aoColumns: null,
                aoColumnDefs: null,
                aoSearchCols: [],
                asStripeClasses: null,
                bAutoWidth: true,
                bDeferRender: false,
                bDestroy: false,
                bFilter: true,
                bInfo: true,
                bLengthChange: true,
                bPaginate: true,
                bProcessing: false,
                bRetrieve: false,
                bScrollCollapse: false,
                bServerSide: false,
                bSort: true,
                bSortMulti: true,
                bSortCellsTop: false,
                bSortClasses: true,
                bStateSave: false,
                fnCreatedRow: null,
                fnDrawCallback: null,
                fnFooterCallback: null,
                fnFormatNumber: function fnFormatNumber(toFormat) {
                    return toFormat.toString().replace(/\B(?=(\d{3})+(?!\d))/g, this.oLanguage.sThousands)
                },
                fnHeaderCallback: null,
                fnInfoCallback: null,
                fnInitComplete: null,
                fnPreDrawCallback: null,
                fnRowCallback: null,
                fnServerData: null,
                fnServerParams: null,
                fnStateLoadCallback: function fnStateLoadCallback(settings) {
                    try {
                        return JSON.parse((settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem("DataTables_" + settings.sInstance + "_" + location.pathname))
                    } catch (e) {}
                },
                fnStateLoadParams: null,
                fnStateLoaded: null,
                fnStateSaveCallback: function fnStateSaveCallback(settings, data) {
                    try {
                        (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem("DataTables_" + settings.sInstance + "_" + location.pathname, JSON.stringify(data))
                    } catch (e) {}
                },
                fnStateSaveParams: null,
                iStateDuration: 7200,
                iDeferLoading: null,
                iDisplayLength: 10,
                iDisplayStart: 0,
                iTabIndex: 0,
                oClasses: {},
                oLanguage: {
                    oAria: {
                        sSortAscending: ": activate to sort column ascending",
                        sSortDescending: ": activate to sort column descending"
                    },
                    oPaginate: {
                        sFirst: "First",
                        sLast: "Last",
                        sNext: "Next",
                        sPrevious: "Previous"
                    },
                    sEmptyTable: "No data available in table",
                    sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
                    sInfoEmpty: "Showing 0 to 0 of 0 entries",
                    sInfoFiltered: "(filtered from _MAX_ total entries)",
                    sInfoPostFix: "",
                    sDecimal: "",
                    sThousands: ",",
                    sLengthMenu: "Show _MENU_ entries",
                    sLoadingRecords: "Loading...",
                    sProcessing: "Processing...",
                    sSearch: "Search:",
                    sSearchPlaceholder: "",
                    sUrl: "",
                    sZeroRecords: "No matching records found"
                },
                oSearch: $.extend({}, DataTable.models.oSearch),
                sAjaxDataProp: "data",
                sAjaxSource: null,
                sDom: "lfrtip",
                searchDelay: null,
                sPaginationType: "simple_numbers",
                sScrollX: "",
                sScrollXInner: "",
                sScrollY: "",
                sServerMethod: "GET",
                renderer: null,
                rowId: "DT_RowId"
            };
            _fnHungarianMap(DataTable.defaults);
            DataTable.defaults.column = {
                aDataSort: null,
                iDataSort: -1,
                asSorting: ["asc", "desc"],
                bSearchable: true,
                bSortable: true,
                bVisible: true,
                fnCreatedCell: null,
                mData: null,
                mRender: null,
                sCellType: "td",
                sClass: "",
                sContentPadding: "",
                sDefaultContent: null,
                sName: "",
                sSortDataType: "std",
                sTitle: null,
                sType: null,
                sWidth: null
            };
            _fnHungarianMap(DataTable.defaults.column);
            DataTable.models.oSettings = {
                oFeatures: {
                    bAutoWidth: null,
                    bDeferRender: null,
                    bFilter: null,
                    bInfo: null,
                    bLengthChange: null,
                    bPaginate: null,
                    bProcessing: null,
                    bServerSide: null,
                    bSort: null,
                    bSortMulti: null,
                    bSortClasses: null,
                    bStateSave: null
                },
                oScroll: {
                    bCollapse: null,
                    iBarWidth: 0,
                    sX: null,
                    sXInner: null,
                    sY: null
                },
                oLanguage: {
                    fnInfoCallback: null
                },
                oBrowser: {
                    bScrollOversize: false,
                    bScrollbarLeft: false,
                    bBounding: false,
                    barWidth: 0
                },
                ajax: null,
                aanFeatures: [],
                aoData: [],
                aiDisplay: [],
                aiDisplayMaster: [],
                aIds: {},
                aoColumns: [],
                aoHeader: [],
                aoFooter: [],
                oPreviousSearch: {},
                aoPreSearchCols: [],
                aaSorting: null,
                aaSortingFixed: [],
                asStripeClasses: null,
                asDestroyStripes: [],
                sDestroyWidth: 0,
                aoRowCallback: [],
                aoHeaderCallback: [],
                aoFooterCallback: [],
                aoDrawCallback: [],
                aoRowCreatedCallback: [],
                aoPreDrawCallback: [],
                aoInitComplete: [],
                aoStateSaveParams: [],
                aoStateLoadParams: [],
                aoStateLoaded: [],
                sTableId: "",
                nTable: null,
                nTHead: null,
                nTFoot: null,
                nTBody: null,
                nTableWrapper: null,
                bDeferLoading: false,
                bInitialised: false,
                aoOpenRows: [],
                sDom: null,
                searchDelay: null,
                sPaginationType: "two_button",
                iStateDuration: 0,
                aoStateSave: [],
                aoStateLoad: [],
                oSavedState: null,
                oLoadedState: null,
                sAjaxSource: null,
                sAjaxDataProp: null,
                bAjaxDataGet: true,
                jqXHR: null,
                json: undefined,
                oAjaxData: undefined,
                fnServerData: null,
                aoServerParams: [],
                sServerMethod: null,
                fnFormatNumber: null,
                aLengthMenu: null,
                iDraw: 0,
                bDrawing: false,
                iDrawError: -1,
                _iDisplayLength: 10,
                _iDisplayStart: 0,
                _iRecordsTotal: 0,
                _iRecordsDisplay: 0,
                oClasses: {},
                bFiltered: false,
                bSorted: false,
                bSortCellsTop: null,
                oInit: null,
                aoDestroyCallback: [],
                fnRecordsTotal: function fnRecordsTotal() {
                    return _fnDataSource(this) == "ssp" ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length
                },
                fnRecordsDisplay: function fnRecordsDisplay() {
                    return _fnDataSource(this) == "ssp" ? this._iRecordsDisplay * 1 : this.aiDisplay.length
                },
                fnDisplayEnd: function fnDisplayEnd() {
                    var len = this._iDisplayLength,
                        start = this._iDisplayStart,
                        calc = start + len,
                        records = this.aiDisplay.length,
                        features = this.oFeatures,
                        paginate = features.bPaginate;
                    if (features.bServerSide) {
                        return paginate === false || len === -1 ? start + records : Math.min(start + len, this._iRecordsDisplay)
                    } else {
                        return !paginate || calc > records || len === -1 ? records : calc
                    }
                },
                oInstance: null,
                sInstance: null,
                iTabIndex: 0,
                nScrollHead: null,
                nScrollFoot: null,
                aLastSort: [],
                oPlugins: {},
                rowIdFn: null,
                rowId: null
            };
            DataTable.ext = _ext = {
                buttons: {},
                classes: {},
                builder: "-source-",
                errMode: "alert",
                feature: [],
                search: [],
                selector: {
                    cell: [],
                    column: [],
                    row: []
                },
                internal: {},
                legacy: {
                    ajax: null
                },
                pager: {},
                renderer: {
                    pageButton: {},
                    header: {}
                },
                order: {},
                type: {
                    detect: [],
                    search: {},
                    order: {}
                },
                _unique: 0,
                fnVersionCheck: DataTable.fnVersionCheck,
                iApiIndex: 0,
                oJUIClasses: {},
                sVersion: DataTable.version
            };
            $.extend(_ext, {
                afnFiltering: _ext.search,
                aTypes: _ext.type.detect,
                ofnSearch: _ext.type.search,
                oSort: _ext.type.order,
                afnSortData: _ext.order,
                aoFeatures: _ext.feature,
                oApi: _ext.internal,
                oStdClasses: _ext.classes,
                oPagination: _ext.pager
            });
            $.extend(DataTable.ext.classes, {
                sTable: "dataTable",
                sNoFooter: "no-footer",
                sPageButton: "paginate_button",
                sPageButtonActive: "current",
                sPageButtonDisabled: "disabled",
                sStripeOdd: "odd",
                sStripeEven: "even",
                sRowEmpty: "dataTables_empty",
                sWrapper: "dataTables_wrapper",
                sFilter: "dataTables_filter",
                sInfo: "dataTables_info",
                sPaging: "dataTables_paginate paging_",
                sLength: "dataTables_length",
                sProcessing: "dataTables_processing",
                sSortAsc: "sorting_asc",
                sSortDesc: "sorting_desc",
                sSortable: "sorting",
                sSortableAsc: "sorting_asc_disabled",
                sSortableDesc: "sorting_desc_disabled",
                sSortableNone: "sorting_disabled",
                sSortColumn: "sorting_",
                sFilterInput: "",
                sLengthSelect: "",
                sScrollWrapper: "dataTables_scroll",
                sScrollHead: "dataTables_scrollHead",
                sScrollHeadInner: "dataTables_scrollHeadInner",
                sScrollBody: "dataTables_scrollBody",
                sScrollFoot: "dataTables_scrollFoot",
                sScrollFootInner: "dataTables_scrollFootInner",
                sHeaderTH: "",
                sFooterTH: "",
                sSortJUIAsc: "",
                sSortJUIDesc: "",
                sSortJUI: "",
                sSortJUIAscAllowed: "",
                sSortJUIDescAllowed: "",
                sSortJUIWrapper: "",
                sSortIcon: "",
                sJUIHeader: "",
                sJUIFooter: ""
            });
            var extPagination = DataTable.ext.pager;

            function _numbers(page, pages) {
                var numbers = [],
                    buttons = extPagination.numbers_length,
                    half = Math.floor(buttons / 2),
                    i = 1;
                if (pages <= buttons) {
                    numbers = _range(0, pages)
                } else if (page <= half) {
                    numbers = _range(0, buttons - 2);
                    numbers.push("ellipsis");
                    numbers.push(pages - 1)
                } else if (page >= pages - 1 - half) {
                    numbers = _range(pages - (buttons - 2), pages);
                    numbers.splice(0, 0, "ellipsis");
                    numbers.splice(0, 0, 0)
                } else {
                    numbers = _range(page - half + 2, page + half - 1);
                    numbers.push("ellipsis");
                    numbers.push(pages - 1);
                    numbers.splice(0, 0, "ellipsis");
                    numbers.splice(0, 0, 0)
                }
                numbers.DT_el = "span";
                return numbers
            }
            $.extend(extPagination, {
                simple: function simple(page, pages) {
                    return ["previous", "next"]
                },
                full: function full(page, pages) {
                    return ["first", "previous", "next", "last"]
                },
                numbers: function numbers(page, pages) {
                    return [_numbers(page, pages)]
                },
                simple_numbers: function simple_numbers(page, pages) {
                    return ["previous", _numbers(page, pages), "next"]
                },
                full_numbers: function full_numbers(page, pages) {
                    return ["first", "previous", _numbers(page, pages), "next", "last"]
                },
                first_last_numbers: function first_last_numbers(page, pages) {
                    return ["first", _numbers(page, pages), "last"]
                },
                _numbers: _numbers,
                numbers_length: 7
            });
            $.extend(true, DataTable.ext.renderer, {
                pageButton: {
                    _: function _(settings, host, idx, buttons, page, pages) {
                        var classes = settings.oClasses;
                        var lang = settings.oLanguage.oPaginate;
                        var aria = settings.oLanguage.oAria.paginate || {};
                        var btnDisplay, btnClass, counter = 0;
                        var attach = function attach(container, buttons) {
                            var i, ien, node, button;
                            var clickHandler = function clickHandler(e) {
                                _fnPageChange(settings, e.data.action, true)
                            };
                            for (i = 0, ien = buttons.length; i < ien; i++) {
                                button = buttons[i];
                                if ($.isArray(button)) {
                                    var inner = $("<" + (button.DT_el || "div") + "/>").appendTo(container);
                                    attach(inner, button)
                                } else {
                                    btnDisplay = null;
                                    btnClass = "";
                                    switch (button) {
                                        case "ellipsis":
                                            container.append('<span class="ellipsis">&#x2026;</span>');
                                            break;
                                        case "first":
                                            btnDisplay = lang.sFirst;
                                            btnClass = button + (page > 0 ? "" : " " + classes.sPageButtonDisabled);
                                            break;
                                        case "previous":
                                            btnDisplay = lang.sPrevious;
                                            btnClass = button + (page > 0 ? "" : " " + classes.sPageButtonDisabled);
                                            break;
                                        case "next":
                                            btnDisplay = lang.sNext;
                                            btnClass = button + (page < pages - 1 ? "" : " " + classes.sPageButtonDisabled);
                                            break;
                                        case "last":
                                            btnDisplay = lang.sLast;
                                            btnClass = button + (page < pages - 1 ? "" : " " + classes.sPageButtonDisabled);
                                            break;
                                        default:
                                            btnDisplay = button + 1;
                                            btnClass = page === button ? classes.sPageButtonActive : "";
                                            break
                                    }
                                    if (btnDisplay !== null) {
                                        node = $("<a>", {
                                            class: classes.sPageButton + " " + btnClass,
                                            "aria-controls": settings.sTableId,
                                            "aria-label": aria[button],
                                            "data-dt-idx": counter,
                                            tabindex: settings.iTabIndex,
                                            id: idx === 0 && typeof button === "string" ? settings.sTableId + "_" + button : null
                                        }).html(btnDisplay).appendTo(container);
                                        _fnBindAction(node, {
                                            action: button
                                        }, clickHandler);
                                        counter++
                                    }
                                }
                            }
                        };
                        var activeEl;
                        try {
                            activeEl = $(host).find(document.activeElement).data("dt-idx")
                        } catch (e) {}
                        attach($(host).empty(), buttons);
                        if (activeEl !== undefined) {
                            $(host).find("[data-dt-idx=" + activeEl + "]").focus()
                        }
                    }
                }
            });
            $.extend(DataTable.ext.type.detect, [function(d, settings) {
                var decimal = settings.oLanguage.sDecimal;
                return _isNumber(d, decimal) ? "num" + decimal : null
            }, function(d, settings) {
                if (d && !(d instanceof Date) && !_re_date.test(d)) {
                    return null
                }
                var parsed = Date.parse(d);
                return parsed !== null && !isNaN(parsed) || _empty(d) ? "date" : null
            }, function(d, settings) {
                var decimal = settings.oLanguage.sDecimal;
                return _isNumber(d, decimal, true) ? "num-fmt" + decimal : null
            }, function(d, settings) {
                var decimal = settings.oLanguage.sDecimal;
                return _htmlNumeric(d, decimal) ? "html-num" + decimal : null
            }, function(d, settings) {
                var decimal = settings.oLanguage.sDecimal;
                return _htmlNumeric(d, decimal, true) ? "html-num-fmt" + decimal : null
            }, function(d, settings) {
                return _empty(d) || typeof d === "string" && d.indexOf("<") !== -1 ? "html" : null
            }]);
            $.extend(DataTable.ext.type.search, {
                html: function html(data) {
                    return _empty(data) ? data : typeof data === "string" ? data.replace(_re_new_lines, " ").replace(_re_html, "") : ""
                },
                string: function string(data) {
                    return _empty(data) ? data : typeof data === "string" ? data.replace(_re_new_lines, " ") : data
                }
            });
            var __numericReplace = function __numericReplace(d, decimalPlace, re1, re2) {
                if (d !== 0 && (!d || d === "-")) {
                    return -Infinity
                }
                if (decimalPlace) {
                    d = _numToDecimal(d, decimalPlace)
                }
                if (d.replace) {
                    if (re1) {
                        d = d.replace(re1, "")
                    }
                    if (re2) {
                        d = d.replace(re2, "")
                    }
                }
                return d * 1
            };

            function _addNumericSort(decimalPlace) {
                $.each({
                    num: function num(d) {
                        return __numericReplace(d, decimalPlace)
                    },
                    "num-fmt": function numFmt(d) {
                        return __numericReplace(d, decimalPlace, _re_formatted_numeric)
                    },
                    "html-num": function htmlNum(d) {
                        return __numericReplace(d, decimalPlace, _re_html)
                    },
                    "html-num-fmt": function htmlNumFmt(d) {
                        return __numericReplace(d, decimalPlace, _re_html, _re_formatted_numeric)
                    }
                }, function(key, fn) {
                    _ext.type.order[key + decimalPlace + "-pre"] = fn;
                    if (key.match(/^html\-/)) {
                        _ext.type.search[key + decimalPlace] = _ext.type.search.html
                    }
                })
            }
            $.extend(_ext.type.order, {
                "date-pre": function datePre(d) {
                    return Date.parse(d) || -Infinity
                },
                "html-pre": function htmlPre(a) {
                    return _empty(a) ? "" : a.replace ? a.replace(/<.*?>/g, "").toLowerCase() : a + ""
                },
                "string-pre": function stringPre(a) {
                    return _empty(a) ? "" : typeof a === "string" ? a.toLowerCase() : !a.toString ? "" : a.toString()
                },
                "string-asc": function stringAsc(x, y) {
                    return x < y ? -1 : x > y ? 1 : 0
                },
                "string-desc": function stringDesc(x, y) {
                    return x < y ? 1 : x > y ? -1 : 0
                }
            });
            _addNumericSort("");
            $.extend(true, DataTable.ext.renderer, {
                header: {
                    _: function _(settings, cell, column, classes) {
                        $(settings.nTable).on("order.dt.DT", function(e, ctx, sorting, columns) {
                            if (settings !== ctx) {
                                return
                            }
                            var colIdx = column.idx;
                            cell.removeClass(column.sSortingClass + " " + classes.sSortAsc + " " + classes.sSortDesc).addClass(columns[colIdx] == "asc" ? classes.sSortAsc : columns[colIdx] == "desc" ? classes.sSortDesc : column.sSortingClass)
                        })
                    },
                    jqueryui: function jqueryui(settings, cell, column, classes) {
                        $("<div/>").addClass(classes.sSortJUIWrapper).append(cell.contents()).append($("<span/>").addClass(classes.sSortIcon + " " + column.sSortingClassJUI)).appendTo(cell);
                        $(settings.nTable).on("order.dt.DT", function(e, ctx, sorting, columns) {
                            if (settings !== ctx) {
                                return
                            }
                            var colIdx = column.idx;
                            cell.removeClass(classes.sSortAsc + " " + classes.sSortDesc).addClass(columns[colIdx] == "asc" ? classes.sSortAsc : columns[colIdx] == "desc" ? classes.sSortDesc : column.sSortingClass);
                            cell.find("span." + classes.sSortIcon).removeClass(classes.sSortJUIAsc + " " + classes.sSortJUIDesc + " " + classes.sSortJUI + " " + classes.sSortJUIAscAllowed + " " + classes.sSortJUIDescAllowed).addClass(columns[colIdx] == "asc" ? classes.sSortJUIAsc : columns[colIdx] == "desc" ? classes.sSortJUIDesc : column.sSortingClassJUI)
                        })
                    }
                }
            });
            var __htmlEscapeEntities = function __htmlEscapeEntities(d) {
                return typeof d === "string" ? d.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;") : d
            };
            DataTable.render = {
                number: function number(thousands, decimal, precision, prefix, postfix) {
                    return {
                        display: function display(d) {
                            if (typeof d !== "number" && typeof d !== "string") {
                                return d
                            }
                            var negative = d < 0 ? "-" : "";
                            var flo = parseFloat(d);
                            if (isNaN(flo)) {
                                return __htmlEscapeEntities(d)
                            }
                            flo = flo.toFixed(precision);
                            d = Math.abs(flo);
                            var intPart = parseInt(d, 10);
                            var floatPart = precision ? decimal + (d - intPart).toFixed(precision).substring(2) : "";
                            return negative + (prefix || "") + intPart.toString().replace(/\B(?=(\d{3})+(?!\d))/g, thousands) + floatPart + (postfix || "")
                        }
                    }
                },
                text: function text() {
                    return {
                        display: __htmlEscapeEntities
                    }
                }
            };

            function _fnExternApiFunc(fn) {
                return function() {
                    var args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));
                    return DataTable.ext.internal[fn].apply(this, args)
                }
            }
            $.extend(DataTable.ext.internal, {
                _fnExternApiFunc: _fnExternApiFunc,
                _fnBuildAjax: _fnBuildAjax,
                _fnAjaxUpdate: _fnAjaxUpdate,
                _fnAjaxParameters: _fnAjaxParameters,
                _fnAjaxUpdateDraw: _fnAjaxUpdateDraw,
                _fnAjaxDataSrc: _fnAjaxDataSrc,
                _fnAddColumn: _fnAddColumn,
                _fnColumnOptions: _fnColumnOptions,
                _fnAdjustColumnSizing: _fnAdjustColumnSizing,
                _fnVisibleToColumnIndex: _fnVisibleToColumnIndex,
                _fnColumnIndexToVisible: _fnColumnIndexToVisible,
                _fnVisbleColumns: _fnVisbleColumns,
                _fnGetColumns: _fnGetColumns,
                _fnColumnTypes: _fnColumnTypes,
                _fnApplyColumnDefs: _fnApplyColumnDefs,
                _fnHungarianMap: _fnHungarianMap,
                _fnCamelToHungarian: _fnCamelToHungarian,
                _fnLanguageCompat: _fnLanguageCompat,
                _fnBrowserDetect: _fnBrowserDetect,
                _fnAddData: _fnAddData,
                _fnAddTr: _fnAddTr,
                _fnNodeToDataIndex: _fnNodeToDataIndex,
                _fnNodeToColumnIndex: _fnNodeToColumnIndex,
                _fnGetCellData: _fnGetCellData,
                _fnSetCellData: _fnSetCellData,
                _fnSplitObjNotation: _fnSplitObjNotation,
                _fnGetObjectDataFn: _fnGetObjectDataFn,
                _fnSetObjectDataFn: _fnSetObjectDataFn,
                _fnGetDataMaster: _fnGetDataMaster,
                _fnClearTable: _fnClearTable,
                _fnDeleteIndex: _fnDeleteIndex,
                _fnInvalidate: _fnInvalidate,
                _fnGetRowElements: _fnGetRowElements,
                _fnCreateTr: _fnCreateTr,
                _fnBuildHead: _fnBuildHead,
                _fnDrawHead: _fnDrawHead,
                _fnDraw: _fnDraw,
                _fnReDraw: _fnReDraw,
                _fnAddOptionsHtml: _fnAddOptionsHtml,
                _fnDetectHeader: _fnDetectHeader,
                _fnGetUniqueThs: _fnGetUniqueThs,
                _fnFeatureHtmlFilter: _fnFeatureHtmlFilter,
                _fnFilterComplete: _fnFilterComplete,
                _fnFilterCustom: _fnFilterCustom,
                _fnFilterColumn: _fnFilterColumn,
                _fnFilter: _fnFilter,
                _fnFilterCreateSearch: _fnFilterCreateSearch,
                _fnEscapeRegex: _fnEscapeRegex,
                _fnFilterData: _fnFilterData,
                _fnFeatureHtmlInfo: _fnFeatureHtmlInfo,
                _fnUpdateInfo: _fnUpdateInfo,
                _fnInfoMacros: _fnInfoMacros,
                _fnInitialise: _fnInitialise,
                _fnInitComplete: _fnInitComplete,
                _fnLengthChange: _fnLengthChange,
                _fnFeatureHtmlLength: _fnFeatureHtmlLength,
                _fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,
                _fnPageChange: _fnPageChange,
                _fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,
                _fnProcessingDisplay: _fnProcessingDisplay,
                _fnFeatureHtmlTable: _fnFeatureHtmlTable,
                _fnScrollDraw: _fnScrollDraw,
                _fnApplyToChildren: _fnApplyToChildren,
                _fnCalculateColumnWidths: _fnCalculateColumnWidths,
                _fnThrottle: _fnThrottle,
                _fnConvertToWidth: _fnConvertToWidth,
                _fnGetWidestNode: _fnGetWidestNode,
                _fnGetMaxLenString: _fnGetMaxLenString,
                _fnStringToCss: _fnStringToCss,
                _fnSortFlatten: _fnSortFlatten,
                _fnSort: _fnSort,
                _fnSortAria: _fnSortAria,
                _fnSortListener: _fnSortListener,
                _fnSortAttachListener: _fnSortAttachListener,
                _fnSortingClasses: _fnSortingClasses,
                _fnSortData: _fnSortData,
                _fnSaveState: _fnSaveState,
                _fnLoadState: _fnLoadState,
                _fnSettingsFromNode: _fnSettingsFromNode,
                _fnLog: _fnLog,
                _fnMap: _fnMap,
                _fnBindAction: _fnBindAction,
                _fnCallbackReg: _fnCallbackReg,
                _fnCallbackFire: _fnCallbackFire,
                _fnLengthOverflow: _fnLengthOverflow,
                _fnRenderer: _fnRenderer,
                _fnDataSource: _fnDataSource,
                _fnRowAttributes: _fnRowAttributes,
                _fnCalculateEnd: function _fnCalculateEnd() {}
            });
            $.fn.dataTable = DataTable;
            DataTable.$ = $;
            $.fn.dataTableSettings = DataTable.settings;
            $.fn.dataTableExt = DataTable.ext;
            $.fn.DataTable = function(opts) {
                return $(this).dataTable(opts).api()
            };
            $.each(DataTable, function(prop, val) {
                $.fn.DataTable[prop] = val
            });
            return $.fn.dataTable
        })
    },
    40: function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(7)
    },
    7: function(module, exports, __webpack_require__) {
        "use strict";
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor)
                }
            }
            return function(Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor
            }
        }();
        var _datatables = __webpack_require__(2);
        var _datatables2 = _interopRequireDefault(_datatables);
        __webpack_require__(9);
        __webpack_require__(10);
        var _util = __webpack_require__(0);
        var _util2 = _interopRequireDefault(_util);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function")
            }
        }
        var SELECTORS = {
            table: "[data-data-table]",
            container: "[data-table-container]",
            preloader: "[data-table-preloader]",
            showAll: "[data-show-all]",
            showAllIcon: "[data-show-all-icon]"
        };
        var Default = {
            activeElement: 2,
            filterActiveClass: ".is-active",
            transition: "all 500ms cubic-bezier(.250, .250, .000, 1.015)",
            pageLenght: 10,
            domPattern: '<t><"t-c__footer table-footer"p B>',
            noSortClass: "no-sort",
            hiddenClass: "hidden"
        };
        var templates = {};
        var DataTableInit = function() {
            function DataTableInit(table, options) {
                _classCallCheck(this, DataTableInit);
                this.table = $(table);
                this.options = options;
                this.container = this.table.closest(SELECTORS.container);
                this.preloader = this.container.find(SELECTORS.preloader);
                this.getConfig();
                this.initPlugin();
                this.bindEvents()
            }
            _createClass(DataTableInit, [{
                key: "getConfig",
                value: function getConfig() {
                    var dataConfig = this.table.data();
                    if (dataConfig.options) {
                        this.dataOptions = _util2.default.parseDataOptions(dataConfig.options)
                    } else {
                        this.dataOptions = {}
                    }
                    this.config = $.extend({}, Default, dataConfig, this.dataOptions, this.options)
                }
            }, {
                key: "bindEvents",
                value: function bindEvents() {}
            }, {
                key: "initPlugin",
                value: function initPlugin() {
                    var that = this;
                    this.dataTable = this.table.dataTable({
                        dom: this.config.domPattern,
                        order: [
                            [0, "asc"]
                        ],
                        autoWidth: false,
                        pageLength: this.config.pageLenght,
                        responsive: {
                            details: {
                                type: "column",
                                target: "[data-show-all]",
                                renderer: function renderer(api, rowIdx, columns) {
                                    columns.shift();
                                    columns.pop();
                                    var data = $.map(columns, function(col, i) {
                                        return col.hidden ? "\n                                    <li>\n                                        <strong>" + col.title + "</strong>" + col.data + "\n                                    </li>                   \n                                " : ""
                                    }).join("");
                                    data = ' \n                            <ul class="child-table">  \n                                ' + data + " \n                            </ul>  \n                        ";
                                    return data ? data : false
                                }
                            }
                        },
                        language: {
                            paginate: {
                                previous: "",
                                next: ""
                            }
                        },
                        columnDefs: [{
                            targets: "no-sort",
                            orderable: false
                        }, {
                            targets: "filter",
                            name: "filter"
                        }, {
                            responsivePriority: 0,
                            targets: -1
                        }],
                        buttons: [{
                            text: "10",
                            action: function action(e, dt, node, config) {
                                dt.page.len(10).draw();
                                $(node).parent().find(".active").removeClass("active");
                                $(node).addClass("active")
                            },
                            init: function init(dt, node, config) {
                                $(node).addClass("active")
                            }
                        }, {
                            text: "25",
                            action: function action(e, dt, node, config) {
                                dt.page.len(25).draw();
                                $(node).parent().find(".active").removeClass("active");
                                $(node).addClass("active")
                            }
                        }, {
                            text: "∞",
                            action: function action(e, dt, node, config) {
                                dt.page.len(1e3).draw();
                                $(node).parent().find(".active").removeClass("active");
                                $(node).addClass("active")
                            }
                        }],
                        drawCallback: function drawCallback() {},
                        initComplete: function initComplete() {
                            that.togglePreloader(this.api());
                            window.testapi = this.api()
                        }
                    });
                    this.customSearch()
                }
            }, {
                key: "customSearch",
                value: function customSearch() {
                    var _this = this;
                    if (!this.config.tableSearch) {
                        return
                    }
                    var searchInput = $(this.config.tableSearch);
                    searchInput.on("keyup", function(event) {
                        _this.dataTable.search("\\b" + event.target.value, true).draw()
                    })
                }
            }, {
                key: "togglePreloader",
                value: function togglePreloader(api) {
                    setTimeout(function() {
                        api.responsive.recalc()
                    }, 1e3);
                    this.preloader.addClass(this.config.hiddenClass);
                    this.table.removeClass(this.config.hiddenClass)
                }
            }]);
            return DataTableInit
        }();

        function initDataSelectors() {
            $(SELECTORS.table).each(function() {
                new DataTableInit($(this))
            })
        }

        function initJqueryPlugin() {
            $.fn.luDataTable = function(options) {
                return this.each(function() {
                    new DataTableInit($(this), options)
                })
            }
        }
        var init = {
            initDataSelectors: initDataSelectors,
            initJqueryPlugin: initJqueryPlugin
        };
        $(document).ready(function() {
            init.initDataSelectors();
            init.initJqueryPlugin()
        })
    },
    9: function(module, exports, __webpack_require__) {
        "use strict";
        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
            return typeof obj
        } : function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
        };
        (function(factory) {
            if (true) {
                !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function($) {
                    return factory($, window, document)
                }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
            } else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === "object") {
                module.exports = function(root, $) {
                    if (!root) {
                        root = window
                    }
                    if (!$ || !$.fn.dataTable) {
                        $ = require("datatables.net")(root, $).$
                    }
                    return factory($, root, root.document)
                }
            } else {
                factory(jQuery, window, document)
            }
        })(function($, window, document, undefined) {
            "use strict";
            var DataTable = $.fn.dataTable;
            var _instCounter = 0;
            var _buttonCounter = 0;
            var _dtButtons = DataTable.ext.buttons;
            var Buttons = function Buttons(dt, config) {
                if (typeof config === "undefined") {
                    config = {}
                }
                if (config === true) {
                    config = {}
                }
                if ($.isArray(config)) {
                    config = {
                        buttons: config
                    }
                }
                this.c = $.extend(true, {}, Buttons.defaults, config);
                if (config.buttons) {
                    this.c.buttons = config.buttons
                }
                this.s = {
                    dt: new DataTable.Api(dt),
                    buttons: [],
                    listenKeys: "",
                    namespace: "dtb" + _instCounter++
                };
                this.dom = {
                    container: $("<" + this.c.dom.container.tag + "/>").addClass(this.c.dom.container.className)
                };
                this._constructor()
            };
            $.extend(Buttons.prototype, {
                action: function action(node, _action) {
                    var button = this._nodeToButton(node);
                    if (_action === undefined) {
                        return button.conf.action
                    }
                    button.conf.action = _action;
                    return this
                },
                active: function active(node, flag) {
                    var button = this._nodeToButton(node);
                    var klass = this.c.dom.button.active;
                    var jqNode = $(button.node);
                    if (flag === undefined) {
                        return jqNode.hasClass(klass)
                    }
                    jqNode.toggleClass(klass, flag === undefined ? true : flag);
                    return this
                },
                add: function add(config, idx) {
                    var buttons = this.s.buttons;
                    if (typeof idx === "string") {
                        var split = idx.split("-");
                        var base = this.s;
                        for (var i = 0, ien = split.length - 1; i < ien; i++) {
                            base = base.buttons[split[i] * 1]
                        }
                        buttons = base.buttons;
                        idx = split[split.length - 1] * 1
                    }
                    this._expandButton(buttons, config, false, idx);
                    this._draw();
                    return this
                },
                container: function container() {
                    return this.dom.container
                },
                disable: function disable(node) {
                    var button = this._nodeToButton(node);
                    $(button.node).addClass(this.c.dom.button.disabled);
                    return this
                },
                destroy: function destroy() {
                    $("body").off("keyup." + this.s.namespace);
                    var buttons = this.s.buttons.slice();
                    var i, ien;
                    for (i = 0, ien = buttons.length; i < ien; i++) {
                        this.remove(buttons[i].node)
                    }
                    this.dom.container.remove();
                    var buttonInsts = this.s.dt.settings()[0];
                    for (i = 0, ien = buttonInsts.length; i < ien; i++) {
                        if (buttonInsts.inst === this) {
                            buttonInsts.splice(i, 1);
                            break
                        }
                    }
                    return this
                },
                enable: function enable(node, flag) {
                    if (flag === false) {
                        return this.disable(node)
                    }
                    var button = this._nodeToButton(node);
                    $(button.node).removeClass(this.c.dom.button.disabled);
                    return this
                },
                name: function name() {
                    return this.c.name
                },
                node: function node(_node) {
                    var button = this._nodeToButton(_node);
                    return $(button.node)
                },
                processing: function processing(node, flag) {
                    var button = this._nodeToButton(node);
                    if (flag === undefined) {
                        return $(button.node).hasClass("processing")
                    }
                    $(button.node).toggleClass("processing", flag);
                    return this
                },
                remove: function remove(node) {
                    var button = this._nodeToButton(node);
                    var host = this._nodeToHost(node);
                    var dt = this.s.dt;
                    if (button.buttons.length) {
                        for (var i = button.buttons.length - 1; i >= 0; i--) {
                            this.remove(button.buttons[i].node)
                        }
                    }
                    if (button.conf.destroy) {
                        button.conf.destroy.call(dt.button(node), dt, $(node), button.conf)
                    }
                    this._removeKey(button.conf);
                    $(button.node).remove();
                    var idx = $.inArray(button, host);
                    host.splice(idx, 1);
                    return this
                },
                text: function text(node, label) {
                    var button = this._nodeToButton(node);
                    var buttonLiner = this.c.dom.collection.buttonLiner;
                    var linerTag = button.inCollection && buttonLiner && buttonLiner.tag ? buttonLiner.tag : this.c.dom.buttonLiner.tag;
                    var dt = this.s.dt;
                    var jqNode = $(button.node);
                    var text = function text(opt) {
                        return typeof opt === "function" ? opt(dt, jqNode, button.conf) : opt
                    };
                    if (label === undefined) {
                        return text(button.conf.text)
                    }
                    button.conf.text = label;
                    if (linerTag) {
                        jqNode.children(linerTag).html(text(label))
                    } else {
                        jqNode.html(text(label))
                    }
                    return this
                },
                _constructor: function _constructor() {
                    var that = this;
                    var dt = this.s.dt;
                    var dtSettings = dt.settings()[0];
                    var buttons = this.c.buttons;
                    if (!dtSettings._buttons) {
                        dtSettings._buttons = []
                    }
                    dtSettings._buttons.push({
                        inst: this,
                        name: this.c.name
                    });
                    for (var i = 0, ien = buttons.length; i < ien; i++) {
                        this.add(buttons[i])
                    }
                    dt.on("destroy", function() {
                        that.destroy()
                    });
                    $("body").on("keyup." + this.s.namespace, function(e) {
                        if (!document.activeElement || document.activeElement === document.body) {
                            var character = String.fromCharCode(e.keyCode).toLowerCase();
                            if (that.s.listenKeys.toLowerCase().indexOf(character) !== -1) {
                                that._keypress(character, e)
                            }
                        }
                    })
                },
                _addKey: function _addKey(conf) {
                    if (conf.key) {
                        this.s.listenKeys += $.isPlainObject(conf.key) ? conf.key.key : conf.key
                    }
                },
                _draw: function _draw(container, buttons) {
                    if (!container) {
                        container = this.dom.container;
                        buttons = this.s.buttons
                    }
                    container.children().detach();
                    for (var i = 0, ien = buttons.length; i < ien; i++) {
                        container.append(buttons[i].inserter);
                        container.append(" ");
                        if (buttons[i].buttons && buttons[i].buttons.length) {
                            this._draw(buttons[i].collection, buttons[i].buttons)
                        }
                    }
                },
                _expandButton: function _expandButton(attachTo, button, inCollection, attachPoint) {
                    var dt = this.s.dt;
                    var buttonCounter = 0;
                    var buttons = !$.isArray(button) ? [button] : button;
                    for (var i = 0, ien = buttons.length; i < ien; i++) {
                        var conf = this._resolveExtends(buttons[i]);
                        if (!conf) {
                            continue
                        }
                        if ($.isArray(conf)) {
                            this._expandButton(attachTo, conf, inCollection, attachPoint);
                            continue
                        }
                        var built = this._buildButton(conf, inCollection);
                        if (!built) {
                            continue
                        }
                        if (attachPoint !== undefined) {
                            attachTo.splice(attachPoint, 0, built);
                            attachPoint++
                        } else {
                            attachTo.push(built)
                        }
                        if (built.conf.buttons) {
                            var collectionDom = this.c.dom.collection;
                            built.collection = $("<" + collectionDom.tag + "/>").addClass(collectionDom.className).attr("role", "menu");
                            built.conf._collection = built.collection;
                            this._expandButton(built.buttons, built.conf.buttons, true, attachPoint)
                        }
                        if (conf.init) {
                            conf.init.call(dt.button(built.node), dt, $(built.node), conf)
                        }
                        buttonCounter++
                    }
                },
                _buildButton: function _buildButton(config, inCollection) {
                    var buttonDom = this.c.dom.button;
                    var linerDom = this.c.dom.buttonLiner;
                    var collectionDom = this.c.dom.collection;
                    var dt = this.s.dt;
                    var text = function text(opt) {
                        return typeof opt === "function" ? opt(dt, button, config) : opt
                    };
                    if (inCollection && collectionDom.button) {
                        buttonDom = collectionDom.button
                    }
                    if (inCollection && collectionDom.buttonLiner) {
                        linerDom = collectionDom.buttonLiner
                    }
                    if (config.available && !config.available(dt, config)) {
                        return false
                    }
                    var action = function action(e, dt, button, config) {
                        config.action.call(dt.button(button), e, dt, button, config);
                        $(dt.table().node()).triggerHandler("buttons-action.dt", [dt.button(button), dt, button, config])
                    };
                    var button = $("<" + buttonDom.tag + "/>").addClass(buttonDom.className).attr("tabindex", this.s.dt.settings()[0].iTabIndex).attr("aria-controls", this.s.dt.table().node().id).on("click.dtb", function(e) {
                        e.preventDefault();
                        if (!button.hasClass(buttonDom.disabled) && config.action) {
                            action(e, dt, button, config)
                        }
                        button.blur()
                    }).on("keyup.dtb", function(e) {
                        if (e.keyCode === 13) {
                            if (!button.hasClass(buttonDom.disabled) && config.action) {
                                action(e, dt, button, config)
                            }
                        }
                    });
                    if (buttonDom.tag.toLowerCase() === "a") {
                        button.attr("href", "#")
                    }
                    if (linerDom.tag) {
                        var liner = $("<" + linerDom.tag + "/>").html(text(config.text)).addClass(linerDom.className);
                        if (linerDom.tag.toLowerCase() === "a") {
                            liner.attr("href", "#")
                        }
                        button.append(liner)
                    } else {
                        button.html(text(config.text))
                    }
                    if (config.enabled === false) {
                        button.addClass(buttonDom.disabled)
                    }
                    if (config.className) {
                        button.addClass(config.className)
                    }
                    if (config.titleAttr) {
                        button.attr("title", text(config.titleAttr))
                    }
                    if (!config.namespace) {
                        config.namespace = ".dt-button-" + _buttonCounter++
                    }
                    var buttonContainer = this.c.dom.buttonContainer;
                    var inserter;
                    if (buttonContainer && buttonContainer.tag) {
                        inserter = $("<" + buttonContainer.tag + "/>").addClass(buttonContainer.className).append(button)
                    } else {
                        inserter = button
                    }
                    this._addKey(config);
                    return {
                        conf: config,
                        node: button.get(0),
                        inserter: inserter,
                        buttons: [],
                        inCollection: inCollection,
                        collection: null
                    }
                },
                _nodeToButton: function _nodeToButton(node, buttons) {
                    if (!buttons) {
                        buttons = this.s.buttons
                    }
                    for (var i = 0, ien = buttons.length; i < ien; i++) {
                        if (buttons[i].node === node) {
                            return buttons[i]
                        }
                        if (buttons[i].buttons.length) {
                            var ret = this._nodeToButton(node, buttons[i].buttons);
                            if (ret) {
                                return ret
                            }
                        }
                    }
                },
                _nodeToHost: function _nodeToHost(node, buttons) {
                    if (!buttons) {
                        buttons = this.s.buttons
                    }
                    for (var i = 0, ien = buttons.length; i < ien; i++) {
                        if (buttons[i].node === node) {
                            return buttons
                        }
                        if (buttons[i].buttons.length) {
                            var ret = this._nodeToHost(node, buttons[i].buttons);
                            if (ret) {
                                return ret
                            }
                        }
                    }
                },
                _keypress: function _keypress(character, e) {
                    var run = function run(conf, node) {
                        if (!conf.key) {
                            return
                        }
                        if (conf.key === character) {
                            $(node).click()
                        } else if ($.isPlainObject(conf.key)) {
                            if (conf.key.key !== character) {
                                return
                            }
                            if (conf.key.shiftKey && !e.shiftKey) {
                                return
                            }
                            if (conf.key.altKey && !e.altKey) {
                                return
                            }
                            if (conf.key.ctrlKey && !e.ctrlKey) {
                                return
                            }
                            if (conf.key.metaKey && !e.metaKey) {
                                return
                            }
                            $(node).click()
                        }
                    };
                    var recurse = function recurse(a) {
                        for (var i = 0, ien = a.length; i < ien; i++) {
                            run(a[i].conf, a[i].node);
                            if (a[i].buttons.length) {
                                recurse(a[i].buttons)
                            }
                        }
                    };
                    recurse(this.s.buttons)
                },
                _removeKey: function _removeKey(conf) {
                    if (conf.key) {
                        var character = $.isPlainObject(conf.key) ? conf.key.key : conf.key;
                        var a = this.s.listenKeys.split("");
                        var idx = $.inArray(character, a);
                        a.splice(idx, 1);
                        this.s.listenKeys = a.join("")
                    }
                },
                _resolveExtends: function _resolveExtends(conf) {
                    var dt = this.s.dt;
                    var i, ien;
                    var toConfObject = function toConfObject(base) {
                        var loop = 0;
                        while (!$.isPlainObject(base) && !$.isArray(base)) {
                            if (base === undefined) {
                                return
                            }
                            if (typeof base === "function") {
                                base = base(dt, conf);
                                if (!base) {
                                    return false
                                }
                            } else if (typeof base === "string") {
                                if (!_dtButtons[base]) {
                                    throw "Unknown button type: " + base
                                }
                                base = _dtButtons[base]
                            }
                            loop++;
                            if (loop > 30) {
                                throw "Buttons: Too many iterations"
                            }
                        }
                        return $.isArray(base) ? base : $.extend({}, base)
                    };
                    conf = toConfObject(conf);
                    while (conf && conf.extend) {
                        if (!_dtButtons[conf.extend]) {
                            throw "Cannot extend unknown button type: " + conf.extend
                        }
                        var objArray = toConfObject(_dtButtons[conf.extend]);
                        if ($.isArray(objArray)) {
                            return objArray
                        } else if (!objArray) {
                            return false
                        }
                        var originalClassName = objArray.className;
                        conf = $.extend({}, objArray, conf);
                        if (originalClassName && conf.className !== originalClassName) {
                            conf.className = originalClassName + " " + conf.className
                        }
                        var postfixButtons = conf.postfixButtons;
                        if (postfixButtons) {
                            if (!conf.buttons) {
                                conf.buttons = []
                            }
                            for (i = 0, ien = postfixButtons.length; i < ien; i++) {
                                conf.buttons.push(postfixButtons[i])
                            }
                            conf.postfixButtons = null
                        }
                        var prefixButtons = conf.prefixButtons;
                        if (prefixButtons) {
                            if (!conf.buttons) {
                                conf.buttons = []
                            }
                            for (i = 0, ien = prefixButtons.length; i < ien; i++) {
                                conf.buttons.splice(i, 0, prefixButtons[i])
                            }
                            conf.prefixButtons = null
                        }
                        conf.extend = objArray.extend
                    }
                    return conf
                }
            });
            Buttons.background = function(show, className, fade) {
                if (fade === undefined) {
                    fade = 400
                }
                if (show) {
                    $("<div/>").addClass(className).css("display", "none").appendTo("body").fadeIn(fade)
                } else {
                    $("body > div." + className).fadeOut(fade, function() {
                        $(this).removeClass(className).remove()
                    })
                }
            };
            Buttons.instanceSelector = function(group, buttons) {
                if (!group) {
                    return $.map(buttons, function(v) {
                        return v.inst
                    })
                }
                var ret = [];
                var names = $.map(buttons, function(v) {
                    return v.name
                });
                var process = function process(input) {
                    if ($.isArray(input)) {
                        for (var i = 0, ien = input.length; i < ien; i++) {
                            process(input[i])
                        }
                        return
                    }
                    if (typeof input === "string") {
                        if (input.indexOf(",") !== -1) {
                            process(input.split(","))
                        } else {
                            var idx = $.inArray($.trim(input), names);
                            if (idx !== -1) {
                                ret.push(buttons[idx].inst)
                            }
                        }
                    } else if (typeof input === "number") {
                        ret.push(buttons[input].inst)
                    }
                };
                process(group);
                return ret
            };
            Buttons.buttonSelector = function(insts, selector) {
                var ret = [];
                var nodeBuilder = function nodeBuilder(a, buttons, baseIdx) {
                    var button;
                    var idx;
                    for (var i = 0, ien = buttons.length; i < ien; i++) {
                        button = buttons[i];
                        if (button) {
                            idx = baseIdx !== undefined ? baseIdx + i : i + "";
                            a.push({
                                node: button.node,
                                name: button.conf.name,
                                idx: idx
                            });
                            if (button.buttons) {
                                nodeBuilder(a, button.buttons, idx + "-")
                            }
                        }
                    }
                };
                var run = function run(selector, inst) {
                    var i, ien;
                    var buttons = [];
                    nodeBuilder(buttons, inst.s.buttons);
                    var nodes = $.map(buttons, function(v) {
                        return v.node
                    });
                    if ($.isArray(selector) || selector instanceof $) {
                        for (i = 0, ien = selector.length; i < ien; i++) {
                            run(selector[i], inst)
                        }
                        return
                    }
                    if (selector === null || selector === undefined || selector === "*") {
                        for (i = 0, ien = buttons.length; i < ien; i++) {
                            ret.push({
                                inst: inst,
                                node: buttons[i].node
                            })
                        }
                    } else if (typeof selector === "number") {
                        ret.push({
                            inst: inst,
                            node: inst.s.buttons[selector].node
                        })
                    } else if (typeof selector === "string") {
                        if (selector.indexOf(",") !== -1) {
                            var a = selector.split(",");
                            for (i = 0, ien = a.length; i < ien; i++) {
                                run($.trim(a[i]), inst)
                            }
                        } else if (selector.match(/^\d+(\-\d+)*$/)) {
                            var indexes = $.map(buttons, function(v) {
                                return v.idx
                            });
                            ret.push({
                                inst: inst,
                                node: buttons[$.inArray(selector, indexes)].node
                            })
                        } else if (selector.indexOf(":name") !== -1) {
                            var name = selector.replace(":name", "");
                            for (i = 0, ien = buttons.length; i < ien; i++) {
                                if (buttons[i].name === name) {
                                    ret.push({
                                        inst: inst,
                                        node: buttons[i].node
                                    })
                                }
                            }
                        } else {
                            $(nodes).filter(selector).each(function() {
                                ret.push({
                                    inst: inst,
                                    node: this
                                })
                            })
                        }
                    } else if ((typeof selector === "undefined" ? "undefined" : _typeof(selector)) === "object" && selector.nodeName) {
                        var idx = $.inArray(selector, nodes);
                        if (idx !== -1) {
                            ret.push({
                                inst: inst,
                                node: nodes[idx]
                            })
                        }
                    }
                };
                for (var i = 0, ien = insts.length; i < ien; i++) {
                    var inst = insts[i];
                    run(selector, inst)
                }
                return ret
            };
            Buttons.defaults = {
                buttons: ["copy", "excel", "csv", "pdf", "print"],
                name: "main",
                tabIndex: 0,
                dom: {
                    container: {
                        tag: "div",
                        className: "dt-buttons"
                    },
                    collection: {
                        tag: "div",
                        className: "dt-button-collection"
                    },
                    button: {
                        tag: "a",
                        className: "dt-button",
                        active: "active",
                        disabled: "disabled"
                    },
                    buttonLiner: {
                        tag: "span",
                        className: ""
                    }
                }
            };
            Buttons.version = "1.4.2";
            $.extend(_dtButtons, {
                collection: {
                    text: function text(dt) {
                        return dt.i18n("buttons.collection", "Collection")
                    },
                    className: "buttons-collection",
                    action: function action(e, dt, button, config) {
                        var host = button;
                        var hostOffset = host.offset();
                        var tableContainer = $(dt.table().container());
                        var multiLevel = false;
                        if ($("div.dt-button-background").length) {
                            multiLevel = $(".dt-button-collection").offset();
                            $("body").trigger("click.dtb-collection")
                        }
                        config._collection.addClass(config.collectionLayout).css("display", "none").appendTo("body").fadeIn(config.fade);
                        var position = config._collection.css("position");
                        if (multiLevel && position === "absolute") {
                            config._collection.css({
                                top: multiLevel.top,
                                left: multiLevel.left
                            })
                        } else if (position === "absolute") {
                            config._collection.css({
                                top: hostOffset.top + host.outerHeight(),
                                left: hostOffset.left
                            });
                            var tableBottom = tableContainer.offset().top + tableContainer.height();
                            var listBottom = hostOffset.top + host.outerHeight() + config._collection.outerHeight();
                            var bottomOverflow = listBottom - tableBottom;
                            var listTop = hostOffset.top - config._collection.outerHeight();
                            var tableTop = tableContainer.offset().top;
                            var topOverflow = tableTop - listTop;
                            if (bottomOverflow > topOverflow) {
                                config._collection.css("top", hostOffset.top - config._collection.outerHeight() - 5)
                            }
                            var listRight = hostOffset.left + config._collection.outerWidth();
                            var tableRight = tableContainer.offset().left + tableContainer.width();
                            if (listRight > tableRight) {
                                config._collection.css("left", hostOffset.left - (listRight - tableRight))
                            }
                        } else {
                            var top = config._collection.height() / 2;
                            if (top > $(window).height() / 2) {
                                top = $(window).height() / 2
                            }
                            config._collection.css("marginTop", top * -1)
                        }
                        if (config.background) {
                            Buttons.background(true, config.backgroundClassName, config.fade)
                        }
                        setTimeout(function() {
                            $("div.dt-button-background").on("click.dtb-collection", function() {});
                            $("body").on("click.dtb-collection", function(e) {
                                var back = $.fn.addBack ? "addBack" : "andSelf";
                                if (!$(e.target).parents()[back]().filter(config._collection).length) {
                                    config._collection.fadeOut(config.fade, function() {
                                        config._collection.detach()
                                    });
                                    $("div.dt-button-background").off("click.dtb-collection");
                                    Buttons.background(false, config.backgroundClassName, config.fade);
                                    $("body").off("click.dtb-collection");
                                    dt.off("buttons-action.b-internal")
                                }
                            })
                        }, 10);
                        if (config.autoClose) {
                            dt.on("buttons-action.b-internal", function() {
                                $("div.dt-button-background").click()
                            })
                        }
                    },
                    background: true,
                    collectionLayout: "",
                    backgroundClassName: "dt-button-background",
                    autoClose: false,
                    fade: 400
                },
                copy: function copy(dt, conf) {
                    if (_dtButtons.copyHtml5) {
                        return "copyHtml5"
                    }
                    if (_dtButtons.copyFlash && _dtButtons.copyFlash.available(dt, conf)) {
                        return "copyFlash"
                    }
                },
                csv: function csv(dt, conf) {
                    if (_dtButtons.csvHtml5 && _dtButtons.csvHtml5.available(dt, conf)) {
                        return "csvHtml5"
                    }
                    if (_dtButtons.csvFlash && _dtButtons.csvFlash.available(dt, conf)) {
                        return "csvFlash"
                    }
                },
                excel: function excel(dt, conf) {
                    if (_dtButtons.excelHtml5 && _dtButtons.excelHtml5.available(dt, conf)) {
                        return "excelHtml5"
                    }
                    if (_dtButtons.excelFlash && _dtButtons.excelFlash.available(dt, conf)) {
                        return "excelFlash"
                    }
                },
                pdf: function pdf(dt, conf) {
                    if (_dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available(dt, conf)) {
                        return "pdfHtml5"
                    }
                    if (_dtButtons.pdfFlash && _dtButtons.pdfFlash.available(dt, conf)) {
                        return "pdfFlash"
                    }
                },
                pageLength: function pageLength(dt) {
                    var lengthMenu = dt.settings()[0].aLengthMenu;
                    var vals = $.isArray(lengthMenu[0]) ? lengthMenu[0] : lengthMenu;
                    var lang = $.isArray(lengthMenu[0]) ? lengthMenu[1] : lengthMenu;
                    var text = function text(dt) {
                        return dt.i18n("buttons.pageLength", {
                            "-1": "Show all rows",
                            _: "Show %d rows"
                        }, dt.page.len())
                    };
                    return {
                        extend: "collection",
                        text: text,
                        className: "buttons-page-length",
                        autoClose: true,
                        buttons: $.map(vals, function(val, i) {
                            return {
                                text: lang[i],
                                className: "button-page-length",
                                action: function action(e, dt) {
                                    dt.page.len(val).draw()
                                },
                                init: function init(dt, node, conf) {
                                    var that = this;
                                    var fn = function fn() {
                                        that.active(dt.page.len() === val)
                                    };
                                    dt.on("length.dt" + conf.namespace, fn);
                                    fn()
                                },
                                destroy: function destroy(dt, node, conf) {
                                    dt.off("length.dt" + conf.namespace)
                                }
                            }
                        }),
                        init: function init(dt, node, conf) {
                            var that = this;
                            dt.on("length.dt" + conf.namespace, function() {
                                that.text(text(dt))
                            })
                        },
                        destroy: function destroy(dt, node, conf) {
                            dt.off("length.dt" + conf.namespace)
                        }
                    }
                }
            });
            DataTable.Api.register("buttons()", function(group, selector) {
                if (selector === undefined) {
                    selector = group;
                    group = undefined
                }
                this.selector.buttonGroup = group;
                var res = this.iterator(true, "table", function(ctx) {
                    if (ctx._buttons) {
                        return Buttons.buttonSelector(Buttons.instanceSelector(group, ctx._buttons), selector)
                    }
                }, true);
                res._groupSelector = group;
                return res
            });
            DataTable.Api.register("button()", function(group, selector) {
                var buttons = this.buttons(group, selector);
                if (buttons.length > 1) {
                    buttons.splice(1, buttons.length)
                }
                return buttons
            });
            DataTable.Api.registerPlural("buttons().active()", "button().active()", function(flag) {
                if (flag === undefined) {
                    return this.map(function(set) {
                        return set.inst.active(set.node)
                    })
                }
                return this.each(function(set) {
                    set.inst.active(set.node, flag)
                })
            });
            DataTable.Api.registerPlural("buttons().action()", "button().action()", function(action) {
                if (action === undefined) {
                    return this.map(function(set) {
                        return set.inst.action(set.node)
                    })
                }
                return this.each(function(set) {
                    set.inst.action(set.node, action)
                })
            });
            DataTable.Api.register(["buttons().enable()", "button().enable()"], function(flag) {
                return this.each(function(set) {
                    set.inst.enable(set.node, flag)
                })
            });
            DataTable.Api.register(["buttons().disable()", "button().disable()"], function() {
                return this.each(function(set) {
                    set.inst.disable(set.node)
                })
            });
            DataTable.Api.registerPlural("buttons().nodes()", "button().node()", function() {
                var jq = $();
                $(this.each(function(set) {
                    jq = jq.add(set.inst.node(set.node))
                }));
                return jq
            });
            DataTable.Api.registerPlural("buttons().processing()", "button().processing()", function(flag) {
                if (flag === undefined) {
                    return this.map(function(set) {
                        return set.inst.processing(set.node)
                    })
                }
                return this.each(function(set) {
                    set.inst.processing(set.node, flag)
                })
            });
            DataTable.Api.registerPlural("buttons().text()", "button().text()", function(label) {
                if (label === undefined) {
                    return this.map(function(set) {
                        return set.inst.text(set.node)
                    })
                }
                return this.each(function(set) {
                    set.inst.text(set.node, label)
                })
            });
            DataTable.Api.registerPlural("buttons().trigger()", "button().trigger()", function() {
                return this.each(function(set) {
                    set.inst.node(set.node).trigger("click")
                })
            });
            DataTable.Api.registerPlural("buttons().containers()", "buttons().container()", function() {
                var jq = $();
                var groupSelector = this._groupSelector;
                this.iterator(true, "table", function(ctx) {
                    if (ctx._buttons) {
                        var insts = Buttons.instanceSelector(groupSelector, ctx._buttons);
                        for (var i = 0, ien = insts.length; i < ien; i++) {
                            jq = jq.add(insts[i].container())
                        }
                    }
                });
                return jq
            });
            DataTable.Api.register("button().add()", function(idx, conf) {
                var ctx = this.context;
                if (ctx.length) {
                    var inst = Buttons.instanceSelector(this._groupSelector, ctx[0]._buttons);
                    if (inst.length) {
                        inst[0].add(conf, idx)
                    }
                }
                return this.button(this._groupSelector, idx)
            });
            DataTable.Api.register("buttons().destroy()", function() {
                this.pluck("inst").unique().each(function(inst) {
                    inst.destroy()
                });
                return this
            });
            DataTable.Api.registerPlural("buttons().remove()", "buttons().remove()", function() {
                this.each(function(set) {
                    set.inst.remove(set.node)
                });
                return this
            });
            var _infoTimer;
            DataTable.Api.register("buttons.info()", function(title, message, time) {
                var that = this;
                if (title === false) {
                    $("#datatables_buttons_info").fadeOut(function() {
                        $(this).remove()
                    });
                    clearTimeout(_infoTimer);
                    _infoTimer = null;
                    return this
                }
                if (_infoTimer) {
                    clearTimeout(_infoTimer)
                }
                if ($("#datatables_buttons_info").length) {
                    $("#datatables_buttons_info").remove()
                }
                title = title ? "<h2>" + title + "</h2>" : "";
                $('<div id="datatables_buttons_info" class="dt-button-info"/>').html(title).append($("<div/>")[typeof message === "string" ? "html" : "append"](message)).css("display", "none").appendTo("body").fadeIn();
                if (time !== undefined && time !== 0) {
                    _infoTimer = setTimeout(function() {
                        that.buttons.info(false)
                    }, time)
                }
                return this
            });
            DataTable.Api.register("buttons.exportData()", function(options) {
                if (this.context.length) {
                    return _exportData(new DataTable.Api(this.context[0]), options)
                }
            });
            DataTable.Api.register("buttons.exportInfo()", function(conf) {
                if (!conf) {
                    conf = {}
                }
                return {
                    filename: _filename(conf),
                    title: _title(conf),
                    messageTop: _message(this, conf.messageTop || conf.message, "top"),
                    messageBottom: _message(this, conf.messageBottom, "bottom")
                }
            });
            var _filename = function _filename(config) {
                var filename = config.filename === "*" && config.title !== "*" && config.title !== undefined ? config.title : config.filename;
                if (typeof filename === "function") {
                    filename = filename()
                }
                if (filename === undefined || filename === null) {
                    return null
                }
                if (filename.indexOf("*") !== -1) {
                    filename = $.trim(filename.replace("*", $("title").text()))
                }
                filename = filename.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, "");
                var extension = _stringOrFunction(config.extension);
                if (!extension) {
                    extension = ""
                }
                return filename + extension
            };
            var _stringOrFunction = function _stringOrFunction(option) {
                if (option === null || option === undefined) {
                    return null
                } else if (typeof option === "function") {
                    return option()
                }
                return option
            };
            var _title = function _title(config) {
                var title = _stringOrFunction(config.title);
                return title === null ? null : title.indexOf("*") !== -1 ? title.replace("*", $("title").text() || "Exported data") : title
            };
            var _message = function _message(dt, option, position) {
                var message = _stringOrFunction(option);
                if (message === null) {
                    return null
                }
                var caption = $("caption", dt.table().container()).eq(0);
                if (message === "*") {
                    var side = caption.css("caption-side");
                    if (side !== position) {
                        return null
                    }
                    return caption.length ? caption.text() : ""
                }
                return message
            };
            var _exportTextarea = $("<textarea/>")[0];
            var _exportData = function _exportData(dt, inOpts) {
                var config = $.extend(true, {}, {
                    rows: null,
                    columns: "",
                    modifier: {
                        search: "applied",
                        order: "applied"
                    },
                    orthogonal: "display",
                    stripHtml: true,
                    stripNewlines: true,
                    decodeEntities: true,
                    trim: true,
                    format: {
                        header: function header(d) {
                            return strip(d)
                        },
                        footer: function footer(d) {
                            return strip(d)
                        },
                        body: function body(d) {
                            return strip(d)
                        }
                    }
                }, inOpts);
                var strip = function strip(str) {
                    if (typeof str !== "string") {
                        return str
                    }
                    str = str.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, "");
                    if (config.stripHtml) {
                        str = str.replace(/<[^>]*>/g, "")
                    }
                    if (config.trim) {
                        str = str.replace(/^\s+|\s+$/g, "")
                    }
                    if (config.stripNewlines) {
                        str = str.replace(/\n/g, " ")
                    }
                    if (config.decodeEntities) {
                        _exportTextarea.innerHTML = str;
                        str = _exportTextarea.value
                    }
                    return str
                };
                var header = dt.columns(config.columns).indexes().map(function(idx) {
                    var el = dt.column(idx).header();
                    return config.format.header(el.innerHTML, idx, el)
                }).toArray();
                var footer = dt.table().footer() ? dt.columns(config.columns).indexes().map(function(idx) {
                    var el = dt.column(idx).footer();
                    return config.format.footer(el ? el.innerHTML : "", idx, el)
                }).toArray() : null;
                var rowIndexes = dt.rows(config.rows, config.modifier).indexes().toArray();
                var selectedCells = dt.cells(rowIndexes, config.columns);
                var cells = selectedCells.render(config.orthogonal).toArray();
                var cellNodes = selectedCells.nodes().toArray();
                var columns = header.length;
                var rows = columns > 0 ? cells.length / columns : 0;
                var body = new Array(rows);
                var cellCounter = 0;
                for (var i = 0, ien = rows; i < ien; i++) {
                    var row = new Array(columns);
                    for (var j = 0; j < columns; j++) {
                        row[j] = config.format.body(cells[cellCounter], i, j, cellNodes[cellCounter]);
                        cellCounter++
                    }
                    body[i] = row
                }
                return {
                    header: header,
                    footer: footer,
                    body: body
                }
            };
            $.fn.dataTable.Buttons = Buttons;
            $.fn.DataTable.Buttons = Buttons;
            $(document).on("init.dt plugin-init.dt", function(e, settings) {
                if (e.namespace !== "dt") {
                    return
                }
                var opts = settings.oInit.buttons || DataTable.defaults.buttons;
                if (opts && !settings._buttons) {
                    new Buttons(settings, opts).container()
                }
            });
            DataTable.ext.feature.push({
                fnInit: function fnInit(settings) {
                    var api = new DataTable.Api(settings);
                    var opts = api.init().buttons || DataTable.defaults.buttons;
                    return new Buttons(api, opts).container()
                },
                cFeature: "B"
            });
            return Buttons
        })
    }
});

function getItemNamespace(elId) {
    return jQuery("#" + elId).attr("namespace")
}

function getItemIndex(elId) {
    return jQuery("#" + elId).attr("index")
}

function initMassActionsOnDatatables(elId) {
    $("#" + elId + " [data-check-container]").luCheckAll({
        onCheck: function(container, counter) {
            var massActions = container.find(".lu-t-c__mass-actions");
            massActions.find(".lu-value").html(counter);
            if (counter > 0) {
                massActions.addClass("is-open")
            } else {
                massActions.removeClass("is-open")
            }
        }
    })
}

function collectTableMassActionsData(elId) {
    var colectedData = {};
    $("#" + elId + " [data-check-container] tbody input:checkbox.table-mass-action-check:enabled:checked").each(function(index, value) {
        colectedData[index] = $(this).val()
    });
    return colectedData
}

function uncheckSelectAllCheck(elId) {
    closeAllSelectMassActions()
}

function closeAllSelectMassActions() {
    $(".lu-t-c__mass-actions").removeClass("is-open");
    $(".table-mass-action-check").prop("checked", false);
    $("thead input:checkbox:enabled").prop("checked", false)
}

function initTooltipsForDatatables(elId) {
    $("#" + elId + ' [data-toggle="lu-tooltip"], [data-tooltip]').luTooltip({})
}

function initModalSelects() {
    initContainerSelects("mgModalContainer")
}

function initContainerSelects(id) {
    $("#" + id + " select:not(.ajax,.raw-select)").each(function() {
        if ($(this).attr("bi-event-change")) {
            var biEventAction = $(this).attr("bi-event-change");
            $(this).selectize({
                plugins: ["remove_button"],
                onItemAdd: function(value) {
                    if (biEventAction === "initReloadModal") {
                        mgPageControler.modalInstance.initReloadModal()
                    } else if (biEventAction && typeof mgPageControler[biEventAction] === "function") {
                        setTimeout(function() {
                            mgPageControler[biEventAction]()
                        }, 500)
                    } else if (biEventAction && typeof mgPageControler.vueLoader[biEventAction] === "function") {
                        setTimeout(function() {
                            mgPageControler.vueLoader[biEventAction]()
                        }, 500)
                    } else if (biEventAction && typeof window[biEventAction] === "function") {
                        setTimeout(function() {
                            window[biEventAction]()
                        }, 500)
                    }
                }
            })
        } else {
            var select = $(this).luSelect({})
        }
    })
}

function initModalSwitchEvents() {
    $("#mgModalContainer :checkbox").each(function() {
        if ($(this).attr("bi-event-change")) {
            var biEventAction = $(this).attr("bi-event-change");
            $(this).change(function() {
                if (biEventAction && typeof mgPageControler[biEventAction] === "function") {
                    setTimeout(function() {
                        mgPageControler[biEventAction]()
                    }, 500)
                } else if (biEventAction && typeof mgPageControler.vueLoader[biEventAction] === "function") {
                    setTimeout(function() {
                        mgPageControler.vueLoader[biEventAction]()
                    }, 500)
                } else if (biEventAction && typeof window[biEventAction] === "function") {
                    setTimeout(function() {
                        window[biEventAction]()
                    }, 500)
                }
            })
        }
    })
}

function initModalTooltips() {
    initContainerTooltips("mgModalContainer")
}

function initContainerTooltips(id) {
    $("#" + id + ' [data-toggle="lu-tooltip"], [data-tooltip]').luTooltip({})
}

function mgFormControler(targetFormId) {
    this.fields = null;
    this.data = {};
    this.formId = targetFormId;
    this.formElement = null;
    this.formDataObj = null;
    this.loadFormFields = function() {
        var that = this;
        jQuery("#" + this.formId).find("input,select,textarea").each(function() {
            if (!jQuery(this).is(":disabled")) {
                var name = jQuery(this).attr("name");
                var value = null;
                if (name !== undefined) {
                    var type = jQuery(this).attr("type");
                    var regExp = /([a-zA-Z_0-9]+)\[([a-zA-Z_0-9]+)\]/g;
                    var regExpLg = /([a-zA-Z_0-9]+)\[([a-zA-Z_0-9]+)\]\[([a-zA-Z_0-9]+)\]/g;
                    if (type === "checkbox") {
                        var value = "off";
                        jQuery("#" + that.formId).find('input[name="' + name + '"]').each(function() {
                            if (jQuery(this).is(":checked")) {
                                value = jQuery(this).val()
                            }
                        })
                    } else if (type === "radio") {
                        if (jQuery(this).is(":checked")) {
                            var value = jQuery(this).val()
                        }
                    } else if (type === "file") {
                        var value = {
                            type: "file",
                            value: jQuery(this).val()
                        }
                    } else {
                        var value = jQuery(this).val()
                    }
                    if (value !== null) {
                        if (result = regExpLg.exec(name)) {
                            if (that.data[result[1]] === undefined) {
                                that.data[result[1]] = {}
                            }
                            if (that.data[result[1]][result[2]] === undefined) {
                                that.data[result[1]][result[2]] = {}
                            }
                            that.data[result[1]][result[2]][result[3]] = value
                        } else if (result = regExp.exec(name)) {
                            if (that.data[result[1]] === undefined) {
                                that.data[result[1]] = {}
                            }
                            that.data[result[1]][result[2]] = value
                        } else {
                            that.data[name] = value
                        }
                    }
                }
            }
        })
    };
    this.getFieldsData = function() {
        this.formElement = null;
        this.formDataObj = null;
        this.loadFormFields();
        var formatedData = new FormData;
        for (var key in this.data) {
            if (!this.data.hasOwnProperty(key)) {
                continue
            }
            var KeyValue = this.data[key];
            if (key.indexOf("[") > 0) {
                var formatedKey = "formData[" + key.substring(0, key.indexOf("[")) + "]" + key.substring(key.indexOf("["))
            } else {
                var formatedKey = "formData[" + key + "]"
            }
            if (typeof KeyValue === "object") {
                if (KeyValue.type === "file") {
                    this.addFieldData(formatedData, key, formatedKey, KeyValue)
                } else {
                    this.addIteratedData(formatedData, formatedKey, KeyValue)
                }
            } else {
                formatedData.set(formatedKey, KeyValue)
            }
        }
        return formatedData
    };
    this.addFieldData = function(formatedData, key, formatedKey, KeyValue) {
        if (!this.formElement) {
            this.formElement = document.querySelector("#" + this.formId);
            this.formDataObj = new FormData(this.formElement)
        }
        KeyValue = this.formDataObj.get(key);
        if (typeof KeyValue !== "object") {
            formatedData.set(formatedKey, KeyValue)
        } else {
            formatedData.set(formatedKey, KeyValue, KeyValue.name)
        }
    };
    this.addIteratedData = function(formatedData, formatedKey, KeyValue) {
        for (var key in KeyValue) {
            if (!KeyValue.hasOwnProperty(key)) {
                continue
            }
            if (typeof KeyValue[key] === "object") {
                this.addIteratedData(formatedData, formatedKey + "[" + key + "]", KeyValue[key])
            } else {
                formatedData.set(formatedKey + "[" + key + "]", KeyValue[key])
            }
        }
    };
    this.updateFieldsValidationMessages = function(errorsList) {
        jQuery("#" + this.formId).find("input,select,textarea").each(function() {
            if (!jQuery(this).is(":disabled")) {
                var name = jQuery(this).attr("name");
                if (name !== undefined && errorsList[name] !== undefined) {
                    if (!jQuery(this).parents(".lu-form-group").first().hasClass("lu-is-error")) {
                        jQuery(this).parents(".lu-form-group").first().addClass("lu-is-error")
                    }
                    var messagePlaceholder = jQuery(this).parents(".lu-form-group").first().children(".lu-form-feedback");
                    if (jQuery(messagePlaceholder).length > 0) {
                        jQuery(messagePlaceholder).html(errorsList[name].slice(-1)[0]);
                        if (jQuery(messagePlaceholder).attr("hidden")) {
                            jQuery(messagePlaceholder).removeAttr("hidden")
                        }
                    }
                } else if (name !== undefined) {
                    if (jQuery(this).parents(".lu-form-group").first().hasClass("lu-is-error")) {
                        jQuery(this).parents(".lu-form-group").first().removeClass("lu-is-error")
                    }
                    var messagePlaceholder = jQuery(this).parents(".lu-form-group").first().children(".lu-form-feedback");
                    if (jQuery(messagePlaceholder).length > 0) {
                        jQuery(messagePlaceholder).html("");
                        if (!jQuery(messagePlaceholder).attr("hidden")) {
                            jQuery(messagePlaceholder).attr("hidden", "hidden")
                        }
                    }
                }
            }
        })
    }
}

function tldCategoriesSortableController() {
    var helperHeight = 0;
    if (!$("#groupList.vSortable").hasClass("ui-sortable")) {
        $("#groupList.vSortable").sortable({
            items: "li:not(.lu-nav--sub li, .sortable-disabled)",
            start: function(event, ui) {
                $(ui.item).find("ul").hide();
                $("#groupList").attr("isBeingSorted", "true")
            },
            stop: function(event, ui) {
                var order = [];
                $("#groupList .nav__item").each(function(index, element) {
                    if ($(element).hasClass("ui-sortable-placeholder")) {
                        return
                    }
                    var catId = $(element).attr("actionid");
                    order.push(catId)
                });
                mgPageControler.vueLoader.updateSorting(order, "addCategoryForm", "ModulesGarden_LagomOrderForm_App_UI_Widget_DoeTldConfigComponents_CategoryForms_AddCategoryForm");
                $(ui.item).css("height", helperHeight);
                $(ui.item).find("a").css("height", 32);
                $(ui.item).find("ul").show()
            },
            sort: function(event, ui) {
                $("#groupList").sortable("refreshPositions")
            },
            helper: function(event, li) {
                helperHeight = $(li).css("height");
                $(li).css("height", 32);
                return li
            }
        })
    }
    $("#groupList.vSortable .nav--sub").sortable({
        stop: function(event, ui) {
            var order = [];
            $(this).find(".nav__item").each(function(index, element) {
                if ($(element).hasClass("ui-sortable-placeholder")) {
                    return
                }
                var catId = $(element).attr("actionid");
                order.push(catId)
            });
            mgPageControler.vueLoader.updateSorting(order, "addCategoryForm", "ModulesGarden_LagomOrderForm_App_UI_Widget_DoeTldConfigComponents_CategoryForms_AddCategoryForm")
        }
    });
    $("#itemContentContainer tbody.vSortable").sortable({
        stop: function(event, ui) {
            var order = [];
            $("#itemContentContainer tbody").find("tr").each(function(index, element) {
                if ($(element).hasClass("ui-sortable-placeholder")) {
                    return
                }
                var catId = $(element).attr("actionid");
                order.push(catId)
            });
            mgPageControler.vueLoader.updateSorting(order, "assignTldForm", "ModulesGarden_LagomOrderForm_App_UI_Widget_DoeTldConfigComponents_CategoryForms_AssignTldForm")
        },
        helper: function(e, tr) {
            var $originals = tr.children();
            var $helper = tr.clone();
            $helper.children().each(function(index) {
                $(this).width($originals.eq(index).width() + 100)
            });
            return $helper
        }
    })
}

function custAction1(vueControler, params, event) {
    console.log("custAction1", vueControler, params, event)
}

function custAction2(vueControler, params, event) {
    console.log("custAction2", vueControler, params, event)
}

function mgEmptyToPause(name, row) {
    if (!row[name] || row[name] === "") {
        return "-"
    } else {
        return row[name]
    }
}

function newCall(data) {
    console.log(data)
}

function buildOptionTag(text, value, selected, disabled) {
    var option = document.createElement("option");
    option.text = text;
    option.value = value;
    if (selected) {
        option.setAttribute("selected", "selected")
    }
    if (disabled) {
        option.setAttribute("disabled", "disabled")
    }
    return option
}

function initTaggersForContainer(containerId) {
    jQuery("#" + containerId + " .lu-tagger").each(function() {
        if (!jQuery(this).hasClass("selectize-input")) {
            $(this).selectize({
                plugins: ["restore_on_backspace"],
                delimiter: ",",
                persist: false,
                create: function(input) {
                    return {
                        value: input,
                        text: input
                    }
                }
            })
        }
    })
}

function initBackHistoryButtonListener() {
    window.addEventListener("popstate", function(event) {
        location.reload()
    }, false)
}

function initModalTaggers() {
    initTaggersForContainer("mgModalContainer")
}

function initAppTaggers() {
    initTaggersForContainer("layers")
}
mgEventHandler.on("AppCreated", null, function(id, params) {
    setTimeout(function() {
        initAppTaggers();
        initBackHistoryButtonListener()
    }, 100)
}, 900);
(function(global, factory) {
    typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory() : typeof define === "function" && define.amd ? define(factory) : global.moment = factory()
})(this, function() {
    "use strict";
    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments)
    }

    function setHookCallback(callback) {
        hookCallback = callback
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]"
    }

    function isObject(input) {
        return input != null && Object.prototype.toString.call(input) === "[object Object]"
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false
                }
            }
            return true
        }
    }

    function isUndefined(input) {
        return input === void 0
    }

    function isNumber(input) {
        return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]"
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]"
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i))
        }
        return res
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b)
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i]
            }
        }
        if (hasOwnProp(b, "toString")) {
            a.toString = b.toString
        }
        if (hasOwnProp(b, "valueOf")) {
            a.valueOf = b.valueOf
        }
        return a
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc()
    }

    function defaultParsingFlags() {
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false
        }
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags()
        }
        return m._pf
    }
    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some
    } else {
        some = function(fun) {
            var t = Object(this);
            var len = t.length >>> 0;
            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true
                }
            }
            return false
        }
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function(i) {
                return i != null
            });
            var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
            if (m._strict) {
                isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined
            }
            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid
            } else {
                return isNowValid
            }
        }
        return m._isValid
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags)
        } else {
            getParsingFlags(m).userInvalidated = true
        }
        return m
    }
    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;
        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject
        }
        if (!isUndefined(from._i)) {
            to._i = from._i
        }
        if (!isUndefined(from._f)) {
            to._f = from._f
        }
        if (!isUndefined(from._l)) {
            to._l = from._l
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from)
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale
        }
        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val
                }
            }
        }
        return to
    }
    var updateInProgress = false;

    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN)
        }
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false
        }
    }

    function isMoment(obj) {
        return obj instanceof Moment || obj != null && obj._isAMomentObject != null
    }

    function absFloor(number) {
        if (number < 0) {
            return Math.ceil(number) || 0
        } else {
            return Math.floor(number)
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;
        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber)
        }
        return value
    }

    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
                diffs++
            }
        }
        return diffs + lengthDiff
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
            console.warn("Deprecation warning: " + msg)
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;
        return extend(function() {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg)
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = "";
                    if (typeof arguments[i] === "object") {
                        arg += "\n[" + i + "] ";
                        for (var key in arguments[0]) {
                            arg += key + ": " + arguments[0][key] + ", "
                        }
                        arg = arg.slice(0, -2)
                    } else {
                        arg = arguments[i]
                    }
                    args.push(arg)
                }
                warn(msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + (new Error).stack);
                firstTime = false
            }
            return fn.apply(this, arguments)
        }, fn)
    }
    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg)
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true
        }
    }
    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === "[object Function]"
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop
            } else {
                this["_" + i] = prop
            }
        }
        this._config = config;
        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source)
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop])
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop]
                } else {
                    delete res[prop]
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
                res[prop] = extend({}, res[prop])
            }
        }
        return res
    }

    function Locale(config) {
        if (config != null) {
            this.set(config)
        }
    }
    var keys;
    if (Object.keys) {
        keys = Object.keys
    } else {
        keys = function(obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i)
                }
            }
            return res
        }
    }
    var defaultCalendar = {
        sameDay: "[Today at] LT",
        nextDay: "[Tomorrow at] LT",
        nextWeek: "dddd [at] LT",
        lastDay: "[Yesterday at] LT",
        lastWeek: "[Last] dddd [at] LT",
        sameElse: "L"
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar["sameElse"];
        return isFunction(output) ? output.call(mom, now) : output
    }
    var defaultLongDateFormat = {
        LTS: "h:mm:ss A",
        LT: "h:mm A",
        L: "MM/DD/YYYY",
        LL: "MMMM D, YYYY",
        LLL: "MMMM D, YYYY h:mm A",
        LLLL: "dddd, MMMM D, YYYY h:mm A"
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];
        if (format || !formatUpper) {
            return format
        }
        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function(val) {
            return val.slice(1)
        });
        return this._longDateFormat[key]
    }
    var defaultInvalidDate = "Invalid date";

    function invalidDate() {
        return this._invalidDate
    }
    var defaultOrdinal = "%d";
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace("%d", number)
    }
    var defaultRelativeTime = {
        future: "in %s",
        past: "%s ago",
        s: "a few seconds",
        ss: "%d seconds",
        m: "a minute",
        mm: "%d minutes",
        h: "an hour",
        hh: "%d hours",
        d: "a day",
        dd: "%d days",
        M: "a month",
        MM: "%d months",
        y: "a year",
        yy: "%d years"
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number)
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? "future" : "past"];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output)
    }
    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + "s"] = aliases[shorthand] = unit
    }

    function normalizeUnits(units) {
        return typeof units === "string" ? aliases[units] || aliases[units.toLowerCase()] : undefined
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp, prop;
        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop]
                }
            }
        }
        return normalizedInput
    }
    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({
                unit: u,
                priority: priorities[u]
            })
        }
        units.sort(function(a, b) {
            return a.priority - b.priority
        });
        return units
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = "" + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber
    }
    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
    var formatFunctions = {};
    var formatTokenFunctions = {};

    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === "string") {
            func = function() {
                return this[callback]()
            }
        }
        if (token) {
            formatTokenFunctions[token] = func
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function() {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2])
            }
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function() {
                return this.localeData().ordinal(func.apply(this, arguments), token)
            }
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, "")
        }
        return input.replace(/\\/g, "")
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i, length;
        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]]
            } else {
                array[i] = removeFormattingTokens(array[i])
            }
        }
        return function(mom) {
            var output = "",
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i]
            }
            return output
        }
    }

    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate()
        }
        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
        return formatFunctions[format](m)
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input
        }
        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1
        }
        return format
    }
    var match1 = /\d/;
    var match2 = /\d\d/;
    var match3 = /\d{3}/;
    var match4 = /\d{4}/;
    var match6 = /[+-]?\d{6}/;
    var match1to2 = /\d\d?/;
    var match3to4 = /\d\d\d\d?/;
    var match5to6 = /\d\d\d\d\d\d?/;
    var match1to3 = /\d{1,3}/;
    var match1to4 = /\d{1,4}/;
    var match1to6 = /[+-]?\d{1,6}/;
    var matchUnsigned = /\d+/;
    var matchSigned = /[+-]?\d+/;
    var matchOffset = /Z|[+-]\d\d:?\d\d/gi;
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi;
    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
    var regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function(isStrict, localeData) {
            return isStrict && strictRegex ? strictRegex : regex
        }
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token))
        }
        return regexes[token](config._strict, config._locale)
    }

    function unescapeFormat(s) {
        return regexEscape(s.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4
        }))
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
    }
    var tokens = {};

    function addParseToken(token, callback) {
        var i, func = callback;
        if (typeof token === "string") {
            token = [token]
        }
        if (isNumber(callback)) {
            func = function(input, array) {
                array[callback] = toInt(input)
            }
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function(input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token)
        })
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token)
        }
    }
    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;
    addFormatToken("Y", 0, 0, function() {
        var y = this.year();
        return y <= 9999 ? "" + y : "+" + y
    });
    addFormatToken(0, ["YY", 2], 0, function() {
        return this.year() % 100
    });
    addFormatToken(0, ["YYYY", 4], 0, "year");
    addFormatToken(0, ["YYYYY", 5], 0, "year");
    addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
    addUnitAlias("year", "y");
    addUnitPriority("year", 1);
    addRegexToken("Y", matchSigned);
    addRegexToken("YY", match1to2, match2);
    addRegexToken("YYYY", match1to4, match4);
    addRegexToken("YYYYY", match1to6, match6);
    addRegexToken("YYYYYY", match1to6, match6);
    addParseToken(["YYYYY", "YYYYYY"], YEAR);
    addParseToken("YYYY", function(input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input)
    });
    addParseToken("YY", function(input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input)
    });
    addParseToken("Y", function(input, array) {
        array[YEAR] = parseInt(input, 10)
    });

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365
    }

    function isLeapYear(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0
    }
    hooks.parseTwoDigitYear = function(input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3)
    };
    var getSetYear = makeGetSet("FullYear", true);

    function getIsLeapYear() {
        return isLeapYear(this.year())
    }

    function makeGetSet(unit, keepTime) {
        return function(value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this
            } else {
                return get(this, unit)
            }
        }
    }

    function get(mom, unit) {
        return mom.isValid() ? mom._d["get" + (mom._isUTC ? "UTC" : "") + unit]() : NaN
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === "FullYear" && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value, mom.month(), daysInMonth(value, mom.month()))
            } else {
                mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value)
            }
        }
    }

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]()
        }
        return this
    }

    function stringSet(units, value) {
        if (typeof units === "object") {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit])
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value)
            }
        }
        return this
    }

    function mod(n, x) {
        return (n % x + x) % x
    }
    var indexOf;
    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf
    } else {
        indexOf = function(o) {
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i
                }
            }
            return -1
        }
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2
    }
    addFormatToken("M", ["MM", 2], "Mo", function() {
        return this.month() + 1
    });
    addFormatToken("MMM", 0, 0, function(format) {
        return this.localeData().monthsShort(this, format)
    });
    addFormatToken("MMMM", 0, 0, function(format) {
        return this.localeData().months(this, format)
    });
    addUnitAlias("month", "M");
    addUnitPriority("month", 8);
    addRegexToken("M", match1to2);
    addRegexToken("MM", match1to2, match2);
    addRegexToken("MMM", function(isStrict, locale) {
        return locale.monthsShortRegex(isStrict)
    });
    addRegexToken("MMMM", function(isStrict, locale) {
        return locale.monthsRegex(isStrict)
    });
    addParseToken(["M", "MM"], function(input, array) {
        array[MONTH] = toInt(input) - 1
    });
    addParseToken(["MMM", "MMMM"], function(input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        if (month != null) {
            array[MONTH] = month
        } else {
            getParsingFlags(config).invalidMonth = input
        }
    });
    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split("_");

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months) ? this._months : this._months["standalone"]
        }
        return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? "format" : "standalone"][m.month()]
    }
    var defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"]
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? "format" : "standalone"][m.month()]
    }

    function handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2e3, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, "").toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, "").toLocaleLowerCase()
            }
        }
        if (strict) {
            if (format === "MMM") {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null
            }
        } else {
            if (format === "MMM") {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;
        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict)
        }
        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = []
        }
        for (i = 0; i < 12; i++) {
            mom = createUTC([2e3, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp("^" + this.months(mom, "").replace(".", "") + "$", "i");
                this._shortMonthsParse[i] = new RegExp("^" + this.monthsShort(mom, "").replace(".", "") + "$", "i")
            }
            if (!strict && !this._monthsParse[i]) {
                regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
                this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i")
            }
            if (strict && format === "MMMM" && this._longMonthsParse[i].test(monthName)) {
                return i
            } else if (strict && format === "MMM" && this._shortMonthsParse[i].test(monthName)) {
                return i
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i
            }
        }
    }

    function setMonth(mom, value) {
        var dayOfMonth;
        if (!mom.isValid()) {
            return mom
        }
        if (typeof value === "string") {
            if (/^\d+$/.test(value)) {
                value = toInt(value)
            } else {
                value = mom.localeData().monthsParse(value);
                if (!isNumber(value)) {
                    return mom
                }
            }
        }
        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d["set" + (mom._isUTC ? "UTC" : "") + "Month"](value, dayOfMonth);
        return mom
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this
        } else {
            return get(this, "Month")
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month())
    }
    var defaultMonthsShortRegex = matchWord;

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, "_monthsRegex")) {
                computeMonthsParse.call(this)
            }
            if (isStrict) {
                return this._monthsShortStrictRegex
            } else {
                return this._monthsShortRegex
            }
        } else {
            if (!hasOwnProp(this, "_monthsShortRegex")) {
                this._monthsShortRegex = defaultMonthsShortRegex
            }
            return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex
        }
    }
    var defaultMonthsRegex = matchWord;

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, "_monthsRegex")) {
                computeMonthsParse.call(this)
            }
            if (isStrict) {
                return this._monthsStrictRegex
            } else {
                return this._monthsRegex
            }
        } else {
            if (!hasOwnProp(this, "_monthsRegex")) {
                this._monthsRegex = defaultMonthsRegex
            }
            return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length
        }
        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            mom = createUTC([2e3, i]);
            shortPieces.push(this.monthsShort(mom, ""));
            longPieces.push(this.months(mom, ""));
            mixedPieces.push(this.months(mom, ""));
            mixedPieces.push(this.monthsShort(mom, ""))
        }
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i])
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i])
        }
        this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i");
        this._monthsShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i")
    }

    function createDate(y, m, d, h, M, s, ms) {
        var date = new Date(y, m, d, h, M, s, ms);
        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
            date.setFullYear(y)
        }
        return date
    }

    function createUTCDate(y) {
        var date = new Date(Date.UTC.apply(null, arguments));
        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y)
        }
        return date
    }

    function firstWeekOffset(year, dow, doy) {
        var fwd = 7 + dow - doy,
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
        return -fwdlw + fwd - 1
    }

    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;
        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year)
        } else {
            resYear = year;
            resDayOfYear = dayOfYear
        }
        return {
            year: resYear,
            dayOfYear: resDayOfYear
        }
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;
        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy)
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1
        } else {
            resYear = mom.year();
            resWeek = week
        }
        return {
            week: resWeek,
            year: resYear
        }
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7
    }
    addFormatToken("w", ["ww", 2], "wo", "week");
    addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
    addUnitAlias("week", "w");
    addUnitAlias("isoWeek", "W");
    addUnitPriority("week", 5);
    addUnitPriority("isoWeek", 5);
    addRegexToken("w", match1to2);
    addRegexToken("ww", match1to2, match2);
    addRegexToken("W", match1to2);
    addRegexToken("WW", match1to2, match2);
    addWeekParseToken(["w", "ww", "W", "WW"], function(input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input)
    });

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week
    }
    var defaultLocaleWeek = {
        dow: 0,
        doy: 6
    };

    function localeFirstDayOfWeek() {
        return this._week.dow
    }

    function localeFirstDayOfYear() {
        return this._week.doy
    }

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, "d")
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, "d")
    }
    addFormatToken("d", 0, "do", "day");
    addFormatToken("dd", 0, 0, function(format) {
        return this.localeData().weekdaysMin(this, format)
    });
    addFormatToken("ddd", 0, 0, function(format) {
        return this.localeData().weekdaysShort(this, format)
    });
    addFormatToken("dddd", 0, 0, function(format) {
        return this.localeData().weekdays(this, format)
    });
    addFormatToken("e", 0, 0, "weekday");
    addFormatToken("E", 0, 0, "isoWeekday");
    addUnitAlias("day", "d");
    addUnitAlias("weekday", "e");
    addUnitAlias("isoWeekday", "E");
    addUnitPriority("day", 11);
    addUnitPriority("weekday", 11);
    addUnitPriority("isoWeekday", 11);
    addRegexToken("d", match1to2);
    addRegexToken("e", match1to2);
    addRegexToken("E", match1to2);
    addRegexToken("dd", function(isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict)
    });
    addRegexToken("ddd", function(isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict)
    });
    addRegexToken("dddd", function(isStrict, locale) {
        return locale.weekdaysRegex(isStrict)
    });
    addWeekParseToken(["dd", "ddd", "dddd"], function(input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        if (weekday != null) {
            week.d = weekday
        } else {
            getParsingFlags(config).invalidWeekday = input
        }
    });
    addWeekParseToken(["d", "e", "E"], function(input, week, config, token) {
        week[token] = toInt(input)
    });

    function parseWeekday(input, locale) {
        if (typeof input !== "string") {
            return input
        }
        if (!isNaN(input)) {
            return parseInt(input, 10)
        }
        input = locale.weekdaysParse(input);
        if (typeof input === "number") {
            return input
        }
        return null
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === "string") {
            return locale.weekdaysParse(input) % 7 || 7
        }
        return isNaN(input) ? null : input
    }
    var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");

    function localeWeekdays(m, format) {
        if (!m) {
            return isArray(this._weekdays) ? this._weekdays : this._weekdays["standalone"]
        }
        return isArray(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format) ? "format" : "standalone"][m.day()]
    }
    var defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");

    function localeWeekdaysShort(m) {
        return m ? this._weekdaysShort[m.day()] : this._weekdaysShort
    }
    var defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");

    function localeWeekdaysMin(m) {
        return m ? this._weekdaysMin[m.day()] : this._weekdaysMin
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];
            for (i = 0; i < 7; ++i) {
                mom = createUTC([2e3, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, "").toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, "").toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, "").toLocaleLowerCase()
            }
        }
        if (strict) {
            if (format === "dddd") {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null
            } else if (format === "ddd") {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null
            }
        } else {
            if (format === "dddd") {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null
            } else if (format === "ddd") {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;
        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict)
        }
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = []
        }
        for (i = 0; i < 7; i++) {
            mom = createUTC([2e3, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp("^" + this.weekdays(mom, "").replace(".", ".?") + "$", "i");
                this._shortWeekdaysParse[i] = new RegExp("^" + this.weekdaysShort(mom, "").replace(".", ".?") + "$", "i");
                this._minWeekdaysParse[i] = new RegExp("^" + this.weekdaysMin(mom, "").replace(".", ".?") + "$", "i")
            }
            if (!this._weekdaysParse[i]) {
                regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
                this._weekdaysParse[i] = new RegExp(regex.replace(".", ""), "i")
            }
            if (strict && format === "dddd" && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i
            } else if (strict && format === "ddd" && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i
            } else if (strict && format === "dd" && this._minWeekdaysParse[i].test(weekdayName)) {
                return i
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i
            }
        }
    }

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, "d")
        } else {
            return day
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, "d")
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN
        }
        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7)
        } else {
            return this.day() || 7
        }
    }
    var defaultWeekdaysRegex = matchWord;

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, "_weekdaysRegex")) {
                computeWeekdaysParse.call(this)
            }
            if (isStrict) {
                return this._weekdaysStrictRegex
            } else {
                return this._weekdaysRegex
            }
        } else {
            if (!hasOwnProp(this, "_weekdaysRegex")) {
                this._weekdaysRegex = defaultWeekdaysRegex
            }
            return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex
        }
    }
    var defaultWeekdaysShortRegex = matchWord;

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, "_weekdaysRegex")) {
                computeWeekdaysParse.call(this)
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex
            } else {
                return this._weekdaysShortRegex
            }
        } else {
            if (!hasOwnProp(this, "_weekdaysShortRegex")) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex
            }
            return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex
        }
    }
    var defaultWeekdaysMinRegex = matchWord;

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, "_weekdaysRegex")) {
                computeWeekdaysParse.call(this)
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex
            } else {
                return this._weekdaysMinRegex
            }
        } else {
            if (!hasOwnProp(this, "_weekdaysMinRegex")) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex
            }
            return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length
        }
        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            mom = createUTC([2e3, 1]).day(i);
            minp = this.weekdaysMin(mom, "");
            shortp = this.weekdaysShort(mom, "");
            longp = this.weekdays(mom, "");
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp)
        }
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i])
        }
        this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;
        this._weekdaysStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i");
        this._weekdaysShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i");
        this._weekdaysMinStrictRegex = new RegExp("^(" + minPieces.join("|") + ")", "i")
    }

    function hFormat() {
        return this.hours() % 12 || 12
    }

    function kFormat() {
        return this.hours() || 24
    }
    addFormatToken("H", ["HH", 2], 0, "hour");
    addFormatToken("h", ["hh", 2], 0, hFormat);
    addFormatToken("k", ["kk", 2], 0, kFormat);
    addFormatToken("hmm", 0, 0, function() {
        return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2)
    });
    addFormatToken("hmmss", 0, 0, function() {
        return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2)
    });
    addFormatToken("Hmm", 0, 0, function() {
        return "" + this.hours() + zeroFill(this.minutes(), 2)
    });
    addFormatToken("Hmmss", 0, 0, function() {
        return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2)
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function() {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase)
        })
    }
    meridiem("a", true);
    meridiem("A", false);
    addUnitAlias("hour", "h");
    addUnitPriority("hour", 13);

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse
    }
    addRegexToken("a", matchMeridiem);
    addRegexToken("A", matchMeridiem);
    addRegexToken("H", match1to2);
    addRegexToken("h", match1to2);
    addRegexToken("k", match1to2);
    addRegexToken("HH", match1to2, match2);
    addRegexToken("hh", match1to2, match2);
    addRegexToken("kk", match1to2, match2);
    addRegexToken("hmm", match3to4);
    addRegexToken("hmmss", match5to6);
    addRegexToken("Hmm", match3to4);
    addRegexToken("Hmmss", match5to6);
    addParseToken(["H", "HH"], HOUR);
    addParseToken(["k", "kk"], function(input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput
    });
    addParseToken(["a", "A"], function(input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input
    });
    addParseToken(["h", "hh"], function(input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true
    });
    addParseToken("hmm", function(input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true
    });
    addParseToken("hmmss", function(input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true
    });
    addParseToken("Hmm", function(input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos))
    });
    addParseToken("Hmmss", function(input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2))
    });

    function localeIsPM(input) {
        return (input + "").toLowerCase().charAt(0) === "p"
    }
    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? "pm" : "PM"
        } else {
            return isLower ? "am" : "AM"
        }
    }
    var getSetHour = makeGetSet("Hours", true);
    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,
        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,
        week: defaultLocaleWeek,
        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,
        meridiemParse: defaultLocaleMeridiemParse
    };
    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace("_", "-") : key
    }

    function chooseLocale(names) {
        var i = 0,
            j, next, locale, split;
        while (i < names.length) {
            split = normalizeLocale(names[i]).split("-");
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split("-") : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join("-"));
                if (locale) {
                    return locale
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    break
                }
                j--
            }
            i++
        }
        return globalLocale
    }

    function loadLocale(name) {
        var oldLocale = null;
        if (!locales[name] && typeof module !== "undefined" && module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                aliasedRequire("./locale/" + name);
                getSetGlobalLocale(oldLocale)
            } catch (e) {}
        }
        return locales[name]
    }

    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key)
            } else {
                data = defineLocale(key, values)
            }
            if (data) {
                globalLocale = data
            } else {
                if (typeof console !== "undefined" && console.warn) {
                    console.warn("Locale " + key + " not found. Did you forget to load it?")
                }
            }
        }
        return globalLocale._abbr
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale, parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change " + "an existing locale. moment.defineLocale(localeName, " + "config) should only be used for creating a new locale " + "See http://momentjs.com/guides/#/warnings/define-locale/ for more info.");
                parentConfig = locales[name]._config
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = []
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));
            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function(x) {
                    defineLocale(x.name, x.config)
                })
            }
            getSetGlobalLocale(name);
            return locales[name]
        } else {
            delete locales[name];
            return null
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, tmpLocale, parentConfig = baseConfig;
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;
            getSetGlobalLocale(name)
        } else {
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale
                } else if (locales[name] != null) {
                    delete locales[name]
                }
            }
        }
        return locales[name]
    }

    function getLocale(key) {
        var locale;
        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr
        }
        if (!key) {
            return globalLocale
        }
        if (!isArray(key)) {
            locale = loadLocale(key);
            if (locale) {
                return locale
            }
            key = [key]
        }
        return chooseLocale(key)
    }

    function listLocales() {
        return keys(locales)
    }

    function checkOverflow(m) {
        var overflow;
        var a = m._a;
        if (a && getParsingFlags(m).overflow === -2) {
            overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;
            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY
            }
            getParsingFlags(m).overflow = overflow
        }
        return m
    }

    function defaults(a, b, c) {
        if (a != null) {
            return a
        }
        if (b != null) {
            return b
        }
        return c
    }

    function currentDateArray(config) {
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()]
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()]
    }

    function configFromArray(config) {
        var i, date, input = [],
            currentDate, expectedWeekday, yearToUse;
        if (config._d) {
            return
        }
        currentDate = currentDateArray(config);
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config)
        }
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true
            }
            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate()
        }
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i]
        }
        for (; i < 7; i++) {
            config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i]
        }
        if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0
        }
        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm)
        }
        if (config._nextDay) {
            config._a[HOUR] = 24
        }
        if (config._w && typeof config._w.d !== "undefined" && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;
            var curWeek = weekOfYear(createLocal(), dow, doy);
            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
            week = defaults(w.w, curWeek.week);
            if (w.d != null) {
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true
                }
            } else if (w.e != null) {
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true
                }
            } else {
                weekday = dow
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear
        }
    }
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
    var isoDates = [
        ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
        ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
        ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
        ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
        ["YYYY-DDD", /\d{4}-\d{3}/],
        ["YYYY-MM", /\d{4}-\d\d/, false],
        ["YYYYYYMMDD", /[+-]\d{10}/],
        ["YYYYMMDD", /\d{8}/],
        ["GGGG[W]WWE", /\d{4}W\d{3}/],
        ["GGGG[W]WW", /\d{4}W\d{2}/, false],
        ["YYYYDDD", /\d{7}/]
    ];
    var isoTimes = [
        ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
        ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
        ["HH:mm:ss", /\d\d:\d\d:\d\d/],
        ["HH:mm", /\d\d:\d\d/],
        ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
        ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
        ["HHmmss", /\d\d\d\d\d\d/],
        ["HHmm", /\d\d\d\d/],
        ["HH", /\d\d/]
    ];
    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    function configFromISO(config) {
        var i, l, string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;
        if (match) {
            getParsingFlags(config).iso = true;
            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        timeFormat = (match[2] || " ") + isoTimes[i][0];
                        break
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = "Z"
                } else {
                    config._isValid = false;
                    return
                }
            }
            config._f = dateFormat + (timeFormat || "") + (tzFormat || "");
            configFromStringAndFormat(config)
        } else {
            config._isValid = false
        }
    }
    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];
        if (secondStr) {
            result.push(parseInt(secondStr, 10))
        }
        return result
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2e3 + year
        } else if (year <= 999) {
            return 1900 + year
        }
        return year
    }

    function preprocessRFC2822(s) {
        return s.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").trim()
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false
            }
        }
        return true
    }
    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset]
        } else if (militaryOffset) {
            return 0
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m
        }
    }

    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return
            }
            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);
            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
            getParsingFlags(config).rfc2822 = true
        } else {
            config._isValid = false
        }
    }

    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return
        }
        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid
        } else {
            return
        }
        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid
        } else {
            return
        }
        hooks.createFromInputFallback(config)
    }
    hooks.createFromInputFallback = deprecate("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), " + "which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are " + "discouraged and will be removed in an upcoming major release. Please refer to " + "http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(config) {
        config._d = new Date(config._i + (config._useUTC ? " UTC" : ""))
    });
    hooks.ISO_8601 = function() {};
    hooks.RFC_2822 = function() {};

    function configFromStringAndFormat(config) {
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return
        }
        config._a = [];
        getParsingFlags(config).empty = true;
        var string = "" + config._i,
            i, parsedInput, tokens, token, skipped, stringLength = string.length,
            totalParsedInputLength = 0;
        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];
        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped)
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length
            }
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false
                } else {
                    getParsingFlags(config).unusedTokens.push(token)
                }
                addTimeToArrayFromToken(token, parsedInput, config)
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token)
            }
        }
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string)
        }
        if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined
        }
        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
        configFromArray(config);
        checkOverflow(config)
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;
        if (meridiem == null) {
            return hour
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem)
        } else if (locale.isPM != null) {
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12
            }
            if (!isPm && hour === 12) {
                hour = 0
            }
            return hour
        } else {
            return hour
        }
    }

    function configFromStringAndArray(config) {
        var tempConfig, bestMoment, scoreToBeat, i, currentScore;
        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return
        }
        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);
            if (!isValid(tempConfig)) {
                continue
            }
            currentScore += getParsingFlags(tempConfig).charsLeftOver;
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
            getParsingFlags(tempConfig).score = currentScore;
            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig
            }
        }
        extend(config, bestMoment || tempConfig)
    }

    function configFromObject(config) {
        if (config._d) {
            return
        }
        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function(obj) {
            return obj && parseInt(obj, 10)
        });
        configFromArray(config)
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            res.add(1, "d");
            res._nextDay = undefined
        }
        return res
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;
        config._locale = config._locale || getLocale(config._l);
        if (input === null || format === undefined && input === "") {
            return createInvalid({
                nullInput: true
            })
        }
        if (typeof input === "string") {
            config._i = input = config._locale.preparse(input)
        }
        if (isMoment(input)) {
            return new Moment(checkOverflow(input))
        } else if (isDate(input)) {
            config._d = input
        } else if (isArray(format)) {
            configFromStringAndArray(config)
        } else if (format) {
            configFromStringAndFormat(config)
        } else {
            configFromInput(config)
        }
        if (!isValid(config)) {
            config._d = null
        }
        return config
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now())
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf())
        } else if (typeof input === "string") {
            configFromString(config)
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function(obj) {
                return parseInt(obj, 10)
            });
            configFromArray(config)
        } else if (isObject(input)) {
            configFromObject(config)
        } else if (isNumber(input)) {
            config._d = new Date(input)
        } else {
            hooks.createFromInputFallback(config)
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};
        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined
        }
        if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
            input = undefined
        }
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;
        return createFromConfig(c)
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false)
    }
    var prototypeMin = deprecate("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other < this ? this : other
        } else {
            return createInvalid()
        }
    });
    var prototypeMax = deprecate("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other > this ? this : other
        } else {
            return createInvalid()
        }
    });

    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0]
        }
        if (!moments.length) {
            return createLocal()
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i]
            }
        }
        return res
    }

    function min() {
        var args = [].slice.call(arguments, 0);
        return pickBy("isBefore", args)
    }

    function max() {
        var args = [].slice.call(arguments, 0);
        return pickBy("isAfter", args)
    }
    var now = function() {
        return Date.now ? Date.now() : +new Date
    };
    var ordering = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false
            }
        }
        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true
                }
            }
        }
        return true
    }

    function isValid$1() {
        return this._isValid
    }

    function createInvalid$1() {
        return createDuration(NaN)
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;
        this._isValid = isDurationValid(normalizedInput);
        this._milliseconds = +milliseconds + seconds * 1e3 + minutes * 6e4 + hours * 1e3 * 60 * 60;
        this._days = +days + weeks * 7;
        this._months = +months + quarters * 3 + years * 12;
        this._data = {};
        this._locale = getLocale();
        this._bubble()
    }

    function isDuration(obj) {
        return obj instanceof Duration
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1
        } else {
            return Math.round(number)
        }
    }

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function() {
            var offset = this.utcOffset();
            var sign = "+";
            if (offset < 0) {
                offset = -offset;
                sign = "-"
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2)
        })
    }
    offset("Z", ":");
    offset("ZZ", "");
    addRegexToken("Z", matchShortOffset);
    addRegexToken("ZZ", matchShortOffset);
    addParseToken(["Z", "ZZ"], function(input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input)
    });
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || "").match(matcher);
        if (matches === null) {
            return null
        }
        var chunk = matches[matches.length - 1] || [];
        var parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);
        return minutes === 0 ? 0 : parts[0] === "+" ? minutes : -minutes
    }

    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res
        } else {
            return createLocal(input).local()
        }
    }

    function getDateOffset(m) {
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15
    }
    hooks.updateOffset = function() {};

    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN
        }
        if (input != null) {
            if (typeof input === "string") {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this)
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, "m")
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, "m"), 1, false)
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null
                }
            }
            return this
        } else {
            return this._isUTC ? offset : getDateOffset(this)
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== "string") {
                input = -input
            }
            this.utcOffset(input, keepLocalTime);
            return this
        } else {
            return -this.utcOffset()
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime)
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;
            if (keepLocalTime) {
                this.subtract(getDateOffset(this), "m")
            }
        }
        return this
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true)
        } else if (typeof this._i === "string") {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone)
            } else {
                this.utcOffset(0, true)
            }
        }
        return this
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false
        }
        input = input ? createLocal(input).utcOffset() : 0;
        return (this.utcOffset() - input) % 60 === 0
    }

    function isDaylightSavingTime() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted
        }
        var c = {};
        copyConfig(c, this);
        c = prepareConfig(c);
        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0
        } else {
            this._isDSTShifted = false
        }
        return this._isDSTShifted
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false
    }
    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            match = null,
            sign, ret, diffRes;
        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months
            }
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input
            } else {
                duration.milliseconds = input
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = match[1] === "-" ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1e3)) * sign
            }
        } else if (!!(match = isoRegex.exec(input))) {
            sign = match[1] === "-" ? -1 : match[1] === "+" ? 1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign)
            }
        } else if (duration == null) {
            duration = {}
        } else if (typeof duration === "object" && ("from" in duration || "to" in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months
        }
        ret = new Duration(duration);
        if (isDuration(input) && hasOwnProp(input, "_locale")) {
            ret._locale = input._locale
        }
        return ret
    }
    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        var res = inp && parseFloat(inp.replace(",", "."));
        return (isNaN(res) ? 0 : res) * sign
    }

    function positiveMomentsDifference(base, other) {
        var res = {
            milliseconds: 0,
            months: 0
        };
        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, "M").isAfter(other)) {
            --res.months
        }
        res.milliseconds = +other - +base.clone().add(res.months, "M");
        return res
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {
                milliseconds: 0,
                months: 0
            }
        }
        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other)
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months
        }
        return res
    }

    function createAdder(direction, name) {
        return function(val, period) {
            var dur, tmp;
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). " + "See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");
                tmp = val;
                val = period;
                period = tmp
            }
            val = typeof val === "string" ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this
        }
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);
        if (!mom.isValid()) {
            return
        }
        updateOffset = updateOffset == null ? true : updateOffset;
        if (months) {
            setMonth(mom, get(mom, "Month") + months * isAdding)
        }
        if (days) {
            set$1(mom, "Date", get(mom, "Date") + days * isAdding)
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding)
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months)
        }
    }
    var add = createAdder(1, "add");
    var subtract = createAdder(-1, "subtract");

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, "days", true);
        return diff < -6 ? "sameElse" : diff < -1 ? "lastWeek" : diff < 0 ? "lastDay" : diff < 1 ? "sameDay" : diff < 2 ? "nextDay" : diff < 7 ? "nextWeek" : "sameElse"
    }

    function calendar$1(time, formats) {
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf("day"),
            format = hooks.calendarFormat(this, sod) || "sameElse";
        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
        return this.format(output || this.localeData().calendar(format, this, createLocal(now)))
    }

    function clone() {
        return new Moment(this)
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false
        }
        units = normalizeUnits(!isUndefined(units) ? units : "millisecond");
        if (units === "millisecond") {
            return this.valueOf() > localInput.valueOf()
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf()
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false
        }
        units = normalizeUnits(!isUndefined(units) ? units : "millisecond");
        if (units === "millisecond") {
            return this.valueOf() < localInput.valueOf()
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf()
        }
    }

    function isBetween(from, to, units, inclusivity) {
        inclusivity = inclusivity || "()";
        return (inclusivity[0] === "(" ? this.isAfter(from, units) : !this.isBefore(from, units)) && (inclusivity[1] === ")" ? this.isBefore(to, units) : !this.isAfter(to, units))
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false
        }
        units = normalizeUnits(units || "millisecond");
        if (units === "millisecond") {
            return this.valueOf() === localInput.valueOf()
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf()
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units)
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units)
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;
        if (!this.isValid()) {
            return NaN
        }
        that = cloneWithOffset(input, this);
        if (!that.isValid()) {
            return NaN
        }
        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
        units = normalizeUnits(units);
        switch (units) {
            case "year":
                output = monthDiff(this, that) / 12;
                break;
            case "month":
                output = monthDiff(this, that);
                break;
            case "quarter":
                output = monthDiff(this, that) / 3;
                break;
            case "second":
                output = (this - that) / 1e3;
                break;
            case "minute":
                output = (this - that) / 6e4;
                break;
            case "hour":
                output = (this - that) / 36e5;
                break;
            case "day":
                output = (this - that - zoneDelta) / 864e5;
                break;
            case "week":
                output = (this - that - zoneDelta) / 6048e5;
                break;
            default:
                output = this - that
        }
        return asFloat ? output : absFloor(output)
    }

    function monthDiff(a, b) {
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            anchor = a.clone().add(wholeMonthDiff, "months"),
            anchor2, adjust;
        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, "months");
            adjust = (b - anchor) / (anchor - anchor2)
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, "months");
            adjust = (b - anchor) / (anchor2 - anchor)
        }
        return -(wholeMonthDiff + adjust) || 0
    }
    hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
    hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";

    function toString() {
        return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ")
        }
        if (isFunction(Date.prototype.toISOString)) {
            if (utc) {
                return this.toDate().toISOString()
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(m, "Z"))
            }
        }
        return formatMoment(m, utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ")
    }

    function inspect() {
        if (!this.isValid()) {
            return "moment.invalid(/* " + this._i + " */)"
        }
        var func = "moment";
        var zone = "";
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
            zone = "Z"
        }
        var prefix = "[" + func + '("]';
        var year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
        var datetime = "-MM-DD[T]HH:mm:ss.SSS";
        var suffix = zone + '[")]';
        return this.format(prefix + year + datetime + suffix)
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output)
    }

    function from(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
            return createDuration({
                to: this,
                from: time
            }).locale(this.locale()).humanize(!withoutSuffix)
        } else {
            return this.localeData().invalidDate()
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix)
    }

    function to(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
            return createDuration({
                from: this,
                to: time
            }).locale(this.locale()).humanize(!withoutSuffix)
        } else {
            return this.localeData().invalidDate()
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix)
    }

    function locale(key) {
        var newLocaleData;
        if (key === undefined) {
            return this._locale._abbr
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData
            }
            return this
        }
    }
    var lang = deprecate("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(key) {
        if (key === undefined) {
            return this.localeData()
        } else {
            return this.locale(key)
        }
    });

    function localeData() {
        return this._locale
    }

    function startOf(units) {
        units = normalizeUnits(units);
        switch (units) {
            case "year":
                this.month(0);
            case "quarter":
            case "month":
                this.date(1);
            case "week":
            case "isoWeek":
            case "day":
            case "date":
                this.hours(0);
            case "hour":
                this.minutes(0);
            case "minute":
                this.seconds(0);
            case "second":
                this.milliseconds(0)
        }
        if (units === "week") {
            this.weekday(0)
        }
        if (units === "isoWeek") {
            this.isoWeekday(1)
        }
        if (units === "quarter") {
            this.month(Math.floor(this.month() / 3) * 3)
        }
        return this
    }

    function endOf(units) {
        units = normalizeUnits(units);
        if (units === undefined || units === "millisecond") {
            return this
        }
        if (units === "date") {
            units = "day"
        }
        return this.startOf(units).add(1, units === "isoWeek" ? "week" : units).subtract(1, "ms")
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 6e4
    }

    function unix() {
        return Math.floor(this.valueOf() / 1e3)
    }

    function toDate() {
        return new Date(this.valueOf())
    }

    function toArray() {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()]
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        }
    }

    function toJSON() {
        return this.isValid() ? this.toISOString() : null
    }

    function isValid$2() {
        return isValid(this)
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this))
    }

    function invalidAt() {
        return getParsingFlags(this).overflow
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        }
    }
    addFormatToken(0, ["gg", 2], 0, function() {
        return this.weekYear() % 100
    });
    addFormatToken(0, ["GG", 2], 0, function() {
        return this.isoWeekYear() % 100
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter)
    }
    addWeekYearFormatToken("gggg", "weekYear");
    addWeekYearFormatToken("ggggg", "weekYear");
    addWeekYearFormatToken("GGGG", "isoWeekYear");
    addWeekYearFormatToken("GGGGG", "isoWeekYear");
    addUnitAlias("weekYear", "gg");
    addUnitAlias("isoWeekYear", "GG");
    addUnitPriority("weekYear", 1);
    addUnitPriority("isoWeekYear", 1);
    addRegexToken("G", matchSigned);
    addRegexToken("g", matchSigned);
    addRegexToken("GG", match1to2, match2);
    addRegexToken("gg", match1to2, match2);
    addRegexToken("GGGG", match1to4, match4);
    addRegexToken("gggg", match1to4, match4);
    addRegexToken("GGGGG", match1to6, match6);
    addRegexToken("ggggg", match1to6, match6);
    addWeekParseToken(["gggg", "ggggg", "GGGG", "GGGGG"], function(input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input)
    });
    addWeekParseToken(["gg", "GG"], function(input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input)
    });

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy)
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4)
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4)
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy)
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy)
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this
    }
    addFormatToken("Q", 0, "Qo", "quarter");
    addUnitAlias("quarter", "Q");
    addUnitPriority("quarter", 7);
    addRegexToken("Q", match1);
    addParseToken("Q", function(input, array) {
        array[MONTH] = (toInt(input) - 1) * 3
    });

    function getSetQuarter(input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3)
    }
    addFormatToken("D", ["DD", 2], "Do", "date");
    addUnitAlias("date", "D");
    addUnitPriority("date", 9);
    addRegexToken("D", match1to2);
    addRegexToken("DD", match1to2, match2);
    addRegexToken("Do", function(isStrict, locale) {
        return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient
    });
    addParseToken(["D", "DD"], DATE);
    addParseToken("Do", function(input, array) {
        array[DATE] = toInt(input.match(match1to2)[0])
    });
    var getSetDayOfMonth = makeGetSet("Date", true);
    addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
    addUnitAlias("dayOfYear", "DDD");
    addUnitPriority("dayOfYear", 4);
    addRegexToken("DDD", match1to3);
    addRegexToken("DDDD", match3);
    addParseToken(["DDD", "DDDD"], function(input, array, config) {
        config._dayOfYear = toInt(input)
    });

    function getSetDayOfYear(input) {
        var dayOfYear = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, "d")
    }
    addFormatToken("m", ["mm", 2], 0, "minute");
    addUnitAlias("minute", "m");
    addUnitPriority("minute", 14);
    addRegexToken("m", match1to2);
    addRegexToken("mm", match1to2, match2);
    addParseToken(["m", "mm"], MINUTE);
    var getSetMinute = makeGetSet("Minutes", false);
    addFormatToken("s", ["ss", 2], 0, "second");
    addUnitAlias("second", "s");
    addUnitPriority("second", 15);
    addRegexToken("s", match1to2);
    addRegexToken("ss", match1to2, match2);
    addParseToken(["s", "ss"], SECOND);
    var getSetSecond = makeGetSet("Seconds", false);
    addFormatToken("S", 0, 0, function() {
        return ~~(this.millisecond() / 100)
    });
    addFormatToken(0, ["SS", 2], 0, function() {
        return ~~(this.millisecond() / 10)
    });
    addFormatToken(0, ["SSS", 3], 0, "millisecond");
    addFormatToken(0, ["SSSS", 4], 0, function() {
        return this.millisecond() * 10
    });
    addFormatToken(0, ["SSSSS", 5], 0, function() {
        return this.millisecond() * 100
    });
    addFormatToken(0, ["SSSSSS", 6], 0, function() {
        return this.millisecond() * 1e3
    });
    addFormatToken(0, ["SSSSSSS", 7], 0, function() {
        return this.millisecond() * 1e4
    });
    addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
        return this.millisecond() * 1e5
    });
    addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
        return this.millisecond() * 1e6
    });
    addUnitAlias("millisecond", "ms");
    addUnitPriority("millisecond", 16);
    addRegexToken("S", match1to3, match1);
    addRegexToken("SS", match1to3, match2);
    addRegexToken("SSS", match1to3, match3);
    var token;
    for (token = "SSSS"; token.length <= 9; token += "S") {
        addRegexToken(token, matchUnsigned)
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(("0." + input) * 1e3)
    }
    for (token = "S"; token.length <= 9; token += "S") {
        addParseToken(token, parseMs)
    }
    var getSetMillisecond = makeGetSet("Milliseconds", false);
    addFormatToken("z", 0, 0, "zoneAbbr");
    addFormatToken("zz", 0, 0, "zoneName");

    function getZoneAbbr() {
        return this._isUTC ? "UTC" : ""
    }

    function getZoneName() {
        return this._isUTC ? "Coordinated Universal Time" : ""
    }
    var proto = Moment.prototype;
    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate("dates accessor is deprecated. Use date instead.", getSetDayOfMonth);
    proto.months = deprecate("months accessor is deprecated. Use month instead", getSetMonth);
    proto.years = deprecate("years accessor is deprecated. Use year instead", getSetYear);
    proto.zone = deprecate("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", getSetZone);
    proto.isDSTShifted = deprecate("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", isDaylightSavingTimeShifted);

    function createUnix(input) {
        return createLocal(input * 1e3)
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone()
    }

    function preParsePostFormat(string) {
        return string
    }
    var proto$1 = Locale.prototype;
    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;
    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;
    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;
    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format)
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined
        }
        format = format || "";
        if (index != null) {
            return get$1(format, index, field, "month")
        }
        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, "month")
        }
        return out
    }

    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === "boolean") {
            if (isNumber(format)) {
                index = format;
                format = undefined
            }
            format = format || ""
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;
            if (isNumber(format)) {
                index = format;
                format = undefined
            }
            format = format || ""
        }
        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;
        if (index != null) {
            return get$1(format, (index + shift) % 7, field, "day")
        }
        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, "day")
        }
        return out
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, "months")
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, "monthsShort")
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, "weekdays")
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, "weekdaysShort")
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, "weekdaysMin")
    }
    getSetGlobalLocale("en", {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function(number) {
            var b = number % 10,
                output = toInt(number % 100 / 10) === 1 ? "th" : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
            return number + output
        }
    });
    hooks.lang = deprecate("moment.lang is deprecated. Use moment.locale instead.", getSetGlobalLocale);
    hooks.langData = deprecate("moment.langData is deprecated. Use moment.localeData instead.", getLocale);
    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;
        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);
        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);
        return this
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);
        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;
        return duration._bubble()
    }

    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1)
    }

    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1)
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number)
        } else {
            return Math.ceil(number)
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds;
        var days = this._days;
        var months = this._months;
        var data = this._data;
        var seconds, minutes, hours, years, monthsFromDays;
        if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0
        }
        data.milliseconds = milliseconds % 1e3;
        seconds = absFloor(milliseconds / 1e3);
        data.seconds = seconds % 60;
        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;
        hours = absFloor(minutes / 60);
        data.hours = hours % 24;
        days += absFloor(hours / 24);
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));
        years = absFloor(months / 12);
        months %= 12;
        data.days = days;
        data.months = months;
        data.years = years;
        return this
    }

    function daysToMonths(days) {
        return days * 4800 / 146097
    }

    function monthsToDays(months) {
        return months * 146097 / 4800
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;
        units = normalizeUnits(units);
        if (units === "month" || units === "year") {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            return units === "month" ? months : months / 12
        } else {
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case "week":
                    return days / 7 + milliseconds / 6048e5;
                case "day":
                    return days + milliseconds / 864e5;
                case "hour":
                    return days * 24 + milliseconds / 36e5;
                case "minute":
                    return days * 1440 + milliseconds / 6e4;
                case "second":
                    return days * 86400 + milliseconds / 1e3;
                case "millisecond":
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error("Unknown unit " + units)
            }
        }
    }

    function valueOf$1() {
        if (!this.isValid()) {
            return NaN
        }
        return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6
    }

    function makeAs(alias) {
        return function() {
            return this.as(alias)
        }
    }
    var asMilliseconds = makeAs("ms");
    var asSeconds = makeAs("s");
    var asMinutes = makeAs("m");
    var asHours = makeAs("h");
    var asDays = makeAs("d");
    var asWeeks = makeAs("w");
    var asMonths = makeAs("M");
    var asYears = makeAs("y");

    function clone$1() {
        return createDuration(this)
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + "s"]() : NaN
    }

    function makeGetter(name) {
        return function() {
            return this.isValid() ? this._data[name] : NaN
        }
    }
    var milliseconds = makeGetter("milliseconds");
    var seconds = makeGetter("seconds");
    var minutes = makeGetter("minutes");
    var hours = makeGetter("hours");
    var days = makeGetter("days");
    var months = makeGetter("months");
    var years = makeGetter("years");

    function weeks() {
        return absFloor(this.days() / 7)
    }
    var round = Math.round;
    var thresholds = {
        ss: 44,
        s: 45,
        m: 45,
        h: 22,
        d: 26,
        M: 11
    };

    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture)
    }

    function relativeTime$1(posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds = round(duration.as("s"));
        var minutes = round(duration.as("m"));
        var hours = round(duration.as("h"));
        var days = round(duration.as("d"));
        var months = round(duration.as("M"));
        var years = round(duration.as("y"));
        var a = seconds <= thresholds.ss && ["s", seconds] || seconds < thresholds.s && ["ss", seconds] || minutes <= 1 && ["m"] || minutes < thresholds.m && ["mm", minutes] || hours <= 1 && ["h"] || hours < thresholds.h && ["hh", hours] || days <= 1 && ["d"] || days < thresholds.d && ["dd", days] || months <= 1 && ["M"] || months < thresholds.M && ["MM", months] || years <= 1 && ["y"] || ["yy", years];
        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a)
    }

    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round
        }
        if (typeof roundingFunction === "function") {
            round = roundingFunction;
            return true
        }
        return false
    }

    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false
        }
        if (limit === undefined) {
            return thresholds[threshold]
        }
        thresholds[threshold] = limit;
        if (threshold === "s") {
            thresholds.ss = limit - 1
        }
        return true
    }

    function humanize(withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate()
        }
        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);
        if (withSuffix) {
            output = locale.pastFuture(+this, output)
        }
        return locale.postformat(output)
    }
    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x
    }

    function toISOString$1() {
        if (!this.isValid()) {
            return this.localeData().invalidDate()
        }
        var seconds = abs$1(this._milliseconds) / 1e3;
        var days = abs$1(this._days);
        var months = abs$1(this._months);
        var minutes, hours, years;
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;
        years = absFloor(months / 12);
        months %= 12;
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, "") : "";
        var total = this.asSeconds();
        if (!total) {
            return "P0D"
        }
        var totalSign = total < 0 ? "-" : "";
        var ymSign = sign(this._months) !== sign(total) ? "-" : "";
        var daysSign = sign(this._days) !== sign(total) ? "-" : "";
        var hmsSign = sign(this._milliseconds) !== sign(total) ? "-" : "";
        return totalSign + "P" + (Y ? ymSign + Y + "Y" : "") + (M ? ymSign + M + "M" : "") + (D ? daysSign + D + "D" : "") + (h || m || s ? "T" : "") + (h ? hmsSign + h + "H" : "") + (m ? hmsSign + m + "M" : "") + (s ? hmsSign + s + "S" : "")
    }
    var proto$2 = Duration.prototype;
    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;
    proto$2.toIsoString = deprecate("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", toISOString$1);
    proto$2.lang = lang;
    addFormatToken("X", 0, 0, "unix");
    addFormatToken("x", 0, 0, "valueOf");
    addRegexToken("x", matchSigned);
    addRegexToken("X", matchTimestamp);
    addParseToken("X", function(input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1e3)
    });
    addParseToken("x", function(input, array, config) {
        config._d = new Date(toInt(input))
    });
    hooks.version = "2.22.1";
    setHookCallback(createLocal);
    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
        DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
        DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
        DATE: "YYYY-MM-DD",
        TIME: "HH:mm",
        TIME_SECONDS: "HH:mm:ss",
        TIME_MS: "HH:mm:ss.SSS",
        WEEK: "YYYY-[W]WW",
        MONTH: "YYYY-MM"
    };
    return hooks
});
! function(t) {
    "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? module.exports = t() : window.noUiSlider = t()
}(function() {
    "use strict";
    var et = "12.1.0";

    function s(t) {
        return null != t
    }

    function rt(t) {
        t.preventDefault()
    }

    function i(t) {
        return "number" == typeof t && !isNaN(t) && isFinite(t)
    }

    function nt(t, e, r) {
        0 < r && (at(t, e), setTimeout(function() {
            st(t, e)
        }, r))
    }

    function it(t) {
        return Math.max(Math.min(t, 100), 0)
    }

    function ot(t) {
        return Array.isArray(t) ? t : [t]
    }

    function e(t) {
        var e = (t = String(t)).split(".");
        return 1 < e.length ? e[1].length : 0
    }

    function at(t, e) {
        t.classList ? t.classList.add(e) : t.className += " " + e
    }

    function st(t, e) {
        t.classList ? t.classList.remove(e) : t.className = t.className.replace(new RegExp("(^|\\b)" + e.split(" ").join("|") + "(\\b|$)", "gi"), " ")
    }

    function lt(t) {
        var e = void 0 !== window.pageXOffset,
            r = "CSS1Compat" === (t.compatMode || "");
        return {
            x: e ? window.pageXOffset : r ? t.documentElement.scrollLeft : t.body.scrollLeft,
            y: e ? window.pageYOffset : r ? t.documentElement.scrollTop : t.body.scrollTop
        }
    }

    function c(t, e) {
        return 100 / (e - t)
    }

    function p(t, e) {
        return 100 * e / (t[1] - t[0])
    }

    function f(t, e) {
        for (var r = 1; t >= e[r];) r += 1;
        return r
    }

    function r(t, e, r) {
        if (r >= t.slice(-1)[0]) return 100;
        var n, i, o = f(r, t),
            a = t[o - 1],
            s = t[o],
            l = e[o - 1],
            u = e[o];
        return l + (i = r, p(n = [a, s], n[0] < 0 ? i + Math.abs(n[0]) : i - n[0]) / c(l, u))
    }

    function n(t, e, r, n) {
        if (100 === n) return n;
        var i, o, a = f(n, t),
            s = t[a - 1],
            l = t[a];
        return r ? (l - s) / 2 < n - s ? l : s : e[a - 1] ? t[a - 1] + (i = n - t[a - 1], o = e[a - 1], Math.round(i / o) * o) : n
    }

    function o(t, e, r) {
        var n;
        if ("number" == typeof e && (e = [e]), !Array.isArray(e)) throw new Error("noUiSlider (" + et + "): 'range' contains invalid value.");
        if (!i(n = "min" === t ? 0 : "max" === t ? 100 : parseFloat(t)) || !i(e[0])) throw new Error("noUiSlider (" + et + "): 'range' value isn't numeric.");
        r.xPct.push(n), r.xVal.push(e[0]), n ? r.xSteps.push(!isNaN(e[1]) && e[1]) : isNaN(e[1]) || (r.xSteps[0] = e[1]), r.xHighestCompleteStep.push(0)
    }

    function a(t, e, r) {
        if (!e) return !0;
        r.xSteps[t] = p([r.xVal[t], r.xVal[t + 1]], e) / c(r.xPct[t], r.xPct[t + 1]);
        var n = (r.xVal[t + 1] - r.xVal[t]) / r.xNumSteps[t],
            i = Math.ceil(Number(n.toFixed(3)) - 1),
            o = r.xVal[t] + r.xNumSteps[t] * i;
        r.xHighestCompleteStep[t] = o
    }

    function l(t, e, r) {
        var n;
        this.xPct = [], this.xVal = [], this.xSteps = [r || !1], this.xNumSteps = [!1], this.xHighestCompleteStep = [], this.snap = e;
        var i = [];
        for (n in t) t.hasOwnProperty(n) && i.push([t[n], n]);
        for (i.length && "object" == typeof i[0][0] ? i.sort(function(t, e) {
                return t[0][0] - e[0][0]
            }) : i.sort(function(t, e) {
                return t[0] - e[0]
            }), n = 0; n < i.length; n++) o(i[n][1], i[n][0], this);
        for (this.xNumSteps = this.xSteps.slice(0), n = 0; n < this.xNumSteps.length; n++) a(n, this.xNumSteps[n], this)
    }
    l.prototype.getMargin = function(t) {
        var e = this.xNumSteps[0];
        if (e && t / e % 1 != 0) throw new Error("noUiSlider (" + et + "): 'limit', 'margin' and 'padding' must be divisible by step.");
        return 2 === this.xPct.length && p(this.xVal, t)
    }, l.prototype.toStepping = function(t) {
        return t = r(this.xVal, this.xPct, t)
    }, l.prototype.fromStepping = function(t) {
        return function(t, e, r) {
            if (100 <= r) return t.slice(-1)[0];
            var n, i = f(r, e),
                o = t[i - 1],
                a = t[i],
                s = e[i - 1],
                l = e[i];
            return n = [o, a], (r - s) * c(s, l) * (n[1] - n[0]) / 100 + n[0]
        }(this.xVal, this.xPct, t)
    }, l.prototype.getStep = function(t) {
        return t = n(this.xPct, this.xSteps, this.snap, t)
    }, l.prototype.getNearbySteps = function(t) {
        var e = f(t, this.xPct);
        return {
            stepBefore: {
                startValue: this.xVal[e - 2],
                step: this.xNumSteps[e - 2],
                highestStep: this.xHighestCompleteStep[e - 2]
            },
            thisStep: {
                startValue: this.xVal[e - 1],
                step: this.xNumSteps[e - 1],
                highestStep: this.xHighestCompleteStep[e - 1]
            },
            stepAfter: {
                startValue: this.xVal[e],
                step: this.xNumSteps[e],
                highestStep: this.xHighestCompleteStep[e]
            }
        }
    }, l.prototype.countStepDecimals = function() {
        var t = this.xNumSteps.map(e);
        return Math.max.apply(null, t)
    }, l.prototype.convert = function(t) {
        return this.getStep(this.toStepping(t))
    };
    var u = {
        to: function(t) {
            return void 0 !== t && t.toFixed(2)
        },
        from: Number
    };

    function d(t) {
        if ("object" == typeof(e = t) && "function" == typeof e.to && "function" == typeof e.from) return !0;
        var e;
        throw new Error("noUiSlider (" + et + "): 'format' requires 'to' and 'from' methods.")
    }

    function h(t, e) {
        if (!i(e)) throw new Error("noUiSlider (" + et + "): 'step' is not numeric.");
        t.singleStep = e
    }

    function m(t, e) {
        if ("object" != typeof e || Array.isArray(e)) throw new Error("noUiSlider (" + et + "): 'range' is not an object.");
        if (void 0 === e.min || void 0 === e.max) throw new Error("noUiSlider (" + et + "): Missing 'min' or 'max' in 'range'.");
        if (e.min === e.max) throw new Error("noUiSlider (" + et + "): 'range' 'min' and 'max' cannot be equal.");
        t.spectrum = new l(e, t.snap, t.singleStep)
    }

    function g(t, e) {
        if (e = ot(e), !Array.isArray(e) || !e.length) throw new Error("noUiSlider (" + et + "): 'start' option is incorrect.");
        t.handles = e.length, t.start = e
    }

    function v(t, e) {
        if ("boolean" != typeof(t.snap = e)) throw new Error("noUiSlider (" + et + "): 'snap' option must be a boolean.")
    }

    function b(t, e) {
        if ("boolean" != typeof(t.animate = e)) throw new Error("noUiSlider (" + et + "): 'animate' option must be a boolean.")
    }

    function S(t, e) {
        if ("number" != typeof(t.animationDuration = e)) throw new Error("noUiSlider (" + et + "): 'animationDuration' option must be a number.")
    }

    function w(t, e) {
        var r, n = [!1];
        if ("lower" === e ? e = [!0, !1] : "upper" === e && (e = [!1, !0]), !0 === e || !1 === e) {
            for (r = 1; r < t.handles; r++) n.push(e);
            n.push(!1)
        } else {
            if (!Array.isArray(e) || !e.length || e.length !== t.handles + 1) throw new Error("noUiSlider (" + et + "): 'connect' option doesn't match handle count.");
            n = e
        }
        t.connect = n
    }

    function x(t, e) {
        switch (e) {
            case "horizontal":
                t.ort = 0;
                break;
            case "vertical":
                t.ort = 1;
                break;
            default:
                throw new Error("noUiSlider (" + et + "): 'orientation' option is invalid.")
        }
    }

    function y(t, e) {
        if (!i(e)) throw new Error("noUiSlider (" + et + "): 'margin' option must be numeric.");
        if (0 !== e && (t.margin = t.spectrum.getMargin(e), !t.margin)) throw new Error("noUiSlider (" + et + "): 'margin' option is only supported on linear sliders.")
    }

    function E(t, e) {
        if (!i(e)) throw new Error("noUiSlider (" + et + "): 'limit' option must be numeric.");
        if (t.limit = t.spectrum.getMargin(e), !t.limit || t.handles < 2) throw new Error("noUiSlider (" + et + "): 'limit' option is only supported on linear sliders with 2 or more handles.")
    }

    function C(t, e) {
        if (!i(e) && !Array.isArray(e)) throw new Error("noUiSlider (" + et + "): 'padding' option must be numeric or array of exactly 2 numbers.");
        if (Array.isArray(e) && 2 !== e.length && !i(e[0]) && !i(e[1])) throw new Error("noUiSlider (" + et + "): 'padding' option must be numeric or array of exactly 2 numbers.");
        if (0 !== e) {
            if (Array.isArray(e) || (e = [e, e]), !(t.padding = [t.spectrum.getMargin(e[0]), t.spectrum.getMargin(e[1])]) === t.padding[0] || !1 === t.padding[1]) throw new Error("noUiSlider (" + et + "): 'padding' option is only supported on linear sliders.");
            if (t.padding[0] < 0 || t.padding[1] < 0) throw new Error("noUiSlider (" + et + "): 'padding' option must be a positive number(s).");
            if (100 <= t.padding[0] + t.padding[1]) throw new Error("noUiSlider (" + et + "): 'padding' option must not exceed 100% of the range.")
        }
    }

    function N(t, e) {
        switch (e) {
            case "ltr":
                t.dir = 0;
                break;
            case "rtl":
                t.dir = 1;
                break;
            default:
                throw new Error("noUiSlider (" + et + "): 'direction' option was not recognized.")
        }
    }

    function U(t, e) {
        if ("string" != typeof e) throw new Error("noUiSlider (" + et + "): 'behaviour' must be a string containing options.");
        var r = 0 <= e.indexOf("tap"),
            n = 0 <= e.indexOf("drag"),
            i = 0 <= e.indexOf("fixed"),
            o = 0 <= e.indexOf("snap"),
            a = 0 <= e.indexOf("hover"),
            s = 0 <= e.indexOf("unconstrained");
        if (i) {
            if (2 !== t.handles) throw new Error("noUiSlider (" + et + "): 'fixed' behaviour must be used with 2 handles");
            y(t, t.start[1] - t.start[0])
        }
        if (s && (t.margin || t.limit)) throw new Error("noUiSlider (" + et + "): 'unconstrained' behaviour cannot be used with margin or limit");
        t.events = {
            tap: r || o,
            drag: n,
            fixed: i,
            snap: o,
            hover: a,
            unconstrained: s
        }
    }

    function k(t, e) {
        if (!1 !== e)
            if (!0 === e) {
                t.tooltips = [];
                for (var r = 0; r < t.handles; r++) t.tooltips.push(!0)
            } else {
                if (t.tooltips = ot(e), t.tooltips.length !== t.handles) throw new Error("noUiSlider (" + et + "): must pass a formatter for all handles.");
                t.tooltips.forEach(function(t) {
                    if ("boolean" != typeof t && ("object" != typeof t || "function" != typeof t.to)) throw new Error("noUiSlider (" + et + "): 'tooltips' must be passed a formatter or 'false'.")
                })
            }
    }

    function P(t, e) {
        d(t.ariaFormat = e)
    }

    function A(t, e) {
        d(t.format = e)
    }

    function M(t, e) {
        if ("boolean" != typeof(t.keyboardSupport = e)) throw new Error("noUiSlider (" + et + "): 'keyboardSupport' option must be a boolean.")
    }

    function V(t, e) {
        t.documentElement = e
    }

    function O(t, e) {
        if ("string" != typeof e && !1 !== e) throw new Error("noUiSlider (" + et + "): 'cssPrefix' must be a string or `false`.");
        t.cssPrefix = e
    }

    function L(t, e) {
        if ("object" != typeof e) throw new Error("noUiSlider (" + et + "): 'cssClasses' must be an object.");
        if ("string" == typeof t.cssPrefix)
            for (var r in t.cssClasses = {}, e) e.hasOwnProperty(r) && (t.cssClasses[r] = t.cssPrefix + e[r]);
        else t.cssClasses = e
    }

    function ut(e) {
        var r = {
                margin: 0,
                limit: 0,
                padding: 0,
                animate: !0,
                animationDuration: 300,
                ariaFormat: u,
                format: u
            },
            n = {
                step: {
                    r: !1,
                    t: h
                },
                start: {
                    r: !0,
                    t: g
                },
                connect: {
                    r: !0,
                    t: w
                },
                direction: {
                    r: !0,
                    t: N
                },
                snap: {
                    r: !1,
                    t: v
                },
                animate: {
                    r: !1,
                    t: b
                },
                animationDuration: {
                    r: !1,
                    t: S
                },
                range: {
                    r: !0,
                    t: m
                },
                orientation: {
                    r: !1,
                    t: x
                },
                margin: {
                    r: !1,
                    t: y
                },
                limit: {
                    r: !1,
                    t: E
                },
                padding: {
                    r: !1,
                    t: C
                },
                behaviour: {
                    r: !0,
                    t: U
                },
                ariaFormat: {
                    r: !1,
                    t: P
                },
                format: {
                    r: !1,
                    t: A
                },
                tooltips: {
                    r: !1,
                    t: k
                },
                keyboardSupport: {
                    r: !0,
                    t: M
                },
                documentElement: {
                    r: !1,
                    t: V
                },
                cssPrefix: {
                    r: !0,
                    t: O
                },
                cssClasses: {
                    r: !0,
                    t: L
                }
            },
            i = {
                connect: !1,
                direction: "ltr",
                behaviour: "tap",
                orientation: "horizontal",
                keyboardSupport: !0,
                cssPrefix: "noUi-",
                cssClasses: {
                    target: "target",
                    base: "base",
                    origin: "origin",
                    handle: "handle",
                    handleLower: "handle-lower",
                    handleUpper: "handle-upper",
                    horizontal: "horizontal",
                    vertical: "vertical",
                    background: "background",
                    connect: "connect",
                    connects: "connects",
                    ltr: "ltr",
                    rtl: "rtl",
                    draggable: "draggable",
                    drag: "state-drag",
                    tap: "state-tap",
                    active: "active",
                    tooltip: "tooltip",
                    pips: "pips",
                    pipsHorizontal: "pips-horizontal",
                    pipsVertical: "pips-vertical",
                    marker: "marker",
                    markerHorizontal: "marker-horizontal",
                    markerVertical: "marker-vertical",
                    markerNormal: "marker-normal",
                    markerLarge: "marker-large",
                    markerSub: "marker-sub",
                    value: "value",
                    valueHorizontal: "value-horizontal",
                    valueVertical: "value-vertical",
                    valueNormal: "value-normal",
                    valueLarge: "value-large",
                    valueSub: "value-sub"
                }
            };
        e.format && !e.ariaFormat && (e.ariaFormat = e.format), Object.keys(n).forEach(function(t) {
            if (!s(e[t]) && void 0 === i[t]) {
                if (n[t].r) throw new Error("noUiSlider (" + et + "): '" + t + "' is required.");
                return !0
            }
            n[t].t(r, s(e[t]) ? e[t] : i[t])
        }), r.pips = e.pips;
        var t = document.createElement("div"),
            o = void 0 !== t.style.msTransform,
            a = void 0 !== t.style.transform;
        r.transformRule = a ? "transform" : o ? "msTransform" : "webkitTransform";
        return r.style = [
            ["left", "top"],
            ["right", "bottom"]
        ][r.dir][r.ort], r
    }

    function z(t, f, o) {
        var l, u, s, a, c, e, p, i, d = window.navigator.pointerEnabled ? {
                start: "pointerdown",
                move: "pointermove",
                end: "pointerup"
            } : window.navigator.msPointerEnabled ? {
                start: "MSPointerDown",
                move: "MSPointerMove",
                end: "MSPointerUp"
            } : {
                start: "mousedown touchstart",
                move: "mousemove touchmove",
                end: "mouseup touchend"
            },
            h = window.CSS && CSS.supports && CSS.supports("touch-action", "none") && function() {
                var t = !1;
                try {
                    var e = Object.defineProperty({}, "passive", {
                        get: function() {
                            t = !0
                        }
                    });
                    window.addEventListener("test", null, e)
                } catch (t) {}
                return t
            }(),
            y = t,
            m = [],
            g = [],
            v = 0,
            E = f.spectrum,
            b = [],
            S = {},
            w = t.ownerDocument,
            x = f.documentElement || w.documentElement,
            C = w.body,
            N = -1,
            U = 0,
            k = 1,
            P = 2,
            A = "rtl" === w.dir || 1 === f.ort ? 0 : 100;

        function M(t, e) {
            var r = w.createElement("div");
            return e && at(r, e), t.appendChild(r), r
        }

        function V(t, e) {
            return !!e && M(t, f.cssClasses.connect)
        }

        function r(t, e) {
            return !!f.tooltips[e] && M(t.firstChild, f.cssClasses.tooltip)
        }

        function O(e, i, o) {
            var a = w.createElement("div"),
                s = [];
            s[U] = f.cssClasses.valueNormal, s[k] = f.cssClasses.valueLarge, s[P] = f.cssClasses.valueSub;
            var l = [];
            l[U] = f.cssClasses.markerNormal, l[k] = f.cssClasses.markerLarge, l[P] = f.cssClasses.markerSub;
            var u = [f.cssClasses.valueHorizontal, f.cssClasses.valueVertical],
                c = [f.cssClasses.markerHorizontal, f.cssClasses.markerVertical];

            function p(t, e) {
                var r = e === f.cssClasses.value,
                    n = r ? s : l;
                return e + " " + (r ? u : c)[f.ort] + " " + n[t]
            }
            return at(a, f.cssClasses.pips), at(a, 0 === f.ort ? f.cssClasses.pipsHorizontal : f.cssClasses.pipsVertical), Object.keys(e).forEach(function(t) {
                ! function(t, e, r) {
                    if ((r = i ? i(e, r) : r) !== N) {
                        var n = M(a, !1);
                        n.className = p(r, f.cssClasses.marker), n.style[f.style] = t + "%", U < r && ((n = M(a, !1)).className = p(r, f.cssClasses.value), n.setAttribute("data-value", e), n.style[f.style] = t + "%", n.innerHTML = o.to(e))
                    }
                }(t, e[t][0], e[t][1])
            }), a
        }

        function L() {
            var t;
            c && ((t = c).parentElement.removeChild(t), c = null)
        }

        function z(t) {
            L();
            var m, g, v, b, e, r, S, w, x, n = t.mode,
                i = t.density || 1,
                o = t.filter || !1,
                a = function(t, e, r) {
                    if ("range" === t || "steps" === t) return E.xVal;
                    if ("count" === t) {
                        if (e < 2) throw new Error("noUiSlider (" + et + "): 'values' (>= 2) required for mode 'count'.");
                        var n = e - 1,
                            i = 100 / n;
                        for (e = []; n--;) e[n] = n * i;
                        e.push(100), t = "positions"
                    }
                    return "positions" === t ? e.map(function(t) {
                        return E.fromStepping(r ? E.getStep(t) : t)
                    }) : "values" === t ? r ? e.map(function(t) {
                        return E.fromStepping(E.getStep(E.toStepping(t)))
                    }) : e : void 0
                }(n, t.values || !1, t.stepped || !1),
                s = (m = i, g = n, v = a, b = {}, e = E.xVal[0], r = E.xVal[E.xVal.length - 1], w = S = !1, x = 0, (v = v.slice().sort(function(t, e) {
                    return t - e
                }).filter(function(t) {
                    return !this[t] && (this[t] = !0)
                }, {}))[0] !== e && (v.unshift(e), S = !0), v[v.length - 1] !== r && (v.push(r), w = !0), v.forEach(function(t, e) {
                    var r, n, i, o, a, s, l, u, c, p, f = t,
                        d = v[e + 1],
                        h = "steps" === g;
                    if (h && (r = E.xNumSteps[e]), r || (r = d - f), !1 !== f && void 0 !== d)
                        for (r = Math.max(r, 1e-7), n = f; n <= d; n = (n + r).toFixed(7) / 1) {
                            for (u = (a = (o = E.toStepping(n)) - x) / m, p = a / (c = Math.round(u)), i = 1; i <= c; i += 1) b[(s = x + i * p).toFixed(5)] = [E.fromStepping(s), 0];
                            l = -1 < v.indexOf(n) ? k : h ? P : U, !e && S && (l = 0), n === d && w || (b[o.toFixed(5)] = [n, l]), x = o
                        }
                }), b),
                l = t.format || {
                    to: Math.round
                };
            return c = y.appendChild(O(s, o, l))
        }

        function j() {
            var t = l.getBoundingClientRect(),
                e = "offset" + ["Width", "Height"][f.ort];
            return 0 === f.ort ? t.width || l[e] : t.height || l[e]
        }

        function F(n, i, o, a) {
            var e = function(t) {
                    return !!(t = function(t, e, r) {
                        var n, i, o = 0 === t.type.indexOf("touch"),
                            a = 0 === t.type.indexOf("mouse"),
                            s = 0 === t.type.indexOf("pointer");
                        0 === t.type.indexOf("MSPointer") && (s = !0);
                        if (o) {
                            var l = function(t) {
                                return t.target === r || r.contains(t.target)
                            };
                            if ("touchstart" === t.type) {
                                var u = Array.prototype.filter.call(t.touches, l);
                                if (1 < u.length) return !1;
                                n = u[0].pageX, i = u[0].pageY
                            } else {
                                var c = Array.prototype.find.call(t.changedTouches, l);
                                if (!c) return !1;
                                n = c.pageX, i = c.pageY
                            }
                        }
                        e = e || lt(w), (a || s) && (n = t.clientX + e.x, i = t.clientY + e.y);
                        return t.pageOffset = e, t.points = [n, i], t.cursor = a || s, t
                    }(t, a.pageOffset, a.target || i)) && (!(y.hasAttribute("disabled") && !a.doNotReject) && (e = y, r = f.cssClasses.tap, !((e.classList ? e.classList.contains(r) : new RegExp("\\b" + r + "\\b").test(e.className)) && !a.doNotReject) && (!(n === d.start && void 0 !== t.buttons && 1 < t.buttons) && ((!a.hover || !t.buttons) && (h || t.preventDefault(), t.calcPoint = t.points[f.ort], void o(t, a))))));
                    var e, r
                },
                r = [];
            return n.split(" ").forEach(function(t) {
                i.addEventListener(t, e, !!h && {
                    passive: !0
                }), r.push([t, e])
            }), r
        }

        function H(t) {
            var e, r, n, i, o, a, s = 100 * (t - (e = l, r = f.ort, n = e.getBoundingClientRect(), i = e.ownerDocument, o = i.documentElement, a = lt(i), /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) && (a.x = 0), r ? n.top + a.y - o.clientTop : n.left + a.x - o.clientLeft)) / j();
            return s = it(s), f.dir ? 100 - s : s
        }

        function D(t, e) {
            "mouseout" === t.type && "HTML" === t.target.nodeName && null === t.relatedTarget && R(t, e)
        }

        function T(t, e) {
            if (-1 === navigator.appVersion.indexOf("MSIE 9") && 0 === t.buttons && 0 !== e.buttonsProperty) return R(t, e);
            var r = (f.dir ? -1 : 1) * (t.calcPoint - e.startCalcPoint);
            $(0 < r, 100 * r / e.baseSize, e.locations, e.handleNumbers)
        }

        function R(t, e) {
            e.handle && (st(e.handle, f.cssClasses.active), v -= 1), e.listeners.forEach(function(t) {
                x.removeEventListener(t[0], t[1])
            }), 0 === v && (st(y, f.cssClasses.drag), J(), t.cursor && (C.style.cursor = "", C.removeEventListener("selectstart", rt))), e.handleNumbers.forEach(function(t) {
                Y("change", t), Y("set", t), Y("end", t)
            })
        }

        function q(t, e) {
            var r;
            if (1 === e.handleNumbers.length) {
                var n = u[e.handleNumbers[0]];
                if (n.hasAttribute("disabled")) return !1;
                r = n.children[0], v += 1, at(r, f.cssClasses.active)
            }
            t.stopPropagation();
            var i = [],
                o = F(d.move, x, T, {
                    target: t.target,
                    handle: r,
                    listeners: i,
                    startCalcPoint: t.calcPoint,
                    baseSize: j(),
                    pageOffset: t.pageOffset,
                    handleNumbers: e.handleNumbers,
                    buttonsProperty: t.buttons,
                    locations: m.slice()
                }),
                a = F(d.end, x, R, {
                    target: t.target,
                    handle: r,
                    listeners: i,
                    doNotReject: !0,
                    handleNumbers: e.handleNumbers
                }),
                s = F("mouseout", x, D, {
                    target: t.target,
                    handle: r,
                    listeners: i,
                    doNotReject: !0,
                    handleNumbers: e.handleNumbers
                });
            i.push.apply(i, o.concat(a, s)), t.cursor && (C.style.cursor = getComputedStyle(t.target).cursor, 1 < u.length && at(y, f.cssClasses.drag), C.addEventListener("selectstart", rt, !1)), e.handleNumbers.forEach(function(t) {
                Y("start", t)
            })
        }

        function n(t) {
            t.stopPropagation();
            var n, i, o, e = H(t.calcPoint),
                r = (n = e, o = !(i = 100), u.forEach(function(t, e) {
                    if (!t.hasAttribute("disabled")) {
                        var r = Math.abs(m[e] - n);
                        (r < i || 100 === r && 100 === i) && (o = e, i = r)
                    }
                }), o);
            if (!1 === r) return !1;
            f.events.snap || nt(y, f.cssClasses.tap, f.animationDuration), K(r, e, !0, !0), J(), Y("slide", r, !0), Y("update", r, !0), Y("change", r, !0), Y("set", r, !0), f.events.snap && q(t, {
                handleNumbers: [r]
            })
        }

        function B(t) {
            var e = H(t.calcPoint),
                r = E.getStep(e),
                n = E.fromStepping(r);
            Object.keys(S).forEach(function(t) {
                "hover" === t.split(".")[0] && S[t].forEach(function(t) {
                    t.call(a, n)
                })
            })
        }

        function X(t, e) {
            S[t] = S[t] || [], S[t].push(e), "update" === t.split(".")[0] && u.forEach(function(t, e) {
                Y("update", e)
            })
        }

        function Y(r, n, i) {
            Object.keys(S).forEach(function(t) {
                var e = t.split(".")[0];
                r === e && S[t].forEach(function(t) {
                    t.call(a, b.map(f.format.to), n, b.slice(), i || !1, m.slice())
                })
            })
        }

        function _(t) {
            return t + "%"
        }

        function I(t, e, r, n, i, o) {
            return 1 < u.length && !f.events.unconstrained && (n && 0 < e && (r = Math.max(r, t[e - 1] + f.margin)), i && e < u.length - 1 && (r = Math.min(r, t[e + 1] - f.margin))), 1 < u.length && f.limit && (n && 0 < e && (r = Math.min(r, t[e - 1] + f.limit)), i && e < u.length - 1 && (r = Math.max(r, t[e + 1] - f.limit))), f.padding && (0 === e && (r = Math.max(r, f.padding[0])), e === u.length - 1 && (r = Math.min(r, 100 - f.padding[1]))), !((r = it(r = E.getStep(r))) === t[e] && !o) && r
        }

        function W(t, e) {
            var r = f.ort;
            return (r ? e : t) + ", " + (r ? t : e)
        }

        function $(t, n, r, e) {
            var i = r.slice(),
                o = [!t, t],
                a = [t, !t];
            e = e.slice(), t && e.reverse(), 1 < e.length ? e.forEach(function(t, e) {
                var r = I(i, t, i[t] + n, o[e], a[e], !1);
                !1 === r ? n = 0 : (n = r - i[t], i[t] = r)
            }) : o = a = [!0];
            var s = !1;
            e.forEach(function(t, e) {
                s = K(t, r[t] + n, o[e], a[e]) || s
            }), s && e.forEach(function(t) {
                Y("update", t), Y("slide", t)
            })
        }

        function G(t, e) {
            return f.dir ? 100 - t - e : t
        }

        function J() {
            g.forEach(function(t) {
                var e = 50 < m[t] ? -1 : 1,
                    r = 3 + (u.length + e * t);
                u[t].style.zIndex = r
            })
        }

        function K(t, e, r, n) {
            return !1 !== (e = I(m, t, e, r, n, !1)) && (function(t, e) {
                m[t] = e, b[t] = E.fromStepping(e);
                var r = "translate(" + W(_(G(e, 0) - A), "0") + ")";
                u[t].style[f.transformRule] = r, Q(t), Q(t + 1)
            }(t, e), !0)
        }

        function Q(t) {
            if (s[t]) {
                var e = 0,
                    r = 100;
                0 !== t && (e = m[t - 1]), t !== s.length - 1 && (r = m[t]);
                var n = r - e,
                    i = "translate(" + W(_(G(e, n)), "0") + ")",
                    o = "scale(" + W(n / 100, "1") + ")";
                s[t].style[f.transformRule] = i + " " + o
            }
        }

        function Z(t, e) {
            var n = ot(t),
                r = void 0 === m[0];
            e = void 0 === e || !!e, f.animate && !r && nt(y, f.cssClasses.tap, f.animationDuration), g.forEach(function(t) {
                var e, r;
                K(t, (e = n[t], r = t, null === e || !1 === e || void 0 === e ? m[r] : ("number" == typeof e && (e = String(e)), e = f.format.from(e), !1 === (e = E.toStepping(e)) || isNaN(e) ? m[r] : e)), !0, !1)
            }), g.forEach(function(t) {
                K(t, m[t], !0, !0)
            }), J(), g.forEach(function(t) {
                Y("update", t), null !== n[t] && e && Y("set", t)
            })
        }

        function tt() {
            var t = b.map(f.format.to);
            return 1 === t.length ? t[0] : t
        }
        return at(e = y, f.cssClasses.target), 0 === f.dir ? at(e, f.cssClasses.ltr) : at(e, f.cssClasses.rtl), 0 === f.ort ? at(e, f.cssClasses.horizontal) : at(e, f.cssClasses.vertical), l = M(e, f.cssClasses.base),
            function(t, e) {
                var r, n, i, o = M(e, f.cssClasses.connects);
                u = [], (s = []).push(V(o, t[0]));
                for (var a = 0; a < f.handles; a++) u.push((r = a, i = void 0, n = M(e, f.cssClasses.origin), (i = M(n, f.cssClasses.handle)).setAttribute("data-handle", r), f.keyboardSupport && i.setAttribute("tabindex", "0"), i.setAttribute("role", "slider"), i.setAttribute("aria-orientation", f.ort ? "vertical" : "horizontal"), 0 === r ? at(i, f.cssClasses.handleLower) : r === f.handles - 1 && at(i, f.cssClasses.handleUpper), n)), g[a] = a, s.push(V(o, t[a + 1]))
            }(f.connect, l), (p = f.events).fixed || u.forEach(function(t, e) {
                F(d.start, t.children[0], q, {
                    handleNumbers: [e]
                })
            }), p.tap && F(d.start, l, n, {}), p.hover && F(d.move, l, B, {
                hover: !0
            }), p.drag && s.forEach(function(t, e) {
                if (!1 !== t && 0 !== e && e !== s.length - 1) {
                    var r = u[e - 1],
                        n = u[e],
                        i = [t];
                    at(t, f.cssClasses.draggable), p.fixed && (i.push(r.children[0]), i.push(n.children[0])), i.forEach(function(t) {
                        F(d.start, t, q, {
                            handles: [r, n],
                            handleNumbers: [e - 1, e]
                        })
                    })
                }
            }), Z(f.start), a = {
                destroy: function() {
                    for (var t in f.cssClasses) f.cssClasses.hasOwnProperty(t) && st(y, f.cssClasses[t]);
                    for (; y.firstChild;) y.removeChild(y.firstChild);
                    delete y.noUiSlider
                },
                steps: function() {
                    return m.map(function(t, e) {
                        var r = E.getNearbySteps(t),
                            n = b[e],
                            i = r.thisStep.step,
                            o = null;
                        !1 !== i && n + i > r.stepAfter.startValue && (i = r.stepAfter.startValue - n), o = n > r.thisStep.startValue ? r.thisStep.step : !1 !== r.stepBefore.step && n - r.stepBefore.highestStep, 100 === t ? i = null : 0 === t && (o = null);
                        var a = E.countStepDecimals();
                        return null !== i && !1 !== i && (i = Number(i.toFixed(a))), null !== o && !1 !== o && (o = Number(o.toFixed(a))), [o, i]
                    })
                },
                on: X,
                off: function(t) {
                    var n = t && t.split(".")[0],
                        i = n && t.substring(n.length);
                    Object.keys(S).forEach(function(t) {
                        var e = t.split(".")[0],
                            r = t.substring(e.length);
                        n && n !== e || i && i !== r || delete S[t]
                    })
                },
                get: tt,
                set: Z,
                setHandle: function(t, e, r) {
                    var n = [];
                    if (!(0 <= (t = Number(t)) && t < g.length)) throw new Error("noUiSlider (" + et + "): invalid handle number, got: " + t);
                    for (var i = 0; i < g.length; i++) n[i] = null;
                    n[t] = e, Z(n, r)
                },
                reset: function(t) {
                    Z(f.start, t)
                },
                __moveHandles: function(t, e, r) {
                    $(t, e, m, r)
                },
                options: o,
                updateOptions: function(e, t) {
                    var r = tt(),
                        n = ["margin", "limit", "padding", "range", "animate", "snap", "step", "format"];
                    n.forEach(function(t) {
                        void 0 !== e[t] && (o[t] = e[t])
                    });
                    var i = ut(o);
                    n.forEach(function(t) {
                        void 0 !== e[t] && (f[t] = i[t])
                    }), E = i.spectrum, f.margin = i.margin, f.limit = i.limit, f.padding = i.padding, f.pips && z(f.pips), m = [], Z(e.start || r, t)
                },
                target: y,
                removePips: L,
                pips: z
            }, f.pips && z(f.pips), f.tooltips && (i = u.map(r), X("update", function(t, e, r) {
                if (i[e]) {
                    var n = t[e];
                    !0 !== f.tooltips[e] && (n = f.tooltips[e].to(r[e])), i[e].innerHTML = n
                }
            })), X("update", function(t, e, a, r, s) {
                g.forEach(function(t) {
                    var e = u[t],
                        r = I(m, t, 0, !0, !0, !0),
                        n = I(m, t, 100, !0, !0, !0),
                        i = s[t],
                        o = f.ariaFormat.to(a[t]);
                    r = E.fromStepping(r).toFixed(1), n = E.fromStepping(n).toFixed(1), i = E.fromStepping(i).toFixed(1), e.children[0].setAttribute("aria-valuemin", r), e.children[0].setAttribute("aria-valuemax", n), e.children[0].setAttribute("aria-valuenow", i), e.children[0].setAttribute("aria-valuetext", o)
                })
            }), a
    }
    return {
        __spectrum: l,
        version: et,
        create: function(t, e) {
            if (!t || !t.nodeName) throw new Error("noUiSlider (" + et + "): create requires a single element, got: " + t);
            if (t.noUiSlider) throw new Error("noUiSlider (" + et + "): Slider was already initialized.");
            var r = z(t, ut(e), e);
            return t.noUiSlider = r
        }
    }
});
! function(a, b) {
    function c(a) {
        throw new Error("Pagination: " + a)
    }

    function d(a) {
        a.dataSource || c('"dataSource" is required.'), "string" == typeof a.dataSource ? void 0 === a.totalNumberLocator ? void 0 === a.totalNumber ? c('"totalNumber" is required.') : b.isNumeric(a.totalNumber) || c('"totalNumber" is incorrect. (Number)') : b.isFunction(a.totalNumberLocator) || c('"totalNumberLocator" should be a Function.') : i.isObject(a.dataSource) && (void 0 === a.locator ? c('"dataSource" is an Object, please specify "locator".') : "string" == typeof a.locator || b.isFunction(a.locator) || c(a.locator + " is incorrect. (String | Function)")), void 0 === a.formatResult || b.isFunction(a.formatResult) || c('"formatResult" should be a Function.')
    }

    function e(a) {
        var c = ["go", "previous", "next", "disable", "enable", "refresh", "show", "hide", "destroy"];
        b.each(c, function(b, c) {
            a.off(h + c)
        }), a.data("pagination", {}), b(".paginationjs", a).remove()
    }

    function f(a, b) {
        return ("object" == (b = typeof a) ? null == a && "null" || Object.prototype.toString.call(a).slice(8, -1) : b).toLowerCase()
    }
    void 0 === b && c("Pagination requires jQuery.");
    var g = "pagination",
        h = "__pagination-";
    b.fn.pagination && (g = "pagination2"), b.fn[g] = function(f) {
        if (void 0 === f) return this;
        var j = b(this),
            k = b.extend({}, b.fn[g].defaults, f),
            l = {
                initialize: function() {
                    var a = this;
                    if (j.data("pagination") || j.data("pagination", {}), !1 !== a.callHook("beforeInit")) {
                        j.data("pagination").initialized && b(".paginationjs", j).remove(), a.disabled = !!k.disabled;
                        var c = a.model = {
                            pageRange: k.pageRange,
                            pageSize: k.pageSize
                        };
                        a.parseDataSource(k.dataSource, function(b) {
                            a.isAsync = i.isString(b), i.isArray(b) && (c.totalNumber = k.totalNumber = b.length), a.isDynamicTotalNumber = a.isAsync && k.totalNumberLocator;
                            var d = a.render(!0);
                            k.className && d.addClass(k.className), c.el = d, j["bottom" === k.position ? "append" : "prepend"](d), a.observer(), j.data("pagination").initialized = !0, a.callHook("afterInit", d)
                        })
                    }
                },
                render: function(a) {
                    var c = this,
                        d = c.model,
                        e = d.el || b('<div class="paginationjs"></div>'),
                        f = !0 !== a;
                    c.callHook("beforeRender", f);
                    var g = d.pageNumber || k.pageNumber,
                        h = k.pageRange || 0,
                        i = c.getTotalPage(),
                        j = g - h,
                        l = g + h;
                    return l > i && (l = i, j = i - 2 * h, j = j < 1 ? 1 : j), j <= 1 && (j = 1, l = Math.min(2 * h + 1, i)), e.html(c.generateHTML({
                        currentPage: g,
                        pageRange: h,
                        rangeStart: j,
                        rangeEnd: l
                    })), k.hideWhenLessThanOnePage && e[i <= 1 ? "hide" : "show"](), c.callHook("afterRender", f), e
                },
                generatePageNumbersHTML: function(a) {
                    var b, c = this,
                        d = a.currentPage,
                        e = c.getTotalPage(),
                        f = a.rangeStart,
                        g = a.rangeEnd,
                        h = "",
                        i = k.pageLink,
                        j = k.ellipsisText,
                        l = k.classPrefix,
                        m = k.activeClassName,
                        n = k.disableClassName;
                    if (null === k.pageRange) {
                        for (b = 1; b <= e; b++) h += b == d ? '<li class="' + l + "-page J-paginationjs-page " + m + '" data-num="' + b + '"><a>' + b + "</a></li>" : '<li class="' + l + '-page J-paginationjs-page" data-num="' + b + '"><a href="' + i + '">' + b + "</a></li>";
                        return h
                    }
                    if (f <= 3)
                        for (b = 1; b < f; b++) h += b == d ? '<li class="' + l + "-page J-paginationjs-page " + m + '" data-num="' + b + '"><a>' + b + "</a></li>" : '<li class="' + l + '-page J-paginationjs-page" data-num="' + b + '"><a href="' + i + '">' + b + "</a></li>";
                    else k.showFirstOnEllipsisShow && (h += '<li class="' + l + "-page " + l + '-first J-paginationjs-page" data-num="1"><a href="' + i + '">1</a></li>'), h += '<li class="' + l + "-ellipsis " + n + '"><a>' + j + "</a></li>";
                    for (b = f; b <= g; b++) h += b == d ? '<li class="' + l + "-page J-paginationjs-page " + m + '" data-num="' + b + '"><a>' + b + "</a></li>" : '<li class="' + l + '-page J-paginationjs-page" data-num="' + b + '"><a href="' + i + '">' + b + "</a></li>";
                    if (g >= e - 2)
                        for (b = g + 1; b <= e; b++) h += '<li class="' + l + '-page J-paginationjs-page" data-num="' + b + '"><a href="' + i + '">' + b + "</a></li>";
                    else h += '<li class="' + l + "-ellipsis " + n + '"><a>' + j + "</a></li>", k.showLastOnEllipsisShow && (h += '<li class="' + l + "-page " + l + '-last J-paginationjs-page" data-num="' + e + '"><a href="' + i + '">' + e + "</a></li>");
                    return h
                },
                generateHTML: function(a) {
                    var c, d = this,
                        e = a.currentPage,
                        f = d.getTotalPage(),
                        g = d.getTotalNumber(),
                        h = k.showPrevious,
                        i = k.showNext,
                        j = k.showPageNumbers,
                        l = k.showNavigator,
                        m = k.showGoInput,
                        n = k.showGoButton,
                        o = k.pageLink,
                        p = k.prevText,
                        q = k.nextText,
                        r = k.goButtonText,
                        s = k.classPrefix,
                        t = k.disableClassName,
                        u = k.ulClassName,
                        v = "",
                        w = '<input type="text" class="J-paginationjs-go-pagenumber">',
                        x = '<input type="button" class="J-paginationjs-go-button" value="' + r + '">',
                        y = b.isFunction(k.formatNavigator) ? k.formatNavigator(e, f, g) : k.formatNavigator,
                        z = b.isFunction(k.formatGoInput) ? k.formatGoInput(w, e, f, g) : k.formatGoInput,
                        A = b.isFunction(k.formatGoButton) ? k.formatGoButton(x, e, f, g) : k.formatGoButton,
                        B = b.isFunction(k.autoHidePrevious) ? k.autoHidePrevious() : k.autoHidePrevious,
                        C = b.isFunction(k.autoHideNext) ? k.autoHideNext() : k.autoHideNext,
                        D = b.isFunction(k.header) ? k.header(e, f, g) : k.header,
                        E = b.isFunction(k.footer) ? k.footer(e, f, g) : k.footer;
                    return D && (c = d.replaceVariables(D, {
                        currentPage: e,
                        totalPage: f,
                        totalNumber: g
                    }), v += c), (h || j || i) && (v += '<div class="paginationjs-pages">', v += u ? '<ul class="' + u + '">' : "<ul>", h && (e <= 1 ? B || (v += '<li class="' + s + "-prev " + t + '"><a>' + p + "</a></li>") : v += '<li class="' + s + '-prev J-paginationjs-previous" data-num="' + (e - 1) + '" title="Previous page"><a href="' + o + '">' + p + "</a></li>"), j && (v += d.generatePageNumbersHTML(a)), i && (e >= f ? C || (v += '<li class="' + s + "-next " + t + '"><a>' + q + "</a></li>") : v += '<li class="' + s + '-next J-paginationjs-next" data-num="' + (e + 1) + '" title="Next page"><a href="' + o + '">' + q + "</a></li>"), v += "</ul></div>"), l && y && (c = d.replaceVariables(y, {
                        currentPage: e,
                        totalPage: f,
                        totalNumber: g
                    }), v += '<div class="' + s + '-nav J-paginationjs-nav">' + c + "</div>"), m && z && (c = d.replaceVariables(z, {
                        currentPage: e,
                        totalPage: f,
                        totalNumber: g,
                        input: w
                    }), v += '<div class="' + s + '-go-input">' + c + "</div>"), n && A && (c = d.replaceVariables(A, {
                        currentPage: e,
                        totalPage: f,
                        totalNumber: g,
                        button: x
                    }), v += '<div class="' + s + '-go-button">' + c + "</div>"), E && (c = d.replaceVariables(E, {
                        currentPage: e,
                        totalPage: f,
                        totalNumber: g
                    }), v += c), v
                },
                findTotalNumberFromRemoteResponse: function(a) {
                    this.model.totalNumber = k.totalNumberLocator(a)
                },
                go: function(a, c) {
                    function d(a) {
                        if (!1 === e.callHook("beforePaging", g)) return !1;
                        if (f.direction = void 0 === f.pageNumber ? 0 : g > f.pageNumber ? 1 : -1, f.pageNumber = g, e.render(), e.disabled && e.isAsync && e.enable(), j.data("pagination").model = f, k.formatResult) {
                            var d = b.extend(!0, [], a);
                            i.isArray(a = k.formatResult(d)) || (a = d)
                        }
                        j.data("pagination").currentPageData = a, e.doCallback(a, c), e.callHook("afterPaging", g), 1 == g && e.callHook("afterIsFirstPage"), g == e.getTotalPage() && e.callHook("afterIsLastPage")
                    }
                    var e = this,
                        f = e.model;
                    if (!e.disabled) {
                        var g = a;
                        if ((g = parseInt(g)) && !(g < 1)) {
                            var h = k.pageSize,
                                l = e.getTotalNumber(),
                                m = e.getTotalPage();
                            if (!(l > 0 && g > m)) {
                                if (!e.isAsync) return void d(e.getDataFragment(g));
                                var n = {},
                                    o = k.alias || {};
                                n[o.pageSize ? o.pageSize : "pageSize"] = h, n[o.pageNumber ? o.pageNumber : "pageNumber"] = g;
                                var p = b.isFunction(k.ajax) ? k.ajax() : k.ajax,
                                    q = {
                                        type: "get",
                                        cache: !1,
                                        data: {},
                                        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                                        dataType: "json",
                                        async: !0
                                    };
                                b.extend(!0, q, p), b.extend(q.data, n), q.url = k.dataSource, q.success = function(a) {
                                    e.isDynamicTotalNumber ? e.findTotalNumberFromRemoteResponse(a) : e.model.totalNumber = k.totalNumber, d(e.filterDataByLocator(a))
                                }, q.error = function(a, b, c) {
                                    k.formatAjaxError && k.formatAjaxError(a, b, c), e.enable()
                                }, e.disable(), b.ajax(q)
                            }
                        }
                    }
                },
                doCallback: function(a, c) {
                    var d = this,
                        e = d.model;
                    b.isFunction(c) ? c(a, e) : b.isFunction(k.callback) && k.callback(a, e)
                },
                destroy: function() {
                    !1 !== this.callHook("beforeDestroy") && (this.model.el.remove(), j.off(), b("#paginationjs-style").remove(), this.callHook("afterDestroy"))
                },
                previous: function(a) {
                    this.go(this.model.pageNumber - 1, a)
                },
                next: function(a) {
                    this.go(this.model.pageNumber + 1, a)
                },
                disable: function() {
                    var a = this,
                        b = a.isAsync ? "async" : "sync";
                    !1 !== a.callHook("beforeDisable", b) && (a.disabled = !0, a.model.disabled = !0, a.callHook("afterDisable", b))
                },
                enable: function() {
                    var a = this,
                        b = a.isAsync ? "async" : "sync";
                    !1 !== a.callHook("beforeEnable", b) && (a.disabled = !1, a.model.disabled = !1, a.callHook("afterEnable", b))
                },
                refresh: function(a) {
                    this.go(this.model.pageNumber, a)
                },
                show: function() {
                    var a = this;
                    a.model.el.is(":visible") || a.model.el.show()
                },
                hide: function() {
                    var a = this;
                    a.model.el.is(":visible") && a.model.el.hide()
                },
                replaceVariables: function(a, b) {
                    var c;
                    for (var d in b) {
                        var e = b[d],
                            f = new RegExp("<%=\\s*" + d + "\\s*%>", "img");
                        c = (c || a).replace(f, e)
                    }
                    return c
                },
                getDataFragment: function(a) {
                    var b = k.pageSize,
                        c = k.dataSource,
                        d = this.getTotalNumber(),
                        e = b * (a - 1) + 1,
                        f = Math.min(a * b, d);
                    return c.slice(e - 1, f)
                },
                getTotalNumber: function() {
                    return this.model.totalNumber || k.totalNumber || 0
                },
                getTotalPage: function() {
                    return Math.ceil(this.getTotalNumber() / k.pageSize)
                },
                getLocator: function(a) {
                    var d;
                    return "string" == typeof a ? d = a : b.isFunction(a) ? d = a() : c('"locator" is incorrect. (String | Function)'), d
                },
                filterDataByLocator: function(a) {
                    var d, e = this.getLocator(k.locator);
                    if (i.isObject(a)) {
                        try {
                            b.each(e.split("."), function(b, c) {
                                d = (d || a)[c]
                            })
                        } catch (a) {}
                        d ? i.isArray(d) || c("dataSource." + e + " must be an Array.") : c("dataSource." + e + " is undefined.")
                    }
                    return d || a
                },
                parseDataSource: function(a, d) {
                    var e = this;
                    i.isObject(a) ? d(k.dataSource = e.filterDataByLocator(a)) : i.isArray(a) ? d(k.dataSource = a) : b.isFunction(a) ? k.dataSource(function(a) {
                        i.isArray(a) || c('The parameter of "done" Function should be an Array.'), e.parseDataSource.call(e, a, d)
                    }) : "string" == typeof a ? (/^https?|file:/.test(a) && (k.ajaxDataType = "jsonp"), d(a)) : c('Unexpected type of "dataSource".')
                },
                callHook: function(c) {
                    var d, e = j.data("pagination"),
                        f = Array.prototype.slice.apply(arguments);
                    return f.shift(), k[c] && b.isFunction(k[c]) && !1 === k[c].apply(a, f) && (d = !1), e.hooks && e.hooks[c] && b.each(e.hooks[c], function(b, c) {
                        !1 === c.apply(a, f) && (d = !1)
                    }), !1 !== d
                },
                observer: function() {
                    var a = this,
                        d = a.model.el;
                    j.on(h + "go", function(d, e, f) {
                        (e = parseInt(b.trim(e))) && (b.isNumeric(e) || c('"pageNumber" is incorrect. (Number)'), a.go(e, f))
                    }), d.delegate(".J-paginationjs-page", "click", function(c) {
                        var d = b(c.currentTarget),
                            e = b.trim(d.attr("data-num"));
                        if (e && !d.hasClass(k.disableClassName) && !d.hasClass(k.activeClassName)) return !1 !== a.callHook("beforePageOnClick", c, e) && (a.go(e), a.callHook("afterPageOnClick", c, e), !!k.pageLink && void 0)
                    }), d.delegate(".J-paginationjs-previous", "click", function(c) {
                        var d = b(c.currentTarget),
                            e = b.trim(d.attr("data-num"));
                        if (e && !d.hasClass(k.disableClassName)) return !1 !== a.callHook("beforePreviousOnClick", c, e) && (a.go(e), a.callHook("afterPreviousOnClick", c, e), !!k.pageLink && void 0)
                    }), d.delegate(".J-paginationjs-next", "click", function(c) {
                        var d = b(c.currentTarget),
                            e = b.trim(d.attr("data-num"));
                        if (e && !d.hasClass(k.disableClassName)) return !1 !== a.callHook("beforeNextOnClick", c, e) && (a.go(e), a.callHook("afterNextOnClick", c, e), !!k.pageLink && void 0)
                    }), d.delegate(".J-paginationjs-go-button", "click", function(c) {
                        var e = b(".J-paginationjs-go-pagenumber", d).val();
                        if (!1 === a.callHook("beforeGoButtonOnClick", c, e)) return !1;
                        j.trigger(h + "go", e), a.callHook("afterGoButtonOnClick", c, e)
                    }), d.delegate(".J-paginationjs-go-pagenumber", "keyup", function(c) {
                        if (13 === c.which) {
                            var e = b(c.currentTarget).val();
                            if (!1 === a.callHook("beforeGoInputOnEnter", c, e)) return !1;
                            j.trigger(h + "go", e), b(".J-paginationjs-go-pagenumber", d).focus(), a.callHook("afterGoInputOnEnter", c, e)
                        }
                    }), j.on(h + "previous", function(b, c) {
                        a.previous(c)
                    }), j.on(h + "next", function(b, c) {
                        a.next(c)
                    }), j.on(h + "disable", function() {
                        a.disable()
                    }), j.on(h + "enable", function() {
                        a.enable()
                    }), j.on(h + "refresh", function(b, c) {
                        a.refresh(c)
                    }), j.on(h + "show", function() {
                        a.show()
                    }), j.on(h + "hide", function() {
                        a.hide()
                    }), j.on(h + "destroy", function() {
                        a.destroy()
                    });
                    var e = Math.max(a.getTotalPage(), 1),
                        f = k.pageNumber;
                    a.isDynamicTotalNumber && (f = 1), k.triggerPagingOnInit && j.trigger(h + "go", Math.min(f, e))
                }
            };
        if (j.data("pagination") && !0 === j.data("pagination").initialized) {
            if (b.isNumeric(f)) return j.trigger.call(this, h + "go", f, arguments[1]), this;
            if ("string" == typeof f) {
                var m = Array.prototype.slice.apply(arguments);
                switch (m[0] = h + m[0], f) {
                    case "previous":
                    case "next":
                    case "go":
                    case "disable":
                    case "enable":
                    case "refresh":
                    case "show":
                    case "hide":
                    case "destroy":
                        j.trigger.apply(this, m);
                        break;
                    case "getSelectedPageNum":
                        return j.data("pagination").model ? j.data("pagination").model.pageNumber : j.data("pagination").attributes.pageNumber;
                    case "getTotalPage":
                        return Math.ceil(j.data("pagination").model.totalNumber / j.data("pagination").model.pageSize);
                    case "getSelectedPageData":
                        return j.data("pagination").currentPageData;
                    case "isDisabled":
                        return !0 === j.data("pagination").model.disabled;
                    default:
                        c("Unknown action: " + f)
                }
                return this
            }
            e(j)
        } else i.isObject(f) || c("Illegal options");
        return d(k), l.initialize(), this
    }, b.fn[g].defaults = {
        totalNumber: 0,
        pageNumber: 1,
        pageSize: 10,
        pageRange: 2,
        showPrevious: !0,
        showNext: !0,
        showPageNumbers: !0,
        showNavigator: !1,
        showGoInput: !1,
        showGoButton: !1,
        pageLink: "",
        prevText: "&laquo;",
        nextText: "&raquo;",
        ellipsisText: "...",
        goButtonText: "Go",
        classPrefix: "paginationjs",
        activeClassName: "active",
        disableClassName: "disabled",
        inlineStyle: !0,
        formatNavigator: "<%= currentPage %> / <%= totalPage %>",
        formatGoInput: "<%= input %>",
        formatGoButton: "<%= button %>",
        position: "bottom",
        autoHidePrevious: !1,
        autoHideNext: !1,
        triggerPagingOnInit: !0,
        hideWhenLessThanOnePage: !1,
        showFirstOnEllipsisShow: !0,
        showLastOnEllipsisShow: !0,
        callback: function() {}
    }, b.fn.addHook = function(a, d) {
        arguments.length < 2 && c("Missing argument."), b.isFunction(d) || c("callback must be a function.");
        var e = b(this),
            f = e.data("pagination");
        f || (e.data("pagination", {}), f = e.data("pagination")), !f.hooks && (f.hooks = {}), f.hooks[a] = f.hooks[a] || [], f.hooks[a].push(d)
    }, b[g] = function(a, d) {
        arguments.length < 2 && c("Requires two parameters.");
        var e;
        if (e = "string" != typeof a && a instanceof jQuery ? a : b(a), e.length) return e.pagination(d), e
    };
    var i = {};
    b.each(["Object", "Array", "String"], function(a, b) {
        i["is" + b] = function(a) {
            return f(a) === b.toLowerCase()
        }
    }), "function" == typeof define && define.amd && define(function() {
        return b
    })
}(this, window.jQuery);
(function(f) {
    if (typeof exports === "object" && typeof module !== "undefined") {
        module.exports = f()
    } else if (typeof define === "function" && define.amd) {
        define([], f)
    } else {
        var g;
        if (typeof window !== "undefined") {
            g = window
        } else if (typeof global !== "undefined") {
            g = global
        } else if (typeof self !== "undefined") {
            g = self
        } else {
            g = this
        }
        g.Qs = f()
    }
})(function() {
    var define, module, exports;
    return function() {
        function r(e, n, t) {
            function o(i, f) {
                if (!n[i]) {
                    if (!e[i]) {
                        var c = "function" == typeof require && require;
                        if (!f && c) return c(i, !0);
                        if (u) return u(i, !0);
                        var a = new Error("Cannot find module '" + i + "'");
                        throw a.code = "MODULE_NOT_FOUND", a
                    }
                    var p = n[i] = {
                        exports: {}
                    };
                    e[i][0].call(p.exports, function(r) {
                        var n = e[i][1][r];
                        return o(n || r)
                    }, p, p.exports, r, e, n, t)
                }
                return n[i].exports
            }
            for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);
            return o
        }
        return r
    }()({
        1: [function(require, module, exports) {
            "use strict";
            var replace = String.prototype.replace;
            var percentTwenties = /%20/g;
            var util = require("./utils");
            var Format = {
                RFC1738: "RFC1738",
                RFC3986: "RFC3986"
            };
            module.exports = util.assign({
                default: Format.RFC3986,
                formatters: {
                    RFC1738: function(value) {
                        return replace.call(value, percentTwenties, "+")
                    },
                    RFC3986: function(value) {
                        return String(value)
                    }
                }
            }, Format)
        }, {
            "./utils": 5
        }],
        2: [function(require, module, exports) {
            "use strict";
            var stringify = require("./stringify");
            var parse = require("./parse");
            var formats = require("./formats");
            module.exports = {
                formats: formats,
                parse: parse,
                stringify: stringify
            }
        }, {
            "./formats": 1,
            "./parse": 3,
            "./stringify": 4
        }],
        3: [function(require, module, exports) {
            "use strict";
            var utils = require("./utils");
            var has = Object.prototype.hasOwnProperty;
            var isArray = Array.isArray;
            var defaults = {
                allowDots: false,
                allowPrototypes: false,
                arrayLimit: 20,
                charset: "utf-8",
                charsetSentinel: false,
                comma: false,
                decoder: utils.decode,
                delimiter: "&",
                depth: 5,
                ignoreQueryPrefix: false,
                interpretNumericEntities: false,
                parameterLimit: 1e3,
                parseArrays: true,
                plainObjects: false,
                strictNullHandling: false
            };
            var interpretNumericEntities = function(str) {
                return str.replace(/&#(\d+);/g, function($0, numberStr) {
                    return String.fromCharCode(parseInt(numberStr, 10))
                })
            };
            var isoSentinel = "utf8=%26%2310003%3B";
            var charsetSentinel = "utf8=%E2%9C%93";
            var parseValues = function parseQueryStringValues(str, options) {
                var obj = {};
                var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, "") : str;
                var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
                var parts = cleanStr.split(options.delimiter, limit);
                var skipIndex = -1;
                var i;
                var charset = options.charset;
                if (options.charsetSentinel) {
                    for (i = 0; i < parts.length; ++i) {
                        if (parts[i].indexOf("utf8=") === 0) {
                            if (parts[i] === charsetSentinel) {
                                charset = "utf-8"
                            } else if (parts[i] === isoSentinel) {
                                charset = "iso-8859-1"
                            }
                            skipIndex = i;
                            i = parts.length
                        }
                    }
                }
                for (i = 0; i < parts.length; ++i) {
                    if (i === skipIndex) {
                        continue
                    }
                    var part = parts[i];
                    var bracketEqualsPos = part.indexOf("]=");
                    var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
                    var key, val;
                    if (pos === -1) {
                        key = options.decoder(part, defaults.decoder, charset, "key");
                        val = options.strictNullHandling ? null : ""
                    } else {
                        key = options.decoder(part.slice(0, pos), defaults.decoder, charset, "key");
                        val = options.decoder(part.slice(pos + 1), defaults.decoder, charset, "value")
                    }
                    if (val && options.interpretNumericEntities && charset === "iso-8859-1") {
                        val = interpretNumericEntities(val)
                    }
                    if (val && typeof val === "string" && options.comma && val.indexOf(",") > -1) {
                        val = val.split(",")
                    }
                    if (part.indexOf("[]=") > -1) {
                        val = isArray(val) ? [val] : val
                    }
                    if (has.call(obj, key)) {
                        obj[key] = utils.combine(obj[key], val)
                    } else {
                        obj[key] = val
                    }
                }
                return obj
            };
            var parseObject = function(chain, val, options) {
                var leaf = val;
                for (var i = chain.length - 1; i >= 0; --i) {
                    var obj;
                    var root = chain[i];
                    if (root === "[]" && options.parseArrays) {
                        obj = [].concat(leaf)
                    } else {
                        obj = options.plainObjects ? Object.create(null) : {};
                        var cleanRoot = root.charAt(0) === "[" && root.charAt(root.length - 1) === "]" ? root.slice(1, -1) : root;
                        var index = parseInt(cleanRoot, 10);
                        if (!options.parseArrays && cleanRoot === "") {
                            obj = {
                                0: leaf
                            }
                        } else if (!isNaN(index) && root !== cleanRoot && String(index) === cleanRoot && index >= 0 && (options.parseArrays && index <= options.arrayLimit)) {
                            obj = [];
                            obj[index] = leaf
                        } else {
                            obj[cleanRoot] = leaf
                        }
                    }
                    leaf = obj
                }
                return leaf
            };
            var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
                if (!givenKey) {
                    return
                }
                var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
                var brackets = /(\[[^[\]]*])/;
                var child = /(\[[^[\]]*])/g;
                var segment = options.depth > 0 && brackets.exec(key);
                var parent = segment ? key.slice(0, segment.index) : key;
                var keys = [];
                if (parent) {
                    if (!options.plainObjects && has.call(Object.prototype, parent)) {
                        if (!options.allowPrototypes) {
                            return
                        }
                    }
                    keys.push(parent)
                }
                var i = 0;
                while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {
                    i += 1;
                    if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
                        if (!options.allowPrototypes) {
                            return
                        }
                    }
                    keys.push(segment[1])
                }
                if (segment) {
                    keys.push("[" + key.slice(segment.index) + "]")
                }
                return parseObject(keys, val, options)
            };
            var normalizeParseOptions = function normalizeParseOptions(opts) {
                if (!opts) {
                    return defaults
                }
                if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== "function") {
                    throw new TypeError("Decoder has to be a function.")
                }
                if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
                    throw new Error("The charset option must be either utf-8, iso-8859-1, or undefined")
                }
                var charset = typeof opts.charset === "undefined" ? defaults.charset : opts.charset;
                return {
                    allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
                    allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults.allowPrototypes,
                    arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults.arrayLimit,
                    charset: charset,
                    charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
                    comma: typeof opts.comma === "boolean" ? opts.comma : defaults.comma,
                    decoder: typeof opts.decoder === "function" ? opts.decoder : defaults.decoder,
                    delimiter: typeof opts.delimiter === "string" || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
                    depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults.depth,
                    ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
                    interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
                    parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults.parameterLimit,
                    parseArrays: opts.parseArrays !== false,
                    plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults.plainObjects,
                    strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
                }
            };
            module.exports = function(str, opts) {
                var options = normalizeParseOptions(opts);
                if (str === "" || str === null || typeof str === "undefined") {
                    return options.plainObjects ? Object.create(null) : {}
                }
                var tempObj = typeof str === "string" ? parseValues(str, options) : str;
                var obj = options.plainObjects ? Object.create(null) : {};
                var keys = Object.keys(tempObj);
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    var newObj = parseKeys(key, tempObj[key], options);
                    obj = utils.merge(obj, newObj, options)
                }
                return utils.compact(obj)
            }
        }, {
            "./utils": 5
        }],
        4: [function(require, module, exports) {
            "use strict";
            var utils = require("./utils");
            var formats = require("./formats");
            var has = Object.prototype.hasOwnProperty;
            var arrayPrefixGenerators = {
                brackets: function brackets(prefix) {
                    return prefix + "[]"
                },
                comma: "comma",
                indices: function indices(prefix, key) {
                    return prefix + "[" + key + "]"
                },
                repeat: function repeat(prefix) {
                    return prefix
                }
            };
            var isArray = Array.isArray;
            var push = Array.prototype.push;
            var pushToArray = function(arr, valueOrArray) {
                push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray])
            };
            var toISO = Date.prototype.toISOString;
            var defaultFormat = formats["default"];
            var defaults = {
                addQueryPrefix: false,
                allowDots: false,
                charset: "utf-8",
                charsetSentinel: false,
                delimiter: "&",
                encode: true,
                encoder: utils.encode,
                encodeValuesOnly: false,
                format: defaultFormat,
                formatter: formats.formatters[defaultFormat],
                indices: false,
                serializeDate: function serializeDate(date) {
                    return toISO.call(date)
                },
                skipNulls: false,
                strictNullHandling: false
            };
            var isNonNullishPrimitive = function isNonNullishPrimitive(v) {
                return typeof v === "string" || typeof v === "number" || typeof v === "boolean" || typeof v === "symbol" || typeof v === "bigint"
            };
            var stringify = function stringify(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly, charset) {
                var obj = object;
                if (typeof filter === "function") {
                    obj = filter(prefix, obj)
                } else if (obj instanceof Date) {
                    obj = serializeDate(obj)
                } else if (generateArrayPrefix === "comma" && isArray(obj)) {
                    obj = obj.join(",")
                }
                if (obj === null) {
                    if (strictNullHandling) {
                        return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, "key") : prefix
                    }
                    obj = ""
                }
                if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
                    if (encoder) {
                        var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, "key");
                        return [formatter(keyValue) + "=" + formatter(encoder(obj, defaults.encoder, charset, "value"))]
                    }
                    return [formatter(prefix) + "=" + formatter(String(obj))]
                }
                var values = [];
                if (typeof obj === "undefined") {
                    return values
                }
                var objKeys;
                if (isArray(filter)) {
                    objKeys = filter
                } else {
                    var keys = Object.keys(obj);
                    objKeys = sort ? keys.sort(sort) : keys
                }
                for (var i = 0; i < objKeys.length; ++i) {
                    var key = objKeys[i];
                    if (skipNulls && obj[key] === null) {
                        continue
                    }
                    if (isArray(obj)) {
                        pushToArray(values, stringify(obj[key], typeof generateArrayPrefix === "function" ? generateArrayPrefix(prefix, key) : prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly, charset))
                    } else {
                        pushToArray(values, stringify(obj[key], prefix + (allowDots ? "." + key : "[" + key + "]"), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly, charset))
                    }
                }
                return values
            };
            var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
                if (!opts) {
                    return defaults
                }
                if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== "function") {
                    throw new TypeError("Encoder has to be a function.")
                }
                var charset = opts.charset || defaults.charset;
                if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
                    throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined")
                }
                var format = formats["default"];
                if (typeof opts.format !== "undefined") {
                    if (!has.call(formats.formatters, opts.format)) {
                        throw new TypeError("Unknown format option provided.")
                    }
                    format = opts.format
                }
                var formatter = formats.formatters[format];
                var filter = defaults.filter;
                if (typeof opts.filter === "function" || isArray(opts.filter)) {
                    filter = opts.filter
                }
                return {
                    addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults.addQueryPrefix,
                    allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
                    charset: charset,
                    charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
                    delimiter: typeof opts.delimiter === "undefined" ? defaults.delimiter : opts.delimiter,
                    encode: typeof opts.encode === "boolean" ? opts.encode : defaults.encode,
                    encoder: typeof opts.encoder === "function" ? opts.encoder : defaults.encoder,
                    encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
                    filter: filter,
                    formatter: formatter,
                    serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults.serializeDate,
                    skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults.skipNulls,
                    sort: typeof opts.sort === "function" ? opts.sort : null,
                    strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
                }
            };
            module.exports = function(object, opts) {
                var obj = object;
                var options = normalizeStringifyOptions(opts);
                var objKeys;
                var filter;
                if (typeof options.filter === "function") {
                    filter = options.filter;
                    obj = filter("", obj)
                } else if (isArray(options.filter)) {
                    filter = options.filter;
                    objKeys = filter
                }
                var keys = [];
                if (typeof obj !== "object" || obj === null) {
                    return ""
                }
                var arrayFormat;
                if (opts && opts.arrayFormat in arrayPrefixGenerators) {
                    arrayFormat = opts.arrayFormat
                } else if (opts && "indices" in opts) {
                    arrayFormat = opts.indices ? "indices" : "repeat"
                } else {
                    arrayFormat = "indices"
                }
                var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
                if (!objKeys) {
                    objKeys = Object.keys(obj)
                }
                if (options.sort) {
                    objKeys.sort(options.sort)
                }
                for (var i = 0; i < objKeys.length; ++i) {
                    var key = objKeys[i];
                    if (options.skipNulls && obj[key] === null) {
                        continue
                    }
                    pushToArray(keys, stringify(obj[key], key, generateArrayPrefix, options.strictNullHandling, options.skipNulls, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.formatter, options.encodeValuesOnly, options.charset))
                }
                var joined = keys.join(options.delimiter);
                var prefix = options.addQueryPrefix === true ? "?" : "";
                if (options.charsetSentinel) {
                    if (options.charset === "iso-8859-1") {
                        prefix += "utf8=%26%2310003%3B&"
                    } else {
                        prefix += "utf8=%E2%9C%93&"
                    }
                }
                return joined.length > 0 ? prefix + joined : ""
            }
        }, {
            "./formats": 1,
            "./utils": 5
        }],
        5: [function(require, module, exports) {
            "use strict";
            var has = Object.prototype.hasOwnProperty;
            var isArray = Array.isArray;
            var hexTable = function() {
                var array = [];
                for (var i = 0; i < 256; ++i) {
                    array.push("%" + ((i < 16 ? "0" : "") + i.toString(16)).toUpperCase())
                }
                return array
            }();
            var compactQueue = function compactQueue(queue) {
                while (queue.length > 1) {
                    var item = queue.pop();
                    var obj = item.obj[item.prop];
                    if (isArray(obj)) {
                        var compacted = [];
                        for (var j = 0; j < obj.length; ++j) {
                            if (typeof obj[j] !== "undefined") {
                                compacted.push(obj[j])
                            }
                        }
                        item.obj[item.prop] = compacted
                    }
                }
            };
            var arrayToObject = function arrayToObject(source, options) {
                var obj = options && options.plainObjects ? Object.create(null) : {};
                for (var i = 0; i < source.length; ++i) {
                    if (typeof source[i] !== "undefined") {
                        obj[i] = source[i]
                    }
                }
                return obj
            };
            var merge = function merge(target, source, options) {
                if (!source) {
                    return target
                }
                if (typeof source !== "object") {
                    if (isArray(target)) {
                        target.push(source)
                    } else if (target && typeof target === "object") {
                        if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
                            target[source] = true
                        }
                    } else {
                        return [target, source]
                    }
                    return target
                }
                if (!target || typeof target !== "object") {
                    return [target].concat(source)
                }
                var mergeTarget = target;
                if (isArray(target) && !isArray(source)) {
                    mergeTarget = arrayToObject(target, options)
                }
                if (isArray(target) && isArray(source)) {
                    source.forEach(function(item, i) {
                        if (has.call(target, i)) {
                            var targetItem = target[i];
                            if (targetItem && typeof targetItem === "object" && item && typeof item === "object") {
                                target[i] = merge(targetItem, item, options)
                            } else {
                                target.push(item)
                            }
                        } else {
                            target[i] = item
                        }
                    });
                    return target
                }
                return Object.keys(source).reduce(function(acc, key) {
                    var value = source[key];
                    if (has.call(acc, key)) {
                        acc[key] = merge(acc[key], value, options)
                    } else {
                        acc[key] = value
                    }
                    return acc
                }, mergeTarget)
            };
            var assign = function assignSingleSource(target, source) {
                return Object.keys(source).reduce(function(acc, key) {
                    acc[key] = source[key];
                    return acc
                }, target)
            };
            var decode = function(str, decoder, charset) {
                var strWithoutPlus = str.replace(/\+/g, " ");
                if (charset === "iso-8859-1") {
                    return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape)
                }
                try {
                    return decodeURIComponent(strWithoutPlus)
                } catch (e) {
                    return strWithoutPlus
                }
            };
            var encode = function encode(str, defaultEncoder, charset) {
                if (str.length === 0) {
                    return str
                }
                var string = str;
                if (typeof str === "symbol") {
                    string = Symbol.prototype.toString.call(str)
                } else if (typeof str !== "string") {
                    string = String(str)
                }
                if (charset === "iso-8859-1") {
                    return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
                        return "%26%23" + parseInt($0.slice(2), 16) + "%3B"
                    })
                }
                var out = "";
                for (var i = 0; i < string.length; ++i) {
                    var c = string.charCodeAt(i);
                    if (c === 45 || c === 46 || c === 95 || c === 126 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122) {
                        out += string.charAt(i);
                        continue
                    }
                    if (c < 128) {
                        out = out + hexTable[c];
                        continue
                    }
                    if (c < 2048) {
                        out = out + (hexTable[192 | c >> 6] + hexTable[128 | c & 63]);
                        continue
                    }
                    if (c < 55296 || c >= 57344) {
                        out = out + (hexTable[224 | c >> 12] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63]);
                        continue
                    }
                    i += 1;
                    c = 65536 + ((c & 1023) << 10 | string.charCodeAt(i) & 1023);
                    out += hexTable[240 | c >> 18] + hexTable[128 | c >> 12 & 63] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63]
                }
                return out
            };
            var compact = function compact(value) {
                var queue = [{
                    obj: {
                        o: value
                    },
                    prop: "o"
                }];
                var refs = [];
                for (var i = 0; i < queue.length; ++i) {
                    var item = queue[i];
                    var obj = item.obj[item.prop];
                    var keys = Object.keys(obj);
                    for (var j = 0; j < keys.length; ++j) {
                        var key = keys[j];
                        var val = obj[key];
                        if (typeof val === "object" && val !== null && refs.indexOf(val) === -1) {
                            queue.push({
                                obj: obj,
                                prop: key
                            });
                            refs.push(val)
                        }
                    }
                }
                compactQueue(queue);
                return value
            };
            var isRegExp = function isRegExp(obj) {
                return Object.prototype.toString.call(obj) === "[object RegExp]"
            };
            var isBuffer = function isBuffer(obj) {
                if (!obj || typeof obj !== "object") {
                    return false
                }
                return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj))
            };
            var combine = function combine(a, b) {
                return [].concat(a, b)
            };
            module.exports = {
                arrayToObject: arrayToObject,
                assign: assign,
                combine: combine,
                compact: compact,
                decode: decode,
                encode: encode,
                isBuffer: isBuffer,
                isRegExp: isRegExp,
                merge: merge
            }
        }, {}]
    }, {}, [2])(2)
});
var highlight = function($element, pattern) {
    if ("string" != typeof pattern || pattern.length) {
        var regex = "string" == typeof pattern ? new RegExp(pattern, "i") : pattern,
            highlight = function(node) {
                var skip = 0;
                if (3 === node.nodeType) {
                    var spannode, middleclone, middlebit = node.data.search(regex);
                    0 <= middlebit && 0 < node.data.length && (middleclone = node.data.match(regex), (spannode = document.createElement("span")).className = "highlight", (middlebit = node.splitText(middlebit)).splitText(middleclone[0].length), middleclone = middlebit.cloneNode(!0), spannode.appendChild(middleclone), middlebit.parentNode.replaceChild(spannode, middlebit), skip = 1)
                } else if (1 === node.nodeType && node.childNodes && !/(script|style)/i.test(node.tagName) && ("highlight" !== node.className || "SPAN" !== node.tagName))
                    for (var i = 0; i < node.childNodes.length; ++i) i += highlight(node.childNodes[i]);
                return skip
            };
        return $element.each(function() {
            highlight(this)
        })
    }
};
$.fn.removeHighlight = function() {
    return this.find("span.highlight").each(function() {
        this.parentNode.firstChild.nodeName;
        var parent = this.parentNode;
        parent.replaceChild(this.firstChild, this), parent.normalize()
    }).end()
};
var MicroEvent = function() {};
MicroEvent.prototype = {
    on: function(event, fct) {
        this._events = this._events || {}, this._events[event] = this._events[event] || [], this._events[event].push(fct)
    },
    off: function(event, fct) {
        var n = arguments.length;
        return 0 === n ? delete this._events : 1 === n ? delete this._events[event] : (this._events = this._events || {}, void(event in this._events != !1 && this._events[event].splice(this._events[event].indexOf(fct), 1)))
    },
    trigger: function(event) {
        if (this._events = this._events || {}, event in this._events != !1)
            for (var i = 0; i < this._events[event].length; i++) this._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1))
    }
}, MicroEvent.mixin = function(destObject) {
    for (var props = ["on", "off", "trigger"], i = 0; i < props.length; i++) destObject.prototype[props[i]] = MicroEvent.prototype[props[i]]
};
var IS_MAC = /Mac/.test(navigator.userAgent),
    KEY_A = 65,
    KEY_COMMA = 188,
    KEY_RETURN = 13,
    KEY_ESC = 27,
    KEY_LEFT = 37,
    KEY_UP = 38,
    KEY_P = 80,
    KEY_RIGHT = 39,
    KEY_DOWN = 40,
    KEY_N = 78,
    KEY_BACKSPACE = 8,
    KEY_DELETE = 46,
    KEY_SHIFT = 16,
    KEY_CMD = IS_MAC ? 91 : 17,
    KEY_CTRL = IS_MAC ? 18 : 17,
    KEY_TAB = 9,
    TAG_SELECT = 1,
    TAG_INPUT = 2,
    SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement("input").validity,
    isset = function(object) {
        return void 0 !== object
    },
    hash_key = function(value) {
        return null == value ? null : "boolean" == typeof value ? value ? "1" : "0" : value + ""
    },
    escape_html = function(str) {
        return (str + "").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;")
    },
    escape_replace = function(str) {
        return (str + "").replace(/\$/g, "$$$$")
    },
    hook = {
        before: function(self, method, fn) {
            var original = self[method];
            self[method] = function() {
                return fn.apply(self, arguments), original.apply(self, arguments)
            }
        },
        after: function(self, method, fn) {
            var original = self[method];
            self[method] = function() {
                var result = original.apply(self, arguments);
                return fn.apply(self, arguments), result
            }
        }
    },
    once = function(fn) {
        var called = !1;
        return function() {
            called || (called = !0, fn.apply(this, arguments))
        }
    },
    debounce = function(fn, delay) {
        var timeout;
        return function() {
            var self = this,
                args = arguments;
            window.clearTimeout(timeout), timeout = window.setTimeout(function() {
                fn.apply(self, args)
            }, delay)
        }
    },
    debounce_events = function(self, types, fn) {
        var type, trigger = self.trigger,
            event_args = {};
        for (type in self.trigger = function() {
                var type = arguments[0];
                if (-1 === types.indexOf(type)) return trigger.apply(self, arguments);
                event_args[type] = arguments
            }, fn.apply(self, []), self.trigger = trigger, event_args) event_args.hasOwnProperty(type) && trigger.apply(self, event_args[type])
    },
    watchChildEvent = function($parent, event, selector, fn) {
        $parent.on(event, selector, function(e) {
            for (var child = e.target; child && child.parentNode !== $parent[0];) child = child.parentNode;
            return e.currentTarget = child, fn.apply(this, [e])
        })
    },
    getSelection = function(input) {
        var sel, selLen, result = {};
        return void 0 === input ? console.warn("WARN getSelection cannot locate input control") : "selectionStart" in input ? (result.start = input.selectionStart, result.length = input.selectionEnd - result.start) : document.selection && (input.focus(), sel = document.selection.createRange(), selLen = document.selection.createRange().text.length, sel.moveStart("character", -input.value.length), result.start = sel.text.length - selLen, result.length = selLen), result
    },
    transferStyles = function($from, $to, properties) {
        var i, n, styles = {};
        if (properties)
            for (i = 0, n = properties.length; i < n; i++) styles[properties[i]] = $from.css(properties[i]);
        else styles = $from.css();
        $to.css(styles)
    },
    measureString = function(str, $parent) {
        return str ? (Selectize.$testInput || (Selectize.$testInput = $("<span />").css({
            position: "absolute",
            width: "auto",
            padding: 0,
            whiteSpace: "pre"
        }), $("<div />").css({
            position: "absolute",
            width: 0,
            height: 0,
            overflow: "hidden"
        }).append(Selectize.$testInput).appendTo("body")), Selectize.$testInput.text(str), transferStyles($parent, Selectize.$testInput, ["letterSpacing", "fontSize", "fontFamily", "fontWeight", "textTransform"]), Selectize.$testInput.width()) : 0
    },
    autoGrow = function($input) {
        function update(e, selection) {
            var keyCode, width, shift, placeholder;
            selection = selection || {}, (e = e || window.event || {}).metaKey || e.altKey || !selection.force && !1 === $input.data("grow") || (width = $input.val(), e.type && "keydown" === e.type.toLowerCase() && (shift = 48 <= (keyCode = e.keyCode) && keyCode <= 57 || 65 <= keyCode && keyCode <= 90 || 96 <= keyCode && keyCode <= 111 || 186 <= keyCode && keyCode <= 222 || 32 === keyCode, keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE ? (selection = getSelection($input[0])).length ? width = width.substring(0, selection.start) + width.substring(selection.start + selection.length) : keyCode === KEY_BACKSPACE && selection.start ? width = width.substring(0, selection.start - 1) + width.substring(selection.start + 1) : keyCode === KEY_DELETE && void 0 !== selection.start && (width = width.substring(0, selection.start) + width.substring(selection.start + 1)) : shift && (shift = e.shiftKey, placeholder = String.fromCharCode(e.keyCode), width += placeholder = shift ? placeholder.toUpperCase() : placeholder.toLowerCase())), placeholder = $input.attr("placeholder"), (width = measureString(width = !width && placeholder ? placeholder : width, $input) + 4) !== currentWidth && (currentWidth = width, $input.width(width), $input.triggerHandler("resize")))
        }
        var currentWidth = null;
        $input.on("keydown keyup update blur", update), update()
    },
    domToString = function(d) {
        var tmp = document.createElement("div");
        return tmp.appendChild(d.cloneNode(!0)), tmp.innerHTML
    },
    logError = function(message, options) {
        options = options || {};
        console.error("Selectize: " + message), options.explanation && (console.group && console.group(), console.error(options.explanation), console.group && console.groupEnd())
    },
    Selectize = function($input, settings) {
        var i, n, input = $input[0];
        input.selectize = this;
        var dir = window.getComputedStyle && window.getComputedStyle(input, null);
        if (dir = (dir = dir ? dir.getPropertyValue("direction") : input.currentStyle && input.currentStyle.direction) || $input.parents("[dir]:first").attr("dir") || "", $.extend(this, {
                order: 0,
                settings: settings,
                $input: $input,
                tabIndex: $input.attr("tabindex") || "",
                tagType: "select" === input.tagName.toLowerCase() ? TAG_SELECT : TAG_INPUT,
                rtl: /rtl/i.test(dir),
                eventNS: ".selectize" + ++Selectize.count,
                highlightedValue: null,
                isBlurring: !1,
                isOpen: !1,
                isDisabled: !1,
                isRequired: $input.is("[required]"),
                isInvalid: !1,
                isLocked: !1,
                isFocused: !1,
                isInputHidden: !1,
                isSetup: !1,
                isShiftDown: !1,
                isCmdDown: !1,
                isCtrlDown: !1,
                ignoreFocus: !1,
                ignoreBlur: !1,
                ignoreHover: !1,
                hasOptions: !1,
                currentResults: null,
                lastValue: "",
                caretPos: 0,
                loading: 0,
                loadedSearches: {},
                $activeOption: null,
                $activeItems: [],
                optgroups: {},
                options: {},
                userOptions: {},
                items: [],
                renderCache: {},
                onSearchChange: null === settings.loadThrottle ? this.onSearchChange : debounce(this.onSearchChange, settings.loadThrottle)
            }), this.sifter = new Sifter(this.options, {
                diacritics: settings.diacritics
            }), this.settings.options) {
            for (i = 0, n = this.settings.options.length; i < n; i++) this.registerOption(this.settings.options[i]);
            delete this.settings.options
        }
        if (this.settings.optgroups) {
            for (i = 0, n = this.settings.optgroups.length; i < n; i++) this.registerOptionGroup(this.settings.optgroups[i]);
            delete this.settings.optgroups
        }
        this.settings.mode = this.settings.mode || (1 === this.settings.maxItems ? "single" : "multi"), "boolean" != typeof this.settings.hideSelected && (this.settings.hideSelected = "multi" === this.settings.mode), this.initializePlugins(this.settings.plugins), this.setupCallbacks(), this.setupTemplates(), this.setup()
    };
MicroEvent.mixin(Selectize), "undefined" != typeof MicroPlugin ? MicroPlugin.mixin(Selectize) : logError("Dependency MicroPlugin is missing", {
    explanation: 'Make sure you either: (1) are using the "standalone" version of Selectize, or (2) require MicroPlugin before you load Selectize.'
}), $.extend(Selectize.prototype, {
    setup: function() {
        var delimiterEscaped, self = this,
            settings = self.settings,
            eventNS = self.eventNS,
            $window = $(window),
            $document = $(document),
            $input = self.$input,
            $dropdown_content = self.settings.mode,
            classes = $input.attr("class") || "",
            $wrapper = $("<div>").addClass(settings.wrapperClass).addClass(classes).addClass($dropdown_content),
            $control = $("<div>").addClass(settings.inputClass).addClass("items").appendTo($wrapper),
            $control_input = $('<input type="text" autocomplete="new-password" autofill="no" />').appendTo($control).attr("tabindex", $input.is(":disabled") ? "-1" : self.tabIndex),
            inputId = $(settings.dropdownParent || $wrapper),
            $dropdown = $("<div>").addClass(settings.dropdownClass).addClass($dropdown_content).hide().appendTo(inputId),
            $dropdown_content = $("<div>").addClass(settings.dropdownContentClass).appendTo($dropdown);
        (inputId = $input.attr("id")) && ($control_input.attr("id", inputId + "-selectized"), $("label[for='" + inputId + "']").attr("for", inputId + "-selectized")), self.settings.copyClassesToDropdown && $dropdown.addClass(classes), $wrapper.css({
            width: $input[0].style.width
        }), self.plugins.names.length && (delimiterEscaped = "plugin-" + self.plugins.names.join(" plugin-"), $wrapper.addClass(delimiterEscaped), $dropdown.addClass(delimiterEscaped)), (null === settings.maxItems || 1 < settings.maxItems) && self.tagType === TAG_SELECT && $input.attr("multiple", "multiple"), self.settings.placeholder && $control_input.attr("placeholder", settings.placeholder), !self.settings.splitOn && self.settings.delimiter && (delimiterEscaped = self.settings.delimiter.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), self.settings.splitOn = new RegExp("\\s*" + delimiterEscaped + "+\\s*")), $input.attr("autocorrect") && $control_input.attr("autocorrect", $input.attr("autocorrect")), $input.attr("autocapitalize") && $control_input.attr("autocapitalize", $input.attr("autocapitalize")), $control_input[0].type = $input[0].type, self.$wrapper = $wrapper, self.$control = $control, self.$control_input = $control_input, self.$dropdown = $dropdown, self.$dropdown_content = $dropdown_content, $dropdown.on("mouseenter mousedown click", "[data-disabled]>[data-selectable]", function(e) {
            e.stopImmediatePropagation()
        }), $dropdown.on("mouseenter", "[data-selectable]", function() {
            return self.onOptionHover.apply(self, arguments)
        }), $dropdown.on("mousedown click", "[data-selectable]", function() {
            return self.onOptionSelect.apply(self, arguments)
        }), watchChildEvent($control, "mousedown", "*:not(input)", function() {
            return self.onItemSelect.apply(self, arguments)
        }), autoGrow($control_input), $control.on({
            mousedown: function() {
                return self.onMouseDown.apply(self, arguments)
            },
            click: function() {
                return self.onClick.apply(self, arguments)
            }
        }), $control_input.on({
            mousedown: function(e) {
                e.stopPropagation()
            },
            keydown: function() {
                return self.onKeyDown.apply(self, arguments)
            },
            keyup: function() {
                return self.onKeyUp.apply(self, arguments)
            },
            keypress: function() {
                return self.onKeyPress.apply(self, arguments)
            },
            resize: function() {
                self.positionDropdown.apply(self, [])
            },
            blur: function() {
                return self.onBlur.apply(self, arguments)
            },
            focus: function() {
                return self.ignoreBlur = !1, self.onFocus.apply(self, arguments)
            },
            paste: function() {
                return self.onPaste.apply(self, arguments)
            }
        }), $document.on("keydown" + eventNS, function(e) {
            self.isCmdDown = e[IS_MAC ? "metaKey" : "ctrlKey"], self.isCtrlDown = e[IS_MAC ? "altKey" : "ctrlKey"], self.isShiftDown = e.shiftKey
        }), $document.on("keyup" + eventNS, function(e) {
            e.keyCode === KEY_CTRL && (self.isCtrlDown = !1), e.keyCode === KEY_SHIFT && (self.isShiftDown = !1), e.keyCode === KEY_CMD && (self.isCmdDown = !1)
        }), $document.on("mousedown" + eventNS, function(e) {
            if (self.isFocused) {
                if (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) return !1;
                self.$control.has(e.target).length || e.target === self.$control[0] || self.blur(e.target)
            }
        }), $window.on(["scroll" + eventNS, "resize" + eventNS].join(" "), function() {
            self.isOpen && self.positionDropdown.apply(self, arguments)
        }), $window.on("mousemove" + eventNS, function() {
            self.ignoreHover = !1
        }), this.revertSettings = {
            $children: $input.children().detach(),
            tabindex: $input.attr("tabindex")
        }, $input.attr("tabindex", -1).hide().after(self.$wrapper), $.isArray(settings.items) && (self.setValue(settings.items), delete settings.items), SUPPORTS_VALIDITY_API && $input.on("invalid" + eventNS, function(e) {
            e.preventDefault(), self.isInvalid = !0, self.refreshState()
        }), self.updateOriginalInput(), self.refreshItems(), self.refreshState(), self.updatePlaceholder(), self.isSetup = !0, $input.is(":disabled") && self.disable(), self.on("change", this.onChange), $input.data("selectize", self), $input.addClass("selectized"), self.trigger("initialize"), !0 === settings.preload && self.onSearchChange("")
    },
    setupTemplates: function() {
        var field_label = this.settings.labelField,
            field_optgroup = this.settings.optgroupLabelField,
            templates = {
                optgroup: function(data) {
                    return '<div class="optgroup">' + data.html + "</div>"
                },
                optgroup_header: function(data, escape) {
                    return '<div class="optgroup-header">' + escape(data[field_optgroup]) + "</div>"
                },
                option: function(data, escape) {
                    return '<div class="option">' + escape(data[field_label]) + "</div>"
                },
                item: function(data, escape) {
                    return '<div class="item">' + escape(data[field_label]) + "</div>"
                },
                option_create: function(data, escape) {
                    return '<div class="create">Add <strong>' + escape(data.input) + "</strong>&hellip;</div>"
                }
            };
        this.settings.render = $.extend({}, templates, this.settings.render)
    },
    setupCallbacks: function() {
        var key, fn, callbacks = {
            initialize: "onInitialize",
            change: "onChange",
            item_add: "onItemAdd",
            item_remove: "onItemRemove",
            clear: "onClear",
            option_add: "onOptionAdd",
            option_remove: "onOptionRemove",
            option_clear: "onOptionClear",
            optgroup_add: "onOptionGroupAdd",
            optgroup_remove: "onOptionGroupRemove",
            optgroup_clear: "onOptionGroupClear",
            dropdown_open: "onDropdownOpen",
            dropdown_close: "onDropdownClose",
            type: "onType",
            load: "onLoad",
            focus: "onFocus",
            blur: "onBlur",
            dropdown_item_activate: "onDropdownItemActivate",
            dropdown_item_deactivate: "onDropdownItemDeactivate"
        };
        for (key in callbacks) callbacks.hasOwnProperty(key) && (fn = this.settings[callbacks[key]]) && this.on(key, fn)
    },
    onClick: function(e) {
        this.isFocused && this.isOpen || (this.focus(), e.preventDefault())
    },
    onMouseDown: function(e) {
        var self = this,
            defaultPrevented = e.isDefaultPrevented();
        $(e.target);
        if (self.isFocused) {
            if (e.target !== self.$control_input[0]) return "single" === self.settings.mode ? self.isOpen ? self.close() : self.open() : defaultPrevented || self.setActiveItem(null), !1
        } else defaultPrevented || window.setTimeout(function() {
            self.focus()
        }, 0)
    },
    onChange: function() {
        this.$input.trigger("input"), this.$input.trigger("change")
    },
    onPaste: function(e) {
        var self = this;
        self.isFull() || self.isInputHidden || self.isLocked ? e.preventDefault() : self.settings.splitOn && setTimeout(function() {
            var pastedText = self.$control_input.val();
            if (pastedText.match(self.settings.splitOn))
                for (var splitInput = $.trim(pastedText).split(self.settings.splitOn), i = 0, n = splitInput.length; i < n; i++) self.createItem(splitInput[i])
        }, 0)
    },
    onKeyPress: function(e) {
        if (this.isLocked) return e && e.preventDefault();
        var character = String.fromCharCode(e.keyCode || e.which);
        return this.settings.create && "multi" === this.settings.mode && character === this.settings.delimiter ? (this.createItem(), e.preventDefault(), !1) : void 0
    },
    onKeyDown: function(e) {
        var $prev;
        e.target, this.$control_input[0];
        if (this.isLocked) e.keyCode !== KEY_TAB && e.preventDefault();
        else {
            switch (e.keyCode) {
                case KEY_A:
                    if (this.isCmdDown) return void this.selectAll();
                    break;
                case KEY_ESC:
                    return void(this.isOpen && (e.preventDefault(), e.stopPropagation(), this.close()));
                case KEY_N:
                    if (!e.ctrlKey || e.altKey) break;
                case KEY_DOWN:
                    return !this.isOpen && this.hasOptions ? this.open() : this.$activeOption && (this.ignoreHover = !0, ($prev = this.getAdjacentOption(this.$activeOption, 1)).length && this.setActiveOption($prev, !0, !0)), void e.preventDefault();
                case KEY_P:
                    if (!e.ctrlKey || e.altKey) break;
                case KEY_UP:
                    return this.$activeOption && (this.ignoreHover = !0, ($prev = this.getAdjacentOption(this.$activeOption, -1)).length && this.setActiveOption($prev, !0, !0)), void e.preventDefault();
                case KEY_RETURN:
                    return void(this.isOpen && this.$activeOption && (this.onOptionSelect({
                        currentTarget: this.$activeOption
                    }), e.preventDefault()));
                case KEY_LEFT:
                    return void this.advanceSelection(-1, e);
                case KEY_RIGHT:
                    return void this.advanceSelection(1, e);
                case KEY_TAB:
                    return this.settings.selectOnTab && this.isOpen && this.$activeOption && (this.onOptionSelect({
                        currentTarget: this.$activeOption
                    }), this.isFull() || e.preventDefault()), void(this.settings.create && this.createItem() && e.preventDefault());
                case KEY_BACKSPACE:
                case KEY_DELETE:
                    return void this.deleteSelection(e)
            }!this.isFull() && !this.isInputHidden || (IS_MAC ? e.metaKey : e.ctrlKey) || e.preventDefault()
        }
    },
    onKeyUp: function(value) {
        if (this.isLocked) return value && value.preventDefault();
        value = this.$control_input.val() || "";
        this.lastValue !== value && (this.lastValue = value, this.onSearchChange(value), this.refreshOptions(), this.trigger("type", value))
    },
    onSearchChange: function(value) {
        var self = this,
            fn = self.settings.load;
        fn && (self.loadedSearches.hasOwnProperty(value) || (self.loadedSearches[value] = !0, self.load(function(callback) {
            fn.apply(self, [value, callback])
        })))
    },
    onFocus: function(e) {
        var wasFocused = this.isFocused;
        if (this.isDisabled) return this.blur(), e && e.preventDefault(), !1;
        this.ignoreFocus || (this.isFocused = !0, "focus" === this.settings.preload && this.onSearchChange(""), wasFocused || this.trigger("focus"), this.$activeItems.length || (this.showInput(), this.setActiveItem(null), this.refreshOptions(!!this.settings.openOnFocus)), this.refreshState())
    },
    onBlur: function(deactivate, dest) {
        var self = this;
        if (self.isFocused && (self.isFocused = !1, !self.ignoreFocus)) {
            if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) return self.ignoreBlur = !0, void self.onFocus(deactivate);
            deactivate = function() {
                self.close(), self.setTextboxValue(""), self.setActiveItem(null), self.setActiveOption(null), self.setCaret(self.items.length), self.refreshState(), dest && dest.focus && dest.focus(), self.isBlurring = !1, self.ignoreFocus = !1, self.trigger("blur")
            };
            self.isBlurring = !0, self.ignoreFocus = !0, self.settings.create && self.settings.createOnBlur ? self.createItem(null, !1, deactivate) : deactivate()
        }
    },
    onOptionHover: function(e) {
        this.ignoreHover || this.setActiveOption(e.currentTarget, !1)
    },
    onOptionSelect: function(e) {
        var value, self = this;
        e.preventDefault && (e.preventDefault(), e.stopPropagation()), (value = $(e.currentTarget)).hasClass("create") ? self.createItem(null, function() {
            self.settings.closeAfterSelect && self.close()
        }) : void 0 !== (value = value.attr("data-value")) && (self.lastQuery = null, self.setTextboxValue(""), self.addItem(value), self.settings.closeAfterSelect ? self.close() : !self.settings.hideSelected && e.type && /mouse/.test(e.type) && self.setActiveOption(self.getOption(value)))
    },
    onItemSelect: function(e) {
        this.isLocked || "multi" === this.settings.mode && (e.preventDefault(), this.setActiveItem(e.currentTarget, e))
    },
    load: function(fn) {
        var self = this,
            $wrapper = self.$wrapper.addClass(self.settings.loadingClass);
        self.loading++, fn.apply(self, [function(results) {
            self.loading = Math.max(self.loading - 1, 0), results && results.length && (self.addOption(results), self.refreshOptions(self.isFocused && !self.isInputHidden)), self.loading || $wrapper.removeClass(self.settings.loadingClass), self.trigger("load", results)
        }])
    },
    setTextboxValue: function(value) {
        var $input = this.$control_input;
        $input.val() !== value && ($input.val(value).triggerHandler("update"), this.lastValue = value)
    },
    getValue: function() {
        return this.tagType === TAG_SELECT && this.$input.attr("multiple") ? this.items : this.items.join(this.settings.delimiter)
    },
    setValue: function(value, silent) {
        debounce_events(this, silent ? [] : ["change"], function() {
            this.clear(silent), this.addItems(value, silent)
        })
    },
    setMaxItems: function(value) {
        0 === value && (value = null), this.settings.maxItems = value, this.settings.mode = this.settings.mode || (1 === this.settings.maxItems ? "single" : "multi"), this.refreshState()
    },
    setActiveItem: function($item, e) {
        var i, idx, begin, end, item, swap;
        if ("single" !== this.settings.mode) {
            if (!($item = $($item)).length) return $(this.$activeItems).removeClass("active"), this.$activeItems = [], void(this.isFocused && this.showInput());
            if ("mousedown" === (idx = e && e.type.toLowerCase()) && this.isShiftDown && this.$activeItems.length) {
                for (swap = this.$control.children(".active:last"), begin = Array.prototype.indexOf.apply(this.$control[0].childNodes, [swap[0]]), (end = Array.prototype.indexOf.apply(this.$control[0].childNodes, [$item[0]])) < begin && (swap = begin, begin = end, end = swap), i = begin; i <= end; i++) item = this.$control[0].childNodes[i], -1 === this.$activeItems.indexOf(item) && ($(item).addClass("active"), this.$activeItems.push(item));
                e.preventDefault()
            } else "mousedown" === idx && this.isCtrlDown || "keydown" === idx && this.isShiftDown ? $item.hasClass("active") ? (idx = this.$activeItems.indexOf($item[0]), this.$activeItems.splice(idx, 1), $item.removeClass("active")) : this.$activeItems.push($item.addClass("active")[0]) : ($(this.$activeItems).removeClass("active"), this.$activeItems = [$item.addClass("active")[0]]);
            this.hideInput(), this.isFocused || this.focus()
        }
    },
    setActiveOption: function(scroll_bottom, scroll, animate) {
        var height_menu, height_item, y, scroll_top;
        this.$activeOption && (this.$activeOption.removeClass("active"), this.trigger("dropdown_item_deactivate", this.$activeOption.attr("data-value"))), this.$activeOption = null, (scroll_bottom = $(scroll_bottom)).length && (this.$activeOption = scroll_bottom.addClass("active"), this.isOpen && this.trigger("dropdown_item_activate", this.$activeOption.attr("data-value")), !scroll && isset(scroll) || (height_menu = this.$dropdown_content.height(), height_item = this.$activeOption.outerHeight(!0), scroll = this.$dropdown_content.scrollTop() || 0, scroll_bottom = (scroll_top = y = this.$activeOption.offset().top - this.$dropdown_content.offset().top + scroll) - height_menu + height_item, height_menu + scroll < y + height_item ? this.$dropdown_content.stop().animate({
            scrollTop: scroll_bottom
        }, animate ? this.settings.scrollDuration : 0) : y < scroll && this.$dropdown_content.stop().animate({
            scrollTop: scroll_top
        }, animate ? this.settings.scrollDuration : 0)))
    },
    selectAll: function() {
        "single" !== this.settings.mode && (this.$activeItems = Array.prototype.slice.apply(this.$control.children(":not(input)").addClass("active")), this.$activeItems.length && (this.hideInput(), this.close()), this.focus())
    },
    hideInput: function() {
        this.setTextboxValue(""), this.$control_input.css({
            opacity: 0,
            position: "absolute",
            left: this.rtl ? 1e4 : -1e4
        }), this.isInputHidden = !0
    },
    showInput: function() {
        this.$control_input.css({
            opacity: 1,
            position: "relative",
            left: 0
        }), this.isInputHidden = !1
    },
    focus: function() {
        var self = this;
        return self.isDisabled || (self.ignoreFocus = !0, self.$control_input[0].focus(), window.setTimeout(function() {
            self.ignoreFocus = !1, self.onFocus()
        }, 0)), self
    },
    blur: function(dest) {
        return this.$control_input[0].blur(), this.onBlur(null, dest), this
    },
    getScoreFunction: function(query) {
        return this.sifter.getScoreFunction(query, this.getSearchOptions())
    },
    getSearchOptions: function() {
        var settings = this.settings,
            sort = settings.sortField;
        return "string" == typeof sort && (sort = [{
            field: sort
        }]), {
            fields: settings.searchField,
            conjunction: settings.searchConjunction,
            sort: sort,
            nesting: settings.nesting
        }
    },
    search: function(query) {
        var i, result, calculateScore, settings = this.settings,
            options = this.getSearchOptions();
        if (settings.score && "function" != typeof(calculateScore = this.settings.score.apply(this, [query]))) throw new Error('Selectize "score" setting must be a function that returns a function');
        if (query !== this.lastQuery ? (this.lastQuery = query, result = this.sifter.search(query, $.extend(options, {
                score: calculateScore
            })), this.currentResults = result) : result = $.extend(!0, {}, this.currentResults), settings.hideSelected)
            for (i = result.items.length - 1; 0 <= i; i--) - 1 !== this.items.indexOf(hash_key(result.items[i].id)) && result.items.splice(i, 1);
        return result
    },
    refreshOptions: function(triggerDropdown) {
        var i, j, k, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option, $active, $create;
        void 0 === triggerDropdown && (triggerDropdown = !0);
        var self = this,
            query = $.trim(self.$control_input.val()),
            results = self.search(query),
            $dropdown_content = self.$dropdown_content,
            $active_before = self.$activeOption && hash_key(self.$activeOption.attr("data-value")),
            n = results.items.length;
        for ("number" == typeof self.settings.maxOptions && (n = Math.min(n, self.settings.maxOptions)), groups = {}, groups_order = [], i = 0; i < n; i++)
            for (option = self.options[results.items[i].id], option_html = self.render("option", option), optgroup = option[self.settings.optgroupField] || "", j = 0, k = (optgroups = $.isArray(optgroup) ? optgroup : [optgroup]) && optgroups.length; j < k; j++) optgroup = optgroups[j], self.optgroups.hasOwnProperty(optgroup) || (optgroup = ""), groups.hasOwnProperty(optgroup) || (groups[optgroup] = document.createDocumentFragment(), groups_order.push(optgroup)), groups[optgroup].appendChild(option_html);
        for (this.settings.lockOptgroupOrder && groups_order.sort(function(a, b) {
                return (self.optgroups[a].$order || 0) - (self.optgroups[b].$order || 0)
            }), html = document.createDocumentFragment(), i = 0, n = groups_order.length; i < n; i++) optgroup = groups_order[i], self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length ? ((html_children = document.createDocumentFragment()).appendChild(self.render("optgroup_header", self.optgroups[optgroup])), html_children.appendChild(groups[optgroup]), html.appendChild(self.render("optgroup", $.extend({}, self.optgroups[optgroup], {
            html: domToString(html_children),
            dom: html_children
        })))) : html.appendChild(groups[optgroup]);
        if ($dropdown_content.html(html), self.settings.highlight && ($dropdown_content.removeHighlight(), results.query.length && results.tokens.length))
            for (i = 0, n = results.tokens.length; i < n; i++) highlight($dropdown_content, results.tokens[i].regex);
        if (!self.settings.hideSelected)
            for (self.$dropdown.find(".selected").removeClass("selected"), i = 0, n = self.items.length; i < n; i++) self.getOption(self.items[i]).addClass("selected");
        (has_create_option = self.canCreate(query)) && ($dropdown_content.prepend(self.render("option_create", {
            input: query
        })), $create = $($dropdown_content[0].childNodes[0])), self.hasOptions = 0 < results.items.length || has_create_option, self.hasOptions ? (0 < results.items.length ? (($active_before = $active_before && self.getOption($active_before)) && $active_before.length ? $active = $active_before : "single" === self.settings.mode && self.items.length && ($active = self.getOption(self.items[0])), $active && $active.length || ($active = $create && !self.settings.addPrecedence ? self.getAdjacentOption($create, 1) : $dropdown_content.find("[data-selectable]:first"))) : $active = $create, self.setActiveOption($active), triggerDropdown && !self.isOpen && self.open()) : (self.setActiveOption(null), triggerDropdown && self.isOpen && self.close())
    },
    addOption: function(data) {
        var i, n, value;
        if ($.isArray(data))
            for (i = 0, n = data.length; i < n; i++) this.addOption(data[i]);
        else(value = this.registerOption(data)) && (this.userOptions[value] = !0, this.lastQuery = null, this.trigger("option_add", value, data))
    },
    registerOption: function(data) {
        var key = hash_key(data[this.settings.valueField]);
        return null != key && !this.options.hasOwnProperty(key) && (data.$order = data.$order || ++this.order, this.options[key] = data, key)
    },
    registerOptionGroup: function(data) {
        var key = hash_key(data[this.settings.optgroupValueField]);
        return !!key && (data.$order = data.$order || ++this.order, this.optgroups[key] = data, key)
    },
    addOptionGroup: function(id, data) {
        data[this.settings.optgroupValueField] = id, (id = this.registerOptionGroup(data)) && this.trigger("optgroup_add", id, data)
    },
    removeOptionGroup: function(id) {
        this.optgroups.hasOwnProperty(id) && (delete this.optgroups[id], this.renderCache = {}, this.trigger("optgroup_remove", id))
    },
    clearOptionGroups: function() {
        this.optgroups = {}, this.renderCache = {}, this.trigger("optgroup_clear")
    },
    updateOption: function($item, $item_new) {
        var value_new, cache_items, cache_options;
        if ($item = hash_key($item), value_new = hash_key($item_new[this.settings.valueField]), null !== $item && this.options.hasOwnProperty($item)) {
            if ("string" != typeof value_new) throw new Error("Value must be set in option data");
            cache_options = this.options[$item].$order, value_new !== $item && (delete this.options[$item], -1 !== (cache_items = this.items.indexOf($item)) && this.items.splice(cache_items, 1, value_new)), $item_new.$order = $item_new.$order || cache_options, this.options[value_new] = $item_new, cache_items = this.renderCache.item, cache_options = this.renderCache.option, cache_items && (delete cache_items[$item], delete cache_items[value_new]), cache_options && (delete cache_options[$item], delete cache_options[value_new]), -1 !== this.items.indexOf(value_new) && ($item = this.getItem($item), $item_new = $(this.render("item", $item_new)), $item.hasClass("active") && $item_new.addClass("active"), $item.replaceWith($item_new)), this.lastQuery = null, this.isOpen && this.refreshOptions(!1)
        }
    },
    removeOption: function(value, silent) {
        value = hash_key(value);
        var cache_items = this.renderCache.item,
            cache_options = this.renderCache.option;
        cache_items && delete cache_items[value], cache_options && delete cache_options[value], delete this.userOptions[value], delete this.options[value], this.lastQuery = null, this.trigger("option_remove", value), this.removeItem(value, silent)
    },
    clearOptions: function(silent) {
        var self = this;
        self.loadedSearches = {}, self.userOptions = {}, self.renderCache = {};
        var options = self.options;
        $.each(self.options, function(key, value) {
            -1 == self.items.indexOf(key) && delete options[key]
        }), self.options = self.sifter.items = options, self.lastQuery = null, self.trigger("option_clear"), self.clear(silent)
    },
    getOption: function(value) {
        return this.getElementWithValue(value, this.$dropdown_content.find("[data-selectable]"))
    },
    getAdjacentOption: function($option, index) {
        var $options = this.$dropdown.find("[data-selectable]"),
            index = $options.index($option) + index;
        return 0 <= index && index < $options.length ? $options.eq(index) : $()
    },
    getElementWithValue: function(value, $els) {
        if (null != (value = hash_key(value)))
            for (var i = 0, n = $els.length; i < n; i++)
                if ($els[i].getAttribute("data-value") === value) return $($els[i]);
        return $()
    },
    getItem: function(value) {
        return this.getElementWithValue(value, this.$control.children())
    },
    addItems: function(control, silent) {
        this.buffer = document.createDocumentFragment();
        for (var childNodes = this.$control[0].childNodes, i = 0; i < childNodes.length; i++) this.buffer.appendChild(childNodes[i]);
        for (var items = $.isArray(control) ? control : [control], i = 0, n = items.length; i < n; i++) this.isPending = i < n - 1, this.addItem(items[i], silent);
        control = this.$control[0];
        control.insertBefore(this.buffer, control.firstChild), this.buffer = null
    },
    addItem: function(value, silent) {
        debounce_events(this, silent ? [] : ["change"], function() {
            var $item, $options, value_next, inputMode = this.settings.mode;
            value = hash_key(value), -1 === this.items.indexOf(value) ? this.options.hasOwnProperty(value) && ("single" === inputMode && this.clear(silent), "multi" === inputMode && this.isFull() || ($item = $(this.render("item", this.options[value])), value_next = this.isFull(), this.items.splice(this.caretPos, 0, value), this.insertAtCaret($item), this.isPending && (value_next || !this.isFull()) || this.refreshState(), this.isSetup && ($options = this.$dropdown_content.find("[data-selectable]"), this.isPending || (value_next = this.getOption(value), value_next = this.getAdjacentOption(value_next, 1).attr("data-value"), this.refreshOptions(this.isFocused && "single" !== inputMode), value_next && this.setActiveOption(this.getOption(value_next))), !$options.length || this.isFull() ? this.close() : this.isPending || this.positionDropdown(), this.updatePlaceholder(), this.trigger("item_add", value, $item), this.isPending || this.updateOriginalInput({
                silent: silent
            })))) : "single" === inputMode && this.close()
        })
    },
    removeItem: function(value, silent) {
        var i, idx, $item = value instanceof $ ? value : this.getItem(value);
        value = hash_key($item.attr("data-value")), -1 !== (i = this.items.indexOf(value)) && (this.trigger("item_before_remove", value, $item), $item.remove(), $item.hasClass("active") && (idx = this.$activeItems.indexOf($item[0]), this.$activeItems.splice(idx, 1)), this.items.splice(i, 1), this.lastQuery = null, !this.settings.persist && this.userOptions.hasOwnProperty(value) && this.removeOption(value, silent), i < this.caretPos && this.setCaret(this.caretPos - 1), this.refreshState(), this.updatePlaceholder(), this.updateOriginalInput({
            silent: silent
        }), this.positionDropdown(), this.trigger("item_remove", value, $item))
    },
    createItem: function(input, triggerDropdown) {
        var self = this,
            caret = self.caretPos;
        input = input || $.trim(self.$control_input.val() || "");
        var callback = arguments[arguments.length - 1];
        if ("function" != typeof callback && (callback = function() {}), "boolean" != typeof triggerDropdown && (triggerDropdown = !0), !self.canCreate(input)) return callback(), !1;
        self.lock();
        var output = "function" == typeof self.settings.create ? this.settings.create : function(input) {
                var data = {};
                return data[self.settings.labelField] = input, data[self.settings.valueField] = input, data
            },
            create = once(function(data) {
                if (self.unlock(), !data || "object" != typeof data) return callback();
                var value = hash_key(data[self.settings.valueField]);
                if ("string" != typeof value) return callback();
                self.setTextboxValue(""), self.addOption(data), self.setCaret(caret), self.addItem(value), self.refreshOptions(triggerDropdown && "single" !== self.settings.mode), callback(data)
            }),
            output = output.apply(this, [input, create]);
        return void 0 !== output && create(output), !0
    },
    refreshItems: function() {
        this.lastQuery = null, this.isSetup && this.addItem(this.items), this.refreshState(), this.updateOriginalInput()
    },
    refreshState: function() {
        this.refreshValidityState(), this.refreshClasses()
    },
    refreshValidityState: function() {
        if (!this.isRequired) return !1;
        var invalid = !this.items.length;
        this.isInvalid = invalid, this.$control_input.prop("required", invalid), this.$input.prop("required", !invalid)
    },
    refreshClasses: function() {
        var isFull = this.isFull(),
            isLocked = this.isLocked;
        this.$wrapper.toggleClass("rtl", this.rtl), this.$control.toggleClass("focus", this.isFocused).toggleClass("disabled", this.isDisabled).toggleClass("required", this.isRequired).toggleClass("invalid", this.isInvalid).toggleClass("locked", isLocked).toggleClass("full", isFull).toggleClass("not-full", !isFull).toggleClass("input-active", this.isFocused && !this.isInputHidden).toggleClass("dropdown-active", this.isOpen).toggleClass("has-options", !$.isEmptyObject(this.options)).toggleClass("has-items", 0 < this.items.length), this.$control_input.data("grow", !isFull && !isLocked)
    },
    isFull: function() {
        return null !== this.settings.maxItems && this.items.length >= this.settings.maxItems
    },
    updateOriginalInput: function(opts) {
        var i, n, options, label;
        if (opts = opts || {}, this.tagType === TAG_SELECT) {
            for (options = [], i = 0, n = this.items.length; i < n; i++) label = this.options[this.items[i]][this.settings.labelField] || "", options.push('<option value="' + escape_html(this.items[i]) + '" selected="selected">' + escape_html(label) + "</option>");
            options.length || this.$input.attr("multiple") || options.push('<option value="" selected="selected"></option>'), this.$input.html(options.join(""))
        } else this.$input.val(this.getValue()), this.$input.attr("value", this.$input.val());
        this.isSetup && (opts.silent || this.trigger("change", this.$input.val()))
    },
    updatePlaceholder: function() {
        var $input;
        this.settings.placeholder && ($input = this.$control_input, this.items.length ? $input.removeAttr("placeholder") : $input.attr("placeholder", this.settings.placeholder), $input.triggerHandler("update", {
            force: !0
        }))
    },
    open: function() {
        this.isLocked || this.isOpen || "multi" === this.settings.mode && this.isFull() || (this.focus(), this.isOpen = !0, this.refreshState(), this.$dropdown.css({
            visibility: "hidden",
            display: "block"
        }), this.positionDropdown(), this.$dropdown.css({
            visibility: "visible"
        }), this.trigger("dropdown_open", this.$dropdown))
    },
    close: function() {
        var trigger = this.isOpen;
        "single" === this.settings.mode && this.items.length && (this.hideInput(), this.isBlurring && this.$control_input.blur()), this.isOpen = !1, this.$dropdown.hide(), this.setActiveOption(null), this.refreshState(), trigger && this.trigger("dropdown_close", this.$dropdown)
    },
    positionDropdown: function() {
        var $control = this.$control,
            offset = "body" === this.settings.dropdownParent ? $control.offset() : $control.position();
        offset.top += $control.outerHeight(!0), this.$dropdown.css({
            width: $control[0].getBoundingClientRect().width,
            top: offset.top,
            left: offset.left
        })
    },
    clear: function(silent) {
        this.items.length && (this.$control.children(":not(input)").remove(), this.items = [], this.lastQuery = null, this.setCaret(0), this.setActiveItem(null), this.updatePlaceholder(), this.updateOriginalInput({
            silent: silent
        }), this.refreshState(), this.showInput(), this.trigger("clear"))
    },
    insertAtCaret: function(target) {
        var caret = Math.min(this.caretPos, this.items.length),
            el = target[0],
            target = this.buffer || this.$control[0];
        0 === caret ? target.insertBefore(el, target.firstChild) : target.insertBefore(el, target.childNodes[caret]), this.setCaret(caret + 1)
    },
    deleteSelection: function(e) {
        var i, n, values, option_select, $option_select, caret, direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1,
            selection = getSelection(this.$control_input[0]);
        if (this.$activeOption && !this.settings.hideSelected && (option_select = this.getAdjacentOption(this.$activeOption, -1).attr("data-value")), values = [], this.$activeItems.length) {
            for (caret = this.$control.children(".active:" + (0 < direction ? "last" : "first")), caret = this.$control.children(":not(input)").index(caret), 0 < direction && caret++, i = 0, n = this.$activeItems.length; i < n; i++) values.push($(this.$activeItems[i]).attr("data-value"));
            e && (e.preventDefault(), e.stopPropagation())
        } else(this.isFocused || "single" === this.settings.mode) && this.items.length && (direction < 0 && 0 === selection.start && 0 === selection.length ? values.push(this.items[this.caretPos - 1]) : 0 < direction && selection.start === this.$control_input.val().length && values.push(this.items[this.caretPos]));
        if (!values.length || "function" == typeof this.settings.onDelete && !1 === this.settings.onDelete.apply(this, [values])) return !1;
        for (void 0 !== caret && this.setCaret(caret); values.length;) this.removeItem(values.pop());
        return this.showInput(), this.positionDropdown(), this.refreshOptions(!0), option_select && ($option_select = this.getOption(option_select)).length && this.setActiveOption($option_select), !0
    },
    advanceSelection: function(direction, e) {
        var selection, valueLength, idx;
        0 !== direction && (this.rtl && (direction *= -1), idx = 0 < direction ? "last" : "first", selection = getSelection(this.$control_input[0]), this.isFocused && !this.isInputHidden ? (valueLength = this.$control_input.val().length, (direction < 0 ? 0 !== selection.start || 0 !== selection.length : selection.start !== valueLength) || valueLength || this.advanceCaret(direction, e)) : (idx = this.$control.children(".active:" + idx)).length && (idx = this.$control.children(":not(input)").index(idx), this.setActiveItem(null), this.setCaret(0 < direction ? idx + 1 : idx)))
    },
    advanceCaret: function(direction, e) {
        var $adj;
        0 !== direction && ($adj = 0 < direction ? "next" : "prev", this.isShiftDown ? ($adj = this.$control_input[$adj]()).length && (this.hideInput(), this.setActiveItem($adj), e && e.preventDefault()) : this.setCaret(this.caretPos + direction))
    },
    setCaret: function(i) {
        if (i = "single" === this.settings.mode ? this.items.length : Math.max(0, Math.min(this.items.length, i)), !this.isPending)
            for (var $child, $children = this.$control.children(":not(input)"), j = 0, n = $children.length; j < n; j++) $child = $($children[j]).detach(), j < i ? this.$control_input.before($child) : this.$control.append($child);
        this.caretPos = i
    },
    lock: function() {
        this.close(), this.isLocked = !0, this.refreshState()
    },
    unlock: function() {
        this.isLocked = !1, this.refreshState()
    },
    disable: function() {
        this.$input.prop("disabled", !0), this.$control_input.prop("disabled", !0).prop("tabindex", -1), this.isDisabled = !0, this.lock()
    },
    enable: function() {
        this.$input.prop("disabled", !1), this.$control_input.prop("disabled", !1).prop("tabindex", this.tabIndex), this.isDisabled = !1, this.unlock()
    },
    destroy: function() {
        var eventNS = this.eventNS,
            revertSettings = this.revertSettings;
        this.trigger("destroy"), this.off(), this.$wrapper.remove(), this.$dropdown.remove(), this.$input.html("").append(revertSettings.$children).removeAttr("tabindex").removeClass("selectized").attr({
            tabindex: revertSettings.tabindex
        }).show(), this.$control_input.removeData("grow"), this.$input.removeData("selectize"), 0 == --Selectize.count && Selectize.$testInput && (Selectize.$testInput.remove(), Selectize.$testInput = void 0), $(window).off(eventNS), $(document).off(eventNS), $(document.body).off(eventNS), delete this.$input[0].selectize
    },
    render: function(templateName, data) {
        var value, id, html = "",
            cache = !1;
        return (cache = "option" === templateName || "item" === templateName ? !!(value = hash_key(data[this.settings.valueField])) : cache) && (isset(this.renderCache[templateName]) || (this.renderCache[templateName] = {}), this.renderCache[templateName].hasOwnProperty(value)) ? this.renderCache[templateName][value] : (html = $(this.settings.render[templateName].apply(this, [data, escape_html])), "option" === templateName || "option_create" === templateName ? data[this.settings.disabledField] || html.attr("data-selectable", "") : "optgroup" === templateName && (id = data[this.settings.optgroupValueField] || "", html.attr("data-group", id), data[this.settings.disabledField] && html.attr("data-disabled", "")), "option" !== templateName && "item" !== templateName || html.attr("data-value", value || ""), cache && (this.renderCache[templateName][value] = html[0]), html[0])
    },
    clearCache: function(templateName) {
        void 0 === templateName ? this.renderCache = {} : delete this.renderCache[templateName]
    },
    canCreate: function(input) {
        if (!this.settings.create) return !1;
        var filter = this.settings.createFilter;
        return input.length && ("function" != typeof filter || filter.apply(this, [input])) && ("string" != typeof filter || new RegExp(filter).test(input)) && (!(filter instanceof RegExp) || filter.test(input))
    }
}), Selectize.count = 0, Selectize.defaults = {
    options: [],
    optgroups: [],
    plugins: [],
    delimiter: ",",
    splitOn: null,
    persist: !0,
    diacritics: !0,
    create: !1,
    createOnBlur: !1,
    createFilter: null,
    highlight: !0,
    openOnFocus: !0,
    maxOptions: 1e3,
    maxItems: null,
    hideSelected: null,
    addPrecedence: !1,
    selectOnTab: !0,
    preload: !1,
    allowEmptyOption: !1,
    closeAfterSelect: !1,
    scrollDuration: 60,
    loadThrottle: 300,
    loadingClass: "loading",
    dataAttr: "data-data",
    optgroupField: "optgroup",
    valueField: "value",
    labelField: "text",
    disabledField: "disabled",
    optgroupLabelField: "label",
    optgroupValueField: "value",
    lockOptgroupOrder: !1,
    sortField: "$order",
    searchField: ["text"],
    searchConjunction: "and",
    mode: null,
    wrapperClass: "selectize-control",
    inputClass: "selectize-input",
    dropdownClass: "selectize-dropdown",
    dropdownContentClass: "selectize-dropdown-content",
    dropdownParent: null,
    copyClassesToDropdown: !0,
    render: {}
}, $.fn.selectize = function(settings_user) {
    function init_select($input, settings_element) {
        function readData(data) {
            return "string" == typeof(data = attr_data && data.attr(attr_data)) && data.length ? JSON.parse(data) : null
        }

        function addOption($option, group) {
            $option = $($option);
            var option, value = hash_key($option.val());
            (value || settings.allowEmptyOption) && (optionsMap.hasOwnProperty(value) ? group && ((option = optionsMap[value][field_optgroup]) ? $.isArray(option) ? option.push(group) : optionsMap[value][field_optgroup] = [option, group] : optionsMap[value][field_optgroup] = group) : ((option = readData($option) || {})[field_label] = option[field_label] || $option.text(), option[field_value] = option[field_value] || value, option[field_disabled] = option[field_disabled] || $option.prop("disabled"), option[field_optgroup] = option[field_optgroup] || group, optionsMap[value] = option, options.push(option), $option.is(":selected") && settings_element.items.push(value)))
        }
        var i, n, tagName, $children, options = settings_element.options,
            optionsMap = {};
        for (settings_element.maxItems = $input.attr("multiple") ? null : 1, i = 0, n = ($children = $input.children()).length; i < n; i++) "optgroup" === (tagName = $children[i].tagName.toLowerCase()) ? function($optgroup) {
            var i, n, id, optgroup, $options;
            for ((id = ($optgroup = $($optgroup)).attr("label")) && ((optgroup = readData($optgroup) || {})[field_optgroup_label] = id, optgroup[field_optgroup_value] = id, optgroup[field_disabled] = $optgroup.prop("disabled"), settings_element.optgroups.push(optgroup)), i = 0, n = ($options = $("option", $optgroup)).length; i < n; i++) addOption($options[i], id)
        }($children[i]) : "option" === tagName && addOption($children[i])
    }
    var defaults = $.fn.selectize.defaults,
        settings = $.extend({}, defaults, settings_user),
        attr_data = settings.dataAttr,
        field_label = settings.labelField,
        field_value = settings.valueField,
        field_disabled = settings.disabledField,
        field_optgroup = settings.optgroupField,
        field_optgroup_label = settings.optgroupLabelField,
        field_optgroup_value = settings.optgroupValueField;
    return this.each(function() {
        var $input, tag_name, settings_element;
        this.selectize || ($input = $(this), tag_name = this.tagName.toLowerCase(), settings_element = {
            placeholder: settings_element = !(settings_element = $input.attr("placeholder") || $input.attr("data-placeholder")) && !settings.allowEmptyOption ? $input.children('option[value=""]').text() : settings_element,
            options: [],
            optgroups: [],
            items: []
        }, ("select" === tag_name ? init_select : function(value, settings_element) {
            var i, n, values, option, data_raw = value.attr(attr_data);
            if (data_raw)
                for (settings_element.options = JSON.parse(data_raw), i = 0, n = settings_element.options.length; i < n; i++) settings_element.items.push(settings_element.options[i][field_value]);
            else {
                value = $.trim(value.val() || "");
                if (settings.allowEmptyOption || value.length) {
                    for (i = 0, n = (values = value.split(settings.delimiter)).length; i < n; i++)(option = {})[field_label] = values[i], option[field_value] = values[i], settings_element.options.push(option);
                    settings_element.items = values
                }
            }
        })($input, settings_element), new Selectize($input, $.extend(!0, {}, defaults, settings_element, settings_user)))
    })
}, $.fn.selectize.defaults = Selectize.defaults, $.fn.selectize.support = {
    validity: SUPPORTS_VALIDITY_API
}, Selectize.define("autofill_disable", function(options) {
    var original, self = this;
    self.setup = (original = self.setup, function() {
        original.apply(self, arguments), self.$control_input.attr({
            autocomplete: "new-password",
            autofill: "no"
        })
    })
}), Selectize.define("drag_drop", function(options) {
    if (!$.fn.sortable) throw new Error('The "drag_drop" plugin requires jQuery UI "sortable".');
    var self, original;
    "multi" === this.settings.mode && ((self = this).lock = (original = self.lock, function() {
        var sortable = self.$control.data("sortable");
        return sortable && sortable.disable(), original.apply(self, arguments)
    }), self.unlock = function() {
        var original = self.unlock;
        return function() {
            var sortable = self.$control.data("sortable");
            return sortable && sortable.enable(), original.apply(self, arguments)
        }
    }(), self.setup = function() {
        var original = self.setup;
        return function() {
            original.apply(this, arguments);
            var $control = self.$control.sortable({
                items: "[data-value]",
                forcePlaceholderSize: !0,
                disabled: self.isLocked,
                start: function(e, ui) {
                    ui.placeholder.css("width", ui.helper.css("width")), $control.css({
                        overflow: "visible"
                    })
                },
                stop: function() {
                    $control.css({
                        overflow: "hidden"
                    });
                    var active = self.$activeItems ? self.$activeItems.slice() : null,
                        values = [];
                    $control.children("[data-value]").each(function() {
                        values.push($(this).attr("data-value"))
                    }), self.setValue(values), self.setActiveItem(active)
                }
            })
        }
    }())
}), Selectize.define("dropdown_header", function(options) {
    var original, self = this;
    options = $.extend({
        title: "Untitled",
        headerClass: "selectize-dropdown-header",
        titleRowClass: "selectize-dropdown-header-title",
        labelClass: "selectize-dropdown-header-label",
        closeClass: "selectize-dropdown-header-close",
        html: function(data) {
            return '<div class="' + data.headerClass + '"><div class="' + data.titleRowClass + '"><span class="' + data.labelClass + '">' + data.title + '</span><a href="javascript:void(0)" class="' + data.closeClass + '">&times;</a></div></div>'
        }
    }, options), self.setup = (original = self.setup, function() {
        original.apply(self, arguments), self.$dropdown_header = $(options.html(options)), self.$dropdown.prepend(self.$dropdown_header)
    })
}), Selectize.define("optgroup_columns", function(options) {
    var original, self = this;
    options = $.extend({
        equalizeWidth: !0,
        equalizeHeight: !0
    }, options), this.getAdjacentOption = function($option, index) {
        var $options = $option.closest("[data-group]").find("[data-selectable]"),
            index = $options.index($option) + index;
        return 0 <= index && index < $options.length ? $options.eq(index) : $()
    }, this.onKeyDown = (original = self.onKeyDown, function(e) {
        var $option, $options;
        return !this.isOpen || e.keyCode !== KEY_LEFT && e.keyCode !== KEY_RIGHT ? original.apply(this, arguments) : (self.ignoreHover = !0, $option = ($options = this.$activeOption.closest("[data-group]")).find("[data-selectable]").index(this.$activeOption), void(($option = ($options = ($options = e.keyCode === KEY_LEFT ? $options.prev("[data-group]") : $options.next("[data-group]")).find("[data-selectable]")).eq(Math.min($options.length - 1, $option))).length && this.setActiveOption($option)))
    });

    function equalizeSizes() {
        var i, height_max, width_last, width_parent, $optgroups = $("[data-group]", self.$dropdown_content),
            n = $optgroups.length;
        if (n && self.$dropdown_content.width()) {
            if (options.equalizeHeight) {
                for (i = height_max = 0; i < n; i++) height_max = Math.max(height_max, $optgroups.eq(i).height());
                $optgroups.css({
                    height: height_max
                })
            }
            options.equalizeWidth && (width_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth(), width_last = Math.round(width_parent / n), $optgroups.css({
                width: width_last
            }), 1 < n && (width_last = width_parent - width_last * (n - 1), $optgroups.eq(n - 1).css({
                width: width_last
            })))
        }
    }
    var getScrollbarWidth = function() {
        var div, width = getScrollbarWidth.width,
            doc = document;
        return void 0 === width && ((div = doc.createElement("div")).innerHTML = '<div style="width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;"><div style="width:1px;height:100px;"></div></div>', div = div.firstChild, doc.body.appendChild(div), width = getScrollbarWidth.width = div.offsetWidth - div.clientWidth, doc.body.removeChild(div)), width
    };
    (options.equalizeHeight || options.equalizeWidth) && (hook.after(this, "positionDropdown", equalizeSizes), hook.after(this, "refreshOptions", equalizeSizes))
}), Selectize.define("remove_button", function(options) {
    options = $.extend({
        label: "&times;",
        title: "Remove",
        className: "remove",
        append: !0
    }, options);
    ("single" === this.settings.mode ? function(thisRef, options) {
        options.className = "remove-single";
        var original, self = thisRef,
            html = '<a href="javascript:void(0)" class="' + options.className + '" tabindex="-1" title="' + escape_html(options.title) + '">' + options.label + "</a>";
        thisRef.setup = (original = self.setup, function() {
            var id, render_item;
            options.append && (id = $(self.$input.context).attr("id"), $("#" + id), render_item = self.settings.render.item, self.settings.render.item = function(data) {
                return html_container = render_item.apply(thisRef, arguments), html_element = html, $("<span>").append(html_container).append(html_element);
                var html_container, html_element
            }), original.apply(thisRef, arguments), thisRef.$control.on("click", "." + options.className, function(e) {
                e.preventDefault(), self.isLocked || self.clear()
            })
        })
    } : function(thisRef, options) {
        var original, self = thisRef,
            html = '<a href="javascript:void(0)" class="' + options.className + '" tabindex="-1" title="' + escape_html(options.title) + '">' + options.label + "</a>";
        thisRef.setup = (original = self.setup, function() {
            var render_item;
            options.append && (render_item = self.settings.render.item, self.settings.render.item = function(data) {
                return html_container = render_item.apply(thisRef, arguments), html_element = html, pos = html_container.search(/(<\/[^>]+>\s*)$/), html_container.substring(0, pos) + html_element + html_container.substring(pos);
                var html_container, html_element, pos
            }), original.apply(thisRef, arguments), thisRef.$control.on("click", "." + options.className, function($item) {
                if ($item.preventDefault(), !self.isLocked) {
                    $item = $($item.currentTarget).parent();
                    return self.setActiveItem($item), self.deleteSelection() && self.setCaret(self.items.length), !1
                }
            })
        })
    })(this, options)
}), Selectize.define("restore_on_backspace", function(options) {
    var original, self = this;
    options.text = options.text || function(option) {
        return option[this.settings.labelField]
    }, this.onKeyDown = (original = self.onKeyDown, function(e) {
        var option;
        return e.keyCode === KEY_BACKSPACE && "" === this.$control_input.val() && !this.$activeItems.length && 0 <= (option = this.caretPos - 1) && option < this.items.length ? (option = this.options[this.items[option]], this.deleteSelection(e) && (this.setTextboxValue(options.text.apply(this, [option])), this.refreshOptions(!0)), void e.preventDefault()) : original.apply(this, arguments)
    })
});
! function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t((e = "undefined" != typeof globalThis ? globalThis : e || self).VueInlineSvg = {})
}(this, function(e) {
    "use strict";
    var t = {};
    var n = {
        name: "InlineSvg",
        inheritAttrs: !1,
        render: function(e) {
            return this.svgElSource ? e("svg", {
                on: this.$listeners,
                attrs: Object.assign(this.getSvgAttrs(this.svgElSource), (t = this.$attrs, Object.keys(t).reduce(function(e, n) {
                    return !1 !== t[n] && null !== t[n] && void 0 !== t[n] && (e[n] = t[n]), e
                }, {}))),
                domProps: {
                    innerHTML: this.getSvgContent(this.svgElSource)
                }
            }) : null;
            var t
        },
        props: {
            src: {
                type: String,
                required: !0
            },
            title: {
                type: String
            },
            transformSource: {
                type: Function,
                default: function(e) {
                    return e
                }
            },
            keepDuringLoading: {
                type: Boolean,
                default: !0
            }
        },
        data: function() {
            return {
                svgElSource: null
            }
        },
        watch: {
            src: function(e) {
                this.getSource(e)
            }
        },
        mounted: function() {
            this.getSource(this.src)
        },
        methods: {
            getSvgAttrs: function(e) {
                var t = {},
                    n = e.attributes;
                if (!n) return t;
                for (var r = n.length - 1; r >= 0; r--) t[n[r].name] = n[r].value;
                return t
            },
            getSvgContent: function(e) {
                return e = e.cloneNode(!0), e = this.transformSource(e), this.title && function(e, t) {
                    var n = e.getElementsByTagName("title");
                    if (n.length) n[0].textContent = t;
                    else {
                        var r = document.createElementNS("http://www.w3.org/2000/svg", "title");
                        r.textContent = t, e.appendChild(r)
                    }
                }(e, this.title), e.innerHTML
            },
            getSource: function(e) {
                var n = this;
                t[e] || (t[e] = this.download(e)), this.svgElSource && t[e].isPending() && !this.keepDuringLoading && (this.svgElSource = null, this.$emit("unloaded")), t[e].then(function(e) {
                    n.svgElSource = e, n.$nextTick(function() {
                        n.$emit("loaded", n.$el)
                    })
                }).catch(function(r) {
                    n.svgElSource && (n.svgElSource = null, n.$emit("unloaded")), delete t[e], n.$emit("error", r)
                })
            },
            download: function(e) {
                return function(e) {
                    if (e.isPending) return e;
                    var t = !0,
                        n = e.then(function(e) {
                            return t = !1, e
                        }, function(e) {
                            throw t = !1, e
                        });
                    return n.isPending = function() {
                        return t
                    }, n
                }(new Promise(function(t, n) {
                    var r = new XMLHttpRequest;
                    r.open("GET", e, !0), r.onload = function() {
                        if (r.status >= 200 && r.status < 400) try {
                            var e = (new DOMParser).parseFromString(r.responseText, "text/xml").getElementsByTagName("svg")[0];
                            e ? t(e) : n(new Error('Loaded file is not valid SVG"'))
                        } catch (e) {
                            n(e)
                        } else n(new Error("Error loading SVG"))
                    }, r.onerror = n, r.send()
                }))
            }
        }
    };
    var r = {
        install: function(e) {
            e.component("inline-svg", n)
        }
    };
    e.InlineSvgComponent = n, e.InlineSvgPlugin = r, e.default = n, Object.defineProperty(e, "__esModule", {
        value: !0
    })
});
! function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = e || self).Vue = t()
}(this, function() {
    "use strict";
    var e = Object.freeze({});

    function t(e) {
        return null == e
    }

    function n(e) {
        return null != e
    }

    function r(e) {
        return !0 === e
    }

    function i(e) {
        return "string" == typeof e || "number" == typeof e || "symbol" == typeof e || "boolean" == typeof e
    }

    function o(e) {
        return null !== e && "object" == typeof e
    }
    var a = Object.prototype.toString;

    function s(e) {
        return "[object Object]" === a.call(e)
    }

    function c(e) {
        var t = parseFloat(String(e));
        return t >= 0 && Math.floor(t) === t && isFinite(e)
    }

    function u(e) {
        return n(e) && "function" == typeof e.then && "function" == typeof e.catch
    }

    function l(e) {
        return null == e ? "" : Array.isArray(e) || s(e) && e.toString === a ? JSON.stringify(e, null, 2) : String(e)
    }

    function f(e) {
        var t = parseFloat(e);
        return isNaN(t) ? e : t
    }

    function p(e, t) {
        for (var n = Object.create(null), r = e.split(","), i = 0; i < r.length; i++) n[r[i]] = !0;
        return t ? function(e) {
            return n[e.toLowerCase()]
        } : function(e) {
            return n[e]
        }
    }
    var d = p("slot,component", !0),
        v = p("key,ref,slot,slot-scope,is");

    function h(e, t) {
        if (e.length) {
            var n = e.indexOf(t);
            if (n > -1) return e.splice(n, 1)
        }
    }
    var m = Object.prototype.hasOwnProperty;

    function y(e, t) {
        return m.call(e, t)
    }

    function g(e) {
        var t = Object.create(null);
        return function(n) {
            return t[n] || (t[n] = e(n))
        }
    }
    var _ = /-(\w)/g,
        b = g(function(e) {
            return e.replace(_, function(e, t) {
                return t ? t.toUpperCase() : ""
            })
        }),
        $ = g(function(e) {
            return e.charAt(0).toUpperCase() + e.slice(1)
        }),
        w = /\B([A-Z])/g,
        C = g(function(e) {
            return e.replace(w, "-$1").toLowerCase()
        });
    var x = Function.prototype.bind ? function(e, t) {
        return e.bind(t)
    } : function(e, t) {
        function n(n) {
            var r = arguments.length;
            return r ? r > 1 ? e.apply(t, arguments) : e.call(t, n) : e.call(t)
        }
        return n._length = e.length, n
    };

    function k(e, t) {
        t = t || 0;
        for (var n = e.length - t, r = new Array(n); n--;) r[n] = e[n + t];
        return r
    }

    function A(e, t) {
        for (var n in t) e[n] = t[n];
        return e
    }

    function O(e) {
        for (var t = {}, n = 0; n < e.length; n++) e[n] && A(t, e[n]);
        return t
    }

    function S(e, t, n) {}
    var T = function(e, t, n) {
            return !1
        },
        E = function(e) {
            return e
        };

    function N(e, t) {
        if (e === t) return !0;
        var n = o(e),
            r = o(t);
        if (!n || !r) return !n && !r && String(e) === String(t);
        try {
            var i = Array.isArray(e),
                a = Array.isArray(t);
            if (i && a) return e.length === t.length && e.every(function(e, n) {
                return N(e, t[n])
            });
            if (e instanceof Date && t instanceof Date) return e.getTime() === t.getTime();
            if (i || a) return !1;
            var s = Object.keys(e),
                c = Object.keys(t);
            return s.length === c.length && s.every(function(n) {
                return N(e[n], t[n])
            })
        } catch (e) {
            return !1
        }
    }

    function j(e, t) {
        for (var n = 0; n < e.length; n++)
            if (N(e[n], t)) return n;
        return -1
    }

    function D(e) {
        var t = !1;
        return function() {
            t || (t = !0, e.apply(this, arguments))
        }
    }
    var L = "data-server-rendered",
        M = ["component", "directive", "filter"],
        I = ["beforeCreate", "created", "beforeMount", "mounted", "beforeUpdate", "updated", "beforeDestroy", "destroyed", "activated", "deactivated", "errorCaptured", "serverPrefetch"],
        F = {
            optionMergeStrategies: Object.create(null),
            silent: !1,
            productionTip: !1,
            devtools: !1,
            performance: !1,
            errorHandler: null,
            warnHandler: null,
            ignoredElements: [],
            keyCodes: Object.create(null),
            isReservedTag: T,
            isReservedAttr: T,
            isUnknownElement: T,
            getTagNamespace: S,
            parsePlatformTagName: E,
            mustUseProp: T,
            async: !0,
            _lifecycleHooks: I
        },
        P = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

    function R(e, t, n, r) {
        Object.defineProperty(e, t, {
            value: n,
            enumerable: !!r,
            writable: !0,
            configurable: !0
        })
    }
    var H = new RegExp("[^" + P.source + ".$_\\d]");
    var B, U = "__proto__" in {},
        z = "undefined" != typeof window,
        V = "undefined" != typeof WXEnvironment && !!WXEnvironment.platform,
        K = V && WXEnvironment.platform.toLowerCase(),
        J = z && window.navigator.userAgent.toLowerCase(),
        q = J && /msie|trident/.test(J),
        W = J && J.indexOf("msie 9.0") > 0,
        Z = J && J.indexOf("edge/") > 0,
        G = (J && J.indexOf("android"), J && /iphone|ipad|ipod|ios/.test(J) || "ios" === K),
        X = (J && /chrome\/\d+/.test(J), J && /phantomjs/.test(J), J && J.match(/firefox\/(\d+)/)),
        Y = {}.watch,
        Q = !1;
    if (z) try {
        var ee = {};
        Object.defineProperty(ee, "passive", {
            get: function() {
                Q = !0
            }
        }), window.addEventListener("test-passive", null, ee)
    } catch (e) {}
    var te = function() {
            return void 0 === B && (B = !z && !V && "undefined" != typeof global && (global.process && "server" === global.process.env.VUE_ENV)), B
        },
        ne = z && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

    function re(e) {
        return "function" == typeof e && /native code/.test(e.toString())
    }
    var ie, oe = "undefined" != typeof Symbol && re(Symbol) && "undefined" != typeof Reflect && re(Reflect.ownKeys);
    ie = "undefined" != typeof Set && re(Set) ? Set : function() {
        function e() {
            this.set = Object.create(null)
        }
        return e.prototype.has = function(e) {
            return !0 === this.set[e]
        }, e.prototype.add = function(e) {
            this.set[e] = !0
        }, e.prototype.clear = function() {
            this.set = Object.create(null)
        }, e
    }();
    var ae = S,
        se = 0,
        ce = function() {
            this.id = se++, this.subs = []
        };
    ce.prototype.addSub = function(e) {
        this.subs.push(e)
    }, ce.prototype.removeSub = function(e) {
        h(this.subs, e)
    }, ce.prototype.depend = function() {
        ce.target && ce.target.addDep(this)
    }, ce.prototype.notify = function() {
        for (var e = this.subs.slice(), t = 0, n = e.length; t < n; t++) e[t].update()
    }, ce.target = null;
    var ue = [];

    function le(e) {
        ue.push(e), ce.target = e
    }

    function fe() {
        ue.pop(), ce.target = ue[ue.length - 1]
    }
    var pe = function(e, t, n, r, i, o, a, s) {
            this.tag = e, this.data = t, this.children = n, this.text = r, this.elm = i, this.ns = void 0, this.context = o, this.fnContext = void 0, this.fnOptions = void 0, this.fnScopeId = void 0, this.key = t && t.key, this.componentOptions = a, this.componentInstance = void 0, this.parent = void 0, this.raw = !1, this.isStatic = !1, this.isRootInsert = !0, this.isComment = !1, this.isCloned = !1, this.isOnce = !1, this.asyncFactory = s, this.asyncMeta = void 0, this.isAsyncPlaceholder = !1
        },
        de = {
            child: {
                configurable: !0
            }
        };
    de.child.get = function() {
        return this.componentInstance
    }, Object.defineProperties(pe.prototype, de);
    var ve = function(e) {
        void 0 === e && (e = "");
        var t = new pe;
        return t.text = e, t.isComment = !0, t
    };

    function he(e) {
        return new pe(void 0, void 0, void 0, String(e))
    }

    function me(e) {
        var t = new pe(e.tag, e.data, e.children && e.children.slice(), e.text, e.elm, e.context, e.componentOptions, e.asyncFactory);
        return t.ns = e.ns, t.isStatic = e.isStatic, t.key = e.key, t.isComment = e.isComment, t.fnContext = e.fnContext, t.fnOptions = e.fnOptions, t.fnScopeId = e.fnScopeId, t.asyncMeta = e.asyncMeta, t.isCloned = !0, t
    }
    var ye = Array.prototype,
        ge = Object.create(ye);
    ["push", "pop", "shift", "unshift", "splice", "sort", "reverse"].forEach(function(e) {
        var t = ye[e];
        R(ge, e, function() {
            for (var n = [], r = arguments.length; r--;) n[r] = arguments[r];
            var i, o = t.apply(this, n),
                a = this.__ob__;
            switch (e) {
                case "push":
                case "unshift":
                    i = n;
                    break;
                case "splice":
                    i = n.slice(2)
            }
            return i && a.observeArray(i), a.dep.notify(), o
        })
    });
    var _e = Object.getOwnPropertyNames(ge),
        be = !0;

    function $e(e) {
        be = e
    }
    var we = function(e) {
        var t;
        this.value = e, this.dep = new ce, this.vmCount = 0, R(e, "__ob__", this), Array.isArray(e) ? (U ? (t = ge, e.__proto__ = t) : function(e, t, n) {
            for (var r = 0, i = n.length; r < i; r++) {
                var o = n[r];
                R(e, o, t[o])
            }
        }(e, ge, _e), this.observeArray(e)) : this.walk(e)
    };

    function Ce(e, t) {
        var n;
        if (o(e) && !(e instanceof pe)) return y(e, "__ob__") && e.__ob__ instanceof we ? n = e.__ob__ : be && !te() && (Array.isArray(e) || s(e)) && Object.isExtensible(e) && !e._isVue && (n = new we(e)), t && n && n.vmCount++, n
    }

    function xe(e, t, n, r, i) {
        var o = new ce,
            a = Object.getOwnPropertyDescriptor(e, t);
        if (!a || !1 !== a.configurable) {
            var s = a && a.get,
                c = a && a.set;
            s && !c || 2 !== arguments.length || (n = e[t]);
            var u = !i && Ce(n);
            Object.defineProperty(e, t, {
                enumerable: !0,
                configurable: !0,
                get: function() {
                    var t = s ? s.call(e) : n;
                    return ce.target && (o.depend(), u && (u.dep.depend(), Array.isArray(t) && function e(t) {
                        for (var n = void 0, r = 0, i = t.length; r < i; r++)(n = t[r]) && n.__ob__ && n.__ob__.dep.depend(), Array.isArray(n) && e(n)
                    }(t))), t
                },
                set: function(t) {
                    var r = s ? s.call(e) : n;
                    t === r || t != t && r != r || s && !c || (c ? c.call(e, t) : n = t, u = !i && Ce(t), o.notify())
                }
            })
        }
    }

    function ke(e, t, n) {
        if (Array.isArray(e) && c(t)) return e.length = Math.max(e.length, t), e.splice(t, 1, n), n;
        if (t in e && !(t in Object.prototype)) return e[t] = n, n;
        var r = e.__ob__;
        return e._isVue || r && r.vmCount ? n : r ? (xe(r.value, t, n), r.dep.notify(), n) : (e[t] = n, n)
    }

    function Ae(e, t) {
        if (Array.isArray(e) && c(t)) e.splice(t, 1);
        else {
            var n = e.__ob__;
            e._isVue || n && n.vmCount || y(e, t) && (delete e[t], n && n.dep.notify())
        }
    }
    we.prototype.walk = function(e) {
        for (var t = Object.keys(e), n = 0; n < t.length; n++) xe(e, t[n])
    }, we.prototype.observeArray = function(e) {
        for (var t = 0, n = e.length; t < n; t++) Ce(e[t])
    };
    var Oe = F.optionMergeStrategies;

    function Se(e, t) {
        if (!t) return e;
        for (var n, r, i, o = oe ? Reflect.ownKeys(t) : Object.keys(t), a = 0; a < o.length; a++) "__ob__" !== (n = o[a]) && (r = e[n], i = t[n], y(e, n) ? r !== i && s(r) && s(i) && Se(r, i) : ke(e, n, i));
        return e
    }

    function Te(e, t, n) {
        return n ? function() {
            var r = "function" == typeof t ? t.call(n, n) : t,
                i = "function" == typeof e ? e.call(n, n) : e;
            return r ? Se(r, i) : i
        } : t ? e ? function() {
            return Se("function" == typeof t ? t.call(this, this) : t, "function" == typeof e ? e.call(this, this) : e)
        } : t : e
    }

    function Ee(e, t) {
        var n = t ? e ? e.concat(t) : Array.isArray(t) ? t : [t] : e;
        return n ? function(e) {
            for (var t = [], n = 0; n < e.length; n++) - 1 === t.indexOf(e[n]) && t.push(e[n]);
            return t
        }(n) : n
    }

    function Ne(e, t, n, r) {
        var i = Object.create(e || null);
        return t ? A(i, t) : i
    }
    Oe.data = function(e, t, n) {
        return n ? Te(e, t, n) : t && "function" != typeof t ? e : Te(e, t)
    }, I.forEach(function(e) {
        Oe[e] = Ee
    }), M.forEach(function(e) {
        Oe[e + "s"] = Ne
    }), Oe.watch = function(e, t, n, r) {
        if (e === Y && (e = void 0), t === Y && (t = void 0), !t) return Object.create(e || null);
        if (!e) return t;
        var i = {};
        for (var o in A(i, e), t) {
            var a = i[o],
                s = t[o];
            a && !Array.isArray(a) && (a = [a]), i[o] = a ? a.concat(s) : Array.isArray(s) ? s : [s]
        }
        return i
    }, Oe.props = Oe.methods = Oe.inject = Oe.computed = function(e, t, n, r) {
        if (!e) return t;
        var i = Object.create(null);
        return A(i, e), t && A(i, t), i
    }, Oe.provide = Te;
    var je = function(e, t) {
        return void 0 === t ? e : t
    };

    function De(e, t, n) {
        if ("function" == typeof t && (t = t.options), function(e, t) {
                var n = e.props;
                if (n) {
                    var r, i, o = {};
                    if (Array.isArray(n))
                        for (r = n.length; r--;) "string" == typeof(i = n[r]) && (o[b(i)] = {
                            type: null
                        });
                    else if (s(n))
                        for (var a in n) i = n[a], o[b(a)] = s(i) ? i : {
                            type: i
                        };
                    e.props = o
                }
            }(t), function(e, t) {
                var n = e.inject;
                if (n) {
                    var r = e.inject = {};
                    if (Array.isArray(n))
                        for (var i = 0; i < n.length; i++) r[n[i]] = {
                            from: n[i]
                        };
                    else if (s(n))
                        for (var o in n) {
                            var a = n[o];
                            r[o] = s(a) ? A({
                                from: o
                            }, a) : {
                                from: a
                            }
                        }
                }
            }(t), function(e) {
                var t = e.directives;
                if (t)
                    for (var n in t) {
                        var r = t[n];
                        "function" == typeof r && (t[n] = {
                            bind: r,
                            update: r
                        })
                    }
            }(t), !t._base && (t.extends && (e = De(e, t.extends, n)), t.mixins))
            for (var r = 0, i = t.mixins.length; r < i; r++) e = De(e, t.mixins[r], n);
        var o, a = {};
        for (o in e) c(o);
        for (o in t) y(e, o) || c(o);

        function c(r) {
            var i = Oe[r] || je;
            a[r] = i(e[r], t[r], n, r)
        }
        return a
    }

    function Le(e, t, n, r) {
        if ("string" == typeof n) {
            var i = e[t];
            if (y(i, n)) return i[n];
            var o = b(n);
            if (y(i, o)) return i[o];
            var a = $(o);
            return y(i, a) ? i[a] : i[n] || i[o] || i[a]
        }
    }

    function Me(e, t, n, r) {
        var i = t[e],
            o = !y(n, e),
            a = n[e],
            s = Pe(Boolean, i.type);
        if (s > -1)
            if (o && !y(i, "default")) a = !1;
            else if ("" === a || a === C(e)) {
            var c = Pe(String, i.type);
            (c < 0 || s < c) && (a = !0)
        }
        if (void 0 === a) {
            a = function(e, t, n) {
                if (!y(t, "default")) return;
                var r = t.default;
                if (e && e.$options.propsData && void 0 === e.$options.propsData[n] && void 0 !== e._props[n]) return e._props[n];
                return "function" == typeof r && "Function" !== Ie(t.type) ? r.call(e) : r
            }(r, i, e);
            var u = be;
            $e(!0), Ce(a), $e(u)
        }
        return a
    }

    function Ie(e) {
        var t = e && e.toString().match(/^\s*function (\w+)/);
        return t ? t[1] : ""
    }

    function Fe(e, t) {
        return Ie(e) === Ie(t)
    }

    function Pe(e, t) {
        if (!Array.isArray(t)) return Fe(t, e) ? 0 : -1;
        for (var n = 0, r = t.length; n < r; n++)
            if (Fe(t[n], e)) return n;
        return -1
    }

    function Re(e, t, n) {
        le();
        try {
            if (t)
                for (var r = t; r = r.$parent;) {
                    var i = r.$options.errorCaptured;
                    if (i)
                        for (var o = 0; o < i.length; o++) try {
                            if (!1 === i[o].call(r, e, t, n)) return
                        } catch (e) {
                            Be(e, r, "errorCaptured hook")
                        }
                }
            Be(e, t, n)
        } finally {
            fe()
        }
    }

    function He(e, t, n, r, i) {
        var o;
        try {
            (o = n ? e.apply(t, n) : e.call(t)) && !o._isVue && u(o) && !o._handled && (o.catch(function(e) {
                return Re(e, r, i + " (Promise/async)")
            }), o._handled = !0)
        } catch (e) {
            Re(e, r, i)
        }
        return o
    }

    function Be(e, t, n) {
        if (F.errorHandler) try {
            return F.errorHandler.call(null, e, t, n)
        } catch (t) {
            t !== e && Ue(t, null, "config.errorHandler")
        }
        Ue(e, t, n)
    }

    function Ue(e, t, n) {
        if (!z && !V || "undefined" == typeof console) throw e;
        console.error(e)
    }
    var ze, Ve = !1,
        Ke = [],
        Je = !1;

    function qe() {
        Je = !1;
        var e = Ke.slice(0);
        Ke.length = 0;
        for (var t = 0; t < e.length; t++) e[t]()
    }
    if ("undefined" != typeof Promise && re(Promise)) {
        var We = Promise.resolve();
        ze = function() {
            We.then(qe), G && setTimeout(S)
        }, Ve = !0
    } else if (q || "undefined" == typeof MutationObserver || !re(MutationObserver) && "[object MutationObserverConstructor]" !== MutationObserver.toString()) ze = "undefined" != typeof setImmediate && re(setImmediate) ? function() {
        setImmediate(qe)
    } : function() {
        setTimeout(qe, 0)
    };
    else {
        var Ze = 1,
            Ge = new MutationObserver(qe),
            Xe = document.createTextNode(String(Ze));
        Ge.observe(Xe, {
            characterData: !0
        }), ze = function() {
            Ze = (Ze + 1) % 2, Xe.data = String(Ze)
        }, Ve = !0
    }

    function Ye(e, t) {
        var n;
        if (Ke.push(function() {
                if (e) try {
                    e.call(t)
                } catch (e) {
                    Re(e, t, "nextTick")
                } else n && n(t)
            }), Je || (Je = !0, ze()), !e && "undefined" != typeof Promise) return new Promise(function(e) {
            n = e
        })
    }
    var Qe = new ie;

    function et(e) {
        ! function e(t, n) {
            var r, i;
            var a = Array.isArray(t);
            if (!a && !o(t) || Object.isFrozen(t) || t instanceof pe) return;
            if (t.__ob__) {
                var s = t.__ob__.dep.id;
                if (n.has(s)) return;
                n.add(s)
            }
            if (a)
                for (r = t.length; r--;) e(t[r], n);
            else
                for (i = Object.keys(t), r = i.length; r--;) e(t[i[r]], n)
        }(e, Qe), Qe.clear()
    }
    var tt = g(function(e) {
        var t = "&" === e.charAt(0),
            n = "~" === (e = t ? e.slice(1) : e).charAt(0),
            r = "!" === (e = n ? e.slice(1) : e).charAt(0);
        return {
            name: e = r ? e.slice(1) : e,
            once: n,
            capture: r,
            passive: t
        }
    });

    function nt(e, t) {
        function n() {
            var e = arguments,
                r = n.fns;
            if (!Array.isArray(r)) return He(r, null, arguments, t, "v-on handler");
            for (var i = r.slice(), o = 0; o < i.length; o++) He(i[o], null, e, t, "v-on handler")
        }
        return n.fns = e, n
    }

    function rt(e, n, i, o, a, s) {
        var c, u, l, f;
        for (c in e) u = e[c], l = n[c], f = tt(c), t(u) || (t(l) ? (t(u.fns) && (u = e[c] = nt(u, s)), r(f.once) && (u = e[c] = a(f.name, u, f.capture)), i(f.name, u, f.capture, f.passive, f.params)) : u !== l && (l.fns = u, e[c] = l));
        for (c in n) t(e[c]) && o((f = tt(c)).name, n[c], f.capture)
    }

    function it(e, i, o) {
        var a;
        e instanceof pe && (e = e.data.hook || (e.data.hook = {}));
        var s = e[i];

        function c() {
            o.apply(this, arguments), h(a.fns, c)
        }
        t(s) ? a = nt([c]) : n(s.fns) && r(s.merged) ? (a = s).fns.push(c) : a = nt([s, c]), a.merged = !0, e[i] = a
    }

    function ot(e, t, r, i, o) {
        if (n(t)) {
            if (y(t, r)) return e[r] = t[r], o || delete t[r], !0;
            if (y(t, i)) return e[r] = t[i], o || delete t[i], !0
        }
        return !1
    }

    function at(e) {
        return i(e) ? [he(e)] : Array.isArray(e) ? function e(o, a) {
            var s = [];
            var c, u, l, f;
            for (c = 0; c < o.length; c++) t(u = o[c]) || "boolean" == typeof u || (l = s.length - 1, f = s[l], Array.isArray(u) ? u.length > 0 && (st((u = e(u, (a || "") + "_" + c))[0]) && st(f) && (s[l] = he(f.text + u[0].text), u.shift()), s.push.apply(s, u)) : i(u) ? st(f) ? s[l] = he(f.text + u) : "" !== u && s.push(he(u)) : st(u) && st(f) ? s[l] = he(f.text + u.text) : (r(o._isVList) && n(u.tag) && t(u.key) && n(a) && (u.key = "__vlist" + a + "_" + c + "__"), s.push(u)));
            return s
        }(e) : void 0
    }

    function st(e) {
        return n(e) && n(e.text) && !1 === e.isComment
    }

    function ct(e, t) {
        if (e) {
            for (var n = Object.create(null), r = oe ? Reflect.ownKeys(e) : Object.keys(e), i = 0; i < r.length; i++) {
                var o = r[i];
                if ("__ob__" !== o) {
                    for (var a = e[o].from, s = t; s;) {
                        if (s._provided && y(s._provided, a)) {
                            n[o] = s._provided[a];
                            break
                        }
                        s = s.$parent
                    }
                    if (!s && "default" in e[o]) {
                        var c = e[o].default;
                        n[o] = "function" == typeof c ? c.call(t) : c
                    }
                }
            }
            return n
        }
    }

    function ut(e, t) {
        if (!e || !e.length) return {};
        for (var n = {}, r = 0, i = e.length; r < i; r++) {
            var o = e[r],
                a = o.data;
            if (a && a.attrs && a.attrs.slot && delete a.attrs.slot, o.context !== t && o.fnContext !== t || !a || null == a.slot)(n.default || (n.default = [])).push(o);
            else {
                var s = a.slot,
                    c = n[s] || (n[s] = []);
                "template" === o.tag ? c.push.apply(c, o.children || []) : c.push(o)
            }
        }
        for (var u in n) n[u].every(lt) && delete n[u];
        return n
    }

    function lt(e) {
        return e.isComment && !e.asyncFactory || " " === e.text
    }

    function ft(t, n, r) {
        var i, o = Object.keys(n).length > 0,
            a = t ? !!t.$stable : !o,
            s = t && t.$key;
        if (t) {
            if (t._normalized) return t._normalized;
            if (a && r && r !== e && s === r.$key && !o && !r.$hasNormal) return r;
            for (var c in i = {}, t) t[c] && "$" !== c[0] && (i[c] = pt(n, c, t[c]))
        } else i = {};
        for (var u in n) u in i || (i[u] = dt(n, u));
        return t && Object.isExtensible(t) && (t._normalized = i), R(i, "$stable", a), R(i, "$key", s), R(i, "$hasNormal", o), i
    }

    function pt(e, t, n) {
        var r = function() {
            var e = arguments.length ? n.apply(null, arguments) : n({});
            return (e = e && "object" == typeof e && !Array.isArray(e) ? [e] : at(e)) && (0 === e.length || 1 === e.length && e[0].isComment) ? void 0 : e
        };
        return n.proxy && Object.defineProperty(e, t, {
            get: r,
            enumerable: !0,
            configurable: !0
        }), r
    }

    function dt(e, t) {
        return function() {
            return e[t]
        }
    }

    function vt(e, t) {
        var r, i, a, s, c;
        if (Array.isArray(e) || "string" == typeof e)
            for (r = new Array(e.length), i = 0, a = e.length; i < a; i++) r[i] = t(e[i], i);
        else if ("number" == typeof e)
            for (r = new Array(e), i = 0; i < e; i++) r[i] = t(i + 1, i);
        else if (o(e))
            if (oe && e[Symbol.iterator]) {
                r = [];
                for (var u = e[Symbol.iterator](), l = u.next(); !l.done;) r.push(t(l.value, r.length)), l = u.next()
            } else
                for (s = Object.keys(e), r = new Array(s.length), i = 0, a = s.length; i < a; i++) c = s[i], r[i] = t(e[c], c, i);
        return n(r) || (r = []), r._isVList = !0, r
    }

    function ht(e, t, n, r) {
        var i, o = this.$scopedSlots[e];
        o ? (n = n || {}, r && (n = A(A({}, r), n)), i = o(n) || t) : i = this.$slots[e] || t;
        var a = n && n.slot;
        return a ? this.$createElement("template", {
            slot: a
        }, i) : i
    }

    function mt(e) {
        return Le(this.$options, "filters", e) || E
    }

    function yt(e, t) {
        return Array.isArray(e) ? -1 === e.indexOf(t) : e !== t
    }

    function gt(e, t, n, r, i) {
        var o = F.keyCodes[t] || n;
        return i && r && !F.keyCodes[t] ? yt(i, r) : o ? yt(o, e) : r ? C(r) !== t : void 0
    }

    function _t(e, t, n, r, i) {
        if (n)
            if (o(n)) {
                var a;
                Array.isArray(n) && (n = O(n));
                var s = function(o) {
                    if ("class" === o || "style" === o || v(o)) a = e;
                    else {
                        var s = e.attrs && e.attrs.type;
                        a = r || F.mustUseProp(t, s, o) ? e.domProps || (e.domProps = {}) : e.attrs || (e.attrs = {})
                    }
                    var c = b(o),
                        u = C(o);
                    c in a || u in a || (a[o] = n[o], i && ((e.on || (e.on = {}))["update:" + o] = function(e) {
                        n[o] = e
                    }))
                };
                for (var c in n) s(c)
            } else;
        return e
    }

    function bt(e, t) {
        var n = this._staticTrees || (this._staticTrees = []),
            r = n[e];
        return r && !t ? r : (wt(r = n[e] = this.$options.staticRenderFns[e].call(this._renderProxy, null, this), "__static__" + e, !1), r)
    }

    function $t(e, t, n) {
        return wt(e, "__once__" + t + (n ? "_" + n : ""), !0), e
    }

    function wt(e, t, n) {
        if (Array.isArray(e))
            for (var r = 0; r < e.length; r++) e[r] && "string" != typeof e[r] && Ct(e[r], t + "_" + r, n);
        else Ct(e, t, n)
    }

    function Ct(e, t, n) {
        e.isStatic = !0, e.key = t, e.isOnce = n
    }

    function xt(e, t) {
        if (t)
            if (s(t)) {
                var n = e.on = e.on ? A({}, e.on) : {};
                for (var r in t) {
                    var i = n[r],
                        o = t[r];
                    n[r] = i ? [].concat(i, o) : o
                }
            } else;
        return e
    }

    function kt(e, t, n, r) {
        t = t || {
            $stable: !n
        };
        for (var i = 0; i < e.length; i++) {
            var o = e[i];
            Array.isArray(o) ? kt(o, t, n) : o && (o.proxy && (o.fn.proxy = !0), t[o.key] = o.fn)
        }
        return r && (t.$key = r), t
    }

    function At(e, t) {
        for (var n = 0; n < t.length; n += 2) {
            var r = t[n];
            "string" == typeof r && r && (e[t[n]] = t[n + 1])
        }
        return e
    }

    function Ot(e, t) {
        return "string" == typeof e ? t + e : e
    }

    function St(e) {
        e._o = $t, e._n = f, e._s = l, e._l = vt, e._t = ht, e._q = N, e._i = j, e._m = bt, e._f = mt, e._k = gt, e._b = _t, e._v = he, e._e = ve, e._u = kt, e._g = xt, e._d = At, e._p = Ot
    }

    function Tt(t, n, i, o, a) {
        var s, c = this,
            u = a.options;
        y(o, "_uid") ? (s = Object.create(o))._original = o : (s = o, o = o._original);
        var l = r(u._compiled),
            f = !l;
        this.data = t, this.props = n, this.children = i, this.parent = o, this.listeners = t.on || e, this.injections = ct(u.inject, o), this.slots = function() {
            return c.$slots || ft(t.scopedSlots, c.$slots = ut(i, o)), c.$slots
        }, Object.defineProperty(this, "scopedSlots", {
            enumerable: !0,
            get: function() {
                return ft(t.scopedSlots, this.slots())
            }
        }), l && (this.$options = u, this.$slots = this.slots(), this.$scopedSlots = ft(t.scopedSlots, this.$slots)), u._scopeId ? this._c = function(e, t, n, r) {
            var i = Pt(s, e, t, n, r, f);
            return i && !Array.isArray(i) && (i.fnScopeId = u._scopeId, i.fnContext = o), i
        } : this._c = function(e, t, n, r) {
            return Pt(s, e, t, n, r, f)
        }
    }

    function Et(e, t, n, r, i) {
        var o = me(e);
        return o.fnContext = n, o.fnOptions = r, t.slot && ((o.data || (o.data = {})).slot = t.slot), o
    }

    function Nt(e, t) {
        for (var n in t) e[b(n)] = t[n]
    }
    St(Tt.prototype);
    var jt = {
            init: function(e, t) {
                if (e.componentInstance && !e.componentInstance._isDestroyed && e.data.keepAlive) {
                    var r = e;
                    jt.prepatch(r, r)
                } else {
                    (e.componentInstance = function(e, t) {
                        var r = {
                                _isComponent: !0,
                                _parentVnode: e,
                                parent: t
                            },
                            i = e.data.inlineTemplate;
                        n(i) && (r.render = i.render, r.staticRenderFns = i.staticRenderFns);
                        return new e.componentOptions.Ctor(r)
                    }(e, Wt)).$mount(t ? e.elm : void 0, t)
                }
            },
            prepatch: function(t, n) {
                var r = n.componentOptions;
                ! function(t, n, r, i, o) {
                    var a = i.data.scopedSlots,
                        s = t.$scopedSlots,
                        c = !!(a && !a.$stable || s !== e && !s.$stable || a && t.$scopedSlots.$key !== a.$key),
                        u = !!(o || t.$options._renderChildren || c);
                    t.$options._parentVnode = i, t.$vnode = i, t._vnode && (t._vnode.parent = i);
                    if (t.$options._renderChildren = o, t.$attrs = i.data.attrs || e, t.$listeners = r || e, n && t.$options.props) {
                        $e(!1);
                        for (var l = t._props, f = t.$options._propKeys || [], p = 0; p < f.length; p++) {
                            var d = f[p],
                                v = t.$options.props;
                            l[d] = Me(d, v, n, t)
                        }
                        $e(!0), t.$options.propsData = n
                    }
                    r = r || e;
                    var h = t.$options._parentListeners;
                    t.$options._parentListeners = r, qt(t, r, h), u && (t.$slots = ut(o, i.context), t.$forceUpdate())
                }(n.componentInstance = t.componentInstance, r.propsData, r.listeners, n, r.children)
            },
            insert: function(e) {
                var t, n = e.context,
                    r = e.componentInstance;
                r._isMounted || (r._isMounted = !0, Yt(r, "mounted")), e.data.keepAlive && (n._isMounted ? ((t = r)._inactive = !1, en.push(t)) : Xt(r, !0))
            },
            destroy: function(e) {
                var t = e.componentInstance;
                t._isDestroyed || (e.data.keepAlive ? function e(t, n) {
                    if (n && (t._directInactive = !0, Gt(t))) return;
                    if (!t._inactive) {
                        t._inactive = !0;
                        for (var r = 0; r < t.$children.length; r++) e(t.$children[r]);
                        Yt(t, "deactivated")
                    }
                }(t, !0) : t.$destroy())
            }
        },
        Dt = Object.keys(jt);

    function Lt(i, a, s, c, l) {
        if (!t(i)) {
            var f = s.$options._base;
            if (o(i) && (i = f.extend(i)), "function" == typeof i) {
                var p;
                if (t(i.cid) && void 0 === (i = function(e, i) {
                        if (r(e.error) && n(e.errorComp)) return e.errorComp;
                        if (n(e.resolved)) return e.resolved;
                        var a = Ht;
                        a && n(e.owners) && -1 === e.owners.indexOf(a) && e.owners.push(a);
                        if (r(e.loading) && n(e.loadingComp)) return e.loadingComp;
                        if (a && !n(e.owners)) {
                            var s = e.owners = [a],
                                c = !0,
                                l = null,
                                f = null;
                            a.$on("hook:destroyed", function() {
                                return h(s, a)
                            });
                            var p = function(e) {
                                    for (var t = 0, n = s.length; t < n; t++) s[t].$forceUpdate();
                                    e && (s.length = 0, null !== l && (clearTimeout(l), l = null), null !== f && (clearTimeout(f), f = null))
                                },
                                d = D(function(t) {
                                    e.resolved = Bt(t, i), c ? s.length = 0 : p(!0)
                                }),
                                v = D(function(t) {
                                    n(e.errorComp) && (e.error = !0, p(!0))
                                }),
                                m = e(d, v);
                            return o(m) && (u(m) ? t(e.resolved) && m.then(d, v) : u(m.component) && (m.component.then(d, v), n(m.error) && (e.errorComp = Bt(m.error, i)), n(m.loading) && (e.loadingComp = Bt(m.loading, i), 0 === m.delay ? e.loading = !0 : l = setTimeout(function() {
                                l = null, t(e.resolved) && t(e.error) && (e.loading = !0, p(!1))
                            }, m.delay || 200)), n(m.timeout) && (f = setTimeout(function() {
                                f = null, t(e.resolved) && v(null)
                            }, m.timeout)))), c = !1, e.loading ? e.loadingComp : e.resolved
                        }
                    }(p = i, f))) return function(e, t, n, r, i) {
                    var o = ve();
                    return o.asyncFactory = e, o.asyncMeta = {
                        data: t,
                        context: n,
                        children: r,
                        tag: i
                    }, o
                }(p, a, s, c, l);
                a = a || {}, $n(i), n(a.model) && function(e, t) {
                    var r = e.model && e.model.prop || "value",
                        i = e.model && e.model.event || "input";
                    (t.attrs || (t.attrs = {}))[r] = t.model.value;
                    var o = t.on || (t.on = {}),
                        a = o[i],
                        s = t.model.callback;
                    n(a) ? (Array.isArray(a) ? -1 === a.indexOf(s) : a !== s) && (o[i] = [s].concat(a)) : o[i] = s
                }(i.options, a);
                var d = function(e, r, i) {
                    var o = r.options.props;
                    if (!t(o)) {
                        var a = {},
                            s = e.attrs,
                            c = e.props;
                        if (n(s) || n(c))
                            for (var u in o) {
                                var l = C(u);
                                ot(a, c, u, l, !0) || ot(a, s, u, l, !1)
                            }
                        return a
                    }
                }(a, i);
                if (r(i.options.functional)) return function(t, r, i, o, a) {
                    var s = t.options,
                        c = {},
                        u = s.props;
                    if (n(u))
                        for (var l in u) c[l] = Me(l, u, r || e);
                    else n(i.attrs) && Nt(c, i.attrs), n(i.props) && Nt(c, i.props);
                    var f = new Tt(i, c, a, o, t),
                        p = s.render.call(null, f._c, f);
                    if (p instanceof pe) return Et(p, i, f.parent, s);
                    if (Array.isArray(p)) {
                        for (var d = at(p) || [], v = new Array(d.length), h = 0; h < d.length; h++) v[h] = Et(d[h], i, f.parent, s);
                        return v
                    }
                }(i, d, a, s, c);
                var v = a.on;
                if (a.on = a.nativeOn, r(i.options.abstract)) {
                    var m = a.slot;
                    a = {}, m && (a.slot = m)
                }! function(e) {
                    for (var t = e.hook || (e.hook = {}), n = 0; n < Dt.length; n++) {
                        var r = Dt[n],
                            i = t[r],
                            o = jt[r];
                        i === o || i && i._merged || (t[r] = i ? Mt(o, i) : o)
                    }
                }(a);
                var y = i.options.name || l;
                return new pe("vue-component-" + i.cid + (y ? "-" + y : ""), a, void 0, void 0, void 0, s, {
                    Ctor: i,
                    propsData: d,
                    listeners: v,
                    tag: l,
                    children: c
                }, p)
            }
        }
    }

    function Mt(e, t) {
        var n = function(n, r) {
            e(n, r), t(n, r)
        };
        return n._merged = !0, n
    }
    var It = 1,
        Ft = 2;

    function Pt(e, a, s, c, u, l) {
        return (Array.isArray(s) || i(s)) && (u = c, c = s, s = void 0), r(l) && (u = Ft),
            function(e, i, a, s, c) {
                if (n(a) && n(a.__ob__)) return ve();
                n(a) && n(a.is) && (i = a.is);
                if (!i) return ve();
                Array.isArray(s) && "function" == typeof s[0] && ((a = a || {}).scopedSlots = {
                    default: s[0]
                }, s.length = 0);
                c === Ft ? s = at(s) : c === It && (s = function(e) {
                    for (var t = 0; t < e.length; t++)
                        if (Array.isArray(e[t])) return Array.prototype.concat.apply([], e);
                    return e
                }(s));
                var u, l;
                if ("string" == typeof i) {
                    var f;
                    l = e.$vnode && e.$vnode.ns || F.getTagNamespace(i), u = F.isReservedTag(i) ? new pe(F.parsePlatformTagName(i), a, s, void 0, void 0, e) : a && a.pre || !n(f = Le(e.$options, "components", i)) ? new pe(i, a, s, void 0, void 0, e) : Lt(f, a, e, s, i)
                } else u = Lt(i, a, e, s);
                return Array.isArray(u) ? u : n(u) ? (n(l) && function e(i, o, a) {
                    i.ns = o;
                    "foreignObject" === i.tag && (o = void 0, a = !0);
                    if (n(i.children))
                        for (var s = 0, c = i.children.length; s < c; s++) {
                            var u = i.children[s];
                            n(u.tag) && (t(u.ns) || r(a) && "svg" !== u.tag) && e(u, o, a)
                        }
                }(u, l), n(a) && function(e) {
                    o(e.style) && et(e.style);
                    o(e.class) && et(e.class)
                }(a), u) : ve()
            }(e, a, s, c, u)
    }
    var Rt, Ht = null;

    function Bt(e, t) {
        return (e.__esModule || oe && "Module" === e[Symbol.toStringTag]) && (e = e.default), o(e) ? t.extend(e) : e
    }

    function Ut(e) {
        return e.isComment && e.asyncFactory
    }

    function zt(e) {
        if (Array.isArray(e))
            for (var t = 0; t < e.length; t++) {
                var r = e[t];
                if (n(r) && (n(r.componentOptions) || Ut(r))) return r
            }
    }

    function Vt(e, t) {
        Rt.$on(e, t)
    }

    function Kt(e, t) {
        Rt.$off(e, t)
    }

    function Jt(e, t) {
        var n = Rt;
        return function r() {
            null !== t.apply(null, arguments) && n.$off(e, r)
        }
    }

    function qt(e, t, n) {
        Rt = e, rt(t, n || {}, Vt, Kt, Jt, e), Rt = void 0
    }
    var Wt = null;

    function Zt(e) {
        var t = Wt;
        return Wt = e,
            function() {
                Wt = t
            }
    }

    function Gt(e) {
        for (; e && (e = e.$parent);)
            if (e._inactive) return !0;
        return !1
    }

    function Xt(e, t) {
        if (t) {
            if (e._directInactive = !1, Gt(e)) return
        } else if (e._directInactive) return;
        if (e._inactive || null === e._inactive) {
            e._inactive = !1;
            for (var n = 0; n < e.$children.length; n++) Xt(e.$children[n]);
            Yt(e, "activated")
        }
    }

    function Yt(e, t) {
        le();
        var n = e.$options[t],
            r = t + " hook";
        if (n)
            for (var i = 0, o = n.length; i < o; i++) He(n[i], e, null, e, r);
        e._hasHookEvent && e.$emit("hook:" + t), fe()
    }
    var Qt = [],
        en = [],
        tn = {},
        nn = !1,
        rn = !1,
        on = 0;
    var an = 0,
        sn = Date.now;
    if (z && !q) {
        var cn = window.performance;
        cn && "function" == typeof cn.now && sn() > document.createEvent("Event").timeStamp && (sn = function() {
            return cn.now()
        })
    }

    function un() {
        var e, t;
        for (an = sn(), rn = !0, Qt.sort(function(e, t) {
                return e.id - t.id
            }), on = 0; on < Qt.length; on++)(e = Qt[on]).before && e.before(), t = e.id, tn[t] = null, e.run();
        var n = en.slice(),
            r = Qt.slice();
        on = Qt.length = en.length = 0, tn = {}, nn = rn = !1,
            function(e) {
                for (var t = 0; t < e.length; t++) e[t]._inactive = !0, Xt(e[t], !0)
            }(n),
            function(e) {
                var t = e.length;
                for (; t--;) {
                    var n = e[t],
                        r = n.vm;
                    r._watcher === n && r._isMounted && !r._isDestroyed && Yt(r, "updated")
                }
            }(r), ne && F.devtools && ne.emit("flush")
    }
    var ln = 0,
        fn = function(e, t, n, r, i) {
            this.vm = e, i && (e._watcher = this), e._watchers.push(this), r ? (this.deep = !!r.deep, this.user = !!r.user, this.lazy = !!r.lazy, this.sync = !!r.sync, this.before = r.before) : this.deep = this.user = this.lazy = this.sync = !1, this.cb = n, this.id = ++ln, this.active = !0, this.dirty = this.lazy, this.deps = [], this.newDeps = [], this.depIds = new ie, this.newDepIds = new ie, this.expression = "", "function" == typeof t ? this.getter = t : (this.getter = function(e) {
                if (!H.test(e)) {
                    var t = e.split(".");
                    return function(e) {
                        for (var n = 0; n < t.length; n++) {
                            if (!e) return;
                            e = e[t[n]]
                        }
                        return e
                    }
                }
            }(t), this.getter || (this.getter = S)), this.value = this.lazy ? void 0 : this.get()
        };
    fn.prototype.get = function() {
        var e;
        le(this);
        var t = this.vm;
        try {
            e = this.getter.call(t, t)
        } catch (e) {
            if (!this.user) throw e;
            Re(e, t, 'getter for watcher "' + this.expression + '"')
        } finally {
            this.deep && et(e), fe(), this.cleanupDeps()
        }
        return e
    }, fn.prototype.addDep = function(e) {
        var t = e.id;
        this.newDepIds.has(t) || (this.newDepIds.add(t), this.newDeps.push(e), this.depIds.has(t) || e.addSub(this))
    }, fn.prototype.cleanupDeps = function() {
        for (var e = this.deps.length; e--;) {
            var t = this.deps[e];
            this.newDepIds.has(t.id) || t.removeSub(this)
        }
        var n = this.depIds;
        this.depIds = this.newDepIds, this.newDepIds = n, this.newDepIds.clear(), n = this.deps, this.deps = this.newDeps, this.newDeps = n, this.newDeps.length = 0
    }, fn.prototype.update = function() {
        this.lazy ? this.dirty = !0 : this.sync ? this.run() : function(e) {
            var t = e.id;
            if (null == tn[t]) {
                if (tn[t] = !0, rn) {
                    for (var n = Qt.length - 1; n > on && Qt[n].id > e.id;) n--;
                    Qt.splice(n + 1, 0, e)
                } else Qt.push(e);
                nn || (nn = !0, Ye(un))
            }
        }(this)
    }, fn.prototype.run = function() {
        if (this.active) {
            var e = this.get();
            if (e !== this.value || o(e) || this.deep) {
                var t = this.value;
                if (this.value = e, this.user) try {
                    this.cb.call(this.vm, e, t)
                } catch (e) {
                    Re(e, this.vm, 'callback for watcher "' + this.expression + '"')
                } else this.cb.call(this.vm, e, t)
            }
        }
    }, fn.prototype.evaluate = function() {
        this.value = this.get(), this.dirty = !1
    }, fn.prototype.depend = function() {
        for (var e = this.deps.length; e--;) this.deps[e].depend()
    }, fn.prototype.teardown = function() {
        if (this.active) {
            this.vm._isBeingDestroyed || h(this.vm._watchers, this);
            for (var e = this.deps.length; e--;) this.deps[e].removeSub(this);
            this.active = !1
        }
    };
    var pn = {
        enumerable: !0,
        configurable: !0,
        get: S,
        set: S
    };

    function dn(e, t, n) {
        pn.get = function() {
            return this[t][n]
        }, pn.set = function(e) {
            this[t][n] = e
        }, Object.defineProperty(e, n, pn)
    }

    function vn(e) {
        e._watchers = [];
        var t = e.$options;
        t.props && function(e, t) {
            var n = e.$options.propsData || {},
                r = e._props = {},
                i = e.$options._propKeys = [];
            e.$parent && $e(!1);
            var o = function(o) {
                i.push(o);
                var a = Me(o, t, n, e);
                xe(r, o, a), o in e || dn(e, "_props", o)
            };
            for (var a in t) o(a);
            $e(!0)
        }(e, t.props), t.methods && function(e, t) {
            e.$options.props;
            for (var n in t) e[n] = "function" != typeof t[n] ? S : x(t[n], e)
        }(e, t.methods), t.data ? function(e) {
            var t = e.$options.data;
            s(t = e._data = "function" == typeof t ? function(e, t) {
                le();
                try {
                    return e.call(t, t)
                } catch (e) {
                    return Re(e, t, "data()"), {}
                } finally {
                    fe()
                }
            }(t, e) : t || {}) || (t = {});
            var n = Object.keys(t),
                r = e.$options.props,
                i = (e.$options.methods, n.length);
            for (; i--;) {
                var o = n[i];
                r && y(r, o) || (a = void 0, 36 !== (a = (o + "").charCodeAt(0)) && 95 !== a && dn(e, "_data", o))
            }
            var a;
            Ce(t, !0)
        }(e) : Ce(e._data = {}, !0), t.computed && function(e, t) {
            var n = e._computedWatchers = Object.create(null),
                r = te();
            for (var i in t) {
                var o = t[i],
                    a = "function" == typeof o ? o : o.get;
                r || (n[i] = new fn(e, a || S, S, hn)), i in e || mn(e, i, o)
            }
        }(e, t.computed), t.watch && t.watch !== Y && function(e, t) {
            for (var n in t) {
                var r = t[n];
                if (Array.isArray(r))
                    for (var i = 0; i < r.length; i++) _n(e, n, r[i]);
                else _n(e, n, r)
            }
        }(e, t.watch)
    }
    var hn = {
        lazy: !0
    };

    function mn(e, t, n) {
        var r = !te();
        "function" == typeof n ? (pn.get = r ? yn(t) : gn(n), pn.set = S) : (pn.get = n.get ? r && !1 !== n.cache ? yn(t) : gn(n.get) : S, pn.set = n.set || S), Object.defineProperty(e, t, pn)
    }

    function yn(e) {
        return function() {
            var t = this._computedWatchers && this._computedWatchers[e];
            if (t) return t.dirty && t.evaluate(), ce.target && t.depend(), t.value
        }
    }

    function gn(e) {
        return function() {
            return e.call(this, this)
        }
    }

    function _n(e, t, n, r) {
        return s(n) && (r = n, n = n.handler), "string" == typeof n && (n = e[n]), e.$watch(t, n, r)
    }
    var bn = 0;

    function $n(e) {
        var t = e.options;
        if (e.super) {
            var n = $n(e.super);
            if (n !== e.superOptions) {
                e.superOptions = n;
                var r = function(e) {
                    var t, n = e.options,
                        r = e.sealedOptions;
                    for (var i in n) n[i] !== r[i] && (t || (t = {}), t[i] = n[i]);
                    return t
                }(e);
                r && A(e.extendOptions, r), (t = e.options = De(n, e.extendOptions)).name && (t.components[t.name] = e)
            }
        }
        return t
    }

    function wn(e) {
        this._init(e)
    }

    function Cn(e) {
        e.cid = 0;
        var t = 1;
        e.extend = function(e) {
            e = e || {};
            var n = this,
                r = n.cid,
                i = e._Ctor || (e._Ctor = {});
            if (i[r]) return i[r];
            var o = e.name || n.options.name,
                a = function(e) {
                    this._init(e)
                };
            return (a.prototype = Object.create(n.prototype)).constructor = a, a.cid = t++, a.options = De(n.options, e), a.super = n, a.options.props && function(e) {
                var t = e.options.props;
                for (var n in t) dn(e.prototype, "_props", n)
            }(a), a.options.computed && function(e) {
                var t = e.options.computed;
                for (var n in t) mn(e.prototype, n, t[n])
            }(a), a.extend = n.extend, a.mixin = n.mixin, a.use = n.use, M.forEach(function(e) {
                a[e] = n[e]
            }), o && (a.options.components[o] = a), a.superOptions = n.options, a.extendOptions = e, a.sealedOptions = A({}, a.options), i[r] = a, a
        }
    }

    function xn(e) {
        return e && (e.Ctor.options.name || e.tag)
    }

    function kn(e, t) {
        return Array.isArray(e) ? e.indexOf(t) > -1 : "string" == typeof e ? e.split(",").indexOf(t) > -1 : (n = e, "[object RegExp]" === a.call(n) && e.test(t));
        var n
    }

    function An(e, t) {
        var n = e.cache,
            r = e.keys,
            i = e._vnode;
        for (var o in n) {
            var a = n[o];
            if (a) {
                var s = xn(a.componentOptions);
                s && !t(s) && On(n, o, r, i)
            }
        }
    }

    function On(e, t, n, r) {
        var i = e[t];
        !i || r && i.tag === r.tag || i.componentInstance.$destroy(), e[t] = null, h(n, t)
    }! function(t) {
        t.prototype._init = function(t) {
            var n = this;
            n._uid = bn++, n._isVue = !0, t && t._isComponent ? function(e, t) {
                    var n = e.$options = Object.create(e.constructor.options),
                        r = t._parentVnode;
                    n.parent = t.parent, n._parentVnode = r;
                    var i = r.componentOptions;
                    n.propsData = i.propsData, n._parentListeners = i.listeners, n._renderChildren = i.children, n._componentTag = i.tag, t.render && (n.render = t.render, n.staticRenderFns = t.staticRenderFns)
                }(n, t) : n.$options = De($n(n.constructor), t || {}, n), n._renderProxy = n, n._self = n,
                function(e) {
                    var t = e.$options,
                        n = t.parent;
                    if (n && !t.abstract) {
                        for (; n.$options.abstract && n.$parent;) n = n.$parent;
                        n.$children.push(e)
                    }
                    e.$parent = n, e.$root = n ? n.$root : e, e.$children = [], e.$refs = {}, e._watcher = null, e._inactive = null, e._directInactive = !1, e._isMounted = !1, e._isDestroyed = !1, e._isBeingDestroyed = !1
                }(n),
                function(e) {
                    e._events = Object.create(null), e._hasHookEvent = !1;
                    var t = e.$options._parentListeners;
                    t && qt(e, t)
                }(n),
                function(t) {
                    t._vnode = null, t._staticTrees = null;
                    var n = t.$options,
                        r = t.$vnode = n._parentVnode,
                        i = r && r.context;
                    t.$slots = ut(n._renderChildren, i), t.$scopedSlots = e, t._c = function(e, n, r, i) {
                        return Pt(t, e, n, r, i, !1)
                    }, t.$createElement = function(e, n, r, i) {
                        return Pt(t, e, n, r, i, !0)
                    };
                    var o = r && r.data;
                    xe(t, "$attrs", o && o.attrs || e, null, !0), xe(t, "$listeners", n._parentListeners || e, null, !0)
                }(n), Yt(n, "beforeCreate"),
                function(e) {
                    var t = ct(e.$options.inject, e);
                    t && ($e(!1), Object.keys(t).forEach(function(n) {
                        xe(e, n, t[n])
                    }), $e(!0))
                }(n), vn(n),
                function(e) {
                    var t = e.$options.provide;
                    t && (e._provided = "function" == typeof t ? t.call(e) : t)
                }(n), Yt(n, "created"), n.$options.el && n.$mount(n.$options.el)
        }
    }(wn),
    function(e) {
        var t = {
                get: function() {
                    return this._data
                }
            },
            n = {
                get: function() {
                    return this._props
                }
            };
        Object.defineProperty(e.prototype, "$data", t), Object.defineProperty(e.prototype, "$props", n), e.prototype.$set = ke, e.prototype.$delete = Ae, e.prototype.$watch = function(e, t, n) {
            if (s(t)) return _n(this, e, t, n);
            (n = n || {}).user = !0;
            var r = new fn(this, e, t, n);
            if (n.immediate) try {
                t.call(this, r.value)
            } catch (e) {
                Re(e, this, 'callback for immediate watcher "' + r.expression + '"')
            }
            return function() {
                r.teardown()
            }
        }
    }(wn),
    function(e) {
        var t = /^hook:/;
        e.prototype.$on = function(e, n) {
            var r = this;
            if (Array.isArray(e))
                for (var i = 0, o = e.length; i < o; i++) r.$on(e[i], n);
            else(r._events[e] || (r._events[e] = [])).push(n), t.test(e) && (r._hasHookEvent = !0);
            return r
        }, e.prototype.$once = function(e, t) {
            var n = this;

            function r() {
                n.$off(e, r), t.apply(n, arguments)
            }
            return r.fn = t, n.$on(e, r), n
        }, e.prototype.$off = function(e, t) {
            var n = this;
            if (!arguments.length) return n._events = Object.create(null), n;
            if (Array.isArray(e)) {
                for (var r = 0, i = e.length; r < i; r++) n.$off(e[r], t);
                return n
            }
            var o, a = n._events[e];
            if (!a) return n;
            if (!t) return n._events[e] = null, n;
            for (var s = a.length; s--;)
                if ((o = a[s]) === t || o.fn === t) {
                    a.splice(s, 1);
                    break
                }
            return n
        }, e.prototype.$emit = function(e) {
            var t = this._events[e];
            if (t) {
                t = t.length > 1 ? k(t) : t;
                for (var n = k(arguments, 1), r = 'event handler for "' + e + '"', i = 0, o = t.length; i < o; i++) He(t[i], this, n, this, r)
            }
            return this
        }
    }(wn),
    function(e) {
        e.prototype._update = function(e, t) {
            var n = this,
                r = n.$el,
                i = n._vnode,
                o = Zt(n);
            n._vnode = e, n.$el = i ? n.__patch__(i, e) : n.__patch__(n.$el, e, t, !1), o(), r && (r.__vue__ = null), n.$el && (n.$el.__vue__ = n), n.$vnode && n.$parent && n.$vnode === n.$parent._vnode && (n.$parent.$el = n.$el)
        }, e.prototype.$forceUpdate = function() {
            this._watcher && this._watcher.update()
        }, e.prototype.$destroy = function() {
            var e = this;
            if (!e._isBeingDestroyed) {
                Yt(e, "beforeDestroy"), e._isBeingDestroyed = !0;
                var t = e.$parent;
                !t || t._isBeingDestroyed || e.$options.abstract || h(t.$children, e), e._watcher && e._watcher.teardown();
                for (var n = e._watchers.length; n--;) e._watchers[n].teardown();
                e._data.__ob__ && e._data.__ob__.vmCount--, e._isDestroyed = !0, e.__patch__(e._vnode, null), Yt(e, "destroyed"), e.$off(), e.$el && (e.$el.__vue__ = null), e.$vnode && (e.$vnode.parent = null)
            }
        }
    }(wn),
    function(e) {
        St(e.prototype), e.prototype.$nextTick = function(e) {
            return Ye(e, this)
        }, e.prototype._render = function() {
            var e, t = this,
                n = t.$options,
                r = n.render,
                i = n._parentVnode;
            i && (t.$scopedSlots = ft(i.data.scopedSlots, t.$slots, t.$scopedSlots)), t.$vnode = i;
            try {
                Ht = t, e = r.call(t._renderProxy, t.$createElement)
            } catch (n) {
                Re(n, t, "render"), e = t._vnode
            } finally {
                Ht = null
            }
            return Array.isArray(e) && 1 === e.length && (e = e[0]), e instanceof pe || (e = ve()), e.parent = i, e
        }
    }(wn);
    var Sn = [String, RegExp, Array],
        Tn = {
            KeepAlive: {
                name: "keep-alive",
                abstract: !0,
                props: {
                    include: Sn,
                    exclude: Sn,
                    max: [String, Number]
                },
                created: function() {
                    this.cache = Object.create(null), this.keys = []
                },
                destroyed: function() {
                    for (var e in this.cache) On(this.cache, e, this.keys)
                },
                mounted: function() {
                    var e = this;
                    this.$watch("include", function(t) {
                        An(e, function(e) {
                            return kn(t, e)
                        })
                    }), this.$watch("exclude", function(t) {
                        An(e, function(e) {
                            return !kn(t, e)
                        })
                    })
                },
                render: function() {
                    var e = this.$slots.default,
                        t = zt(e),
                        n = t && t.componentOptions;
                    if (n) {
                        var r = xn(n),
                            i = this.include,
                            o = this.exclude;
                        if (i && (!r || !kn(i, r)) || o && r && kn(o, r)) return t;
                        var a = this.cache,
                            s = this.keys,
                            c = null == t.key ? n.Ctor.cid + (n.tag ? "::" + n.tag : "") : t.key;
                        a[c] ? (t.componentInstance = a[c].componentInstance, h(s, c), s.push(c)) : (a[c] = t, s.push(c), this.max && s.length > parseInt(this.max) && On(a, s[0], s, this._vnode)), t.data.keepAlive = !0
                    }
                    return t || e && e[0]
                }
            }
        };
    ! function(e) {
        var t = {
            get: function() {
                return F
            }
        };
        Object.defineProperty(e, "config", t), e.util = {
                warn: ae,
                extend: A,
                mergeOptions: De,
                defineReactive: xe
            }, e.set = ke, e.delete = Ae, e.nextTick = Ye, e.observable = function(e) {
                return Ce(e), e
            }, e.options = Object.create(null), M.forEach(function(t) {
                e.options[t + "s"] = Object.create(null)
            }), e.options._base = e, A(e.options.components, Tn),
            function(e) {
                e.use = function(e) {
                    var t = this._installedPlugins || (this._installedPlugins = []);
                    if (t.indexOf(e) > -1) return this;
                    var n = k(arguments, 1);
                    return n.unshift(this), "function" == typeof e.install ? e.install.apply(e, n) : "function" == typeof e && e.apply(null, n), t.push(e), this
                }
            }(e),
            function(e) {
                e.mixin = function(e) {
                    return this.options = De(this.options, e), this
                }
            }(e), Cn(e),
            function(e) {
                M.forEach(function(t) {
                    e[t] = function(e, n) {
                        return n ? ("component" === t && s(n) && (n.name = n.name || e, n = this.options._base.extend(n)), "directive" === t && "function" == typeof n && (n = {
                            bind: n,
                            update: n
                        }), this.options[t + "s"][e] = n, n) : this.options[t + "s"][e]
                    }
                })
            }(e)
    }(wn), Object.defineProperty(wn.prototype, "$isServer", {
        get: te
    }), Object.defineProperty(wn.prototype, "$ssrContext", {
        get: function() {
            return this.$vnode && this.$vnode.ssrContext
        }
    }), Object.defineProperty(wn, "FunctionalRenderContext", {
        value: Tt
    }), wn.version = "2.6.10";
    var En = p("style,class"),
        Nn = p("input,textarea,option,select,progress"),
        jn = function(e, t, n) {
            return "value" === n && Nn(e) && "button" !== t || "selected" === n && "option" === e || "checked" === n && "input" === e || "muted" === n && "video" === e
        },
        Dn = p("contenteditable,draggable,spellcheck"),
        Ln = p("events,caret,typing,plaintext-only"),
        Mn = function(e, t) {
            return Hn(t) || "false" === t ? "false" : "contenteditable" === e && Ln(t) ? t : "true"
        },
        In = p("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),
        Fn = "http://www.w3.org/1999/xlink",
        Pn = function(e) {
            return ":" === e.charAt(5) && "xlink" === e.slice(0, 5)
        },
        Rn = function(e) {
            return Pn(e) ? e.slice(6, e.length) : ""
        },
        Hn = function(e) {
            return null == e || !1 === e
        };

    function Bn(e) {
        for (var t = e.data, r = e, i = e; n(i.componentInstance);)(i = i.componentInstance._vnode) && i.data && (t = Un(i.data, t));
        for (; n(r = r.parent);) r && r.data && (t = Un(t, r.data));
        return function(e, t) {
            if (n(e) || n(t)) return zn(e, Vn(t));
            return ""
        }(t.staticClass, t.class)
    }

    function Un(e, t) {
        return {
            staticClass: zn(e.staticClass, t.staticClass),
            class: n(e.class) ? [e.class, t.class] : t.class
        }
    }

    function zn(e, t) {
        return e ? t ? e + " " + t : e : t || ""
    }

    function Vn(e) {
        return Array.isArray(e) ? function(e) {
            for (var t, r = "", i = 0, o = e.length; i < o; i++) n(t = Vn(e[i])) && "" !== t && (r && (r += " "), r += t);
            return r
        }(e) : o(e) ? function(e) {
            var t = "";
            for (var n in e) e[n] && (t && (t += " "), t += n);
            return t
        }(e) : "string" == typeof e ? e : ""
    }
    var Kn = {
            svg: "http://www.w3.org/2000/svg",
            math: "http://www.w3.org/1998/Math/MathML"
        },
        Jn = p("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),
        qn = p("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view", !0),
        Wn = function(e) {
            return Jn(e) || qn(e)
        };

    function Zn(e) {
        return qn(e) ? "svg" : "math" === e ? "math" : void 0
    }
    var Gn = Object.create(null);
    var Xn = p("text,number,password,search,email,tel,url");

    function Yn(e) {
        if ("string" == typeof e) {
            var t = document.querySelector(e);
            return t || document.createElement("div")
        }
        return e
    }
    var Qn = Object.freeze({
            createElement: function(e, t) {
                var n = document.createElement(e);
                return "select" !== e ? n : (t.data && t.data.attrs && void 0 !== t.data.attrs.multiple && n.setAttribute("multiple", "multiple"), n)
            },
            createElementNS: function(e, t) {
                return document.createElementNS(Kn[e], t)
            },
            createTextNode: function(e) {
                return document.createTextNode(e)
            },
            createComment: function(e) {
                return document.createComment(e)
            },
            insertBefore: function(e, t, n) {
                e.insertBefore(t, n)
            },
            removeChild: function(e, t) {
                e.removeChild(t)
            },
            appendChild: function(e, t) {
                e.appendChild(t)
            },
            parentNode: function(e) {
                return e.parentNode
            },
            nextSibling: function(e) {
                return e.nextSibling
            },
            tagName: function(e) {
                return e.tagName
            },
            setTextContent: function(e, t) {
                e.textContent = t
            },
            setStyleScope: function(e, t) {
                e.setAttribute(t, "")
            }
        }),
        er = {
            create: function(e, t) {
                tr(t)
            },
            update: function(e, t) {
                e.data.ref !== t.data.ref && (tr(e, !0), tr(t))
            },
            destroy: function(e) {
                tr(e, !0)
            }
        };

    function tr(e, t) {
        var r = e.data.ref;
        if (n(r)) {
            var i = e.context,
                o = e.componentInstance || e.elm,
                a = i.$refs;
            t ? Array.isArray(a[r]) ? h(a[r], o) : a[r] === o && (a[r] = void 0) : e.data.refInFor ? Array.isArray(a[r]) ? a[r].indexOf(o) < 0 && a[r].push(o) : a[r] = [o] : a[r] = o
        }
    }
    var nr = new pe("", {}, []),
        rr = ["create", "activate", "update", "remove", "destroy"];

    function ir(e, i) {
        return e.key === i.key && (e.tag === i.tag && e.isComment === i.isComment && n(e.data) === n(i.data) && function(e, t) {
            if ("input" !== e.tag) return !0;
            var r, i = n(r = e.data) && n(r = r.attrs) && r.type,
                o = n(r = t.data) && n(r = r.attrs) && r.type;
            return i === o || Xn(i) && Xn(o)
        }(e, i) || r(e.isAsyncPlaceholder) && e.asyncFactory === i.asyncFactory && t(i.asyncFactory.error))
    }

    function or(e, t, r) {
        var i, o, a = {};
        for (i = t; i <= r; ++i) n(o = e[i].key) && (a[o] = i);
        return a
    }
    var ar = {
        create: sr,
        update: sr,
        destroy: function(e) {
            sr(e, nr)
        }
    };

    function sr(e, t) {
        (e.data.directives || t.data.directives) && function(e, t) {
            var n, r, i, o = e === nr,
                a = t === nr,
                s = ur(e.data.directives, e.context),
                c = ur(t.data.directives, t.context),
                u = [],
                l = [];
            for (n in c) r = s[n], i = c[n], r ? (i.oldValue = r.value, i.oldArg = r.arg, fr(i, "update", t, e), i.def && i.def.componentUpdated && l.push(i)) : (fr(i, "bind", t, e), i.def && i.def.inserted && u.push(i));
            if (u.length) {
                var f = function() {
                    for (var n = 0; n < u.length; n++) fr(u[n], "inserted", t, e)
                };
                o ? it(t, "insert", f) : f()
            }
            l.length && it(t, "postpatch", function() {
                for (var n = 0; n < l.length; n++) fr(l[n], "componentUpdated", t, e)
            });
            if (!o)
                for (n in s) c[n] || fr(s[n], "unbind", e, e, a)
        }(e, t)
    }
    var cr = Object.create(null);

    function ur(e, t) {
        var n, r, i = Object.create(null);
        if (!e) return i;
        for (n = 0; n < e.length; n++)(r = e[n]).modifiers || (r.modifiers = cr), i[lr(r)] = r, r.def = Le(t.$options, "directives", r.name);
        return i
    }

    function lr(e) {
        return e.rawName || e.name + "." + Object.keys(e.modifiers || {}).join(".")
    }

    function fr(e, t, n, r, i) {
        var o = e.def && e.def[t];
        if (o) try {
            o(n.elm, e, n, r, i)
        } catch (r) {
            Re(r, n.context, "directive " + e.name + " " + t + " hook")
        }
    }
    var pr = [er, ar];

    function dr(e, r) {
        var i = r.componentOptions;
        if (!(n(i) && !1 === i.Ctor.options.inheritAttrs || t(e.data.attrs) && t(r.data.attrs))) {
            var o, a, s = r.elm,
                c = e.data.attrs || {},
                u = r.data.attrs || {};
            for (o in n(u.__ob__) && (u = r.data.attrs = A({}, u)), u) a = u[o], c[o] !== a && vr(s, o, a);
            for (o in (q || Z) && u.value !== c.value && vr(s, "value", u.value), c) t(u[o]) && (Pn(o) ? s.removeAttributeNS(Fn, Rn(o)) : Dn(o) || s.removeAttribute(o))
        }
    }

    function vr(e, t, n) {
        e.tagName.indexOf("-") > -1 ? hr(e, t, n) : In(t) ? Hn(n) ? e.removeAttribute(t) : (n = "allowfullscreen" === t && "EMBED" === e.tagName ? "true" : t, e.setAttribute(t, n)) : Dn(t) ? e.setAttribute(t, Mn(t, n)) : Pn(t) ? Hn(n) ? e.removeAttributeNS(Fn, Rn(t)) : e.setAttributeNS(Fn, t, n) : hr(e, t, n)
    }

    function hr(e, t, n) {
        if (Hn(n)) e.removeAttribute(t);
        else {
            if (q && !W && "TEXTAREA" === e.tagName && "placeholder" === t && "" !== n && !e.__ieph) {
                var r = function(t) {
                    t.stopImmediatePropagation(), e.removeEventListener("input", r)
                };
                e.addEventListener("input", r), e.__ieph = !0
            }
            e.setAttribute(t, n)
        }
    }
    var mr = {
        create: dr,
        update: dr
    };

    function yr(e, r) {
        var i = r.elm,
            o = r.data,
            a = e.data;
        if (!(t(o.staticClass) && t(o.class) && (t(a) || t(a.staticClass) && t(a.class)))) {
            var s = Bn(r),
                c = i._transitionClasses;
            n(c) && (s = zn(s, Vn(c))), s !== i._prevClass && (i.setAttribute("class", s), i._prevClass = s)
        }
    }
    var gr, _r, br, $r, wr, Cr, xr = {
            create: yr,
            update: yr
        },
        kr = /[\w).+\-_$\]]/;

    function Ar(e) {
        var t, n, r, i, o, a = !1,
            s = !1,
            c = !1,
            u = !1,
            l = 0,
            f = 0,
            p = 0,
            d = 0;
        for (r = 0; r < e.length; r++)
            if (n = t, t = e.charCodeAt(r), a) 39 === t && 92 !== n && (a = !1);
            else if (s) 34 === t && 92 !== n && (s = !1);
        else if (c) 96 === t && 92 !== n && (c = !1);
        else if (u) 47 === t && 92 !== n && (u = !1);
        else if (124 !== t || 124 === e.charCodeAt(r + 1) || 124 === e.charCodeAt(r - 1) || l || f || p) {
            switch (t) {
                case 34:
                    s = !0;
                    break;
                case 39:
                    a = !0;
                    break;
                case 96:
                    c = !0;
                    break;
                case 40:
                    p++;
                    break;
                case 41:
                    p--;
                    break;
                case 91:
                    f++;
                    break;
                case 93:
                    f--;
                    break;
                case 123:
                    l++;
                    break;
                case 125:
                    l--
            }
            if (47 === t) {
                for (var v = r - 1, h = void 0; v >= 0 && " " === (h = e.charAt(v)); v--);
                h && kr.test(h) || (u = !0)
            }
        } else void 0 === i ? (d = r + 1, i = e.slice(0, r).trim()) : m();

        function m() {
            (o || (o = [])).push(e.slice(d, r).trim()), d = r + 1
        }
        if (void 0 === i ? i = e.slice(0, r).trim() : 0 !== d && m(), o)
            for (r = 0; r < o.length; r++) i = Or(i, o[r]);
        return i
    }

    function Or(e, t) {
        var n = t.indexOf("(");
        if (n < 0) return '_f("' + t + '")(' + e + ")";
        var r = t.slice(0, n),
            i = t.slice(n + 1);
        return '_f("' + r + '")(' + e + (")" !== i ? "," + i : i)
    }

    function Sr(e, t) {
        console.error("[Vue compiler]: " + e)
    }

    function Tr(e, t) {
        return e ? e.map(function(e) {
            return e[t]
        }).filter(function(e) {
            return e
        }) : []
    }

    function Er(e, t, n, r, i) {
        (e.props || (e.props = [])).push(Rr({
            name: t,
            value: n,
            dynamic: i
        }, r)), e.plain = !1
    }

    function Nr(e, t, n, r, i) {
        (i ? e.dynamicAttrs || (e.dynamicAttrs = []) : e.attrs || (e.attrs = [])).push(Rr({
            name: t,
            value: n,
            dynamic: i
        }, r)), e.plain = !1
    }

    function jr(e, t, n, r) {
        e.attrsMap[t] = n, e.attrsList.push(Rr({
            name: t,
            value: n
        }, r))
    }

    function Dr(e, t, n, r, i, o, a, s) {
        (e.directives || (e.directives = [])).push(Rr({
            name: t,
            rawName: n,
            value: r,
            arg: i,
            isDynamicArg: o,
            modifiers: a
        }, s)), e.plain = !1
    }

    function Lr(e, t, n) {
        return n ? "_p(" + t + ',"' + e + '")' : e + t
    }

    function Mr(t, n, r, i, o, a, s, c) {
        var u;
        (i = i || e).right ? c ? n = "(" + n + ")==='click'?'contextmenu':(" + n + ")" : "click" === n && (n = "contextmenu", delete i.right) : i.middle && (c ? n = "(" + n + ")==='click'?'mouseup':(" + n + ")" : "click" === n && (n = "mouseup")), i.capture && (delete i.capture, n = Lr("!", n, c)), i.once && (delete i.once, n = Lr("~", n, c)), i.passive && (delete i.passive, n = Lr("&", n, c)), i.native ? (delete i.native, u = t.nativeEvents || (t.nativeEvents = {})) : u = t.events || (t.events = {});
        var l = Rr({
            value: r.trim(),
            dynamic: c
        }, s);
        i !== e && (l.modifiers = i);
        var f = u[n];
        Array.isArray(f) ? o ? f.unshift(l) : f.push(l) : u[n] = f ? o ? [l, f] : [f, l] : l, t.plain = !1
    }

    function Ir(e, t, n) {
        var r = Fr(e, ":" + t) || Fr(e, "v-bind:" + t);
        if (null != r) return Ar(r);
        if (!1 !== n) {
            var i = Fr(e, t);
            if (null != i) return JSON.stringify(i)
        }
    }

    function Fr(e, t, n) {
        var r;
        if (null != (r = e.attrsMap[t]))
            for (var i = e.attrsList, o = 0, a = i.length; o < a; o++)
                if (i[o].name === t) {
                    i.splice(o, 1);
                    break
                }
        return n && delete e.attrsMap[t], r
    }

    function Pr(e, t) {
        for (var n = e.attrsList, r = 0, i = n.length; r < i; r++) {
            var o = n[r];
            if (t.test(o.name)) return n.splice(r, 1), o
        }
    }

    function Rr(e, t) {
        return t && (null != t.start && (e.start = t.start), null != t.end && (e.end = t.end)), e
    }

    function Hr(e, t, n) {
        var r = n || {},
            i = r.number,
            o = "$$v";
        r.trim && (o = "(typeof $$v === 'string'? $$v.trim(): $$v)"), i && (o = "_n(" + o + ")");
        var a = Br(t, o);
        e.model = {
            value: "(" + t + ")",
            expression: JSON.stringify(t),
            callback: "function ($$v) {" + a + "}"
        }
    }

    function Br(e, t) {
        var n = function(e) {
            if (e = e.trim(), gr = e.length, e.indexOf("[") < 0 || e.lastIndexOf("]") < gr - 1) return ($r = e.lastIndexOf(".")) > -1 ? {
                exp: e.slice(0, $r),
                key: '"' + e.slice($r + 1) + '"'
            } : {
                exp: e,
                key: null
            };
            _r = e, $r = wr = Cr = 0;
            for (; !zr();) Vr(br = Ur()) ? Jr(br) : 91 === br && Kr(br);
            return {
                exp: e.slice(0, wr),
                key: e.slice(wr + 1, Cr)
            }
        }(e);
        return null === n.key ? e + "=" + t : "$set(" + n.exp + ", " + n.key + ", " + t + ")"
    }

    function Ur() {
        return _r.charCodeAt(++$r)
    }

    function zr() {
        return $r >= gr
    }

    function Vr(e) {
        return 34 === e || 39 === e
    }

    function Kr(e) {
        var t = 1;
        for (wr = $r; !zr();)
            if (Vr(e = Ur())) Jr(e);
            else if (91 === e && t++, 93 === e && t--, 0 === t) {
            Cr = $r;
            break
        }
    }

    function Jr(e) {
        for (var t = e; !zr() && (e = Ur()) !== t;);
    }
    var qr, Wr = "__r",
        Zr = "__c";

    function Gr(e, t, n) {
        var r = qr;
        return function i() {
            null !== t.apply(null, arguments) && Qr(e, i, n, r)
        }
    }
    var Xr = Ve && !(X && Number(X[1]) <= 53);

    function Yr(e, t, n, r) {
        if (Xr) {
            var i = an,
                o = t;
            t = o._wrapper = function(e) {
                if (e.target === e.currentTarget || e.timeStamp >= i || e.timeStamp <= 0 || e.target.ownerDocument !== document) return o.apply(this, arguments)
            }
        }
        qr.addEventListener(e, t, Q ? {
            capture: n,
            passive: r
        } : n)
    }

    function Qr(e, t, n, r) {
        (r || qr).removeEventListener(e, t._wrapper || t, n)
    }

    function ei(e, r) {
        if (!t(e.data.on) || !t(r.data.on)) {
            var i = r.data.on || {},
                o = e.data.on || {};
            qr = r.elm,
                function(e) {
                    if (n(e[Wr])) {
                        var t = q ? "change" : "input";
                        e[t] = [].concat(e[Wr], e[t] || []), delete e[Wr]
                    }
                    n(e[Zr]) && (e.change = [].concat(e[Zr], e.change || []), delete e[Zr])
                }(i), rt(i, o, Yr, Qr, Gr, r.context), qr = void 0
        }
    }
    var ti, ni = {
        create: ei,
        update: ei
    };

    function ri(e, r) {
        if (!t(e.data.domProps) || !t(r.data.domProps)) {
            var i, o, a = r.elm,
                s = e.data.domProps || {},
                c = r.data.domProps || {};
            for (i in n(c.__ob__) && (c = r.data.domProps = A({}, c)), s) i in c || (a[i] = "");
            for (i in c) {
                if (o = c[i], "textContent" === i || "innerHTML" === i) {
                    if (r.children && (r.children.length = 0), o === s[i]) continue;
                    1 === a.childNodes.length && a.removeChild(a.childNodes[0])
                }
                if ("value" === i && "PROGRESS" !== a.tagName) {
                    a._value = o;
                    var u = t(o) ? "" : String(o);
                    ii(a, u) && (a.value = u)
                } else if ("innerHTML" === i && qn(a.tagName) && t(a.innerHTML)) {
                    (ti = ti || document.createElement("div")).innerHTML = "<svg>" + o + "</svg>";
                    for (var l = ti.firstChild; a.firstChild;) a.removeChild(a.firstChild);
                    for (; l.firstChild;) a.appendChild(l.firstChild)
                } else if (o !== s[i]) try {
                    a[i] = o
                } catch (e) {}
            }
        }
    }

    function ii(e, t) {
        return !e.composing && ("OPTION" === e.tagName || function(e, t) {
            var n = !0;
            try {
                n = document.activeElement !== e
            } catch (e) {}
            return n && e.value !== t
        }(e, t) || function(e, t) {
            var r = e.value,
                i = e._vModifiers;
            if (n(i)) {
                if (i.number) return f(r) !== f(t);
                if (i.trim) return r.trim() !== t.trim()
            }
            return r !== t
        }(e, t))
    }
    var oi = {
            create: ri,
            update: ri
        },
        ai = g(function(e) {
            var t = {},
                n = /:(.+)/;
            return e.split(/;(?![^(]*\))/g).forEach(function(e) {
                if (e) {
                    var r = e.split(n);
                    r.length > 1 && (t[r[0].trim()] = r[1].trim())
                }
            }), t
        });

    function si(e) {
        var t = ci(e.style);
        return e.staticStyle ? A(e.staticStyle, t) : t
    }

    function ci(e) {
        return Array.isArray(e) ? O(e) : "string" == typeof e ? ai(e) : e
    }
    var ui, li = /^--/,
        fi = /\s*!important$/,
        pi = function(e, t, n) {
            if (li.test(t)) e.style.setProperty(t, n);
            else if (fi.test(n)) e.style.setProperty(C(t), n.replace(fi, ""), "important");
            else {
                var r = vi(t);
                if (Array.isArray(n))
                    for (var i = 0, o = n.length; i < o; i++) e.style[r] = n[i];
                else e.style[r] = n
            }
        },
        di = ["Webkit", "Moz", "ms"],
        vi = g(function(e) {
            if (ui = ui || document.createElement("div").style, "filter" !== (e = b(e)) && e in ui) return e;
            for (var t = e.charAt(0).toUpperCase() + e.slice(1), n = 0; n < di.length; n++) {
                var r = di[n] + t;
                if (r in ui) return r
            }
        });

    function hi(e, r) {
        var i = r.data,
            o = e.data;
        if (!(t(i.staticStyle) && t(i.style) && t(o.staticStyle) && t(o.style))) {
            var a, s, c = r.elm,
                u = o.staticStyle,
                l = o.normalizedStyle || o.style || {},
                f = u || l,
                p = ci(r.data.style) || {};
            r.data.normalizedStyle = n(p.__ob__) ? A({}, p) : p;
            var d = function(e, t) {
                var n, r = {};
                if (t)
                    for (var i = e; i.componentInstance;)(i = i.componentInstance._vnode) && i.data && (n = si(i.data)) && A(r, n);
                (n = si(e.data)) && A(r, n);
                for (var o = e; o = o.parent;) o.data && (n = si(o.data)) && A(r, n);
                return r
            }(r, !0);
            for (s in f) t(d[s]) && pi(c, s, "");
            for (s in d)(a = d[s]) !== f[s] && pi(c, s, null == a ? "" : a)
        }
    }
    var mi = {
            create: hi,
            update: hi
        },
        yi = /\s+/;

    function gi(e, t) {
        if (t && (t = t.trim()))
            if (e.classList) t.indexOf(" ") > -1 ? t.split(yi).forEach(function(t) {
                return e.classList.add(t)
            }) : e.classList.add(t);
            else {
                var n = " " + (e.getAttribute("class") || "") + " ";
                n.indexOf(" " + t + " ") < 0 && e.setAttribute("class", (n + t).trim())
            }
    }

    function _i(e, t) {
        if (t && (t = t.trim()))
            if (e.classList) t.indexOf(" ") > -1 ? t.split(yi).forEach(function(t) {
                return e.classList.remove(t)
            }) : e.classList.remove(t), e.classList.length || e.removeAttribute("class");
            else {
                for (var n = " " + (e.getAttribute("class") || "") + " ", r = " " + t + " "; n.indexOf(r) >= 0;) n = n.replace(r, " ");
                (n = n.trim()) ? e.setAttribute("class", n): e.removeAttribute("class")
            }
    }

    function bi(e) {
        if (e) {
            if ("object" == typeof e) {
                var t = {};
                return !1 !== e.css && A(t, $i(e.name || "v")), A(t, e), t
            }
            return "string" == typeof e ? $i(e) : void 0
        }
    }
    var $i = g(function(e) {
            return {
                enterClass: e + "-enter",
                enterToClass: e + "-enter-to",
                enterActiveClass: e + "-enter-active",
                leaveClass: e + "-leave",
                leaveToClass: e + "-leave-to",
                leaveActiveClass: e + "-leave-active"
            }
        }),
        wi = z && !W,
        Ci = "transition",
        xi = "animation",
        ki = "transition",
        Ai = "transitionend",
        Oi = "animation",
        Si = "animationend";
    wi && (void 0 === window.ontransitionend && void 0 !== window.onwebkittransitionend && (ki = "WebkitTransition", Ai = "webkitTransitionEnd"), void 0 === window.onanimationend && void 0 !== window.onwebkitanimationend && (Oi = "WebkitAnimation", Si = "webkitAnimationEnd"));
    var Ti = z ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout : function(e) {
        return e()
    };

    function Ei(e) {
        Ti(function() {
            Ti(e)
        })
    }

    function Ni(e, t) {
        var n = e._transitionClasses || (e._transitionClasses = []);
        n.indexOf(t) < 0 && (n.push(t), gi(e, t))
    }

    function ji(e, t) {
        e._transitionClasses && h(e._transitionClasses, t), _i(e, t)
    }

    function Di(e, t, n) {
        var r = Mi(e, t),
            i = r.type,
            o = r.timeout,
            a = r.propCount;
        if (!i) return n();
        var s = i === Ci ? Ai : Si,
            c = 0,
            u = function() {
                e.removeEventListener(s, l), n()
            },
            l = function(t) {
                t.target === e && ++c >= a && u()
            };
        setTimeout(function() {
            c < a && u()
        }, o + 1), e.addEventListener(s, l)
    }
    var Li = /\b(transform|all)(,|$)/;

    function Mi(e, t) {
        var n, r = window.getComputedStyle(e),
            i = (r[ki + "Delay"] || "").split(", "),
            o = (r[ki + "Duration"] || "").split(", "),
            a = Ii(i, o),
            s = (r[Oi + "Delay"] || "").split(", "),
            c = (r[Oi + "Duration"] || "").split(", "),
            u = Ii(s, c),
            l = 0,
            f = 0;
        return t === Ci ? a > 0 && (n = Ci, l = a, f = o.length) : t === xi ? u > 0 && (n = xi, l = u, f = c.length) : f = (n = (l = Math.max(a, u)) > 0 ? a > u ? Ci : xi : null) ? n === Ci ? o.length : c.length : 0, {
            type: n,
            timeout: l,
            propCount: f,
            hasTransform: n === Ci && Li.test(r[ki + "Property"])
        }
    }

    function Ii(e, t) {
        for (; e.length < t.length;) e = e.concat(e);
        return Math.max.apply(null, t.map(function(t, n) {
            return Fi(t) + Fi(e[n])
        }))
    }

    function Fi(e) {
        return 1e3 * Number(e.slice(0, -1).replace(",", "."))
    }

    function Pi(e, r) {
        var i = e.elm;
        n(i._leaveCb) && (i._leaveCb.cancelled = !0, i._leaveCb());
        var a = bi(e.data.transition);
        if (!t(a) && !n(i._enterCb) && 1 === i.nodeType) {
            for (var s = a.css, c = a.type, u = a.enterClass, l = a.enterToClass, p = a.enterActiveClass, d = a.appearClass, v = a.appearToClass, h = a.appearActiveClass, m = a.beforeEnter, y = a.enter, g = a.afterEnter, _ = a.enterCancelled, b = a.beforeAppear, $ = a.appear, w = a.afterAppear, C = a.appearCancelled, x = a.duration, k = Wt, A = Wt.$vnode; A && A.parent;) k = A.context, A = A.parent;
            var O = !k._isMounted || !e.isRootInsert;
            if (!O || $ || "" === $) {
                var S = O && d ? d : u,
                    T = O && h ? h : p,
                    E = O && v ? v : l,
                    N = O && b || m,
                    j = O && "function" == typeof $ ? $ : y,
                    L = O && w || g,
                    M = O && C || _,
                    I = f(o(x) ? x.enter : x),
                    F = !1 !== s && !W,
                    P = Bi(j),
                    R = i._enterCb = D(function() {
                        F && (ji(i, E), ji(i, T)), R.cancelled ? (F && ji(i, S), M && M(i)) : L && L(i), i._enterCb = null
                    });
                e.data.show || it(e, "insert", function() {
                    var t = i.parentNode,
                        n = t && t._pending && t._pending[e.key];
                    n && n.tag === e.tag && n.elm._leaveCb && n.elm._leaveCb(), j && j(i, R)
                }), N && N(i), F && (Ni(i, S), Ni(i, T), Ei(function() {
                    ji(i, S), R.cancelled || (Ni(i, E), P || (Hi(I) ? setTimeout(R, I) : Di(i, c, R)))
                })), e.data.show && (r && r(), j && j(i, R)), F || P || R()
            }
        }
    }

    function Ri(e, r) {
        var i = e.elm;
        n(i._enterCb) && (i._enterCb.cancelled = !0, i._enterCb());
        var a = bi(e.data.transition);
        if (t(a) || 1 !== i.nodeType) return r();
        if (!n(i._leaveCb)) {
            var s = a.css,
                c = a.type,
                u = a.leaveClass,
                l = a.leaveToClass,
                p = a.leaveActiveClass,
                d = a.beforeLeave,
                v = a.leave,
                h = a.afterLeave,
                m = a.leaveCancelled,
                y = a.delayLeave,
                g = a.duration,
                _ = !1 !== s && !W,
                b = Bi(v),
                $ = f(o(g) ? g.leave : g),
                w = i._leaveCb = D(function() {
                    i.parentNode && i.parentNode._pending && (i.parentNode._pending[e.key] = null), _ && (ji(i, l), ji(i, p)), w.cancelled ? (_ && ji(i, u), m && m(i)) : (r(), h && h(i)), i._leaveCb = null
                });
            y ? y(C) : C()
        }

        function C() {
            w.cancelled || (!e.data.show && i.parentNode && ((i.parentNode._pending || (i.parentNode._pending = {}))[e.key] = e), d && d(i), _ && (Ni(i, u), Ni(i, p), Ei(function() {
                ji(i, u), w.cancelled || (Ni(i, l), b || (Hi($) ? setTimeout(w, $) : Di(i, c, w)))
            })), v && v(i, w), _ || b || w())
        }
    }

    function Hi(e) {
        return "number" == typeof e && !isNaN(e)
    }

    function Bi(e) {
        if (t(e)) return !1;
        var r = e.fns;
        return n(r) ? Bi(Array.isArray(r) ? r[0] : r) : (e._length || e.length) > 1
    }

    function Ui(e, t) {
        !0 !== t.data.show && Pi(t)
    }
    var zi = function(e) {
        var o, a, s = {},
            c = e.modules,
            u = e.nodeOps;
        for (o = 0; o < rr.length; ++o)
            for (s[rr[o]] = [], a = 0; a < c.length; ++a) n(c[a][rr[o]]) && s[rr[o]].push(c[a][rr[o]]);

        function l(e) {
            var t = u.parentNode(e);
            n(t) && u.removeChild(t, e)
        }

        function f(e, t, i, o, a, c, l) {
            if (n(e.elm) && n(c) && (e = c[l] = me(e)), e.isRootInsert = !a, ! function(e, t, i, o) {
                    var a = e.data;
                    if (n(a)) {
                        var c = n(e.componentInstance) && a.keepAlive;
                        if (n(a = a.hook) && n(a = a.init) && a(e, !1), n(e.componentInstance)) return d(e, t), v(i, e.elm, o), r(c) && function(e, t, r, i) {
                            for (var o, a = e; a.componentInstance;)
                                if (a = a.componentInstance._vnode, n(o = a.data) && n(o = o.transition)) {
                                    for (o = 0; o < s.activate.length; ++o) s.activate[o](nr, a);
                                    t.push(a);
                                    break
                                }
                            v(r, e.elm, i)
                        }(e, t, i, o), !0
                    }
                }(e, t, i, o)) {
                var f = e.data,
                    p = e.children,
                    m = e.tag;
                n(m) ? (e.elm = e.ns ? u.createElementNS(e.ns, m) : u.createElement(m, e), g(e), h(e, p, t), n(f) && y(e, t), v(i, e.elm, o)) : r(e.isComment) ? (e.elm = u.createComment(e.text), v(i, e.elm, o)) : (e.elm = u.createTextNode(e.text), v(i, e.elm, o))
            }
        }

        function d(e, t) {
            n(e.data.pendingInsert) && (t.push.apply(t, e.data.pendingInsert), e.data.pendingInsert = null), e.elm = e.componentInstance.$el, m(e) ? (y(e, t), g(e)) : (tr(e), t.push(e))
        }

        function v(e, t, r) {
            n(e) && (n(r) ? u.parentNode(r) === e && u.insertBefore(e, t, r) : u.appendChild(e, t))
        }

        function h(e, t, n) {
            if (Array.isArray(t))
                for (var r = 0; r < t.length; ++r) f(t[r], n, e.elm, null, !0, t, r);
            else i(e.text) && u.appendChild(e.elm, u.createTextNode(String(e.text)))
        }

        function m(e) {
            for (; e.componentInstance;) e = e.componentInstance._vnode;
            return n(e.tag)
        }

        function y(e, t) {
            for (var r = 0; r < s.create.length; ++r) s.create[r](nr, e);
            n(o = e.data.hook) && (n(o.create) && o.create(nr, e), n(o.insert) && t.push(e))
        }

        function g(e) {
            var t;
            if (n(t = e.fnScopeId)) u.setStyleScope(e.elm, t);
            else
                for (var r = e; r;) n(t = r.context) && n(t = t.$options._scopeId) && u.setStyleScope(e.elm, t), r = r.parent;
            n(t = Wt) && t !== e.context && t !== e.fnContext && n(t = t.$options._scopeId) && u.setStyleScope(e.elm, t)
        }

        function _(e, t, n, r, i, o) {
            for (; r <= i; ++r) f(n[r], o, e, t, !1, n, r)
        }

        function b(e) {
            var t, r, i = e.data;
            if (n(i))
                for (n(t = i.hook) && n(t = t.destroy) && t(e), t = 0; t < s.destroy.length; ++t) s.destroy[t](e);
            if (n(t = e.children))
                for (r = 0; r < e.children.length; ++r) b(e.children[r])
        }

        function $(e, t, r, i) {
            for (; r <= i; ++r) {
                var o = t[r];
                n(o) && (n(o.tag) ? (w(o), b(o)) : l(o.elm))
            }
        }

        function w(e, t) {
            if (n(t) || n(e.data)) {
                var r, i = s.remove.length + 1;
                for (n(t) ? t.listeners += i : t = function(e, t) {
                        function n() {
                            0 == --n.listeners && l(e)
                        }
                        return n.listeners = t, n
                    }(e.elm, i), n(r = e.componentInstance) && n(r = r._vnode) && n(r.data) && w(r, t), r = 0; r < s.remove.length; ++r) s.remove[r](e, t);
                n(r = e.data.hook) && n(r = r.remove) ? r(e, t) : t()
            } else l(e.elm)
        }

        function C(e, t, r, i) {
            for (var o = r; o < i; o++) {
                var a = t[o];
                if (n(a) && ir(e, a)) return o
            }
        }

        function x(e, i, o, a, c, l) {
            if (e !== i) {
                n(i.elm) && n(a) && (i = a[c] = me(i));
                var p = i.elm = e.elm;
                if (r(e.isAsyncPlaceholder)) n(i.asyncFactory.resolved) ? O(e.elm, i, o) : i.isAsyncPlaceholder = !0;
                else if (r(i.isStatic) && r(e.isStatic) && i.key === e.key && (r(i.isCloned) || r(i.isOnce))) i.componentInstance = e.componentInstance;
                else {
                    var d, v = i.data;
                    n(v) && n(d = v.hook) && n(d = d.prepatch) && d(e, i);
                    var h = e.children,
                        y = i.children;
                    if (n(v) && m(i)) {
                        for (d = 0; d < s.update.length; ++d) s.update[d](e, i);
                        n(d = v.hook) && n(d = d.update) && d(e, i)
                    }
                    t(i.text) ? n(h) && n(y) ? h !== y && function(e, r, i, o, a) {
                        for (var s, c, l, p = 0, d = 0, v = r.length - 1, h = r[0], m = r[v], y = i.length - 1, g = i[0], b = i[y], w = !a; p <= v && d <= y;) t(h) ? h = r[++p] : t(m) ? m = r[--v] : ir(h, g) ? (x(h, g, o, i, d), h = r[++p], g = i[++d]) : ir(m, b) ? (x(m, b, o, i, y), m = r[--v], b = i[--y]) : ir(h, b) ? (x(h, b, o, i, y), w && u.insertBefore(e, h.elm, u.nextSibling(m.elm)), h = r[++p], b = i[--y]) : ir(m, g) ? (x(m, g, o, i, d), w && u.insertBefore(e, m.elm, h.elm), m = r[--v], g = i[++d]) : (t(s) && (s = or(r, p, v)), t(c = n(g.key) ? s[g.key] : C(g, r, p, v)) ? f(g, o, e, h.elm, !1, i, d) : ir(l = r[c], g) ? (x(l, g, o, i, d), r[c] = void 0, w && u.insertBefore(e, l.elm, h.elm)) : f(g, o, e, h.elm, !1, i, d), g = i[++d]);
                        p > v ? _(e, t(i[y + 1]) ? null : i[y + 1].elm, i, d, y, o) : d > y && $(0, r, p, v)
                    }(p, h, y, o, l) : n(y) ? (n(e.text) && u.setTextContent(p, ""), _(p, null, y, 0, y.length - 1, o)) : n(h) ? $(0, h, 0, h.length - 1) : n(e.text) && u.setTextContent(p, "") : e.text !== i.text && u.setTextContent(p, i.text), n(v) && n(d = v.hook) && n(d = d.postpatch) && d(e, i)
                }
            }
        }

        function k(e, t, i) {
            if (r(i) && n(e.parent)) e.parent.data.pendingInsert = t;
            else
                for (var o = 0; o < t.length; ++o) t[o].data.hook.insert(t[o])
        }
        var A = p("attrs,class,staticClass,staticStyle,key");

        function O(e, t, i, o) {
            var a, s = t.tag,
                c = t.data,
                u = t.children;
            if (o = o || c && c.pre, t.elm = e, r(t.isComment) && n(t.asyncFactory)) return t.isAsyncPlaceholder = !0, !0;
            if (n(c) && (n(a = c.hook) && n(a = a.init) && a(t, !0), n(a = t.componentInstance))) return d(t, i), !0;
            if (n(s)) {
                if (n(u))
                    if (e.hasChildNodes())
                        if (n(a = c) && n(a = a.domProps) && n(a = a.innerHTML)) {
                            if (a !== e.innerHTML) return !1
                        } else {
                            for (var l = !0, f = e.firstChild, p = 0; p < u.length; p++) {
                                if (!f || !O(f, u[p], i, o)) {
                                    l = !1;
                                    break
                                }
                                f = f.nextSibling
                            }
                            if (!l || f) return !1
                        }
                else h(t, u, i);
                if (n(c)) {
                    var v = !1;
                    for (var m in c)
                        if (!A(m)) {
                            v = !0, y(t, i);
                            break
                        }!v && c.class && et(c.class)
                }
            } else e.data !== t.text && (e.data = t.text);
            return !0
        }
        return function(e, i, o, a) {
            if (!t(i)) {
                var c, l = !1,
                    p = [];
                if (t(e)) l = !0, f(i, p);
                else {
                    var d = n(e.nodeType);
                    if (!d && ir(e, i)) x(e, i, p, null, null, a);
                    else {
                        if (d) {
                            if (1 === e.nodeType && e.hasAttribute(L) && (e.removeAttribute(L), o = !0), r(o) && O(e, i, p)) return k(i, p, !0), e;
                            c = e, e = new pe(u.tagName(c).toLowerCase(), {}, [], void 0, c)
                        }
                        var v = e.elm,
                            h = u.parentNode(v);
                        if (f(i, p, v._leaveCb ? null : h, u.nextSibling(v)), n(i.parent))
                            for (var y = i.parent, g = m(i); y;) {
                                for (var _ = 0; _ < s.destroy.length; ++_) s.destroy[_](y);
                                if (y.elm = i.elm, g) {
                                    for (var w = 0; w < s.create.length; ++w) s.create[w](nr, y);
                                    var C = y.data.hook.insert;
                                    if (C.merged)
                                        for (var A = 1; A < C.fns.length; A++) C.fns[A]()
                                } else tr(y);
                                y = y.parent
                            }
                        n(h) ? $(0, [e], 0, 0) : n(e.tag) && b(e)
                    }
                }
                return k(i, p, l), i.elm
            }
            n(e) && b(e)
        }
    }({
        nodeOps: Qn,
        modules: [mr, xr, ni, oi, mi, z ? {
            create: Ui,
            activate: Ui,
            remove: function(e, t) {
                !0 !== e.data.show ? Ri(e, t) : t()
            }
        } : {}].concat(pr)
    });
    W && document.addEventListener("selectionchange", function() {
        var e = document.activeElement;
        e && e.vmodel && Xi(e, "input")
    });
    var Vi = {
        inserted: function(e, t, n, r) {
            "select" === n.tag ? (r.elm && !r.elm._vOptions ? it(n, "postpatch", function() {
                Vi.componentUpdated(e, t, n)
            }) : Ki(e, t, n.context), e._vOptions = [].map.call(e.options, Wi)) : ("textarea" === n.tag || Xn(e.type)) && (e._vModifiers = t.modifiers, t.modifiers.lazy || (e.addEventListener("compositionstart", Zi), e.addEventListener("compositionend", Gi), e.addEventListener("change", Gi), W && (e.vmodel = !0)))
        },
        componentUpdated: function(e, t, n) {
            if ("select" === n.tag) {
                Ki(e, t, n.context);
                var r = e._vOptions,
                    i = e._vOptions = [].map.call(e.options, Wi);
                if (i.some(function(e, t) {
                        return !N(e, r[t])
                    }))(e.multiple ? t.value.some(function(e) {
                    return qi(e, i)
                }) : t.value !== t.oldValue && qi(t.value, i)) && Xi(e, "change")
            }
        }
    };

    function Ki(e, t, n) {
        Ji(e, t, n), (q || Z) && setTimeout(function() {
            Ji(e, t, n)
        }, 0)
    }

    function Ji(e, t, n) {
        var r = t.value,
            i = e.multiple;
        if (!i || Array.isArray(r)) {
            for (var o, a, s = 0, c = e.options.length; s < c; s++)
                if (a = e.options[s], i) o = j(r, Wi(a)) > -1, a.selected !== o && (a.selected = o);
                else if (N(Wi(a), r)) return void(e.selectedIndex !== s && (e.selectedIndex = s));
            i || (e.selectedIndex = -1)
        }
    }

    function qi(e, t) {
        return t.every(function(t) {
            return !N(t, e)
        })
    }

    function Wi(e) {
        return "_value" in e ? e._value : e.value
    }

    function Zi(e) {
        e.target.composing = !0
    }

    function Gi(e) {
        e.target.composing && (e.target.composing = !1, Xi(e.target, "input"))
    }

    function Xi(e, t) {
        var n = document.createEvent("HTMLEvents");
        n.initEvent(t, !0, !0), e.dispatchEvent(n)
    }

    function Yi(e) {
        return !e.componentInstance || e.data && e.data.transition ? e : Yi(e.componentInstance._vnode)
    }
    var Qi = {
            model: Vi,
            show: {
                bind: function(e, t, n) {
                    var r = t.value,
                        i = (n = Yi(n)).data && n.data.transition,
                        o = e.__vOriginalDisplay = "none" === e.style.display ? "" : e.style.display;
                    r && i ? (n.data.show = !0, Pi(n, function() {
                        e.style.display = o
                    })) : e.style.display = r ? o : "none"
                },
                update: function(e, t, n) {
                    var r = t.value;
                    !r != !t.oldValue && ((n = Yi(n)).data && n.data.transition ? (n.data.show = !0, r ? Pi(n, function() {
                        e.style.display = e.__vOriginalDisplay
                    }) : Ri(n, function() {
                        e.style.display = "none"
                    })) : e.style.display = r ? e.__vOriginalDisplay : "none")
                },
                unbind: function(e, t, n, r, i) {
                    i || (e.style.display = e.__vOriginalDisplay)
                }
            }
        },
        eo = {
            name: String,
            appear: Boolean,
            css: Boolean,
            mode: String,
            type: String,
            enterClass: String,
            leaveClass: String,
            enterToClass: String,
            leaveToClass: String,
            enterActiveClass: String,
            leaveActiveClass: String,
            appearClass: String,
            appearActiveClass: String,
            appearToClass: String,
            duration: [Number, String, Object]
        };

    function to(e) {
        var t = e && e.componentOptions;
        return t && t.Ctor.options.abstract ? to(zt(t.children)) : e
    }

    function no(e) {
        var t = {},
            n = e.$options;
        for (var r in n.propsData) t[r] = e[r];
        var i = n._parentListeners;
        for (var o in i) t[b(o)] = i[o];
        return t
    }

    function ro(e, t) {
        if (/\d-keep-alive$/.test(t.tag)) return e("keep-alive", {
            props: t.componentOptions.propsData
        })
    }
    var io = function(e) {
            return e.tag || Ut(e)
        },
        oo = function(e) {
            return "show" === e.name
        },
        ao = {
            name: "transition",
            props: eo,
            abstract: !0,
            render: function(e) {
                var t = this,
                    n = this.$slots.default;
                if (n && (n = n.filter(io)).length) {
                    var r = this.mode,
                        o = n[0];
                    if (function(e) {
                            for (; e = e.parent;)
                                if (e.data.transition) return !0
                        }(this.$vnode)) return o;
                    var a = to(o);
                    if (!a) return o;
                    if (this._leaving) return ro(e, o);
                    var s = "__transition-" + this._uid + "-";
                    a.key = null == a.key ? a.isComment ? s + "comment" : s + a.tag : i(a.key) ? 0 === String(a.key).indexOf(s) ? a.key : s + a.key : a.key;
                    var c = (a.data || (a.data = {})).transition = no(this),
                        u = this._vnode,
                        l = to(u);
                    if (a.data.directives && a.data.directives.some(oo) && (a.data.show = !0), l && l.data && ! function(e, t) {
                            return t.key === e.key && t.tag === e.tag
                        }(a, l) && !Ut(l) && (!l.componentInstance || !l.componentInstance._vnode.isComment)) {
                        var f = l.data.transition = A({}, c);
                        if ("out-in" === r) return this._leaving = !0, it(f, "afterLeave", function() {
                            t._leaving = !1, t.$forceUpdate()
                        }), ro(e, o);
                        if ("in-out" === r) {
                            if (Ut(a)) return u;
                            var p, d = function() {
                                p()
                            };
                            it(c, "afterEnter", d), it(c, "enterCancelled", d), it(f, "delayLeave", function(e) {
                                p = e
                            })
                        }
                    }
                    return o
                }
            }
        },
        so = A({
            tag: String,
            moveClass: String
        }, eo);

    function co(e) {
        e.elm._moveCb && e.elm._moveCb(), e.elm._enterCb && e.elm._enterCb()
    }

    function uo(e) {
        e.data.newPos = e.elm.getBoundingClientRect()
    }

    function lo(e) {
        var t = e.data.pos,
            n = e.data.newPos,
            r = t.left - n.left,
            i = t.top - n.top;
        if (r || i) {
            e.data.moved = !0;
            var o = e.elm.style;
            o.transform = o.WebkitTransform = "translate(" + r + "px," + i + "px)", o.transitionDuration = "0s"
        }
    }
    delete so.mode;
    var fo = {
        Transition: ao,
        TransitionGroup: {
            props: so,
            beforeMount: function() {
                var e = this,
                    t = this._update;
                this._update = function(n, r) {
                    var i = Zt(e);
                    e.__patch__(e._vnode, e.kept, !1, !0), e._vnode = e.kept, i(), t.call(e, n, r)
                }
            },
            render: function(e) {
                for (var t = this.tag || this.$vnode.data.tag || "span", n = Object.create(null), r = this.prevChildren = this.children, i = this.$slots.default || [], o = this.children = [], a = no(this), s = 0; s < i.length; s++) {
                    var c = i[s];
                    c.tag && null != c.key && 0 !== String(c.key).indexOf("__vlist") && (o.push(c), n[c.key] = c, (c.data || (c.data = {})).transition = a)
                }
                if (r) {
                    for (var u = [], l = [], f = 0; f < r.length; f++) {
                        var p = r[f];
                        p.data.transition = a, p.data.pos = p.elm.getBoundingClientRect(), n[p.key] ? u.push(p) : l.push(p)
                    }
                    this.kept = e(t, null, u), this.removed = l
                }
                return e(t, null, o)
            },
            updated: function() {
                var e = this.prevChildren,
                    t = this.moveClass || (this.name || "v") + "-move";
                e.length && this.hasMove(e[0].elm, t) && (e.forEach(co), e.forEach(uo), e.forEach(lo), this._reflow = document.body.offsetHeight, e.forEach(function(e) {
                    if (e.data.moved) {
                        var n = e.elm,
                            r = n.style;
                        Ni(n, t), r.transform = r.WebkitTransform = r.transitionDuration = "", n.addEventListener(Ai, n._moveCb = function e(r) {
                            r && r.target !== n || r && !/transform$/.test(r.propertyName) || (n.removeEventListener(Ai, e), n._moveCb = null, ji(n, t))
                        })
                    }
                }))
            },
            methods: {
                hasMove: function(e, t) {
                    if (!wi) return !1;
                    if (this._hasMove) return this._hasMove;
                    var n = e.cloneNode();
                    e._transitionClasses && e._transitionClasses.forEach(function(e) {
                        _i(n, e)
                    }), gi(n, t), n.style.display = "none", this.$el.appendChild(n);
                    var r = Mi(n);
                    return this.$el.removeChild(n), this._hasMove = r.hasTransform
                }
            }
        }
    };
    wn.config.mustUseProp = jn, wn.config.isReservedTag = Wn, wn.config.isReservedAttr = En, wn.config.getTagNamespace = Zn, wn.config.isUnknownElement = function(e) {
        if (!z) return !0;
        if (Wn(e)) return !1;
        if (e = e.toLowerCase(), null != Gn[e]) return Gn[e];
        var t = document.createElement(e);
        return e.indexOf("-") > -1 ? Gn[e] = t.constructor === window.HTMLUnknownElement || t.constructor === window.HTMLElement : Gn[e] = /HTMLUnknownElement/.test(t.toString())
    }, A(wn.options.directives, Qi), A(wn.options.components, fo), wn.prototype.__patch__ = z ? zi : S, wn.prototype.$mount = function(e, t) {
        return function(e, t, n) {
            var r;
            return e.$el = t, e.$options.render || (e.$options.render = ve), Yt(e, "beforeMount"), r = function() {
                e._update(e._render(), n)
            }, new fn(e, r, S, {
                before: function() {
                    e._isMounted && !e._isDestroyed && Yt(e, "beforeUpdate")
                }
            }, !0), n = !1, null == e.$vnode && (e._isMounted = !0, Yt(e, "mounted")), e
        }(this, e = e && z ? Yn(e) : void 0, t)
    }, z && setTimeout(function() {
        F.devtools && ne && ne.emit("init", wn)
    }, 0);
    var po = /\{\{((?:.|\r?\n)+?)\}\}/g,
        vo = /[-.*+?^${}()|[\]\/\\]/g,
        ho = g(function(e) {
            var t = e[0].replace(vo, "\\$&"),
                n = e[1].replace(vo, "\\$&");
            return new RegExp(t + "((?:.|\\n)+?)" + n, "g")
        });
    var mo = {
        staticKeys: ["staticClass"],
        transformNode: function(e, t) {
            t.warn;
            var n = Fr(e, "class");
            n && (e.staticClass = JSON.stringify(n));
            var r = Ir(e, "class", !1);
            r && (e.classBinding = r)
        },
        genData: function(e) {
            var t = "";
            return e.staticClass && (t += "staticClass:" + e.staticClass + ","), e.classBinding && (t += "class:" + e.classBinding + ","), t
        }
    };
    var yo, go = {
            staticKeys: ["staticStyle"],
            transformNode: function(e, t) {
                t.warn;
                var n = Fr(e, "style");
                n && (e.staticStyle = JSON.stringify(ai(n)));
                var r = Ir(e, "style", !1);
                r && (e.styleBinding = r)
            },
            genData: function(e) {
                var t = "";
                return e.staticStyle && (t += "staticStyle:" + e.staticStyle + ","), e.styleBinding && (t += "style:(" + e.styleBinding + "),"), t
            }
        },
        _o = function(e) {
            return (yo = yo || document.createElement("div")).innerHTML = e, yo.textContent
        },
        bo = p("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),
        $o = p("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),
        wo = p("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),
        Co = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,
        xo = /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,
        ko = "[a-zA-Z_][\\-\\.0-9_a-zA-Z" + P.source + "]*",
        Ao = "((?:" + ko + "\\:)?" + ko + ")",
        Oo = new RegExp("^<" + Ao),
        So = /^\s*(\/?)>/,
        To = new RegExp("^<\\/" + Ao + "[^>]*>"),
        Eo = /^<!DOCTYPE [^>]+>/i,
        No = /^<!\--/,
        jo = /^<!\[/,
        Do = p("script,style,textarea", !0),
        Lo = {},
        Mo = {
            "&lt;": "<",
            "&gt;": ">",
            "&quot;": '"',
            "&amp;": "&",
            "&#10;": "\n",
            "&#9;": "\t",
            "&#39;": "'"
        },
        Io = /&(?:lt|gt|quot|amp|#39);/g,
        Fo = /&(?:lt|gt|quot|amp|#39|#10|#9);/g,
        Po = p("pre,textarea", !0),
        Ro = function(e, t) {
            return e && Po(e) && "\n" === t[0]
        };

    function Ho(e, t) {
        var n = t ? Fo : Io;
        return e.replace(n, function(e) {
            return Mo[e]
        })
    }
    var Bo, Uo, zo, Vo, Ko, Jo, qo, Wo, Zo = /^@|^v-on:/,
        Go = /^v-|^@|^:/,
        Xo = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,
        Yo = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/,
        Qo = /^\(|\)$/g,
        ea = /^\[.*\]$/,
        ta = /:(.*)$/,
        na = /^:|^\.|^v-bind:/,
        ra = /\.[^.\]]+(?=[^\]]*$)/g,
        ia = /^v-slot(:|$)|^#/,
        oa = /[\r\n]/,
        aa = /\s+/g,
        sa = g(_o),
        ca = "_empty_";

    function ua(e, t, n) {
        return {
            type: 1,
            tag: e,
            attrsList: t,
            attrsMap: ma(t),
            rawAttrsMap: {},
            parent: n,
            children: []
        }
    }

    function la(e, t) {
        Bo = t.warn || Sr, Jo = t.isPreTag || T, qo = t.mustUseProp || T, Wo = t.getTagNamespace || T;
        t.isReservedTag;
        zo = Tr(t.modules, "transformNode"), Vo = Tr(t.modules, "preTransformNode"), Ko = Tr(t.modules, "postTransformNode"), Uo = t.delimiters;
        var n, r, i = [],
            o = !1 !== t.preserveWhitespace,
            a = t.whitespace,
            s = !1,
            c = !1;

        function u(e) {
            if (l(e), s || e.processed || (e = fa(e, t)), i.length || e === n || n.if && (e.elseif || e.else) && da(n, {
                    exp: e.elseif,
                    block: e
                }), r && !e.forbidden)
                if (e.elseif || e.else) a = e, (u = function(e) {
                    var t = e.length;
                    for (; t--;) {
                        if (1 === e[t].type) return e[t];
                        e.pop()
                    }
                }(r.children)) && u.if && da(u, {
                    exp: a.elseif,
                    block: a
                });
                else {
                    if (e.slotScope) {
                        var o = e.slotTarget || '"default"';
                        (r.scopedSlots || (r.scopedSlots = {}))[o] = e
                    }
                    r.children.push(e), e.parent = r
                }
            var a, u;
            e.children = e.children.filter(function(e) {
                return !e.slotScope
            }), l(e), e.pre && (s = !1), Jo(e.tag) && (c = !1);
            for (var f = 0; f < Ko.length; f++) Ko[f](e, t)
        }

        function l(e) {
            if (!c)
                for (var t;
                    (t = e.children[e.children.length - 1]) && 3 === t.type && " " === t.text;) e.children.pop()
        }
        return function(e, t) {
            for (var n, r, i = [], o = t.expectHTML, a = t.isUnaryTag || T, s = t.canBeLeftOpenTag || T, c = 0; e;) {
                if (n = e, r && Do(r)) {
                    var u = 0,
                        l = r.toLowerCase(),
                        f = Lo[l] || (Lo[l] = new RegExp("([\\s\\S]*?)(</" + l + "[^>]*>)", "i")),
                        p = e.replace(f, function(e, n, r) {
                            return u = r.length, Do(l) || "noscript" === l || (n = n.replace(/<!\--([\s\S]*?)-->/g, "$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g, "$1")), Ro(l, n) && (n = n.slice(1)), t.chars && t.chars(n), ""
                        });
                    c += e.length - p.length, e = p, A(l, c - u, c)
                } else {
                    var d = e.indexOf("<");
                    if (0 === d) {
                        if (No.test(e)) {
                            var v = e.indexOf("--\x3e");
                            if (v >= 0) {
                                t.shouldKeepComment && t.comment(e.substring(4, v), c, c + v + 3), C(v + 3);
                                continue
                            }
                        }
                        if (jo.test(e)) {
                            var h = e.indexOf("]>");
                            if (h >= 0) {
                                C(h + 2);
                                continue
                            }
                        }
                        var m = e.match(Eo);
                        if (m) {
                            C(m[0].length);
                            continue
                        }
                        var y = e.match(To);
                        if (y) {
                            var g = c;
                            C(y[0].length), A(y[1], g, c);
                            continue
                        }
                        var _ = x();
                        if (_) {
                            k(_), Ro(_.tagName, e) && C(1);
                            continue
                        }
                    }
                    var b = void 0,
                        $ = void 0,
                        w = void 0;
                    if (d >= 0) {
                        for ($ = e.slice(d); !(To.test($) || Oo.test($) || No.test($) || jo.test($) || (w = $.indexOf("<", 1)) < 0);) d += w, $ = e.slice(d);
                        b = e.substring(0, d)
                    }
                    d < 0 && (b = e), b && C(b.length), t.chars && b && t.chars(b, c - b.length, c)
                }
                if (e === n) {
                    t.chars && t.chars(e);
                    break
                }
            }

            function C(t) {
                c += t, e = e.substring(t)
            }

            function x() {
                var t = e.match(Oo);
                if (t) {
                    var n, r, i = {
                        tagName: t[1],
                        attrs: [],
                        start: c
                    };
                    for (C(t[0].length); !(n = e.match(So)) && (r = e.match(xo) || e.match(Co));) r.start = c, C(r[0].length), r.end = c, i.attrs.push(r);
                    if (n) return i.unarySlash = n[1], C(n[0].length), i.end = c, i
                }
            }

            function k(e) {
                var n = e.tagName,
                    c = e.unarySlash;
                o && ("p" === r && wo(n) && A(r), s(n) && r === n && A(n));
                for (var u = a(n) || !!c, l = e.attrs.length, f = new Array(l), p = 0; p < l; p++) {
                    var d = e.attrs[p],
                        v = d[3] || d[4] || d[5] || "",
                        h = "a" === n && "href" === d[1] ? t.shouldDecodeNewlinesForHref : t.shouldDecodeNewlines;
                    f[p] = {
                        name: d[1],
                        value: Ho(v, h)
                    }
                }
                u || (i.push({
                    tag: n,
                    lowerCasedTag: n.toLowerCase(),
                    attrs: f,
                    start: e.start,
                    end: e.end
                }), r = n), t.start && t.start(n, f, u, e.start, e.end)
            }

            function A(e, n, o) {
                var a, s;
                if (null == n && (n = c), null == o && (o = c), e)
                    for (s = e.toLowerCase(), a = i.length - 1; a >= 0 && i[a].lowerCasedTag !== s; a--);
                else a = 0;
                if (a >= 0) {
                    for (var u = i.length - 1; u >= a; u--) t.end && t.end(i[u].tag, n, o);
                    i.length = a, r = a && i[a - 1].tag
                } else "br" === s ? t.start && t.start(e, [], !0, n, o) : "p" === s && (t.start && t.start(e, [], !1, n, o), t.end && t.end(e, n, o))
            }
            A()
        }(e, {
            warn: Bo,
            expectHTML: t.expectHTML,
            isUnaryTag: t.isUnaryTag,
            canBeLeftOpenTag: t.canBeLeftOpenTag,
            shouldDecodeNewlines: t.shouldDecodeNewlines,
            shouldDecodeNewlinesForHref: t.shouldDecodeNewlinesForHref,
            shouldKeepComment: t.comments,
            outputSourceRange: t.outputSourceRange,
            start: function(e, o, a, l, f) {
                var p = r && r.ns || Wo(e);
                q && "svg" === p && (o = function(e) {
                    for (var t = [], n = 0; n < e.length; n++) {
                        var r = e[n];
                        ya.test(r.name) || (r.name = r.name.replace(ga, ""), t.push(r))
                    }
                    return t
                }(o));
                var d, v = ua(e, o, r);
                p && (v.ns = p), "style" !== (d = v).tag && ("script" !== d.tag || d.attrsMap.type && "text/javascript" !== d.attrsMap.type) || te() || (v.forbidden = !0);
                for (var h = 0; h < Vo.length; h++) v = Vo[h](v, t) || v;
                s || (! function(e) {
                    null != Fr(e, "v-pre") && (e.pre = !0)
                }(v), v.pre && (s = !0)), Jo(v.tag) && (c = !0), s ? function(e) {
                    var t = e.attrsList,
                        n = t.length;
                    if (n)
                        for (var r = e.attrs = new Array(n), i = 0; i < n; i++) r[i] = {
                            name: t[i].name,
                            value: JSON.stringify(t[i].value)
                        }, null != t[i].start && (r[i].start = t[i].start, r[i].end = t[i].end);
                    else e.pre || (e.plain = !0)
                }(v) : v.processed || (pa(v), function(e) {
                    var t = Fr(e, "v-if");
                    if (t) e.if = t, da(e, {
                        exp: t,
                        block: e
                    });
                    else {
                        null != Fr(e, "v-else") && (e.else = !0);
                        var n = Fr(e, "v-else-if");
                        n && (e.elseif = n)
                    }
                }(v), function(e) {
                    null != Fr(e, "v-once") && (e.once = !0)
                }(v)), n || (n = v), a ? u(v) : (r = v, i.push(v))
            },
            end: function(e, t, n) {
                var o = i[i.length - 1];
                i.length -= 1, r = i[i.length - 1], u(o)
            },
            chars: function(e, t, n) {
                if (r && (!q || "textarea" !== r.tag || r.attrsMap.placeholder !== e)) {
                    var i, u, l, f = r.children;
                    if (e = c || e.trim() ? "script" === (i = r).tag || "style" === i.tag ? e : sa(e) : f.length ? a ? "condense" === a && oa.test(e) ? "" : " " : o ? " " : "" : "") c || "condense" !== a || (e = e.replace(aa, " ")), !s && " " !== e && (u = function(e, t) {
                        var n = t ? ho(t) : po;
                        if (n.test(e)) {
                            for (var r, i, o, a = [], s = [], c = n.lastIndex = 0; r = n.exec(e);) {
                                (i = r.index) > c && (s.push(o = e.slice(c, i)), a.push(JSON.stringify(o)));
                                var u = Ar(r[1].trim());
                                a.push("_s(" + u + ")"), s.push({
                                    "@binding": u
                                }), c = i + r[0].length
                            }
                            return c < e.length && (s.push(o = e.slice(c)), a.push(JSON.stringify(o))), {
                                expression: a.join("+"),
                                tokens: s
                            }
                        }
                    }(e, Uo)) ? l = {
                        type: 2,
                        expression: u.expression,
                        tokens: u.tokens,
                        text: e
                    } : " " === e && f.length && " " === f[f.length - 1].text || (l = {
                        type: 3,
                        text: e
                    }), l && f.push(l)
                }
            },
            comment: function(e, t, n) {
                if (r) {
                    var i = {
                        type: 3,
                        text: e,
                        isComment: !0
                    };
                    r.children.push(i)
                }
            }
        }), n
    }

    function fa(e, t) {
        var n, r;
        (r = Ir(n = e, "key")) && (n.key = r), e.plain = !e.key && !e.scopedSlots && !e.attrsList.length,
            function(e) {
                var t = Ir(e, "ref");
                t && (e.ref = t, e.refInFor = function(e) {
                    var t = e;
                    for (; t;) {
                        if (void 0 !== t.for) return !0;
                        t = t.parent
                    }
                    return !1
                }(e))
            }(e),
            function(e) {
                var t;
                "template" === e.tag ? (t = Fr(e, "scope"), e.slotScope = t || Fr(e, "slot-scope")) : (t = Fr(e, "slot-scope")) && (e.slotScope = t);
                var n = Ir(e, "slot");
                n && (e.slotTarget = '""' === n ? '"default"' : n, e.slotTargetDynamic = !(!e.attrsMap[":slot"] && !e.attrsMap["v-bind:slot"]), "template" === e.tag || e.slotScope || Nr(e, "slot", n, function(e, t) {
                    return e.rawAttrsMap[":" + t] || e.rawAttrsMap["v-bind:" + t] || e.rawAttrsMap[t]
                }(e, "slot")));
                if ("template" === e.tag) {
                    var r = Pr(e, ia);
                    if (r) {
                        var i = va(r),
                            o = i.name,
                            a = i.dynamic;
                        e.slotTarget = o, e.slotTargetDynamic = a, e.slotScope = r.value || ca
                    }
                } else {
                    var s = Pr(e, ia);
                    if (s) {
                        var c = e.scopedSlots || (e.scopedSlots = {}),
                            u = va(s),
                            l = u.name,
                            f = u.dynamic,
                            p = c[l] = ua("template", [], e);
                        p.slotTarget = l, p.slotTargetDynamic = f, p.children = e.children.filter(function(e) {
                            if (!e.slotScope) return e.parent = p, !0
                        }), p.slotScope = s.value || ca, e.children = [], e.plain = !1
                    }
                }
            }(e),
            function(e) {
                "slot" === e.tag && (e.slotName = Ir(e, "name"))
            }(e),
            function(e) {
                var t;
                (t = Ir(e, "is")) && (e.component = t);
                null != Fr(e, "inline-template") && (e.inlineTemplate = !0)
            }(e);
        for (var i = 0; i < zo.length; i++) e = zo[i](e, t) || e;
        return function(e) {
            var t, n, r, i, o, a, s, c, u = e.attrsList;
            for (t = 0, n = u.length; t < n; t++)
                if (r = i = u[t].name, o = u[t].value, Go.test(r))
                    if (e.hasBindings = !0, (a = ha(r.replace(Go, ""))) && (r = r.replace(ra, "")), na.test(r)) r = r.replace(na, ""), o = Ar(o), (c = ea.test(r)) && (r = r.slice(1, -1)), a && (a.prop && !c && "innerHtml" === (r = b(r)) && (r = "innerHTML"), a.camel && !c && (r = b(r)), a.sync && (s = Br(o, "$event"), c ? Mr(e, '"update:"+(' + r + ")", s, null, !1, 0, u[t], !0) : (Mr(e, "update:" + b(r), s, null, !1, 0, u[t]), C(r) !== b(r) && Mr(e, "update:" + C(r), s, null, !1, 0, u[t])))), a && a.prop || !e.component && qo(e.tag, e.attrsMap.type, r) ? Er(e, r, o, u[t], c) : Nr(e, r, o, u[t], c);
                    else if (Zo.test(r)) r = r.replace(Zo, ""), (c = ea.test(r)) && (r = r.slice(1, -1)), Mr(e, r, o, a, !1, 0, u[t], c);
            else {
                var l = (r = r.replace(Go, "")).match(ta),
                    f = l && l[1];
                c = !1, f && (r = r.slice(0, -(f.length + 1)), ea.test(f) && (f = f.slice(1, -1), c = !0)), Dr(e, r, i, o, f, c, a, u[t])
            } else Nr(e, r, JSON.stringify(o), u[t]), !e.component && "muted" === r && qo(e.tag, e.attrsMap.type, r) && Er(e, r, "true", u[t])
        }(e), e
    }

    function pa(e) {
        var t;
        if (t = Fr(e, "v-for")) {
            var n = function(e) {
                var t = e.match(Xo);
                if (!t) return;
                var n = {};
                n.for = t[2].trim();
                var r = t[1].trim().replace(Qo, ""),
                    i = r.match(Yo);
                i ? (n.alias = r.replace(Yo, "").trim(), n.iterator1 = i[1].trim(), i[2] && (n.iterator2 = i[2].trim())) : n.alias = r;
                return n
            }(t);
            n && A(e, n)
        }
    }

    function da(e, t) {
        e.ifConditions || (e.ifConditions = []), e.ifConditions.push(t)
    }

    function va(e) {
        var t = e.name.replace(ia, "");
        return t || "#" !== e.name[0] && (t = "default"), ea.test(t) ? {
            name: t.slice(1, -1),
            dynamic: !0
        } : {
            name: '"' + t + '"',
            dynamic: !1
        }
    }

    function ha(e) {
        var t = e.match(ra);
        if (t) {
            var n = {};
            return t.forEach(function(e) {
                n[e.slice(1)] = !0
            }), n
        }
    }

    function ma(e) {
        for (var t = {}, n = 0, r = e.length; n < r; n++) t[e[n].name] = e[n].value;
        return t
    }
    var ya = /^xmlns:NS\d+/,
        ga = /^NS\d+:/;

    function _a(e) {
        return ua(e.tag, e.attrsList.slice(), e.parent)
    }
    var ba = [mo, go, {
        preTransformNode: function(e, t) {
            if ("input" === e.tag) {
                var n, r = e.attrsMap;
                if (!r["v-model"]) return;
                if ((r[":type"] || r["v-bind:type"]) && (n = Ir(e, "type")), r.type || n || !r["v-bind"] || (n = "(" + r["v-bind"] + ").type"), n) {
                    var i = Fr(e, "v-if", !0),
                        o = i ? "&&(" + i + ")" : "",
                        a = null != Fr(e, "v-else", !0),
                        s = Fr(e, "v-else-if", !0),
                        c = _a(e);
                    pa(c), jr(c, "type", "checkbox"), fa(c, t), c.processed = !0, c.if = "(" + n + ")==='checkbox'" + o, da(c, {
                        exp: c.if,
                        block: c
                    });
                    var u = _a(e);
                    Fr(u, "v-for", !0), jr(u, "type", "radio"), fa(u, t), da(c, {
                        exp: "(" + n + ")==='radio'" + o,
                        block: u
                    });
                    var l = _a(e);
                    return Fr(l, "v-for", !0), jr(l, ":type", n), fa(l, t), da(c, {
                        exp: i,
                        block: l
                    }), a ? c.else = !0 : s && (c.elseif = s), c
                }
            }
        }
    }];
    var $a, wa, Ca = {
            expectHTML: !0,
            modules: ba,
            directives: {
                model: function(e, t, n) {
                    var r = t.value,
                        i = t.modifiers,
                        o = e.tag,
                        a = e.attrsMap.type;
                    if (e.component) return Hr(e, r, i), !1;
                    if ("select" === o) ! function(e, t, n) {
                        var r = 'var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return ' + (n && n.number ? "_n(val)" : "val") + "});";
                        r = r + " " + Br(t, "$event.target.multiple ? $$selectedVal : $$selectedVal[0]"), Mr(e, "change", r, null, !0)
                    }(e, r, i);
                    else if ("input" === o && "checkbox" === a) ! function(e, t, n) {
                        var r = n && n.number,
                            i = Ir(e, "value") || "null",
                            o = Ir(e, "true-value") || "true",
                            a = Ir(e, "false-value") || "false";
                        Er(e, "checked", "Array.isArray(" + t + ")?_i(" + t + "," + i + ")>-1" + ("true" === o ? ":(" + t + ")" : ":_q(" + t + "," + o + ")")), Mr(e, "change", "var $$a=" + t + ",$$el=$event.target,$$c=$$el.checked?(" + o + "):(" + a + ");if(Array.isArray($$a)){var $$v=" + (r ? "_n(" + i + ")" : i) + ",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&(" + Br(t, "$$a.concat([$$v])") + ")}else{$$i>-1&&(" + Br(t, "$$a.slice(0,$$i).concat($$a.slice($$i+1))") + ")}}else{" + Br(t, "$$c") + "}", null, !0)
                    }(e, r, i);
                    else if ("input" === o && "radio" === a) ! function(e, t, n) {
                        var r = n && n.number,
                            i = Ir(e, "value") || "null";
                        Er(e, "checked", "_q(" + t + "," + (i = r ? "_n(" + i + ")" : i) + ")"), Mr(e, "change", Br(t, i), null, !0)
                    }(e, r, i);
                    else if ("input" === o || "textarea" === o) ! function(e, t, n) {
                        var r = e.attrsMap.type,
                            i = n || {},
                            o = i.lazy,
                            a = i.number,
                            s = i.trim,
                            c = !o && "range" !== r,
                            u = o ? "change" : "range" === r ? Wr : "input",
                            l = "$event.target.value";
                        s && (l = "$event.target.value.trim()"), a && (l = "_n(" + l + ")");
                        var f = Br(t, l);
                        c && (f = "if($event.target.composing)return;" + f), Er(e, "value", "(" + t + ")"), Mr(e, u, f, null, !0), (s || a) && Mr(e, "blur", "$forceUpdate()")
                    }(e, r, i);
                    else if (!F.isReservedTag(o)) return Hr(e, r, i), !1;
                    return !0
                },
                text: function(e, t) {
                    t.value && Er(e, "textContent", "_s(" + t.value + ")", t)
                },
                html: function(e, t) {
                    t.value && Er(e, "innerHTML", "_s(" + t.value + ")", t)
                }
            },
            isPreTag: function(e) {
                return "pre" === e
            },
            isUnaryTag: bo,
            mustUseProp: jn,
            canBeLeftOpenTag: $o,
            isReservedTag: Wn,
            getTagNamespace: Zn,
            staticKeys: function(e) {
                return e.reduce(function(e, t) {
                    return e.concat(t.staticKeys || [])
                }, []).join(",")
            }(ba)
        },
        xa = g(function(e) {
            return p("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap" + (e ? "," + e : ""))
        });

    function ka(e, t) {
        e && ($a = xa(t.staticKeys || ""), wa = t.isReservedTag || T, function e(t) {
            t.static = function(e) {
                if (2 === e.type) return !1;
                if (3 === e.type) return !0;
                return !(!e.pre && (e.hasBindings || e.if || e.for || d(e.tag) || !wa(e.tag) || function(e) {
                    for (; e.parent;) {
                        if ("template" !== (e = e.parent).tag) return !1;
                        if (e.for) return !0
                    }
                    return !1
                }(e) || !Object.keys(e).every($a)))
            }(t);
            if (1 === t.type) {
                if (!wa(t.tag) && "slot" !== t.tag && null == t.attrsMap["inline-template"]) return;
                for (var n = 0, r = t.children.length; n < r; n++) {
                    var i = t.children[n];
                    e(i), i.static || (t.static = !1)
                }
                if (t.ifConditions)
                    for (var o = 1, a = t.ifConditions.length; o < a; o++) {
                        var s = t.ifConditions[o].block;
                        e(s), s.static || (t.static = !1)
                    }
            }
        }(e), function e(t, n) {
            if (1 === t.type) {
                if ((t.static || t.once) && (t.staticInFor = n), t.static && t.children.length && (1 !== t.children.length || 3 !== t.children[0].type)) return void(t.staticRoot = !0);
                if (t.staticRoot = !1, t.children)
                    for (var r = 0, i = t.children.length; r < i; r++) e(t.children[r], n || !!t.for);
                if (t.ifConditions)
                    for (var o = 1, a = t.ifConditions.length; o < a; o++) e(t.ifConditions[o].block, n)
            }
        }(e, !1))
    }
    var Aa = /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*(?:[\w$]+)?\s*\(/,
        Oa = /\([^)]*?\);*$/,
        Sa = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,
        Ta = {
            esc: 27,
            tab: 9,
            enter: 13,
            space: 32,
            up: 38,
            left: 37,
            right: 39,
            down: 40,
            delete: [8, 46]
        },
        Ea = {
            esc: ["Esc", "Escape"],
            tab: "Tab",
            enter: "Enter",
            space: [" ", "Spacebar"],
            up: ["Up", "ArrowUp"],
            left: ["Left", "ArrowLeft"],
            right: ["Right", "ArrowRight"],
            down: ["Down", "ArrowDown"],
            delete: ["Backspace", "Delete", "Del"]
        },
        Na = function(e) {
            return "if(" + e + ")return null;"
        },
        ja = {
            stop: "$event.stopPropagation();",
            prevent: "$event.preventDefault();",
            self: Na("$event.target !== $event.currentTarget"),
            ctrl: Na("!$event.ctrlKey"),
            shift: Na("!$event.shiftKey"),
            alt: Na("!$event.altKey"),
            meta: Na("!$event.metaKey"),
            left: Na("'button' in $event && $event.button !== 0"),
            middle: Na("'button' in $event && $event.button !== 1"),
            right: Na("'button' in $event && $event.button !== 2")
        };

    function Da(e, t) {
        var n = t ? "nativeOn:" : "on:",
            r = "",
            i = "";
        for (var o in e) {
            var a = La(e[o]);
            e[o] && e[o].dynamic ? i += o + "," + a + "," : r += '"' + o + '":' + a + ","
        }
        return r = "{" + r.slice(0, -1) + "}", i ? n + "_d(" + r + ",[" + i.slice(0, -1) + "])" : n + r
    }

    function La(e) {
        if (!e) return "function(){}";
        if (Array.isArray(e)) return "[" + e.map(function(e) {
            return La(e)
        }).join(",") + "]";
        var t = Sa.test(e.value),
            n = Aa.test(e.value),
            r = Sa.test(e.value.replace(Oa, ""));
        if (e.modifiers) {
            var i = "",
                o = "",
                a = [];
            for (var s in e.modifiers)
                if (ja[s]) o += ja[s], Ta[s] && a.push(s);
                else if ("exact" === s) {
                var c = e.modifiers;
                o += Na(["ctrl", "shift", "alt", "meta"].filter(function(e) {
                    return !c[e]
                }).map(function(e) {
                    return "$event." + e + "Key"
                }).join("||"))
            } else a.push(s);
            return a.length && (i += function(e) {
                return "if(!$event.type.indexOf('key')&&" + e.map(Ma).join("&&") + ")return null;"
            }(a)), o && (i += o), "function($event){" + i + (t ? "return " + e.value + "($event)" : n ? "return (" + e.value + ")($event)" : r ? "return " + e.value : e.value) + "}"
        }
        return t || n ? e.value : "function($event){" + (r ? "return " + e.value : e.value) + "}"
    }

    function Ma(e) {
        var t = parseInt(e, 10);
        if (t) return "$event.keyCode!==" + t;
        var n = Ta[e],
            r = Ea[e];
        return "_k($event.keyCode," + JSON.stringify(e) + "," + JSON.stringify(n) + ",$event.key," + JSON.stringify(r) + ")"
    }
    var Ia = {
            on: function(e, t) {
                e.wrapListeners = function(e) {
                    return "_g(" + e + "," + t.value + ")"
                }
            },
            bind: function(e, t) {
                e.wrapData = function(n) {
                    return "_b(" + n + ",'" + e.tag + "'," + t.value + "," + (t.modifiers && t.modifiers.prop ? "true" : "false") + (t.modifiers && t.modifiers.sync ? ",true" : "") + ")"
                }
            },
            cloak: S
        },
        Fa = function(e) {
            this.options = e, this.warn = e.warn || Sr, this.transforms = Tr(e.modules, "transformCode"), this.dataGenFns = Tr(e.modules, "genData"), this.directives = A(A({}, Ia), e.directives);
            var t = e.isReservedTag || T;
            this.maybeComponent = function(e) {
                return !!e.component || !t(e.tag)
            }, this.onceId = 0, this.staticRenderFns = [], this.pre = !1
        };

    function Pa(e, t) {
        var n = new Fa(t);
        return {
            render: "with(this){return " + (e ? Ra(e, n) : '_c("div")') + "}",
            staticRenderFns: n.staticRenderFns
        }
    }

    function Ra(e, t) {
        if (e.parent && (e.pre = e.pre || e.parent.pre), e.staticRoot && !e.staticProcessed) return Ha(e, t);
        if (e.once && !e.onceProcessed) return Ba(e, t);
        if (e.for && !e.forProcessed) return za(e, t);
        if (e.if && !e.ifProcessed) return Ua(e, t);
        if ("template" !== e.tag || e.slotTarget || t.pre) {
            if ("slot" === e.tag) return function(e, t) {
                var n = e.slotName || '"default"',
                    r = qa(e, t),
                    i = "_t(" + n + (r ? "," + r : ""),
                    o = e.attrs || e.dynamicAttrs ? Ga((e.attrs || []).concat(e.dynamicAttrs || []).map(function(e) {
                        return {
                            name: b(e.name),
                            value: e.value,
                            dynamic: e.dynamic
                        }
                    })) : null,
                    a = e.attrsMap["v-bind"];
                !o && !a || r || (i += ",null");
                o && (i += "," + o);
                a && (i += (o ? "" : ",null") + "," + a);
                return i + ")"
            }(e, t);
            var n;
            if (e.component) n = function(e, t, n) {
                var r = t.inlineTemplate ? null : qa(t, n, !0);
                return "_c(" + e + "," + Va(t, n) + (r ? "," + r : "") + ")"
            }(e.component, e, t);
            else {
                var r;
                (!e.plain || e.pre && t.maybeComponent(e)) && (r = Va(e, t));
                var i = e.inlineTemplate ? null : qa(e, t, !0);
                n = "_c('" + e.tag + "'" + (r ? "," + r : "") + (i ? "," + i : "") + ")"
            }
            for (var o = 0; o < t.transforms.length; o++) n = t.transforms[o](e, n);
            return n
        }
        return qa(e, t) || "void 0"
    }

    function Ha(e, t) {
        e.staticProcessed = !0;
        var n = t.pre;
        return e.pre && (t.pre = e.pre), t.staticRenderFns.push("with(this){return " + Ra(e, t) + "}"), t.pre = n, "_m(" + (t.staticRenderFns.length - 1) + (e.staticInFor ? ",true" : "") + ")"
    }

    function Ba(e, t) {
        if (e.onceProcessed = !0, e.if && !e.ifProcessed) return Ua(e, t);
        if (e.staticInFor) {
            for (var n = "", r = e.parent; r;) {
                if (r.for) {
                    n = r.key;
                    break
                }
                r = r.parent
            }
            return n ? "_o(" + Ra(e, t) + "," + t.onceId++ + "," + n + ")" : Ra(e, t)
        }
        return Ha(e, t)
    }

    function Ua(e, t, n, r) {
        return e.ifProcessed = !0,
            function e(t, n, r, i) {
                if (!t.length) return i || "_e()";
                var o = t.shift();
                return o.exp ? "(" + o.exp + ")?" + a(o.block) + ":" + e(t, n, r, i) : "" + a(o.block);

                function a(e) {
                    return r ? r(e, n) : e.once ? Ba(e, n) : Ra(e, n)
                }
            }(e.ifConditions.slice(), t, n, r)
    }

    function za(e, t, n, r) {
        var i = e.for,
            o = e.alias,
            a = e.iterator1 ? "," + e.iterator1 : "",
            s = e.iterator2 ? "," + e.iterator2 : "";
        return e.forProcessed = !0, (r || "_l") + "((" + i + "),function(" + o + a + s + "){return " + (n || Ra)(e, t) + "})"
    }

    function Va(e, t) {
        var n = "{",
            r = function(e, t) {
                var n = e.directives;
                if (!n) return;
                var r, i, o, a, s = "directives:[",
                    c = !1;
                for (r = 0, i = n.length; r < i; r++) {
                    o = n[r], a = !0;
                    var u = t.directives[o.name];
                    u && (a = !!u(e, o, t.warn)), a && (c = !0, s += '{name:"' + o.name + '",rawName:"' + o.rawName + '"' + (o.value ? ",value:(" + o.value + "),expression:" + JSON.stringify(o.value) : "") + (o.arg ? ",arg:" + (o.isDynamicArg ? o.arg : '"' + o.arg + '"') : "") + (o.modifiers ? ",modifiers:" + JSON.stringify(o.modifiers) : "") + "},")
                }
                if (c) return s.slice(0, -1) + "]"
            }(e, t);
        r && (n += r + ","), e.key && (n += "key:" + e.key + ","), e.ref && (n += "ref:" + e.ref + ","), e.refInFor && (n += "refInFor:true,"), e.pre && (n += "pre:true,"), e.component && (n += 'tag:"' + e.tag + '",');
        for (var i = 0; i < t.dataGenFns.length; i++) n += t.dataGenFns[i](e);
        if (e.attrs && (n += "attrs:" + Ga(e.attrs) + ","), e.props && (n += "domProps:" + Ga(e.props) + ","), e.events && (n += Da(e.events, !1) + ","), e.nativeEvents && (n += Da(e.nativeEvents, !0) + ","), e.slotTarget && !e.slotScope && (n += "slot:" + e.slotTarget + ","), e.scopedSlots && (n += function(e, t, n) {
                var r = e.for || Object.keys(t).some(function(e) {
                        var n = t[e];
                        return n.slotTargetDynamic || n.if || n.for || Ka(n)
                    }),
                    i = !!e.if;
                if (!r)
                    for (var o = e.parent; o;) {
                        if (o.slotScope && o.slotScope !== ca || o.for) {
                            r = !0;
                            break
                        }
                        o.if && (i = !0), o = o.parent
                    }
                var a = Object.keys(t).map(function(e) {
                    return Ja(t[e], n)
                }).join(",");
                return "scopedSlots:_u([" + a + "]" + (r ? ",null,true" : "") + (!r && i ? ",null,false," + function(e) {
                    var t = 5381,
                        n = e.length;
                    for (; n;) t = 33 * t ^ e.charCodeAt(--n);
                    return t >>> 0
                }(a) : "") + ")"
            }(e, e.scopedSlots, t) + ","), e.model && (n += "model:{value:" + e.model.value + ",callback:" + e.model.callback + ",expression:" + e.model.expression + "},"), e.inlineTemplate) {
            var o = function(e, t) {
                var n = e.children[0];
                if (n && 1 === n.type) {
                    var r = Pa(n, t.options);
                    return "inlineTemplate:{render:function(){" + r.render + "},staticRenderFns:[" + r.staticRenderFns.map(function(e) {
                        return "function(){" + e + "}"
                    }).join(",") + "]}"
                }
            }(e, t);
            o && (n += o + ",")
        }
        return n = n.replace(/,$/, "") + "}", e.dynamicAttrs && (n = "_b(" + n + ',"' + e.tag + '",' + Ga(e.dynamicAttrs) + ")"), e.wrapData && (n = e.wrapData(n)), e.wrapListeners && (n = e.wrapListeners(n)), n
    }

    function Ka(e) {
        return 1 === e.type && ("slot" === e.tag || e.children.some(Ka))
    }

    function Ja(e, t) {
        var n = e.attrsMap["slot-scope"];
        if (e.if && !e.ifProcessed && !n) return Ua(e, t, Ja, "null");
        if (e.for && !e.forProcessed) return za(e, t, Ja);
        var r = e.slotScope === ca ? "" : String(e.slotScope),
            i = "function(" + r + "){return " + ("template" === e.tag ? e.if && n ? "(" + e.if+")?" + (qa(e, t) || "undefined") + ":undefined" : qa(e, t) || "undefined" : Ra(e, t)) + "}",
            o = r ? "" : ",proxy:true";
        return "{key:" + (e.slotTarget || '"default"') + ",fn:" + i + o + "}"
    }

    function qa(e, t, n, r, i) {
        var o = e.children;
        if (o.length) {
            var a = o[0];
            if (1 === o.length && a.for && "template" !== a.tag && "slot" !== a.tag) {
                var s = n ? t.maybeComponent(a) ? ",1" : ",0" : "";
                return "" + (r || Ra)(a, t) + s
            }
            var c = n ? function(e, t) {
                    for (var n = 0, r = 0; r < e.length; r++) {
                        var i = e[r];
                        if (1 === i.type) {
                            if (Wa(i) || i.ifConditions && i.ifConditions.some(function(e) {
                                    return Wa(e.block)
                                })) {
                                n = 2;
                                break
                            }(t(i) || i.ifConditions && i.ifConditions.some(function(e) {
                                return t(e.block)
                            })) && (n = 1)
                        }
                    }
                    return n
                }(o, t.maybeComponent) : 0,
                u = i || Za;
            return "[" + o.map(function(e) {
                return u(e, t)
            }).join(",") + "]" + (c ? "," + c : "")
        }
    }

    function Wa(e) {
        return void 0 !== e.for || "template" === e.tag || "slot" === e.tag
    }

    function Za(e, t) {
        return 1 === e.type ? Ra(e, t) : 3 === e.type && e.isComment ? (r = e, "_e(" + JSON.stringify(r.text) + ")") : "_v(" + (2 === (n = e).type ? n.expression : Xa(JSON.stringify(n.text))) + ")";
        var n, r
    }

    function Ga(e) {
        for (var t = "", n = "", r = 0; r < e.length; r++) {
            var i = e[r],
                o = Xa(i.value);
            i.dynamic ? n += i.name + "," + o + "," : t += '"' + i.name + '":' + o + ","
        }
        return t = "{" + t.slice(0, -1) + "}", n ? "_d(" + t + ",[" + n.slice(0, -1) + "])" : t
    }

    function Xa(e) {
        return e.replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029")
    }
    new RegExp("\\b" + "do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b") + "\\b");

    function Ya(e, t) {
        try {
            return new Function(e)
        } catch (n) {
            return t.push({
                err: n,
                code: e
            }), S
        }
    }

    function Qa(e) {
        var t = Object.create(null);
        return function(n, r, i) {
            (r = A({}, r)).warn;
            delete r.warn;
            var o = r.delimiters ? String(r.delimiters) + n : n;
            if (t[o]) return t[o];
            var a = e(n, r),
                s = {},
                c = [];
            return s.render = Ya(a.render, c), s.staticRenderFns = a.staticRenderFns.map(function(e) {
                return Ya(e, c)
            }), t[o] = s
        }
    }
    var es, ts, ns = (es = function(e, t) {
            var n = la(e.trim(), t);
            !1 !== t.optimize && ka(n, t);
            var r = Pa(n, t);
            return {
                ast: n,
                render: r.render,
                staticRenderFns: r.staticRenderFns
            }
        }, function(e) {
            function t(t, n) {
                var r = Object.create(e),
                    i = [],
                    o = [];
                if (n)
                    for (var a in n.modules && (r.modules = (e.modules || []).concat(n.modules)), n.directives && (r.directives = A(Object.create(e.directives || null), n.directives)), n) "modules" !== a && "directives" !== a && (r[a] = n[a]);
                r.warn = function(e, t, n) {
                    (n ? o : i).push(e)
                };
                var s = es(t.trim(), r);
                return s.errors = i, s.tips = o, s
            }
            return {
                compile: t,
                compileToFunctions: Qa(t)
            }
        })(Ca),
        rs = (ns.compile, ns.compileToFunctions);

    function is(e) {
        return (ts = ts || document.createElement("div")).innerHTML = e ? '<a href="\n"/>' : '<div a="\n"/>', ts.innerHTML.indexOf("&#10;") > 0
    }
    var os = !!z && is(!1),
        as = !!z && is(!0),
        ss = g(function(e) {
            var t = Yn(e);
            return t && t.innerHTML
        }),
        cs = wn.prototype.$mount;
    return wn.prototype.$mount = function(e, t) {
        if ((e = e && Yn(e)) === document.body || e === document.documentElement) return this;
        var n = this.$options;
        if (!n.render) {
            var r = n.template;
            if (r)
                if ("string" == typeof r) "#" === r.charAt(0) && (r = ss(r));
                else {
                    if (!r.nodeType) return this;
                    r = r.innerHTML
                }
            else e && (r = function(e) {
                if (e.outerHTML) return e.outerHTML;
                var t = document.createElement("div");
                return t.appendChild(e.cloneNode(!0)), t.innerHTML
            }(e));
            if (r) {
                var i = rs(r, {
                        outputSourceRange: !1,
                        shouldDecodeNewlines: os,
                        shouldDecodeNewlinesForHref: as,
                        delimiters: n.delimiters,
                        comments: n.comments
                    }, this),
                    o = i.render,
                    a = i.staticRenderFns;
                n.render = o, n.staticRenderFns = a
            }
        }
        return cs.call(this, e, t)
    }, wn.compile = rs, wn
});
! function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = t || self).Vuex = e()
}(this, function() {
    "use strict";
    var u = "undefined" != typeof window && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

    function a(e, n) {
        Object.keys(e).forEach(function(t) {
            return n(e[t], t)
        })
    }
    var r = function(t, e) {
            this.runtime = e, this._children = Object.create(null);
            var n = (this._rawModule = t).state;
            this.state = ("function" == typeof n ? n() : n) || {}
        },
        t = {
            namespaced: {
                configurable: !0
            }
        };
    t.namespaced.get = function() {
        return !!this._rawModule.namespaced
    }, r.prototype.addChild = function(t, e) {
        this._children[t] = e
    }, r.prototype.removeChild = function(t) {
        delete this._children[t]
    }, r.prototype.getChild = function(t) {
        return this._children[t]
    }, r.prototype.update = function(t) {
        this._rawModule.namespaced = t.namespaced, t.actions && (this._rawModule.actions = t.actions), t.mutations && (this._rawModule.mutations = t.mutations), t.getters && (this._rawModule.getters = t.getters)
    }, r.prototype.forEachChild = function(t) {
        a(this._children, t)
    }, r.prototype.forEachGetter = function(t) {
        this._rawModule.getters && a(this._rawModule.getters, t)
    }, r.prototype.forEachAction = function(t) {
        this._rawModule.actions && a(this._rawModule.actions, t)
    }, r.prototype.forEachMutation = function(t) {
        this._rawModule.mutations && a(this._rawModule.mutations, t)
    }, Object.defineProperties(r.prototype, t);
    var m, f = function(t) {
        this.register([], t, !1)
    };
    f.prototype.get = function(t) {
        return t.reduce(function(t, e) {
            return t.getChild(e)
        }, this.root)
    }, f.prototype.getNamespace = function(t) {
        var n = this.root;
        return t.reduce(function(t, e) {
            return t + ((n = n.getChild(e)).namespaced ? e + "/" : "")
        }, "")
    }, f.prototype.update = function(t) {
        ! function t(e, n, o) {
            n.update(o);
            if (o.modules)
                for (var i in o.modules) {
                    if (!n.getChild(i)) return;
                    t(e.concat(i), n.getChild(i), o.modules[i])
                }
        }([], this.root, t)
    }, f.prototype.register = function(n, t, o) {
        var i = this;
        void 0 === o && (o = !0);
        var e = new r(t, o);
        0 === n.length ? this.root = e : this.get(n.slice(0, -1)).addChild(n[n.length - 1], e);
        t.modules && a(t.modules, function(t, e) {
            i.register(n.concat(e), t, o)
        })
    }, f.prototype.unregister = function(t) {
        var e = this.get(t.slice(0, -1)),
            n = t[t.length - 1];
        e.getChild(n).runtime && e.removeChild(n)
    };
    var e = function(t) {
            var e = this;
            void 0 === t && (t = {}), !m && "undefined" != typeof window && window.Vue && p(window.Vue);
            var n = t.plugins;
            void 0 === n && (n = []);
            var o = t.strict;
            void 0 === o && (o = !1), this._committing = !1, this._actions = Object.create(null), this._actionSubscribers = [], this._mutations = Object.create(null), this._wrappedGetters = Object.create(null), this._modules = new f(t), this._modulesNamespaceMap = Object.create(null), this._subscribers = [], this._watcherVM = new m;
            var i = this,
                r = this.dispatch,
                s = this.commit;
            this.dispatch = function(t, e) {
                return r.call(i, t, e)
            }, this.commit = function(t, e, n) {
                return s.call(i, t, e, n)
            }, this.strict = o;
            var a, c = this._modules.root.state;
            v(this, c, [], this._modules.root), h(this, c), n.forEach(function(t) {
                return t(e)
            }), (void 0 !== t.devtools ? t.devtools : m.config.devtools) && (a = this, u && ((a._devtoolHook = u).emit("vuex:init", a), u.on("vuex:travel-to-state", function(t) {
                a.replaceState(t)
            }), a.subscribe(function(t, e) {
                u.emit("vuex:mutation", t, e)
            })))
        },
        n = {
            state: {
                configurable: !0
            }
        };

    function o(e, n) {
        return n.indexOf(e) < 0 && n.push(e),
            function() {
                var t = n.indexOf(e); - 1 < t && n.splice(t, 1)
            }
    }

    function i(t, e) {
        t._actions = Object.create(null), t._mutations = Object.create(null), t._wrappedGetters = Object.create(null), t._modulesNamespaceMap = Object.create(null);
        var n = t.state;
        v(t, n, [], t._modules.root, !0), h(t, n, e)
    }

    function h(n, t, e) {
        var o = n._vm;
        n.getters = {};
        var i = n._wrappedGetters,
            r = {};
        a(i, function(t, e) {
            r[e] = function() {
                return t(n)
            }, Object.defineProperty(n.getters, e, {
                get: function() {
                    return n._vm[e]
                },
                enumerable: !0
            })
        });
        var s = m.config.silent;
        m.config.silent = !0, n._vm = new m({
            data: {
                $$state: t
            },
            computed: r
        }), m.config.silent = s, n.strict && n._vm.$watch(function() {
            return this._data.$$state
        }, function() {}, {
            deep: !0,
            sync: !0
        }), o && (e && n._withCommit(function() {
            o._data.$$state = null
        }), m.nextTick(function() {
            return o.$destroy()
        }))
    }

    function v(c, n, o, t, i) {
        var e = !o.length,
            u = c._modules.getNamespace(o);
        if (t.namespaced && (c._modulesNamespaceMap[u] = t), !e && !i) {
            var r = _(n, o.slice(0, -1)),
                s = o[o.length - 1];
            c._withCommit(function() {
                m.set(r, s, t.state)
            })
        }
        var a, f, h, p, l, d = t.context = (a = c, h = o, l = {
            dispatch: (p = "" === (f = u)) ? a.dispatch : function(t, e, n) {
                var o = y(t, e, n),
                    i = o.payload,
                    r = o.options,
                    s = o.type;
                return r && r.root || (s = f + s), a.dispatch(s, i)
            },
            commit: p ? a.commit : function(t, e, n) {
                var o = y(t, e, n),
                    i = o.payload,
                    r = o.options,
                    s = o.type;
                r && r.root || (s = f + s), a.commit(s, i, r)
            }
        }, Object.defineProperties(l, {
            getters: {
                get: p ? function() {
                    return a.getters
                } : function() {
                    return n = a, i = {}, r = (o = f).length, Object.keys(n.getters).forEach(function(t) {
                        if (t.slice(0, r) === o) {
                            var e = t.slice(r);
                            Object.defineProperty(i, e, {
                                get: function() {
                                    return n.getters[t]
                                },
                                enumerable: !0
                            })
                        }
                    }), i;
                    var n, o, i, r
                }
            },
            state: {
                get: function() {
                    return _(a.state, h)
                }
            }
        }), l);
        t.forEachMutation(function(t, e) {
            var n, o, i, r;
            o = u + e, i = t, r = d, ((n = c)._mutations[o] || (n._mutations[o] = [])).push(function(t) {
                i.call(n, r.state, t)
            })
        }), t.forEachAction(function(t, e) {
            var i, n, r, s, o = t.root ? e : u + e,
                a = t.handler || t;
            n = o, r = a, s = d, ((i = c)._actions[n] || (i._actions[n] = [])).push(function(t, e) {
                var n, o = r.call(i, {
                    dispatch: s.dispatch,
                    commit: s.commit,
                    getters: s.getters,
                    state: s.state,
                    rootGetters: i.getters,
                    rootState: i.state
                }, t, e);
                return (n = o) && "function" == typeof n.then || (o = Promise.resolve(o)), i._devtoolHook ? o.catch(function(t) {
                    throw i._devtoolHook.emit("vuex:error", t), t
                }) : o
            })
        }), t.forEachGetter(function(t, e) {
            ! function(t, e, n, o) {
                if (t._wrappedGetters[e]) return;
                t._wrappedGetters[e] = function(t) {
                    return n(o.state, o.getters, t.state, t.getters)
                }
            }(c, u + e, t, d)
        }), t.forEachChild(function(t, e) {
            v(c, n, o.concat(e), t, i)
        })
    }

    function _(t, e) {
        return e.length ? e.reduce(function(t, e) {
            return t[e]
        }, t) : t
    }

    function y(t, e, n) {
        var o;
        return null !== (o = t) && "object" == typeof o && t.type && (n = e, t = (e = t).type), {
            type: t,
            payload: e,
            options: n
        }
    }

    function p(t) {
        m && t === m || function(t) {
            if (2 <= Number(t.version.split(".")[0])) t.mixin({
                beforeCreate: n
            });
            else {
                var e = t.prototype._init;
                t.prototype._init = function(t) {
                    void 0 === t && (t = {}), t.init = t.init ? [n].concat(t.init) : n, e.call(this, t)
                }
            }

            function n() {
                var t = this.$options;
                t.store ? this.$store = "function" == typeof t.store ? t.store() : t.store : t.parent && t.parent.$store && (this.$store = t.parent.$store)
            }
        }(m = t)
    }
    n.state.get = function() {
        return this._vm._data.$$state
    }, n.state.set = function(t) {}, e.prototype.commit = function(t, e, n) {
        var o = this,
            i = y(t, e, n),
            r = i.type,
            s = i.payload,
            a = {
                type: r,
                payload: s
            },
            c = this._mutations[r];
        c && (this._withCommit(function() {
            c.forEach(function(t) {
                t(s)
            })
        }), this._subscribers.forEach(function(t) {
            return t(a, o.state)
        }))
    }, e.prototype.dispatch = function(t, e) {
        var n = this,
            o = y(t, e),
            i = o.type,
            r = o.payload,
            s = {
                type: i,
                payload: r
            },
            a = this._actions[i];
        if (a) {
            try {
                this._actionSubscribers.filter(function(t) {
                    return t.before
                }).forEach(function(t) {
                    return t.before(s, n.state)
                })
            } catch (t) {}
            return (1 < a.length ? Promise.all(a.map(function(t) {
                return t(r)
            })) : a[0](r)).then(function(t) {
                try {
                    n._actionSubscribers.filter(function(t) {
                        return t.after
                    }).forEach(function(t) {
                        return t.after(s, n.state)
                    })
                } catch (t) {}
                return t
            })
        }
    }, e.prototype.subscribe = function(t) {
        return o(t, this._subscribers)
    }, e.prototype.subscribeAction = function(t) {
        return o("function" == typeof t ? {
            before: t
        } : t, this._actionSubscribers)
    }, e.prototype.watch = function(t, e, n) {
        var o = this;
        return this._watcherVM.$watch(function() {
            return t(o.state, o.getters)
        }, e, n)
    }, e.prototype.replaceState = function(t) {
        var e = this;
        this._withCommit(function() {
            e._vm._data.$$state = t
        })
    }, e.prototype.registerModule = function(t, e, n) {
        void 0 === n && (n = {}), "string" == typeof t && (t = [t]), this._modules.register(t, e), v(this, this.state, t, this._modules.get(t), n.preserveState), h(this, this.state)
    }, e.prototype.unregisterModule = function(e) {
        var n = this;
        "string" == typeof e && (e = [e]), this._modules.unregister(e), this._withCommit(function() {
            var t = _(n.state, e.slice(0, -1));
            m.delete(t, e[e.length - 1])
        }), i(this)
    }, e.prototype.hotUpdate = function(t) {
        this._modules.update(t), i(this, !0)
    }, e.prototype._withCommit = function(t) {
        var e = this._committing;
        this._committing = !0, t(), this._committing = e
    }, Object.defineProperties(e.prototype, n);
    var s = b(function(i, t) {
            var n = {};
            return g(t).forEach(function(t) {
                var e = t.key,
                    o = t.val;
                n[e] = function() {
                    var t = this.$store.state,
                        e = this.$store.getters;
                    if (i) {
                        var n = w(this.$store, "mapState", i);
                        if (!n) return;
                        t = n.context.state, e = n.context.getters
                    }
                    return "function" == typeof o ? o.call(this, t, e) : t[o]
                }, n[e].vuex = !0
            }), n
        }),
        c = b(function(r, t) {
            var n = {};
            return g(t).forEach(function(t) {
                var e = t.key,
                    i = t.val;
                n[e] = function() {
                    for (var t = [], e = arguments.length; e--;) t[e] = arguments[e];
                    var n = this.$store.commit;
                    if (r) {
                        var o = w(this.$store, "mapMutations", r);
                        if (!o) return;
                        n = o.context.commit
                    }
                    return "function" == typeof i ? i.apply(this, [n].concat(t)) : n.apply(this.$store, [i].concat(t))
                }
            }), n
        }),
        l = b(function(o, t) {
            var i = {};
            return g(t).forEach(function(t) {
                var e = t.key,
                    n = t.val;
                n = o + n, i[e] = function() {
                    if (!o || w(this.$store, "mapGetters", o)) return this.$store.getters[n]
                }, i[e].vuex = !0
            }), i
        }),
        d = b(function(r, t) {
            var n = {};
            return g(t).forEach(function(t) {
                var e = t.key,
                    i = t.val;
                n[e] = function() {
                    for (var t = [], e = arguments.length; e--;) t[e] = arguments[e];
                    var n = this.$store.dispatch;
                    if (r) {
                        var o = w(this.$store, "mapActions", r);
                        if (!o) return;
                        n = o.context.dispatch
                    }
                    return "function" == typeof i ? i.apply(this, [n].concat(t)) : n.apply(this.$store, [i].concat(t))
                }
            }), n
        });

    function g(e) {
        return Array.isArray(e) ? e.map(function(t) {
            return {
                key: t,
                val: t
            }
        }) : Object.keys(e).map(function(t) {
            return {
                key: t,
                val: e[t]
            }
        })
    }

    function b(n) {
        return function(t, e) {
            return "string" != typeof t ? (e = t, t = "") : "/" !== t.charAt(t.length - 1) && (t += "/"), n(t, e)
        }
    }

    function w(t, e, n) {
        return t._modulesNamespaceMap[n]
    }
    return {
        Store: e,
        install: p,
        version: "3.1.0",
        mapState: s,
        mapMutations: c,
        mapGetters: l,
        mapActions: d,
        createNamespacedHelpers: function(t) {
            return {
                mapState: s.bind(null, t),
                mapGetters: l.bind(null, t),
                mapMutations: c.bind(null, t),
                mapActions: d.bind(null, t)
            }
        }
    }
});
const billingCheckbox = {
    template: "#t-mg-one-page-billing-checkbox-input",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            supportedValue: null,
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false,
            value: false
        }
    },
    watch: {
        value: function(value) {
            let supportedValue = value === true ? "on" : "";
            this.$set(this.data, this.field.name, supportedValue);
            this.updateValue(supportedValue, true)
        }
    },
    created() {
        var self = this;
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed) {
                return
            }
            self.validateField(self.data[self.field.name])
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        })
    },
    destroyed() {
        this.isDestructed = true
    },
    computed: {
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        }
    },
    methods: {
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.name, this.data.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        updateValue(value, validateField) {
            if (validateField === true) {
                this.validateField(value)
            }
            this.supportedValue = value
        },
        validateField(value) {
            for (const [key, validatorName] of Object.entries(this.field.validators)) {
                if (typeof window[validatorName] !== "function") {
                    console.log("validator not found: " + validatorName);
                    return
                }
                var result = window[validatorName](this.field.name, value);
                if (this.userDetails.id > 0 && !$("input#firstname:visible").length || result === true) {
                    this.isValidField = true;
                    this.fieldValidationMessages = null;
                    pageOrderStore.commit("cartStore/popValidateError", this.field.name)
                } else if (this.field.required) {
                    this.isValidField = false;
                    this.fieldValidationMessages = result;
                    pageOrderStore.commit("cartStore/pushValidateError", {
                        id: this.field.name,
                        error: result
                    });
                    break
                }
            }
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.name] = this.value
            }
            this.requireValidator()
        }
    }
};
const billingDropdown = {
    template: "#t-mg-one-page-billing-dropdown-field",
    components: {},
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            value: null,
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false,
            test: "nyullll"
        }
    },
    watch: {
        data: {
            handler(val, old) {
                if (val[this.field.name] != this.value) {
                    this.updateValue(val[this.field.name], true)
                }
            },
            deep: true
        },
        value: {
            handler(value) {
                this.$set(this.data, this.field.name, value);
                this.updateValue(value, true)
            }
        }
    },
    computed: {
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        }
    },
    created() {
        var self = this;
        self.$nextTick(() => {
            self.interactive = true;
            self.value = Object.keys(self.field.options)[0];
            self.data[self.field.name] = self.value
        });
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed) {
                return
            }
            self.validateField(self.value)
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        });
        this.updateValue(this.data[this.field.name], false)
    },
    destroyed() {
        this.isDestructed = true
    },
    methods: {
        updateValue(value, valid) {
            if (valid === true) {
                this.validateField(value)
            }
            this.value = value
        },
        validateField(value) {
            for (const [key, validatorName] of Object.entries(this.field.validators)) {
                if (typeof window[validatorName] !== "function") {
                    console.log("validator not found: " + validatorName);
                    return
                }
                var result = window[validatorName](name, value)
            }
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            let self = this;
            if (this.interactive) {
                this.data[this.field.name] = this.value
            }
        }
    }
};
const billingLink = {
    template: "#t-mg-one-page-billing-link-field",
    components: {},
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            value: null,
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false
        }
    },
    watch: {
        value: {
            handler(value) {
                this.updateValue(value, true)
            }
        }
    },
    created() {
        var self = this;
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed) {
                return
            }
            self.validateField(self.value)
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        });
        this.$nextTick(function() {
            if (this.field.required) {
                document.getElementById("checkout").addEventListener("click", () => {
                    self.validateField(self.value)
                })
            }
        })
    },
    destroyed() {
        this.isDestructed = true
    },
    computed: {
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        }
    },
    methods: {
        updateValue(value, valid) {
            if (valid === true) {
                this.validateField(value)
            }
            this.value = value
        },
        validateField(value) {
            if (!this.field.required || this.userDetails.id > 0 && !$("input#firstname:visible").length) {
                pageOrderStore.commit("cartStore/popValidateError", this.field.id);
                this.isValidField = true;
                this.fieldValidationMessages = null;
                this.data[this.field.name] = this.value
            } else if (!value) {
                this.isValidField = false;
                this.fieldValidationMessages = this.field.validators[1];
                pageOrderStore.commit("cartStore/pushValidateError", {
                    id: this.field.id,
                    error: this.field.validators[1]
                })
            } else if (!value.match(/^(http(s)?:\/\/)[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/)) {
                this.isValidField = false;
                this.fieldValidationMessages = this.field.validators[0];
                pageOrderStore.commit("cartStore/pushValidateError", {
                    id: this.field.id,
                    error: this.field.validators[0]
                })
            } else {
                pageOrderStore.commit("cartStore/popValidateError", this.field.id);
                this.isValidField = true;
                this.fieldValidationMessages = null;
                this.data[this.field.name] = this.value
            }
        },
        getValidationMessage() {
            return mgPageLang.translate(this.fieldValidationMessages, "")
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.name] = this.value
            }
        }
    }
};
const billingPassword = {
    template: "#t-mg-one-page-billing-password-field",
    components: {},
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            value: null,
            isValidated: true,
            fieldValidationMessages: null,
            isDestructed: false,
            isValidField: true,
            isMatched: true,
            password: null
        }
    },
    watch: {
        value: {
            handler(val) {
                this.updateValue(val, true)
            },
            deep: true
        }
    },
    computed: {
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        }
    },
    created() {
        var self = this;
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed) {
                return
            }
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        });
        this.$nextTick(function() {
            const checkout = document.getElementById("checkout");
            if (checkout) {
                document.getElementById("checkout").addEventListener("click", () => {
                    if (this.areRegisterDetailsVisible()) {
                        self.validateField(self.value)
                    }
                })
            }
        })
    },
    destroyed() {
        this.isDestructed = true
    },
    methods: {
        updateValue(value, valid) {
            if (valid === true) {
                this.validateField(value)
            }
            this.password = $("#password").val();
            this.isMatched = !(this.field.name === "password2" && this.password !== value);
            this.$set(this.data, this.field.name, this.value)
        },
        validateField(value) {
            this.isValidField = !(!value && (this.field.required || this.field.name === "password2"))
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        changeValue() {
            this.$set(this.data, this.field.name, this.value);
            this.updateValue(this.value, true)
        },
        forcePassword() {
            this.value = $("#" + this.field.id).val();
            this.$set(this.data, this.field.name, this.value);
            this.updateValue(this.value, true)
        },
        areRegisterDetailsVisible() {
            return $("#phonenumber:visible").length
        }
    }
};
const billingTextArea = {
    template: "#t-mg-one-page-billing-text-area-field",
    components: {},
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            value: null,
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false
        }
    },
    watch: {
        value: {
            handler(value) {
                this.$set(this.data, this.field.name, value);
                this.updateValue(value, true);
                if (this.field.required) {
                    this.validateField(value)
                }
            }
        }
    },
    computed: {
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        }
    },
    created() {
        var self = this;
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed) {
                return
            }
            self.requireValidator();
            self.validateField(self.value)
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        });
        this.updateValue(this.data[this.field.name], false)
    },
    destroyed() {
        this.isDestructed = true
    },
    methods: {
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.name, this.data.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        updateValue(value, valid) {
            if (valid === true) {
                this.validateField(value)
            }
        },
        validateField(value) {
            for (const [key, validatorName] of Object.entries(this.field.validators)) {
                if (typeof window[validatorName] !== "function") {
                    console.log("validator not found: " + validatorName);
                    return
                }
                let result = window[validatorName](this.field.name, value);
                if (this.userDetails.id > 0 && !$("input#firstname:visible").length || result === true) {
                    pageOrderStore.commit("cartStore/popValidateError", this.field.id);
                    this.isValidField = true;
                    this.fieldValidationMessages = null
                } else if (this.field.required) {
                    this.isValidField = false;
                    this.fieldValidationMessages = result;
                    pageOrderStore.commit("cartStore/pushValidateError", {
                        id: this.field.id,
                        error: result
                    });
                    break
                }
            }
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.name] = this.value
            }
        }
    }
};
const billingTextInput = {
    template: "#t-mg-one-page-billing-text-field",
    components: {},
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            value: null,
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false
        }
    },
    watch: {
        data: {
            handler(val, old) {
                if (val[this.field.name] != this.value) {
                    this.updateValue(val[this.field.name], true)
                }
            },
            deep: true
        },
        value: {
            handler(value) {
                this.$set(this.data, this.field.name, value);
                this.updateValue(value, true);
                if (this.field.required) {
                    this.validateField(value)
                }
            }
        }
    },
    created() {
        var self = this;
        self.$nextTick(() => {
            self.isValidField = true
        });
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed) {
                return
            }
            self.validateField(self.value)
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        });
        this.updateValue(this.data[this.field.name], false)
    },
    destroyed() {
        this.isDestructed = true
    },
    computed: {
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        }
    },
    methods: {
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.name, this.data.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        updateValue(value, valid) {
            if (valid === true) {
                this.validateField(value)
            }
            this.value = value
        },
        validateField(value) {
            let self = this;
            if (this.field.required) {
                for (const [key, validatorName] of Object.entries(this.field.validators)) {
                    if (typeof window[validatorName] !== "function") {
                        console.log("validator not found: " + validatorName);
                        return
                    }
                    var result = window[validatorName](self.field.name, value);
                    if (self.userDetails.id > 0 && !$("input#firstname:visible").length || result === true) {
                        self.isValidField = true;
                        self.fieldValidationMessages = null;
                        pageOrderStore.commit("cartStore/popValidateError", this.field.name.id)
                    } else if (this.field.required) {
                        self.isValidField = false;
                        self.fieldValidationMessages = result;
                        pageOrderStore.commit("cartStore/pushValidateError", {
                            id: this.field.id,
                            error: result
                        });
                        break
                    }
                }
            }
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.name] = this.value
            }
        }
    }
};
const billingUserPassword = {
    template: "#t-mg-one-page-billing-user-password-field",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            progressBar: {
                styles: {
                    width: "0px"
                },
                statusClass: "",
                inputFrameClass: ""
            },
            value: null,
            generatedPassword: null,
            pwLength: 8,
            isValidField: true,
            fieldValidationMessages: null,
            password: null
        }
    },
    computed: {
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        }
    },
    userExist: {
        get() {
            return !!this.userDetails.id
        }
    },
    created() {
        var self = this;
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed) {
                return
            }
            self.validateField(self.value)
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        });
        this.updateValue(this.data[this.field.name], false)
    },
    watch: {
        value: function(value) {
            this.passwordStrength(this.value);
            if (!value) {
                this.isValidField = false
            } else {
                this.isValidField = true
            }
        }
    },
    methods: {
        passwordStrength: function(password) {
            password = password ? password : "";
            if (typeof window.langPasswordWeak === "undefined") {
                window.langPasswordWeak = mgPageLang.translate("weak")
            }
            if (typeof window.langPasswordModerate === "undefined") {
                window.langPasswordModerate = mgPageLang.translate("moderate")
            }
            if (typeof window.langPasswordStrong === "undefined") {
                window.langPasswordStrong = mgPageLang.translate("strong")
            }
            if (typeof window.tooShort === "undefined") {
                window.langPasswordTooShort = mgPageLang.translate("passwordTooShort")
            }
            var pwStrengthErrorThreshold = 50;
            var pwStrengthWarningThreshold = 75;
            var pwlength = password.length > 1 ? password.length : 2;
            if (pwlength > 5) pwlength = 5;
            var numnumeric = password.replace(/[0-9]/g, "");
            var numeric = password.length - numnumeric.length;
            if (numeric > 3) numeric = 3;
            var symbols = password.replace(/\W/g, "");
            var numsymbols = password.length - symbols.length;
            if (numsymbols > 3) numsymbols = 3;
            var numupper = password.replace(/[A-Z]/g, "");
            var upper = password.length - numupper.length;
            if (upper > 3) upper = 3;
            var pwstrength = pwlength * 10 - 20 + numeric * 10 + numsymbols * 15 + upper * 10;
            if (pwstrength < 0) pwstrength = 0;
            if (pwstrength > 100) pwstrength = 100;
            if (pwstrength !== 0 && pwstrength < 20) {
                pwstrength = 20
            }
            this.progressBar.styles.width = pwstrength + "%";
            if (pwlength < 4) {
                $("#passwordStrengthBar-inputNewPassword").hide();
                this.progressBar.statusClass = "";
                this.progressBar.inputFrameClass = "";
                jQuery("#passwordStrengthTextLabel").html(langPasswordTooShort)
            } else if (pwstrength < pwStrengthErrorThreshold) {
                $("#passwordStrengthBar-inputNewPassword").show();
                this.progressBar.statusClass = "progress-bar-danger";
                this.progressBar.inputFrameClass = "has-error has-error-pw";
                jQuery("#passwordStrengthTextLabel").html(langPasswordWeak)
            } else if (pwstrength < pwStrengthWarningThreshold) {
                $("#passwordStrengthBar-inputNewPassword").show();
                this.progressBar.statusClass = "progress-bar-warning";
                this.progressBar.inputFrameClass = "has-warning has-warning-pw";
                jQuery("#passwordStrengthTextLabel").html(langPasswordModerate)
            } else {
                $("#passwordStrengthBar-inputNewPassword").show();
                this.progressBar.statusClass = "progress-bar-success";
                this.progressBar.inputFrameClass = "has-success has-success-pw";
                jQuery("#passwordStrengthTextLabel").html(langPasswordStrong)
            }
        },
        showModal() {
            const self = this;
            this.generatedPassword = null;
            this.pwLength = 8;
            $("#modalGeneratePassword").modal();
            $("#modalGeneratePassword .btn[type=submit]").trigger("click");
            $("#modalGeneratePassword").attr("data-targetfields", "password,inputNewPassword2");
            $("#btnGeneratePasswordInsert").on("click", function(e) {
                self.value = $("#password").val();
                $("#inputNewPassword2").trigger("change");
                $("#inputNewPassword2")[0].dispatchEvent(new Event("forcePassword"));
                self.updateValue()
            })
        },
        updateValue() {
            this.$set(this.data, this.field.name, this.value);
            if (this.value !== null) this.password = this.value;
            if ($('[name="password2"]').parent().hasClass("has-success-pw")) {
                this.data["password2"] = this.password
            }
        },
        validateField(value) {
            this.passwordStrength(value);
            if (value) {
                pageOrderStore.commit("cartStore/popValidateError", {
                    id: "inputNewPassword"
                })
            }
            if (!value && !this.userDetails.id) {
                this.isValidField = false;
                pageOrderStore.commit("cartStore/pushValidateError", {
                    id: this.field.id
                })
            } else {
                this.updateValue();
                this.isValidField = true;
                pageOrderStore.commit("cartStore/popValidateError", {
                    id: this.field.id
                })
            }
        }
    }
};
const checkboxInput = {
    template: "#t-mg-one-page-checkbox-input-field",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            type: Object,
            required: true
        }
    },
    computed: {
        visible: {
            get() {
                return this.field.billingCycles[Object.keys(this.field.billingCycles)[0]] !== undefined
            }
        },
        product: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductDetails"]()
            }
        },
        details: {
            get() {
                const details = this.field.billingCycles[Object.keys(this.field.billingCycles)[0]];
                if (this.oldProduct.id !== this.product.id) {
                    this.value = false;
                    this.oldProduct = this.product
                }
                return details
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        option: {
            get() {
                return this.details.options !== undefined ? this.details.options[0] : undefined
            }
        },
        fieldId: {
            get() {
                return "mg-page-order-config-opt-" + this.field.id
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        groupSettings: {
            get() {
                return this.$store.getters["cartStore/getGroupSection"]()
            }
        }
    },
    data: function() {
        return {
            value: null,
            interactive: false,
            oldProduct: false
        }
    },
    watch: {
        value: function(val) {
            if (!this.interactive) {
                return
            }
            val = val === true || val === "on" ? "1" : "";
            this.data[this.field.id] = val
        }
    },
    mounted() {
        if (this.data[this.field.id] == "yes") {
            this.data[this.field.id] = "1";
            this.field.value = 1
        } else {
            this.data[this.field.id] = "";
            this.field.value = 0
        }
        if (!this.data[this.field.id]) {
            this.data[this.field.id] = this.field.value
        }
        this.$nextTick(() => {
            this.value = this.data.value === true || this.data.value === "on" || this.data.value === "1" || this.data[this.field.id] == 1 ? true : false;
            this.interactive = true
        })
    },
    methods: {
        renderOptions: function() {},
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.currency.format)
        },
        getNameRows(name) {
            const separator = ",";
            return name.includes(separator) ? name.split(separator) : name
        }
    }
};
const customCheckbox = {
    template: "#t-mg-one-page-custom-field-checkbox-input",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false,
            value: null,
            interactive: false,
            supportedValue: null
        }
    },
    watch: {
        value: function(value) {
            let supportedValue = value === true ? "on" : "";
            this.field.value = supportedValue;
            this.$set(this.data, this.field.id, supportedValue);
            this.updateValue(supportedValue, true)
        }
    },
    created() {
        let self = this;
        this.$nextTick(() => {
            const value = Object.entries(this.customFields).find(el => el[0] == this.field.id);
            if (value && value[1]) {
                this.value = value[1]
            }
        });
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed) {
                return
            }
            self.validateField(self.data[self.field.id])
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        })
    },
    destroyed() {
        this.isDestructed = true
    },
    computed: {
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        customFields: {
            get() {
                return this.$store.getters["cartStore/getCustomFieldsFormData"]()
            }
        }
    },
    methods: {
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.id, this.data.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        updateValue(value, validateField) {
            if (validateField === true) {
                this.validateField(value)
            }
            this.supportedValue = value
        },
        validateField(value) {
            for (const [key, validatorName] of Object.entries(this.field.validators)) {
                if (typeof window[validatorName] !== "function") {
                    console.log("validator not found: " + validatorName);
                    return
                }
                var result = window[validatorName](this.field.name, value);
                if (result === true && this.field.value) {
                    this.isValidField = true;
                    this.fieldValidationMessages = null;
                    pageOrderStore.commit("cartStore/popValidateError", this.field.name)
                } else {
                    this.isValidField = false;
                    this.fieldValidationMessages = result;
                    pageOrderStore.commit("cartStore/pushValidateError", {
                        id: this.field.name,
                        error: result
                    });
                    break
                }
            }
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.id] = this.value
            }
            this.requireValidator()
        },
        getTranslatedMessage(name) {
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        }
    }
};
const customDropdown = {
    template: "#t-mg-one-page-custom-field-dropdown-input",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false,
            value: null,
            interactive: false
        }
    },
    watch: {
        data: {
            handler(val, old) {
                if (val[this.field.id] != this.value) {
                    this.updateValue(val[this.field.id], true)
                }
            },
            deep: true
        }
    },
    computed: {
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        customFields: {
            get() {
                return this.$store.getters["cartStore/getCustomFieldsFormData"]()
            }
        }
    },
    created() {
        let self = this;
        self.$nextTick(() => {
            self.interactive = true;
            if (self.field.options) {
                self.value = Object.keys(self.field.options)[0];
                self.data[self.field.id] = self.value
            }
            const value = Object.entries(this.customFields).find(el => el[0] == this.field.id);
            if (value && value[1]) {
                self.data[value[0]] = value[1]
            }
        });
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed === true) {
                return
            }
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        });
        this.updateValue(this.data[this.field.id], false)
    },
    destroyed() {
        this.isDestructed = true
    },
    methods: {
        updateValue(value, valid) {
            this.value = value
        },
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.id, this.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.id] = this.value
            }
        },
        getTranslatedMessage(name) {
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        }
    }
};
const customLinkInput = {
    template: "#t-mg-one-page-custom-field-link-input",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false,
            value: null,
            interactive: false
        }
    },
    watch: {
        data: {
            handler(val, old) {},
            deep: true
        }
    },
    computed: {
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        }
    },
    created() {
        let self = this;
        self.value = self.data[self.field.name] ? self.data[self.field.name] : self.data[self.field.id] ? self.data[self.field.id] : null;
        self.$nextTick(() => {
            self.interactive = true
        });
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed === true) {
                return
            }
            self.requireValidator();
            self.$forceUpdate()
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        })
    },
    destroyed() {
        this.isDestructed = true
    },
    methods: {
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.name, this.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        updateValue(value, valid) {
            if (valid === true) {
                this.validateField(value)
            }
            this.value = value
        },
        validateField(value) {
            let self = this;
            for (const [key, validatorName] of Object.entries(this.field.validators)) {
                if (typeof window[validatorName] !== "function") {
                    console.log("validator not found: " + validatorName);
                    return
                }
                var result = window[validatorName](self.field.name, value);
                if (result === true && this.value) {
                    this.isValidField = true;
                    this.fieldValidationMessages = null
                } else {
                    this.isValidField = false;
                    this.fieldValidationMessages = result;
                    break
                }
            }
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.id] = this.value
            }
            this.requireValidator()
        },
        getTranslatedMessage(name) {
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        }
    }
};
const customPasswordnput = {
    template: "#t-mg-one-page-custom-field-password-input",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false,
            value: null,
            interactive: false
        }
    },
    created() {
        const self = this;
        self.value = self.data[self.field.name] ? self.data[self.field.name] : self.data[self.field.id] ? self.data[self.field.id] : null;
        self.$nextTick(() => {
            self.interactive = true
        });
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed === true) {
                return
            }
            self.requireValidator();
            self.$forceUpdate()
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        })
    },
    destroyed() {
        this.isDestructed = true
    },
    computed: {
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        }
    },
    watch: {
        data: {
            handler(formData) {},
            deep: true
        }
    },
    methods: {
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.name, this.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        updateValue(value, valid) {
            if (valid === true) {
                this.validateField(value)
            }
            this.value = value
        },
        validateField(value) {
            let self = this;
            if (this.field.required) {
                for (const [key, validatorName] of Object.entries(this.field.validators)) {
                    if (typeof window[validatorName] !== "function") {
                        console.log("validator not found: " + validatorName);
                        return
                    }
                    var result = window[validatorName](self.field.name, value);
                    if (self.userDetails.id > 0 || result === true) {
                        self.isValidField = true;
                        self.fieldValidationMessages = null
                    } else {
                        self.isValidField = false;
                        self.fieldValidationMessages = result;
                        break
                    }
                }
            }
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.id] = this.value
            }
            this.requireValidator()
        },
        getTranslatedMessage(name) {
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        }
    }
};
const customTextAreaInput = {
    template: "#t-mg-one-page-custom-field-text-area-input",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false,
            value: null,
            interactive: false
        }
    },
    created() {
        const self = this;
        self.value = self.data[self.field.name] ? self.data[self.field.name] : self.data[self.field.id] ? self.data[self.field.id] : null;
        self.$nextTick(() => {
            self.interactive = true
        });
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed === true) {
                return
            }
            self.requireValidator();
            self.$forceUpdate()
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        })
    },
    destroyed() {
        this.isDestructed = true
    },
    computed: {
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        }
    },
    watch: {
        data: {
            handler(formData) {},
            deep: true
        }
    },
    methods: {
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.name, this.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.id] = this.value
            }
            this.requireValidator()
        },
        getTranslatedMessage(name) {
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        }
    }
};
const customTextInput = {
    template: "#t-mg-one-page-custom-field-text-input",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    },
    data: function() {
        return {
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false,
            value: null,
            interactive: false
        }
    },
    watch: {
        data: {
            handler(val, old) {
                if (this.value && val[this.field.name] != this.value) {
                    val[this.field.name] = this.value
                }
            },
            deep: true
        }
    },
    created() {
        const self = this;
        self.value = self.data[self.field.name] ? self.data[self.field.name] : self.data[self.field.id] ? self.data[self.field.id] : null;
        self.$nextTick(() => {
            self.interactive = true
        });
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed === true) {
                return
            }
            self.requireValidator();
            self.$forceUpdate()
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        })
    },
    destroyed() {
        this.isDestructed = true
    },
    computed: {
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        }
    },
    methods: {
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.name, this.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        getTranslatedMessage(name) {
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        },
        updateValue(value, valid) {
            if (valid === true) {
                this.validateField(value)
            }
            this.value = value
        },
        validateField(value) {
            let self = this;
            if (this.field.required) {
                for (const [key, validatorName] of Object.entries(this.field.validators)) {
                    if (typeof window[validatorName] !== "function") {
                        console.log("validator not found: " + validatorName);
                        return
                    }
                    var result = window[validatorName](self.field.name, value);
                    if (this.field.value || result === true) {
                        self.isValidField = true;
                        self.fieldValidationMessages = null
                    } else {
                        self.isValidField = false;
                        self.fieldValidationMessages = result;
                        break
                    }
                }
            }
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.id] = this.value
            }
            this.requireValidator()
        }
    }
};
const domainAddon = {
    template: "#t-mg-one-page-domain-addon-field",
    data: function() {
        return {
            selected: false,
            loader: false
        }
    },
    props: {
        field: {
            required: true
        },
        data: null
    },
    watch: {
        selectedAddons: {
            handler(formData) {
                if (formData && formData[this.field.id] === "on") {
                    this.selected = true
                } else {
                    this.selected = false
                }
            },
            deep: true
        }
    },
    computed: {
        selectedAddons: {
            get() {
                return this.$store.getters["cartStore/getDomainAddonsFormData"]()
            },
            deep: true
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        }
    },
    methods: {
        addAddon: function() {
            let self = this;
            self.loader = true;
            this.$store.dispatch("cartStore/addDomainAddon", this.field.id).then(response => {
                self.loader = false
            }).catch(() => {
                self.loader = false
            })
        },
        removeAddon: function() {
            let self = this;
            this.$store.dispatch("cartStore/deleteDomainAddon", this.field.id).then(response => {}).catch(() => {})
        }
    }
};
const domainCheckbox = {
    template: "#t-mg-one-page-domain-checkbox-field",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            type: Object
        }
    },
    data: function() {
        return {
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false,
            value: null,
            interactive: false,
            supportedValue: null
        }
    },
    watch: {
        value: function(value) {
            this.change(value);
            let supportedValue = value === true ? "on" : "";
            this.field.value = supportedValue;
            this.$set(this.data, this.field.id, supportedValue);
            this.updateValue(supportedValue, true)
        }
    },
    created() {
        this.initValue()
    },
    destroyed() {
        this.isDestructed = true
    },
    computed: {
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        }
    },
    methods: {
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.id, this.data.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        updateValue(value, validateField) {
            if (validateField === true) {
                this.validateField(value)
            }
            this.supportedValue = value
        },
        initValue() {
            if (this.data[this.field.id]) {
                this.value = this.data[this.field.id]
            } else {
                this.$set(this.data, this.field.id, this.value)
            }
        },
        validateField(value) {
            for (const [key, validatorName] of Object.entries(this.field.validators)) {
                if (typeof window[validatorName] !== "function") {
                    console.log("validator not found: " + validatorName);
                    return
                }
                var result = window[validatorName](this.field.name, value);
                if (result === true && this.field.value) {
                    this.isValidField = true;
                    this.fieldValidationMessages = null
                } else {
                    this.isValidField = false;
                    this.fieldValidationMessages = result;
                    break
                }
            }
        },
        getTranslatedMessage(name) {
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        isValid() {
            return this.isValidField
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.id] = this.value
            }
            this.requireValidator()
        },
        change(value) {
            this.$emit("change", {
                id: this.field.id,
                field: this.field.name,
                value: this.value
            })
        }
    }
};
const domainDisplay = {
    template: "#t-mg-one-page-domain-display-field",
    props: {
        field: {
            required: true
        },
        data: {
            type: Object,
            required: true
        }
    },
    data: function() {
        return {
            value: null
        }
    },
    value: function(val) {
        if (this.data[this.field.id] !== this.value) {
            this.data[this.field.id] = this.value
        }
    },
    created() {
        this.initDisplayName();
        this.initValue()
    },
    watch: {
        value: function(val) {
            if (this.data[this.field.id] !== this.value) {
                this.$set(this.data, this.field.id, this.value)
            }
        }
    },
    methods: {
        initDisplayName() {
            this.displayName = this.displayName === null ? this.name : this.displayName
        },
        initValue() {
            this.value = this.field.default
        },
        change(value) {
            this.$emit("change", {
                id: this.field.id,
                field: this.field.name,
                value: this.value
            })
        },
        getTranslatedMessage(name) {
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        }
    }
};
const domainDropdown = {
    template: "#t-mg-one-page-domain-dropdown-field",
    props: {
        field: {
            required: true
        },
        data: {
            type: Object,
            required: true
        }
    },
    data: function() {
        return {
            value: null
        }
    },
    value: function(val) {
        if (this.data[this.field.id] !== this.value) {
            this.data[this.field.id] = this.value
        }
    },
    created() {
        this.initDisplayName();
        this.initValue()
    },
    watch: {
        value: function(val) {
            if (this.data[this.field.id] !== this.value) {
                this.$set(this.data, this.field.id, this.value)
            }
        }
    },
    methods: {
        initDisplayName() {
            this.displayName = this.displayName === null ? this.name : this.displayName
        },
        initValue() {
            this.value = this.field.default
        },
        getTranslatedMessage(name) {
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        },
        change() {
            this.$emit("change", {
                id: this.field.id,
                field: this.field.name,
                value: this.value
            })
        }
    }
};
const domainText = {
    template: "#t-mg-one-page-domain-text-field",
    props: {
        field: {
            required: true
        },
        data: {
            required: true
        }
    },
    data: function() {
        return {
            value: null,
            isValidField: true,
            fieldValidationMessages: null,
            isDestructed: false,
            interactive: false
        }
    },
    created() {
        const self = this;
        self.value = self.data[self.field.name] ? self.data[self.field.name] : self.data[self.field.id] ? self.data[self.field.id] : null;
        self.$nextTick(() => {
            self.interactive = true
        });
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isDestructed === true) {
                return
            }
            self.requireValidator();
            self.$forceUpdate()
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        })
    },
    watch: {
        value: function(val) {
            if (this.data[this.field.id] !== this.value) {
                this.$set(this.data, this.field.id, this.value)
            }
        }
    },
    methods: {
        initDisplayName() {
            this.displayName = this.displayName === null ? this.name : this.displayName
        },
        initValue() {
            if (this.data[this.field.id]) {
                this.value = this.data[this.field.id]
            } else {
                this.$set(this.data, this.field.id, this.value)
            }
        },
        isValid() {
            return this.isValidField
        },
        getValidationMessage() {
            return this.fieldValidationMessages
        },
        updateValue(value, valid) {
            if (valid === true) {
                this.validateField(value)
            }
            this.value = value
        },
        validateField(value) {
            let self = this;
            const validators = this.field.validators ? Object.entries(this.field.validators) : [];
            if (this.field.required) {
                for (const [key, validatorName] of validators) {
                    if (typeof window[validatorName] !== "function") {
                        console.log("validator not found: " + validatorName);
                        return
                    }
                    var result = window[validatorName](self.field.name, value);
                    if (result === true) {
                        self.isValidField = true;
                        self.fieldValidationMessages = null;
                        pageOrderStore.commit("cartStore/popValidateError", this.field.name.id)
                    } else {
                        self.isValidField = false;
                        self.fieldValidationMessages = result;
                        pageOrderStore.commit("cartStore/pushValidateError", {
                            id: this.field.id,
                            error: result
                        });
                        break
                    }
                }
            }
        },
        change(value) {
            this.$emit("change", {
                id: this.field.id,
                field: this.field.name,
                value: this.value
            })
        },
        requireValidator() {
            if (this.field.required === false) {
                return
            }
            let result = pageOrderRequiredValidator(this.field.name, this.value);
            mgPageOrderCustomFieldValidatorCallback(this, result)
        },
        updateDataValue() {
            if (this.interactive) {
                this.data[this.field.id] = this.value
            }
            this.requireValidator()
        },
        getTranslatedMessage(name) {
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        }
    },
    computed: {
        registerFields: {
            get() {
                return this.$store.getters["cartStore/getDomainSchemaRegisterFields"]()
            }
        }
    }
};
const dropdownInput = {
    template: "#t-mg-one-page-dropdown-input-field",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            type: Object,
            required: true
        }
    },
    data: function() {
        return {
            value: null,
            interactive: false,
            selectedOption: null,
            filteredGroup: [],
            activeGroup: null,
            isBoxSelected: false,
            groupId: 0,
            groupSuboptions: [],
            oldProduct: false,
            tmpOption: null
        }
    },
    computed: {
        visible: {
            get() {
                return this.field.billingCycles[Object.keys(this.field.billingCycles)[0]] !== undefined
            }
        },
        configurableOptions: {
            get() {
                return this.$store.getters["cartStore/getProductConfigurableOptions"]()
            }
        },
        product: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductDetails"]()
            }
        },
        details: {
            get() {
                let self = this;
                let details = this.field.details;
                details.options.map((singleOption, singleOptionIndex) => {
                    if (parseFloat(singleOption.fullprice) == 0) {
                        if (this.product.paytype === "free" || singleOption.fullprice === 0) {
                            singleOption.name = singleOption.nameonly + " - " + mgPageLang.translate(["LagomOrderForm", "Free"])
                        } else if (self.layoutSettings.displayPriceSuffix) {
                            singleOption.name = singleOption.nameonly + " " + self.currency.prefix + this.getFormattedPrice(singleOption.fullprice) + " " + self.currency.suffix
                        } else {
                            singleOption.name = singleOption.nameonly + " " + self.currency.prefix + this.getFormattedPrice(singleOption.fullprice)
                        }
                    }
                });
                if (this.oldProduct.id !== this.product.id && details.options[0]) {
                    this.data[this.field.id] = details.options[0].id;
                    this.value = details.options[0].id;
                    this.oldProduct = this.product
                }
                return details
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        isOneStep: {
            get() {
                return this.$store.getters["cartStore/isOneStep"]()
            }
        },
        requestedConfigOption: {
            get() {
                return this.$store.getters["cartStore/getRequestedConfigOption"]()
            }
        },
        selectedConfigOptions: {
            get() {
                const product = this.$store.getters["cartStore/getSelectedProduct"]();
                if (product.configoptions) {
                    return Object.values(product.configoptions)
                }
                return []
            }
        }
    },
    watch: {
        value: function(value) {
            if (!this.interactive) {
                return
            }
            if (value == -1) {
                this.isBoxSelected = false
            }
            this.data[this.field.id] = value
        },
        activeGroup: function(value) {
            let self = this;
            if (this.field.groups.length) {
                this.filteredGroup = this.field.groups.filter(group => group.id == value)
            }
            if (self.field.displayType != "osBox" && self.filteredGroup.length) {
                this.value = this.filteredGroup[0].suboptions[Object.keys(this.filteredGroup[0].suboptions)[0]].id
            }
        },
        field: function(value) {
            if (value.groups.length && this.activeGroup) {
                this.filteredGroup = value.groups.filter(group => group.id == this.activeGroup);
                this.details.options.find(singleOption => {
                    if (singleOption.id == this.value) {
                        this.selectedOption = singleOption
                    }
                })
            }
        },
        visible: function(value) {
            this.$nextTick(() => {
                if (value) {
                    this.isSliderMoving = false;
                    this.handleNavTouchScroll(this.$refs.tabSlider, this.$refs.tabSliderContainer)
                }
            })
        }
    },
    created() {
        let self = this;
        this.$nextTick(() => {
            if (Object.keys(this.field.groups).length) {
                var firstGroupSuboptions = null;
                for (let i = 0; i < this.field.groups.length; i++) {
                    if (this.field.groups[i].enable) {
                        self.activeGroup = this.field.groups[i].id;
                        firstGroupSuboptions = this.field.groups[i].suboptions;
                        break
                    }
                }
                if (firstGroupSuboptions.length) {
                    this.data[this.field.id] = firstGroupSuboptions[Object.keys(firstGroupSuboptions)[0]].id
                }
                this.value = firstGroupSuboptions[Object.keys(firstGroupSuboptions)[0]].id;
                this.selectedOption = firstGroupSuboptions[Object.keys(firstGroupSuboptions)[0]];
                this.isBoxSelected = true
            }
            this.interactive = true;
            if (this.requestedConfigOption) {
                this.selectURLConfigOption()
            }
        });
        if (!this.data[this.field.id]) {
            this.data[this.field.id] = this.details.options[0].id;
            this.value = this.details.options[0].id
        } else {
            this.value = this.data[this.field.id]
        }
        this.$nextTick(() => {
            this.interactive = true
        });
        if (this.requestedConfigOption) {
            this.selectURLConfigOption()
        }
    },
    methods: {
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.currency.format)
        },
        changeGroup(event, group, groupIndex) {
            event.preventDefault();
            if (!this.isSliderMoving) {
                if (this.isBlockedPage) {
                    return
                }
                this.activeGroup = group.id
            }
        },
        changeOption(event, option, group = null) {
            this.selectedOption = option;
            this.value = option.id;
            if (group) {
                this.activeGroup = group
            }
        },
        getNameRows(name) {
            const separator = ",";
            return name.includes(separator) ? name.split(separator) : name
        },
        getFilteredSuboptions() {
            if (this.field.groups.length && this.filteredGroup.length) {
                this.groupSuboptions = this.filteredGroup[0].suboptions;
                this.groupId = this.activeGroup;
                return this.filteredGroup[0].suboptions
            }
            return this.groupSuboptions.length && this.activeGroup ? this.groupSuboptions : this.details.options
        },
        getAllSuboptions() {
            return this.details.options
        },
        getGroupId() {
            return this.groupId ? this.groupId : this.activeGroup
        },
        selectURLConfigOption() {
            const requestedOption = this.selectedConfigOptions.filter(item => item !== 0);
            if (requestedOption.length) {
                Object.values(this.field.details.options).forEach(val => {
                    if (requestedOption.includes(val.id)) {
                        if (this.field.groups && this.field.groups.length) {
                            let groupIndex = 0;
                            this.field.groups.forEach(group => {
                                if (Object.values(group.suboptions).filter(e => e.id === val.id).length < 1) {
                                    groupIndex++
                                }
                            });
                            this.changeOption(null, val, this.field.groups[groupIndex].id);
                            this.selectedValue = val.id
                        } else {
                            this.changeOption(null, val)
                        }
                    }
                })
            }
        },
        getOptionPrice(opt) {
            if ((this.product.paytype === "free" || !opt.fullprice) && this.field.hideZeroPrices) {
                return ""
            }
            let price = this.product.paytype === "free" ? 0 : opt.fullprice;
            return price ? this.currency.prefix + this.getFormattedPrice(price) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") : this.$store.getters["cartStore/getZeroPrice"]("configurableOptionsPrices")
        },
        getOptionSetupFee(opt) {
            if (this.product.paytype === "free" && this.field.hideZeroPrices) {
                return ""
            }
            let setupFee = this.product.paytype === "free" ? 0 : opt.setup;
            return setupFee ? "+ " + this.currency.prefix + this.getFormattedPrice(setupFee) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") : this.$store.getters["cartStore/getZeroPrice"]("configurableOptionsPrices")
        }
    }
};
const marketConnect = {
    template: "#t-mg-one-page-market-connect-field",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            required: true
        }
    },
    data: function() {
        return {
            selected: false,
            addedId: null,
            selectedOption: null,
            loader: false
        }
    },
    updated() {
        setTimeout(() => {
            if (this.selectedOption) {
                this.activeOptions.forEach(opt => {
                    if (opt.id === this.selectedOption.id) {
                        this.selectedOption = opt
                    }
                })
            }
        }, 1e3)
    },
    watch: {
        billingCycle: {
            handler(val) {
                if (this.activeOptions.filter(addon => addon["id"] === this.addedId).length === 0) {
                    this.removeAddon()
                }
            }
        },
        selectedAddons: {
            handler(val) {
                if (val.filter(addon => addon["addonid"] == this.addedId).length == 0) {
                    this.selected = false
                } else {
                    this.selected = true
                }
            },
            deep: true
        },
        currency() {
            if (this.selectedOption) {
                this.activeOptions.forEach(opt => {
                    if (opt.id === this.selectedOption.id) {
                        this.selectedOption = opt
                    }
                })
            }
        }
    },
    computed: {
        activeOptions: {
            get() {
                const self = this;
                return this.field.options.filter(option => {
                    let optionPackages = option.packages;
                    if (typeof optionPackages == "object") {
                        optionPackages = Object.values(optionPackages)
                    }
                    return option.pricing.billingCycles[Object.keys(option.pricing.billingCycles)[0]] !== undefined && Object.values(option.pricing.billingCycles).filter(item => item.rawPrice !== -1).length && optionPackages.findIndex(id => id == self.productId) !== -1 || option.billingcycle === "free"
                })
            }
        },
        productId: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductId"]()
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        },
        svgRaw: {
            get() {
                return this.field.svgRaw
            }
        },
        icon: {
            get() {
                return this.field.path + this.field.icon + "." + this.field.extension
            }
        },
        visible: {
            get() {
                return this.activeOptions.length > 0
            }
        },
        selectedAddons: {
            get() {
                return []
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        }
    },
    components: {},
    created() {
        let self = this;
        this.renderOptions();
        this.initOptions()
    },
    methods: {
        addAddon: function(option) {
            if (this.isBlockedPage) {
                return
            }
            let self = this;
            self.loader = true;
            self.removeAddon().then(() => {
                self.$store.dispatch("cartStore/addProductAddon", {
                    id: option.id
                }).then(response => {
                    self.loader = false;
                    self.selected = true;
                    self.data.push(option.id);
                    self.addedId = option.id;
                    self.selectedOption = option;
                    self.renderOptions()
                })
            })
        },
        initOptions() {
            if (this.data) {
                this.data.map(singleAddon => {
                    let selectedAddon = this.activeOptions.find(option => option.id == singleAddon.addonid);
                    if (selectedAddon) {
                        this.loader = false;
                        this.selected = true;
                        this.addedId = selectedAddon.id;
                        this.selectedOption = selectedAddon;
                        this.renderOptions()
                    }
                })
            }
        },
        changeAddon: function(option) {
            if (this.isBlockedPage) {
                return
            }
            let self = this;
            self.loader = true;
            self.$store.dispatch("cartStore/changeProductAddon", {
                id: option.id,
                current_id: self.addedId
            }).then(response => {
                self.loader = false;
                self.selected = true;
                self.data.push(option.id);
                self.addedId = option.id;
                self.selectedOption = option;
                self.renderOptions()
            })
        },
        removeAddon: async function() {
            if (this.isBlockedPage) {
                return
            }
            let self = this;
            self.selected = false;
            if (self.addedId == null) {
                return
            }
            var index = self.data.indexOf(self.addedId);
            if (index !== -1) {
                self.selected = false;
                self.data.splice(index, 1)
            }
            self.nameLabel = null;
            self.renderOptions();
            self.$store.dispatch("cartStore/deleteProductAddon", {
                id: self.addedId
            }).then(response => {})
        },
        addAddonById: function(id) {
            if (id == -1) {
                this.removeAddon();
                return
            }
            let addon = this.activeOptions.filter(addon => addon.id == id);
            if (addon[0] == undefined) {
                return
            }
            if (this.selected) {
                this.changeAddon(addon[0])
            } else {
                this.addAddon(addon[0])
            }
        },
        renderOptions: function() {
            var self = this;
            this.$nextTick(function() {
                renderCheckBox(self.field.id, function(val) {
                    if (val !== "true") {
                        self.addAddonById(val)
                    }
                }, function(val) {})
            })
        },
        getOptionPriceWithCycle: function(option) {
            let selectedOption = option.pricing.billingCycles[this.billingCycle];
            if (typeof selectedOption == "undefined" || selectedOption.rawPrice === -1) {
                Object.values(option.pricing.billingCycles).forEach(item => {
                    if (item.rawPrice !== -1) {
                        selectedOption = item
                    }
                })
            }
            return selectedOption ? selectedOption.price + "/" + selectedOption.shortbillingcyclefriendlylower : this.currency.prefix + formatPrice.getFormattedPrice(0, this.currency.format) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "")
        },
        getOptionPrice: function(option) {
            return option.pricing.billingCycles[Object.keys(option.pricing.billingCycles)[0]].price
        }
    }
};
const passwordInput = {
    template: "#t-mg-one-page-password-input-field",
    computed: {
        visible: {
            get() {
                return this.field.billingCycles[this.billingCycle] !== undefined
            }
        },
        details: {
            get() {
                return this.field.billingCycles[this.billingCycle]
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedConfigurationFields"]("formData")["billingCycle"]["billingcycle"]["value"]
            }
        }
    },
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            type: Object,
            required: true
        }
    }
};
const stantaloneProductAddon = {
    template: "#t-mg-one-page-standalone-addon-field",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            required: true
        }
    },
    data: function() {
        return {
            selected: false,
            loader: false
        }
    },
    watch: {
        billingCycle: {
            handler(val) {
                if (this.visible === false) {
                    this.removeAddon()
                }
            }
        },
        selectedAddons: {
            handler(val) {
                if (!val) {
                    this.selected = false;
                    return
                }
                this.selected = val.filter(addon => addon["addonid"] == this.field.id).length == 0 ? false : true
            },
            deep: true
        }
    },
    created() {
        this.selected = !(this.data.length == 0 && this.data.filter(addon => addon["addonid"] == this.field.id).length == 0)
    },
    computed: {
        productId: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductId"]()
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        },
        visible: {
            get() {
                return this.field.billingCycles || this.isFree
            }
        },
        isFree: {
            get() {
                return this.field.billingcycle === "free"
            }
        },
        selectedAddons: {
            get() {
                return this.data
            },
            deep: true
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        pricing: {
            get() {
                if (this.field.billingCycles[this.billingCycle] != undefined) {
                    return this.field.billingCycles[this.billingCycle]
                }
                return Object.values(this.field.billingCycles)[0]
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        isDiscountCenterOn: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]().isDiscountCenterOn
            }
        }
    },
    methods: {
        addAddon: function() {
            if (this.isBlockedPage) {
                return
            }
            this.loader = true;
            this.$store.dispatch("cartStore/addProductAddon", {
                id: this.field.id
            }).then(response => {
                this.loader = false
            })
        },
        removeAddon: function() {
            if (this.isBlockedPage) {
                return
            }
            this.loader = true;
            this.$store.dispatch("cartStore/deleteProductAddon", {
                id: this.field.id
            }).then(response => {
                this.loader = false
            })
        },
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.currency.format)
        },
        getAddonRegularPrice() {
            if (!this.field.pricings || !this.field.pricings[this.currency.id]) return;
            return this.field.pricings[this.currency.id][this.billingCycle] && this.field.pricings[this.currency.id].hasOwnProperty(this.billingCycle) ? this.field.pricings[this.currency.id][this.billingCycle].price : this.field.pricings[this.currency.id][Object.keys(this.field.pricings[this.currency.id])[0]].price
        },
        getAddonDiscountPrice() {
            return this.field.billingCycles[this.billingCycle] ? this.field.billingCycles[this.billingCycle].discountPrice : false
        },
        getAddonRegularSetupFee() {
            if (this.billingCycle) {
                return this.currency.prefix + this.getFormattedPrice(this.getAddonRawSetupFee()) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "")
            }
        },
        getAddonDiscountSetupFee() {
            return this.field.billingCycles[this.billingCycle] ? this.field.billingCycles[this.billingCycle].discountSetupFee : false
        },
        getAddonRawDiscountSetupFee() {
            return this.field.billingCycles[this.billingCycle] ? this.field.billingCycles[this.billingCycle].rawDiscountSetupFee : false
        },
        getAddonRawSetupFee() {
            if (!this.field.pricings || !this.field.pricings[this.currency.id]) return;
            if (this.billingCycle) {
                return this.field.pricings[this.currency.id][this.billingCycle] ? this.field.pricings[this.currency.id][this.billingCycle].rawSetupFee : this.field.pricings[this.currency.id][Object.keys(this.field.pricings[this.currency.id])[0]].rawSetupFee
            }
        },
        getAddonShortBillingCycle() {
            if (!this.field.pricings || !this.field.pricings[this.currency.id]) return;
            return this.field.pricings[this.currency.id][this.billingCycle] && this.field.pricings[this.currency.id].hasOwnProperty(this.billingCycle) ? this.field.pricings[this.currency.id][this.billingCycle].shortlyCycleSlashed : this.field.pricings[this.currency.id][Object.keys(this.field.pricings[this.currency.id])[0]].shortlyCycleSlashed
        },
        getAddonFinalSetupFee() {
            const discountSetupFee = this.getAddonDiscountSetupFee();
            return discountSetupFee ? discountSetupFee : this.getAddonRegularSetupFee()
        },
        getAddonFinalPrice() {
            const discountPrice = this.getAddonDiscountPrice();
            return discountPrice ? discountPrice : this.getAddonRegularPrice()
        }
    }
};
const radioInput = {
    template: "#t-mg-one-page-radion-input-field",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            type: Object,
            required: true
        }
    },
    data: function() {
        return {
            value: null,
            interactive: false,
            activeGroup: null,
            isBoxSelected: false,
            loader: false,
            selectedOption: null,
            filteredGroup: [],
            groupSuboptions: [],
            selectedValue: null,
            groupId: 0,
            oldProduct: false,
            isSliderMoving: false
        }
    },
    computed: {
        visible: {
            get() {
                return this.field.billingCycles[Object.keys(this.field.billingCycles)[0]] !== undefined
            }
        },
        details: {
            get() {
                const details = this.field.details;
                if (this.oldProduct.id !== this.product.id && details.options[0]) {
                    this.data[this.field.id] = details.options[0].id;
                    this.value = details.options[0].id;
                    this.oldProduct = this.product
                }
                return details
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        },
        fieldId: {
            get() {
                return "mg-page-order-config-opt-" + this.field.id
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        product: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductDetails"]()
            }
        },
        sysURL: {
            get() {
                return this.$store.state.cartStore.moduleSettings.mainEndpoint
            }
        },
        isOneStep: {
            get() {
                return this.$store.getters["cartStore/isOneStep"]()
            }
        },
        billingCycles: {
            get() {
                if (this.isDiscountCenterOn) {
                    return this.getBillingCyclesWithDiscountCenterPrices()
                }
                return this.$store.getters["cartStore/getBillingCycles"]()
            }
        },
        selectedConfigOptions: {
            get() {
                const product = this.$store.getters["cartStore/getSelectedProduct"]();
                if (product.configoptions) {
                    return Object.values(product.configoptions)
                }
                return []
            }
        },
        configurableOptions: {
            get() {
                return this.$store.getters["cartStore/getProductConfigurableOptions"]()
            }
        },
        requestedConfigOption: {
            get() {
                return this.$store.getters["cartStore/getRequestedConfigOption"]()
            }
        }
    },
    updated() {
        let self = this;
        this.$nextTick(() => {
            if (this.value != this.data[this.field.id]) {
                self.renderOptions()
            }
        })
    },
    mounted() {
        let self = this;
        this.$nextTick(() => {
            if (this.visible) {
                this.isSliderMoving = false;
                this.handleNavTouchScroll(this.$refs.tabSlider, this.$refs.tabSliderContainer)
            }
            if (Object.keys(this.field.groups).length) {
                var firstGroupSuboptions = null;
                for (let i = 0; i < this.field.groups.length; i++) {
                    if (this.field.groups[i].enable) {
                        self.activeGroup = this.field.groups[i].id;
                        firstGroupSuboptions = this.field.groups[i].suboptions;
                        break
                    }
                }
                if (firstGroupSuboptions.length) {
                    this.data[this.field.id] = firstGroupSuboptions[Object.keys(firstGroupSuboptions)[0]].id
                }
                this.value = firstGroupSuboptions[Object.keys(firstGroupSuboptions)[0]].id;
                this.selectedOption = firstGroupSuboptions[Object.keys(firstGroupSuboptions)[0]];
                this.isBoxSelected = true
            }
            this.interactive = true;
            if (this.requestedConfigOption) {
                this.selectURLConfigOption()
            }
        });
        if (this.requestedConfigOption) {
            this.selectURLConfigOption()
        }
        if (!this.data[this.field.id]) {
            this.data[this.field.id] = this.field.value
        }
        this.value = this.field.value;
        this.renderOptions()
    },
    watch: {
        value: function(value) {
            if (!this.interactive) {
                return
            }
            if (value == -1) {
                this.isBoxSelected = false
            }
            this.data[this.field.id] = value
        },
        activeGroup: function(value) {
            let self = this;
            if (this.field.groups.length) {
                this.filteredGroup = this.field.groups.filter(group => group.id == value)
            }
            if (self.field.displayType != "osBox" && self.filteredGroup.length) {
                this.value = this.filteredGroup[0].suboptions[Object.keys(this.filteredGroup[0].suboptions)[0]].id
            }
        },
        field: function(value) {
            if (value.groups.length) {
                this.filteredGroup = value.groups.filter(group => group.id == this.activeGroup);
                Object.keys(this.filteredGroup[0].suboptions).forEach(item => {
                    if (this.filteredGroup[0].suboptions[item].id == this.value) {
                        this.selectedOption = this.filteredGroup[0].suboptions[item]
                    }
                })
            }
        }
    },
    methods: {
        renderOptions: function() {
            var self = this;
            this.$nextTick(function() {
                renderCheckBox(self.fieldId, function(val) {
                    self.loader = false;
                    self.value = val
                }, function(val) {})
            })
        },
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.currency.format)
        },
        changeGroup(event, group, groupIndex) {
            event.preventDefault();
            if (!this.isSliderMoving) {
                if (this.isBlockedPage) {
                    return
                }
                this.activeGroup = group.id
            }
        },
        changeOption(event, option, group = null) {
            this.selectedValue = null;
            this.selectedOption = option;
            this.value = option.id;
            if (group) {
                this.activeGroup = group
            }
        },
        getNameRows(name) {
            const separator = ",";
            return name.includes(separator) ? name.split(separator) : name
        },
        getFilteredSuboptions() {
            self = this;
            if (this.field.groups.length && this.filteredGroup.length) {
                this.groupSuboptions = this.filteredGroup[0].suboptions;
                this.groupId = this.activeGroup;
                return this.filteredGroup[0].suboptions
            }
            return this.groupSuboptions.length ? this.groupSuboptions : this.details.options
        },
        getAllSuboptions() {
            return this.details.options
        },
        getGroupId() {
            return this.groupId ? this.groupId : this.activeGroup
        },
        isSelected(value) {
            return this.selectedValue ? this.selectedValue == value : this.value == value
        },
        selectURLConfigOption() {
            const requestedOption = this.selectedConfigOptions.filter(item => item !== 0);
            if (requestedOption.length) {
                Object.values(this.field.details.options).forEach(val => {
                    if (requestedOption.includes(val.id)) {
                        if (this.field.groups && this.field.groups.length) {
                            let groupIndex = 0;
                            this.field.groups.forEach(group => {
                                if (Object.values(group.suboptions).filter(e => e.id === val.id).length < 1) {
                                    groupIndex++
                                }
                            });
                            this.changeOption(null, val, this.field.groups[groupIndex].id);
                            this.selectedValue = val.id
                        } else {
                            this.changeOption(null, val)
                        }
                    }
                })
            }
        },
        getOptionPrice(opt) {
            if ((this.product.paytype === "free" || !opt.fullprice) && this.field.hideZeroPrices) {
                return ""
            }
            let price = this.product.paytype === "free" ? 0 : opt.fullprice;
            return price ? this.currency.prefix + this.getFormattedPrice(price) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") : this.$store.getters["cartStore/getZeroPrice"]("configurableOptionsPrices")
        },
        getOptionSetupFee(opt) {
            if (this.product.paytype === "free" && this.field.hideZeroPrices) {
                return ""
            }
            let setupFee = this.product.paytype === "free" ? 0 : opt.setup;
            return setupFee ? "+ " + this.currency.prefix + this.getFormattedPrice(setupFee) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") : this.$store.getters["cartStore/getZeroPrice"]("configurableOptionsPrices")
        },
        getNameBySuboptionRawName(rawName) {
            return this.field.details.options.filter(option => option.rawName == rawName)[0].nameonly
        }
    }
};
const sliderInput = {
    template: "#t-mg-one-page-slider-input-field",
    computed: {
        visible: {
            get() {
                return this.field.billingCycles[Object.keys(this.field.billingCycles)[0]] !== undefined
            }
        },
        details: {
            get() {
                let details = this.field.billingCycles[Object.keys(this.field.billingCycles)[0]];
                if (this.product && this.oldProduct.id !== this.product.id) {
                    this.inputValue = 0;
                    if (this.slider) {
                        $(".range-slider-current-value").text(0);
                        $(".range-slider-origin").css("transform", "translateX(-100%)");
                        $(".range-slider-connect").css("transform", "translate(0,0) scale(0,0)")
                    }
                    this.oldProduct = this.product
                }
                return details
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        currencyPrefix: {
            get() {
                return this.currency["prefix"]
            }
        },
        fieldId: {
            get() {
                return "mg-page-order-config-opt-" + this.field.id
            }
        },
        option: {
            get() {
                return this.details !== undefined && this.details.options !== undefined ? this.details.options[0] : undefined
            }
        },
        dataOptions: {
            get() {
                if (this.details.qtyminimum != this.details.qtymaximum) {
                    var min = this.details.qtyminimum;
                    var max = this.details.qtymaximum
                } else if (this.details.qtymaximum != 0) {
                    var min = this.details.qtyminimum;
                    var max = min + 1
                } else {
                    var min = this.details.qtyminimum;
                    var max = Number.MAX_SAFE_INTEGER
                }
                if (this.details.qtymaximum == 999 || this.details.qtymaximum == 0) {
                    var isUnlimited = true
                } else {
                    var isUnlimited = false
                }
                return {
                    minValue: min,
                    maxValue: max,
                    step: 1,
                    startValue: this.inputValue,
                    pricePerOne: this.option.recurring,
                    isUnlimited: isUnlimited,
                    priceFloat: this.getFormattedPrice(this.option.recurring)
                }
            }
        },
        product: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductDetails"]()
            }
        },
        selectedConfigOptions: {
            get() {
                const product = this.$store.getters["cartStore/getSelectedProduct"]();
                if (product.configoptions) {
                    return Object.entries(product.configoptions)
                }
                return []
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        sysURL: {
            get() {
                return this.$store.state.cartStore.moduleSettings.mainEndpoint
            }
        },
        groupSettings: {
            get() {
                return this.$store.getters["cartStore/getGroupSection"]()
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        }
    },
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            type: Object,
            required: true
        }
    },
    data: function() {
        return {
            inputValue: 0,
            inputted: 0,
            slider: null,
            oldProduct: false
        }
    },
    mounted() {
        let self = this;
        if (self.details.qtymaximum === 0) {
            self.details.isUnlimited = true;
            self.details.qtymaximum = 999
        } else {
            self.details.isUnlimited = false
        }
        this.$nextTick(function() {
            self.slider = document.getElementById(self.fieldId + "-slider");
            this.selectedConfigOptions.forEach(item => {
                if (this.field.id == item[0]) {
                    this.setInputValue(item[1])
                }
            });
            self.renderSlider()
        })
    },
    watch: {
        billingCycle: function(val) {
            const self = this;
            if (!self.visible) {
                return
            }
            self.$nextTick(() => {
                if (self.slider) {
                    self.slider.noUiSlider.set(self.inputValue)
                }
                self.$forceUpdate()
            })
        },
        visible: function(val) {
            let self = this;
            self.inputValue = 0;
            if (val === true) {
                this.$nextTick(function() {
                    self.slider = document.getElementById(self.fieldId + "-slider");
                    self.renderSlider()
                })
            }
        },
        inputValue: function(val) {
            this.data[this.field.id] = val
        }
    },
    ready: function() {},
    methods: {
        isPageRTL() {
            return $("html").attr("dir") == "rtl" ? true : false
        },
        setValue(event) {
            this.slider.noUiSlider.set(event.target.value)
        },
        renderSlider() {
            let self = this;
            if (self.slider === null) {
                this.$store.dispatch();
                return
            }
            let slider = noUiSlider.create(self.slider, {
                start: self.dataOptions.startValue,
                step: self.dataOptions.step,
                connect: [true, false],
                snap: false,
                range: {
                    min: self.dataOptions.minValue,
                    max: self.dataOptions.maxValue
                },
                behaviour: "tap-drag",
                direction: self.isPageRTL() ? "rtl" : "ltr",
                format: {
                    to: function(value) {
                        return value !== undefined && Math.round(value)
                    },
                    from: function(value) {
                        return value
                    }
                },
                cssPrefix: "range-slider",
                cssClasses: {
                    target: "",
                    base: "-base",
                    origin: "-origin",
                    handle: "-handle",
                    handleLower: "-handle-lower",
                    handleUpper: "-handle-upper",
                    horizontal: "-horizontal",
                    vertical: "-vertical",
                    background: "-background",
                    connects: "-connects",
                    connect: "-connect",
                    ltr: "-ltr",
                    rtl: "-rtl",
                    draggable: "-draggable",
                    drag: "-state-drag",
                    tap: "-state-tap",
                    active: "is-active",
                    tooltip: "-tooltip",
                    pips: "-pips",
                    pipsHorizontal: "-pips-horizontal",
                    pipsVertical: "-pips-vertical",
                    marker: "-marker",
                    markerHorizontal: "-marker-horizontal",
                    markerVertical: "-marker-vertical",
                    markerNormal: "-marker-normal",
                    markerLarge: "-marker-large",
                    markerSub: "-marker-sub",
                    value: "-value",
                    valueHorizontal: "-value-horizontal",
                    valueVertical: "-value-vertical",
                    valueNormal: "-value-normal",
                    valueLarge: "-value-large",
                    valueSub: "-value-sub"
                }
            });
            self.inputValue = self.slider.noUiSlider.get();
            let currentValue = document.querySelectorAll("#" + this.fieldId + " .range-slider-handle");
            let sliderPips = document.querySelectorAll("#" + this.fieldId + " .range-slider-pips [data-value]");
            self.slider.classList.add("range-slider-two-pips");
            for (i = 0; i < sliderPips.length; i++) {
                sliderPips[i].addEventListener("click", function(event) {
                    let amountLabel = document.querySelector("#" + self.fieldId + " .range-slider-base .range-slider-current-value");
                    amountLabel.textContent = event.target.dataset.value;
                    self.slider.noUiSlider.set(event.target.dataset.value)
                })
            }
            for (i = 0; i < currentValue.length; i++) {
                let amountLabel = document.createElement("span");
                amountLabel.classList.add("range-slider-current-value");
                amountLabel.textContent = self.inputValue;
                currentValue[i].appendChild(amountLabel)
            }
            this.handleSliderEvents()
        },
        handleSliderEvents() {
            let container = this.fieldId,
                rangeSlider = document.querySelectorAll("#" + this.fieldId + " [data-range-slider]"),
                rangeInput = document.querySelectorAll("#" + this.fieldId + " [data-range-input]"),
                price = document.querySelectorAll("#" + this.fieldId + " [data-range-price]"),
                selectedOption = document.querySelectorAll("#" + this.fieldId + " [data-selected-option]"),
                viewValue = document.querySelectorAll("#" + this.fieldId + " [data-range-view]"),
                self = this;
            this.renderFirstAndLastNumber();
            this.slider.noUiSlider.on("update", (values, handle) => {
                this.onUpdate(values, handle, rangeInput);
                this.setPrice(values, handle, rangeInput, price);
                this.setViewValue(values, handle, rangeInput, viewValue)
            });
            this.slider.noUiSlider.on("slide", (values, handle) => {
                this.onSlide(values, handle, rangeInput);
                this.setPrice(values, handle, rangeInput, price);
                this.setViewValue(values, handle, rangeInput, viewValue);
                this.$el.querySelector(".range-slider-handle .range-slider-current-value").textContent = values[0]
            });
            this.slider.noUiSlider.on("change", (values, handle) => {
                this.setPrice(values, handle, rangeInput, price);
                this.setViewValue(values, handle, rangeInput, viewValue);
                this.setInputValue(values[0])
            });
            this.slider.noUiSlider.on("set", (values, handle) => {
                this.onSet(values, handle, rangeInput);
                this.setPrice(values, handle, rangeInput, price);
                this.setViewValue(values, handle, rangeInput, viewValue);
                this.setInputValue(values[0])
            });
            this.slider.noUiSlider.on("start", (values, handle) => {
                this.onSet(values, handle, rangeInput);
                this.setPrice(values, handle, rangeInput, price);
                this.setViewValue(values, handle, rangeInput, viewValue);
                this.setInputValue(values[0])
            })
        },
        renderFirstAndLastNumber() {
            let self = this;
            let templateFirst = `\n                \n                    <div class="range-slider-value" style="` + (this.isPageRTL() ? `right: 0;` : `left: 0;`) + ` display: block;">` + self.dataOptions.minValue + `</div>\n            `;
            let templateLast = `\n                    <div class="range-slider-value" style="` + (this.isPageRTL() ? `right: 100%;` : `left: 100%;`) + ` display: block;">` + self.dataOptions.maxValue + `</div>\n            `;
            let rangeSliderPips = document.createElement("div");
            rangeSliderPips.classList.add("range-slider-pips");
            document.querySelector("#" + self.fieldId + " .range-slider-base").appendChild(rangeSliderPips);
            document.querySelector("#" + self.fieldId + " .range-slider-pips").innerHTML = templateFirst + templateLast
        },
        onUpdate(values, handle, rangeInput) {
            rangeInput[0].value = values[0].toFixed(0)
        },
        onSet(values, handle, rangeInput) {
            rangeInput[0].value = values[0].toFixed(0)
        },
        onSlide(values, handle, rangeInput) {
            rangeInput[0].value = values[0].toFixed(0)
        },
        setViewValue(values, handle, rangeInput, viewValue) {
            if (viewValue[0]) {
                viewValue[0].innerText = rangeInput[0].value
            }
        },
        setPrice(values, handle, rangeInput, price) {
            if (this.inputValue > this.dataOptions.maxValue) {
                this.inputValue = this.dataOptions.maxValue;
                if (rangeInput.length) {
                    rangeInput[0].value = this.inputValue
                }
                this.updateSlider()
            }
            if ((price.length || rangeInput.length) && price[0]) {
                price[0].innerText = this.getFormattedPrice(parseFloat(this.dataOptions.pricePerOne) * rangeInput[0].value)
            }
        },
        setInputValue(value) {
            this.inputValue = value
        },
        updateSlider(action) {
            let rangeInput = document.querySelectorAll("#" + this.fieldId + " [data-range-input]");
            let viewValue = document.querySelectorAll("#" + this.fieldId + " [data-range-view]");
            if (action == "increase") {
                this.inputValue++
            } else if (action == "decrease" && this.inputValue > this.dataOptions.minValue) {
                this.inputValue--
            } else if (action == "checktyping") {
                if (this.inputValue > this.dataOptions.maxValue) {
                    this.inputValue = this.dataOptions.maxValue
                } else if (this.inputValue < this.dataOptions.minValue) {
                    this.inputValue = this.dataOptions.minValue
                }
            }
            if (rangeInput.length) {
                rangeInput[0].value = parseInt(this.inputValue).toFixed(0)
            }
            if (this.slider) {
                this.slider.noUiSlider.set(this.inputValue);
                this.$el.querySelector(".range-slider-handle .range-slider-current-value").textContent = this.inputValue
            }
        },
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.currency.format)
        },
        getPrice() {
            const price = this.details.selectedqty !== 0 ? this.details.selectedrecurring / this.details.selectedqty * this.inputValue : this.details.options[0].recurring * this.inputValue;
            return price || this.details.options[0].recurring ? this.currencyPrefix + this.getFormattedPrice(price) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") : this.$store.getters["cartStore/getZeroPrice"]("configurableOptionsPrices")
        },
        getSetupFee(showZeroPrice = false) {
            const price = this.details.selectedqty !== 0 ? this.details.selectedsetup / this.details.selectedqty * this.inputValue : this.details.options[0].setupFee * this.inputValue;
            return price || showZeroPrice ? "+ " + this.currencyPrefix + this.getFormattedPrice(price) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") : ""
        }
    }
};
const textareaInput = {
    template: "#t-mg-one-page-textarea-input-field",
    computed: {
        visible: {
            get() {
                return this.field.billingCycles[Object.keys(this.field.billingCycles)[0]] !== undefined
            }
        },
        details: {
            get() {
                return this.field.billingCycles[Object.keys(this.field.billingCycles)[0]]
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        }
    },
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            type: Object,
            required: true
        }
    }
};
const textInput = {
    template: "#t-mg-one-page-text-input-field",
    computed: {
        visible: {
            get() {
                return this.field.billingCycles[Object.keys(this.field.billingCycles)[0]] !== undefined
            }
        },
        details: {
            get() {
                return this.field.billingCycles[Object.keys(this.field.billingCycles)[0]]
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        }
    },
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            type: Object,
            required: true
        }
    }
};
const addonFormSection = {
    template: "#t-mg-one-page-addon-section-field",
    props: {
        field: {
            required: true
        },
        data: {
            required: true
        }
    },
    components: {
        stantaloneAddon: stantaloneProductAddon,
        marketConnect: marketConnect
    },
    computed: {
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        }
    }
};
const billingSectionField = {
    template: "#t-mg-one-page-billing-section-field",
    computed: {},
    components: {
        billingUserPasswordField: billingUserPassword,
        textInput: billingTextInput,
        customFieldTextInput: billingTextInput,
        customFieldDropdownInput: billingDropdown,
        customFieldCheckboxInput: billingCheckbox,
        customFieldPasswordInput: billingPassword,
        textareaInput: billingTextArea,
        LinkInput: billingLink
    },
    props: {
        field: {
            type: Object,
            required: true
        },
        data: null
    }
};
const vForm = {
    template: "#t-mg-one-page-form-field",
    components: {
        textInput: textInput,
        checkboxInput: checkboxInput,
        passwordInput: passwordInput,
        dropdownInput: dropdownInput,
        textareaInput: textareaInput,
        radioInput: radioInput,
        quantityInput: sliderInput,
        addonSection: addonFormSection,
        customFieldDropdownInput: customDropdown,
        customFieldCheckboxInput: customCheckbox,
        customFieldTextInput: customTextInput,
        customFieldLink: customLinkInput,
        customFieldTextArea: customTextAreaInput,
        customFieldPasswordInput: customPasswordnput
    },
    props: {
        schema: {
            type: Object,
            required: true
        },
        data: {
            required: true
        }
    }
};
const productAddons = {
    template: "#t-mg-one-page-product-addon-section",
    props: {
        field: {
            type: Object,
            required: true
        },
        data: {
            required: true
        }
    },
    components: {
        stantaloneAddon: stantaloneProductAddon
    },
    computed: {
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        }
    }
};
mgJsComponentHandler.addDefaultComponent("mg-one-page-alert", {
    template: "#t-mg-one-page-alert",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {}
    },
    watch: {
        message: function(val) {
            if (!val || val === null) {
                return
            }
            this.$nextTick(() => {
                let element = document.getElementById("pageOrderAlert");
                if (element !== null && element !== undefined) {
                    element.scrollIntoView()
                }
            })
        }
    },
    computed: {
        isVisible: {
            get() {
                return this.message && this.$store.getters["cartStore/isVisible"]("alert") && this.message !== null
            }
        },
        orderDetails: {
            get() {
                return this.$store.getters["cartStore/getCompleteOrderDetails"]()
            }
        },
        message: {
            get() {
                return this.orderDetails.message
            }
        }
    },
    created() {},
    methods: {
        decodeHtml(html) {
            const txt = document.createElement("textarea");
            txt.innerHTML = html;
            return txt.value
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-billing-cycles", {
    template: "#t-mg-one-page-billing-cycles",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    components: {
        vForm: vForm
    },
    data: function() {
        return {
            showLoaderOnCycle: null,
            selectedBillingCycle: null,
            isPageLoading: false,
            chosenItem: 0
        }
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true || this.$store.state.cartStore.pageType === "bottom" && this.$store.state.cartStore.formType === "twoSteps") {
                    renderSectionIndex()
                }
            })
        }
    },
    beforeUpdate: function() {},
    updated: function() {
        if (!this.isPageLoading) {
            this.isPageLoading = true;
            this.selectedBillingCycle = this.productCycle
        } else {
            this.selectedBillingCycle = this.$store.getters["cartStore/getSelectedProductCycle"]()
        }
    },
    mounted: function() {
        this.selectedBillingCycle = this.$store.getters["cartStore/getSelectedProductCycle"]()
    },
    computed: {
        isVisible: {
            get() {
                this.showLoaderOnCycle = null;
                return this.$store.getters["cartStore/isVisible"]("configurations") && this.isShowBillingCycleComponent() && this.isRecurringProduct === true
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        billingCycles: {
            get() {
                return this.$store.getters["cartStore/getBillingCycles"]()
            }
        },
        isDiscountCenterOn: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]().isDiscountCenterOn
            }
        },
        cart: {
            get() {
                return this.$store.getters["cartStore/getCartSummary"]()
            }
        },
        spinner: {
            get() {
                return this.$store.getters["cartStore/getSpinners"]()["cart"]
            }
        },
        orderSettings: {
            get() {
                return this.$store.getters["cartStore/getWhmcsOrderSettings"]()
            }
        },
        isBillingCycleLoading: {
            get() {
                if (this.spinner) {
                    return false
                }
            }
        },
        isRecurringProduct: {
            get() {
                return this.cart !== undefined && this.cart.products !== undefined && this.cart.products[0] !== undefined && this.cart.products[0].billingcycle !== "free" && this.cart.products[0].billingcycle !== "onetime"
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        productCycle: {
            get() {
                setTimeout(() => {
                    return this.$store.getters["cartStore/getSelectedProductCycle"]()
                }, 1)
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        isOneStep: {
            get() {
                return this.$store.getters["cartStore/isOneStep"]()
            }
        }
    },
    methods: {
        setBillingCycle: function(cycle) {
            if (this.isBlockedPage) {
                return
            }
            if (cycle == this.selectedBillingCycle) {
                return
            }
            let that = this;
            this.chosenItem = cycle;
            this.showLoaderOnCycle = cycle;
            this.$store.dispatch("cartStore/changeBillingCycle", cycle).then(response => {
                that.selectedBillingCycle = cycle
            })
        },
        isShowBillingCycleComponent: function() {
            if (this.billingCycles === undefined) {
                return false
            }
            return Object.keys(this.billingCycles).length > 1
        },
        getBillingCyclesWithDiscountCenterPrices: function() {
            let cycles = this.$store.getters["cartStore/getBillingCycles"]();
            if (!cycles.discountPricing) {
                delete cycles.discountPricing;
                return cycles
            }
            return cycles.discountPricing
        },
        getTranslatedMessage(cycle) {
            return mgPageLang.sprintf(mgPageLang.translate(["cycle"], {
                cycle: cycle
            }), cycle)
        },
        getClass() {
            this.isBillingCycleActive();
            const className = this.showNumber ? `col-md-6 col-lg-${this.layoutSettings.billingCycleColumnQuantity} ` + (Object.keys(this.billingCycles).length == 3 ? `col-xl-4` : ``) : `col-md-6 col-lg-${this.layoutSettings.billingCycleColumnQuantity} ` + (Object.keys(this.billingCycles).length == 3 ? `col-xl-4` : ``);
            return !isNaN(parseInt(this.layoutSettings.billingCycleColumnQuantity)) ? className : `col-sm-6 col-md-4`
        },
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.currency.format)
        },
        isBillingCycleActive() {
            const boxes = document.querySelectorAll(".panel-billingcycle.checked");
            return boxes.length
        },
        getCurrencySuffixIfSet() {
            return this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : ""
        },
        isLoading(cycle) {
            return this.showLoaderOnCycle === cycle && !(this.chosenItem !== 0 && this.selectedBillingCycle === cycle || this.chosenItem === 0 && this.selectedBillingCycle === cycle)
        },
        isSelected(cycle) {
            return this.chosenItem !== 0 && this.selectedBillingCycle === cycle || this.chosenItem === 0 && this.selectedBillingCycle === cycle || this.chosenItem === 0 && !this.isBillingCycleActive() && cycle === Object.values(this.billingCycles)[0].id
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-billing-details", {
    template: "#t-mg-one-page-billing-details",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    components: {
        billingSectionField: billingSectionField
    },
    data: function() {
        return {
            alreadyRegister: false,
            selectedStates: [],
            selectedSection: "registerOption",
            loginMessage: null,
            registerMessage: null,
            invalidLoginDetails: false,
            loginDetails: {
                email: null,
                password: null
            },
            personalDetailsOldData: {},
            isValidField: {},
            fieldValidatorsRegister: {
                firstname: ["pageOrderRequiredValidator"],
                lastname: ["pageOrderRequiredValidator"],
                email: ["pageOrderRequiredValidator", "pageOrderEmailValidator"],
                callingCode: ["pageOrderNumberValidator"],
                phonenumber: ["pageOrderRequiredValidator"],
                address1: ["pageOrderRequiredValidator"],
                city: ["pageOrderRequiredValidator"],
                state: ["pageOrderRequiredValidator"],
                postcode: ["pageOrderRequiredValidator"],
                country: ["pageOrderRequiredValidator"],
                password: [],
                password2: ["pageOrderRequiredValidator"]
            },
            fieldValidatorsLogin: {
                email: ["pageOrderRequiredValidator", "pageOrderEmailValidator"],
                password: ["pageOrderRequiredValidator"]
            },
            personalDetails: {
                firstname: null,
                lastname: null,
                email: null,
                callingCode: null,
                phonenumber: null,
                companyname: null,
                tax_id: null,
                address1: null,
                address2: null,
                city: null,
                state: null,
                country: null,
                password: null,
                password2: null,
                postcode: null,
                marketingoptin: null
            },
            fieldValidationMessages: {},
            billingErrors: false,
            error: null,
            showError: false,
            twoStep: false,
            alertType: "alert-danger",
            backupCodeEnabled: false,
            backupCode: null,
            accountId: null,
            blockUpdateAccount: false,
            interactiveMode: false,
            marketingOptInValue: null,
            formData: {},
            showTwoFaLoader: false,
            loginData: null,
            registerDetailsVisible: true,
            googleButtons: null,
            marketingEmailRequest: true,
            initialUpdateBillingRequest: true
        }
    },
    updated() {
        this.$nextTick(() => {
            this.setMarketingEmail();
            this.moveGoogleButtons();
            if ($('script[src="https://js.hcaptcha.com/1/api.js"]').length === 0 && this.layoutSettings.captchaFormProtection && this.layoutSettings.captchaType === "hCaptcha") {
                this.createScript("https://js.hcaptcha.com/1/api.js")
            }
        })
    },
    watch: {
        isVisible: function(value) {
            if (value === false) {
                return
            }
            this.initVisibleComponent();
            this.setDefaultMarketingOptValue()
        },
        registerDetailsVisible: function() {
            this.areRegisterDetailsVisible()
        },
        showCustTypeDetails: function(val) {
            if (val === true) {
                const self = this;
                if (self.userDetails.id) {
                    self.accountId = self.userDetails.id
                }
                self.$nextTick(() => {
                    renderCheckBox("customerBillingAccounts", function(val) {
                        self.accountId = val
                    }, () => {})
                })
            }
        },
        "personalDetails.firstname": {
            handler(val) {
                this.validateField("firstname", val)
            },
            deep: true
        },
        "personalDetails.lastname": {
            handler(val) {
                this.validateField("lastname", val)
            },
            deep: true
        },
        "personalDetails.email": {
            handler(val) {
                this.validateField("email", val)
            },
            deep: true
        },
        "personalDetails.country": {
            handler(val) {
                this.personalDetails.country = this.personalDetails.country ? this.personalDetails.country : this.defaultCountry;
                this.selectedStates = this.$store.getters["cartStore/getStatesByCountryCode"](val);
                this.validateField("country", val)
            },
            deep: true
        },
        "personalDetails.companyname": {
            handler(val) {
                this.validateField("companyname", val)
            },
            deep: true
        },
        "personalDetails.address1": {
            handler(val) {
                this.validateField("address1", val)
            },
            deep: true
        },
        "personalDetails.address2": {
            handler(val) {
                this.validateField("address2", val)
            },
            deep: true
        },
        "personalDetails.city": {
            handler(val) {
                this.validateField("city", val)
            },
            deep: true
        },
        "personalDetails.state": {
            handler(val) {
                this.validateField("state", val)
            },
            deep: true
        },
        "personalDetails.postcode": {
            handler(val) {
                this.validateField("postcode", val)
            },
            deep: true
        },
        "personalDetails.phonenumber": {
            handler(val) {
                this.personalDetails.phonenumber = val;
                this.validateField("phonenumber", val)
            },
            deep: true
        },
        "loginDetails.email": {
            handler(val) {
                this.validateField("loginemail", val)
            },
            deep: true
        },
        "loginDetails.password": {
            handler(val) {
                this.validateField("password", val)
            },
            deep: true
        },
        formData: {
            handler(details) {
                if (details.password) {
                    this.personalDetails.password = details.password
                } else {
                    this.personalDetails.password = null
                }
                if (details.password2) {
                    this.personalDetails.password2 = details.password2
                } else {
                    this.personalDetails.password2 = null
                }
                this.$store.dispatch("cartStore/updateBillingDetailsLocal", details)
            },
            deep: true
        },
        userDetails: function(newValue) {
            if (typeof newValue === "object" && newValue.twoFactorStep === true) {
                this.loadTwoFactorForm()
            } else if (typeof newValue === "object" && newValue.id !== undefined) {
                this.updatePersonalDetails()
            }
        },
        personalDetails: {
            handler(details) {
                this.debounce(this.propagateBillingDetails, 500)(details)
            },
            deep: true
        },
        countries: function(val) {
            this.setCountryIfEmpty()
        },
        accountId: function(val) {
            if (this.isBlockedPage) {
                return
            }
            if (this.loginData === null) {
                this.loginData = this.personalDetails
            }
            if (val === "new") {
                this.clearPersonalDetails()
            }
            this.$store.dispatch("cartStore/updateAccountId", {
                val: val
            })
        },
        marketingOptInValue: function(value) {
            if (!this.interactiveMode) {
                return false
            }
            let marketingEmail = value === true || value === "1" ? "1" : "";
            this.$store.dispatch("cartStore/updateMarketingEmail", {
                marketingEmail: marketingEmail
            })
        }
    },
    computed: {
        isAddonPage: {
            get() {
                return this.$store.getters["cartStore/getSPage"]() == "addons"
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        formSchema: {
            get() {
                return this.$store.getters["cartStore/getBillingDetailsSchema"]()
            }
        },
        orderSettings: {
            get() {
                return this.$store.getters["cartStore/getWhmcsOrderSettings"]()
            }
        },
        additionalFields: {
            get() {
                return this.formSchema && this.formSchema.additional ? this.formSchema.additional : []
            }
        },
        optionalFields: {
            get() {
                return this.$store.getters["cartStore/getBillingDetailsOptionalFields"]()
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("billingDetails")
            }
        },
        isChecked: {
            get() {
                return this.value === true
            }
        },
        isMarketingOptInShowNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        isMarketingOptInVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("cart") && this.$store.getters["cartStore/getComponentsConfiguration"]()["marketingEmailEnabled"] && this.$store.getters["cartStore/getClient"]().exist !== 1
            }
        },
        marketingOptInDescription: {
            get() {
                return this.$store.getters["cartStore/getComponentsConfiguration"]()["marketingEmailDescription"]
            }
        },
        countries: {
            get() {
                return this.$store.getters["cartStore/getCountries"]()
            }
        },
        states: {
            get() {
                return this.$store.getters["cartStore/getStatesByCountryCode"](this.personalDetails.country)
            }
        },
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        },
        isLogging: {
            get() {
                return this.$store.getters["cartStore/getSpinners"]()["logging"] > 1
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        taxEnabled: {
            get() {
                const taxEnabled = this.$store.getters["cartStore/getComponentsConfiguration"]()["taxFieldEnabled"];
                return this.layoutSettings.hideVAT !== undefined ? taxEnabled && !this.layoutSettings.hideVAT.includes(this.personalDetails.country) : taxEnabled
            }
        },
        taxAsVat: {
            get() {
                return this.$store.getters["cartStore/getComponentsConfiguration"]()["taxAsVat"]
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        isBlockedLogin: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["logging"] > 1
            }
        },
        captcha: {
            get() {
                return this.$store.getters["cartStore/getCaptchaSettings"]()
            }
        },
        isCaptchaOn: {
            get() {
                return this.captcha.setting === "on" && this.captcha.forms["login"] === true
            }
        },
        userAccounts: {
            get() {
                return this.userDetails.accounts
            }
        },
        userExist: {
            get() {
                return !!this.userDetails.id
            }
        },
        showClientDetails: {
            get() {
                return this.userExist && this.userDetails.isMultiAccountSupported !== true
            }
        },
        showCustTypeDetails: {
            get() {
                return this.userDetails.isMultiAccountSupported === true
            }
        },
        marketingEmails: {
            get() {
                return this.$store.getters["cartStore/getMarketingEmailsValue"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        currencies: {
            get() {
                return this.$store.getters["cartStore/getCurrencies"]()
            }
        },
        cartErrors: {
            get() {
                return this.$store.getters["cartStore/getValidateErrors"]()
            }
        },
        defaultCountry: {
            get() {
                return this.$store.getters["cartStore/getDefaultCountry"]()
            }
        },
        isCaptchaConfirmed: {
            get() {
                return this.$store.getters["cartStore/getCaptchaConfirmation"]()
            }
        }
    },
    created() {
        this.createScript(whmcsBaseUrl + "/assets/js/StatesDropdown.js");
        this.onCreationFunction()
    },
    methods: {
        propagateBillingDetails(details) {
            if (!this.interactiveMode) {
                return
            }
            this.$store.dispatch("cartStore/updateBillingDetails", {
                details: details
            })
        },
        initVisibleComponent() {
            var self = this;
            this.$nextTick(function() {
                renderCheckBox("loginOrNewUser", function(val) {
                    if (val == "loginOption" || val == "registerOption") {
                        self.selectedSection = val
                    }
                }, () => {});
                renderCheckBox("customerBillingAccounts", function(val) {
                    if (isNaN(parseInt(val))) {
                        self.selectedSection = "registerOption";
                        self.accountId = "new"
                    } else {
                        self.selectedSection = "loginOption";
                        self.accountId = val
                    }
                }, () => {});
                self.initSsoButtons();
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
                this.initCountryCodeInput();
                this.$nextTick(() => {
                    this.interactiveMode = true
                })
            });
            if (this.userDetails.id && this.selectedSection == "loginOption") {
                this.accountId = this.userDetails.id
            }
            if (!isNaN(parseInt(this.accountId))) {
                self.selectedSection = "loginOption"
            }
        },
        initUpdateRequest() {
            this.updatePersonalDetails()
        },
        onCreationFunction() {
            const self = this;
            mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
                self.checkPersonalDetailsIsValid(self.personalDetails);
                self.validateAllFields();
                self.$forceUpdate()
            });
            mgEventHandler.on("ReloadBillingDetails", null, () => {
                if (self.userExist) {
                    return
                }
                self.$store.dispatch("cartStore/updateBillingDetails", {
                    details: self.personalDetails
                })
            });
            mgEventHandler.on("RefreshAlertState", null, function() {
                self.refreshValidationFields();
                self.$forceUpdate()
            });
            self.initOAuthHandler()
        },
        setCountryIfEmpty() {
            const self = this;
            if (!self.personalDetails.country) {
                self.$nextTick(function() {
                    self.personalDetails.country = this.defaultCountry
                })
            }
        },
        initCountryCodeInput() {
            const self = this;
            self.setCallingCode(self.findCountry(self.personalDetails.country).callingCode);
            LagomOrderFormTelInput(function(countryData) {
                self.setCallingCode(countryData.dialCode)
            })
        },
        setCallingCode(value) {
            if (value) {
                this.personalDetails.callingCode = value;
                this.personalDetails["country-calling-code-phonenumber"] = value
            }
        },
        updatePersonalDetails() {
            this.interactiveMode = false;
            let personalDetails = this.userDetails;
            if (this.accountId === "new") {
                this.personalDetails.accountId = this.accountId;
                this.personalDetails.account_id = this.accountId
            } else if (personalDetails !== undefined && personalDetails.id > 0) {
                this.selectedStates = this.$store.getters["cartStore/getStatesByCountryCode"](personalDetails.country);
                this.personalDetails.accountId = personalDetails.id;
                this.personalDetails.account_id = personalDetails.id;
                this.personalDetails.credit = personalDetails.credit;
                this.personalDetails.firstname = personalDetails.firstname;
                this.personalDetails.lastname = personalDetails.lastname;
                this.personalDetails.email = personalDetails.email;
                this.personalDetails.callingCode = this.personalDetails.callingCode;
                this.personalDetails.phonenumber = this.personalDetails.phonenumber;
                this.personalDetails.companyname = personalDetails.companyname;
                this.personalDetails.marketingoptin = personalDetails.marketingoptin;
                this.personalDetails.address = personalDetails.address1;
                this.personalDetails.address2 = personalDetails.address2;
                this.personalDetails.city = personalDetails.city;
                this.personalDetails.password = personalDetails.password;
                this.personalDetails.state = personalDetails.state;
                this.personalDetails.postcode = personalDetails.postcode;
                this.personalDetails.country = this.showCustTypeDetails === true ? personalDetails.country : this.findCountryNameByCode(personalDetails.country);
                this.selectedGateway = personalDetails.defaultgateway
            }
            this.$nextTick(() => {
                this.interactiveMode = true
            })
        },
        findStateIndex: function(stateName) {
            for (var index in this.selectedStates) {
                if (this.selectedStates[index] == stateName) {
                    return index
                }
            }
            return ""
        },
        findCountryNameByCode: function(code) {
            if (this.countries[code]) {
                return this.countries[code].name
            }
            return ""
        },
        findCountry: function(code) {
            if (this.countries[code]) {
                return this.countries[code]
            }
            return ""
        },
        loginUserPreventEvent(event) {
            event.preventDefault();
            return this.loginUser()
        },
        loginUser: function() {
            let self = this;
            if (this.isBlockedPage || this.isBlockedLogin) {
                return
            }
            this.validateAllFields();
            $("#2fa-modal").modal("hide");
            $(".modal-backdrop").remove();
            self.showTwoFaLoader = false;
            if (this.twoStep === true) {
                return this.loginTwoStep()
            }
            this.doLogin();
            return null
        },
        validateCaptcha: function() {
            const self = this;
            captchaHelper.captchaType = "login";
            captchaHelper.onSuccessCallback = function(data) {
                self.loginUser()
            };
            captchaHelper.initCaptcha()
        },
        doLogin: function() {
            let self = this;
            this.invalidLoginDetails = false;
            this.showError = false;
            this.$store.dispatch("cartStore/loginUser", {
                login: this.loginDetails
            }).then(response => {
                this.parseResponse(response)
            })
        },
        getUserAfterLogin() {
            this.alreadyRegister = false
        },
        parseResponse: function(data) {
            if (data.status == "error") {
                if (data.message) {
                    this.displayLoginAlert(data.message, "alert-danger")
                } else {
                    this.displayLoginAlert(mgPageLang.translate(["loginDetails", "error", "loginincorrect"], {}), "alert-danger")
                }
                return
            }
            if (!data.settings) {
                this.$store.dispatch("cartStore/errorLog", {
                    message: "Login response, data not available"
                });
                return null
            }
            data = data.settings;
            if (data.twoFactor !== undefined && data.twoFactor.redirect === true && data.twoFactor.url) {
                return this.redirectToUrl(data.twoFactor.url)
            }
            if (data.twoFactor !== undefined && data.twoFactor.isAwaiting === false && data.twoFactor.backupCode) {
                this.showBackupCodeModal(data.twoFactor.backupCode)
            }
            if (data.twoFactor !== undefined && data.twoFactor.isAwaiting === true) {
                return this.runTwoFactorStep(data.twoFactor)
            } else if (this.userDetails.id) {
                this.getUserAfterLogin()
            }
        },
        loginTwoStep: function() {
            let formData = $("#2faForm").serializeArray();
            let params = {
                type: "2faauth"
            };
            formData.forEach((item, index) => {
                let name = item.name;
                params[name] = item.value
            });
            this.$store.dispatch("cartStore/loginUser", params).then(response => this.parseResponse(response))
        },
        loadTwoFactorForm: function() {
            this.$store.dispatch("cartStore/twoFactorForm").then(response => {
                if (response.status === "success" && response.twoFactor !== undefined && response.twoFactor.isAwaiting === true) {
                    this.runTwoFactorStep(response.twoFactor)
                }
            })
        },
        runTwoFactorStep: function(data) {
            const self = this;
            if (data.error && data.error !== false) {
                self.displayLoginAlert(data.error, "alert-danger")
            } else {
                self.showError = false;
                self.error = false
            }
            self.twoStep = true;
            self.$nextTick(() => {
                self.showTwoFaModal();
                self.appendTwoFactorContainer(data.html)
            })
        },
        showTwoFaModal() {
            $("#2fa-modal").modal("show")
        },
        cancelTwoFaModal() {
            $("#2fa-modal").modal("hide")
        },
        appendTwoFactorContainer(html) {
            const self = this;
            let form = $(html).find("form");
            if (form.length === 0) {
                html = "<form>" + html + "</form>"
            }
            $(html);
            let container = $("#2fa-container");
            container.empty();
            container.append(html);
            $(container).find("input").attr("placeholder", "Enter 2FA Code");
            form = container.find("form");
            form.attr("id", "2faForm");
            form.find("[type=submit]").remove();
            $(form).submit(function(e) {
                e.preventDefault();
                self.showTwoFaLoader = true;
                self.loginUser()
            })
        },
        useBackupCode(event) {
            event.preventDefault();
            this.backupCodeEnabled = true
        },
        initSsoButtons() {
            if (typeof window["startGoogleApp"] === "function") {
                startGoogleApp()
            }
        },
        initOAuthHandler: function() {
            const self = this;
            mgOAuthService.initOAuthHandler(this.oAuthCallback)
        },
        setDefaultMarketingOptValue: function() {
            if (this.marketingOptInValue === null) {
                configuration = this.$store.getters["cartStore/getComponentsConfiguration"]();
                this.marketingOptInValue = configuration ? !configuration["marketingEmailRequire"] : false
            }
            this.$store.dispatch("cartStore/updateMarketingEmail", this.marketingOptInValue)
        },
        oAuthCallback: function(params) {
            switch (params.result) {
                case "logged_in":
                    this.$store.dispatch("cartStore/loadUserData");
                    break;
                case "linking_complete":
                    break;
                case "login_to_link":
                    if (this.selectedSection === "loginOption") {
                        this.displayLoginAlert(mgPageLang.translate(["loginDetails", "error", "loginToLinkAccount"], {}), "alert-info")
                    } else {
                        this.personalDetails.email = params.remote_account.email;
                        this.personalDetails.firstname = params.remote_account.firstname;
                        this.personalDetails.lastname = params.remote_account.lastname
                    }
                    break;
                case "2fa_needed":
                    break;
                case "other_user_exists":
                    this.displayLoginAlert(mgPageLang.translate(["loginDetails", "error", "orderUserExists"], {}), "alert-danger");
                    break;
                case "already_linked":
                    this.displayLoginAlert(mgPageLang.translate(["loginDetails", "error", "alreadyLinked"], {}), "alert-info");
                    break;
                case "not_authorized":
                    this.displayLoginAlert(mgPageLang.translate(["loginDetails", "error", "notAuthorized"], {}), "alert-danger");
                    break
            }
        },
        isValid(name) {
            if (this.isValidField[name] !== undefined && this.isValidField[name] == false) {
                return false
            }
            return true
        },
        checkPersonalDetailsIsValid(data) {
            for (const [key, value] of Object.entries(data)) {
                if (this.personalDetailsOldData[key] == undefined && value || this.personalDetailsOldData[key] !== undefined && this.personalDetailsOldData[key] !== value) {
                    this.validateField(key, value);
                    this.personalDetailsOldData[key] = value
                }
            }
        },
        getTranslatedMessage(name) {
            return mgPageLang.translate(name)
        },
        validateField(name, value) {
            if (this.optionalFields && this.optionalFields.includes(name)) return;
            let errorsCounter = 0;
            let validFieldObj = this.isValidField;
            if (this.selectedSection === "loginOption" || this.accountId && !$("#email:visible").length) {
                if (this.fieldValidatorsLogin[name] == undefined) {
                    this.isValidField[name] = true;
                    return
                }
                for (const [key, validatorName] of Object.entries(this.fieldValidatorsLogin[name])) {
                    if (typeof window[validatorName] !== "function") {
                        return
                    }
                    var result = window[validatorName](name, value);
                    if (this.userExist === true || result === true) {
                        this.isValidField[name] = true;
                        this.fieldValidationMessages[name] = null;
                        pageOrderStore.commit("cartStore/popValidateError", name)
                    } else {
                        pageOrderStore.commit("cartStore/pushValidateError", {
                            id: name,
                            error: result
                        });
                        this.isValidField[name] = !!value;
                        this.fieldValidationMessages[name] = result;
                        break
                    }
                }
            } else {
                if (this.fieldValidatorsRegister[name] == undefined) {
                    this.isValidField[name] = true;
                    return
                }
                for (const [key, validatorName] of Object.entries(this.fieldValidatorsRegister[name])) {
                    if (typeof window[validatorName] !== "function") {
                        return
                    }
                    var result = window[validatorName](name, value);
                    if (result === true) {
                        this.isValidField[name] = true;
                        this.fieldValidationMessages[name] = null;
                        pageOrderStore.commit("cartStore/popValidateError", name)
                    } else {
                        pageOrderStore.commit("cartStore/pushValidateError", {
                            id: name,
                            error: result
                        });
                        this.isValidField[name] = false;
                        this.fieldValidationMessages[name] = result;
                        break
                    }
                }
            }
            Object.values(validFieldObj).filter(key => {
                if (!key) {
                    errorsCounter++
                }
            });
            if (errorsCounter) {
                this.billingErrors = true
            } else {
                this.billingErrors = false
            }
        },
        refreshValidation(name) {
            this.isValidField[name] = true;
            this.fieldValidationMessages[name] = false
        },
        getValidationMessage(name) {
            let counter = 0;
            if (this.fieldValidationMessages[name] == undefined) {
                return "invalid field data"
            }
            let filtered = this.fieldValidationMessages;
            Object.values(filtered).filter(key => {
                if (key !== null) {
                    counter++
                }
            });
            this.fieldErrors = counter;
            return this.fieldValidationMessages[name]
        },
        validateAllFields() {
            this.refreshValidationFields();
            this.areRegisterDetailsVisible();
            if (this.selectedSection === "registerOption" && !$("#account_id").parent().hasClass("checked")) {
                for (const [key, value] of Object.entries(this.personalDetails)) {
                    this.validateField(key, value)
                }
            } else if (this.selectedSection === "loginOption") {
                for (const [key, value] of Object.entries(this.loginDetails)) {
                    this.validateField(key, value)
                }
            }
            this.$store.commit("cartStore/setLocalDetails", {
                name: "authOption",
                details: this.selectedSection
            })
        },
        refreshValidationFields() {
            for (const [key, value] of Object.entries(this.personalDetails)) {
                this.refreshValidation(key)
            }
        },
        showBackupCodeModal(code) {
            this.backupCode = code;
            $("#backupCodeModal").modal({
                backdrop: "static",
                keyboard: false
            })
        },
        closeModal() {
            $("#backupCodeModal").modal("hide");
            this.backupCode = null
        },
        redirectToUrl(url) {
            this.$store.dispatch("cartStore/redirectUrl", {
                url: url
            })
        },
        estimateTax() {
            let details = {
                state: this.personalDetails.state,
                country: this.personalDetails.country
            };
            this.$store.dispatch("cartStore/updateBillingCountryDetails", {
                details: details
            })
        },
        updateBillingAccount(id) {
            if (this.$store.getters["cartStore/isBillingAccountsSupported"]() === false) {
                return
            }
            if (this.accountId == id) {
                return
            }
            this.$store.dispatch("cartStore/updateBillingAccount", {
                id: id
            })
        },
        updateLoginDetails() {
            this.$store.commit("cartStore/setLocalDetails", {
                name: "loginDetails",
                details: this.loginDetails
            })
        },
        displayLoginAlert(error, type) {
            this.showError = true;
            this.error = error;
            this.alertType = type
        },
        initValue(value) {
            this.value = value
        },
        getPersonalInformationFields() {
            const defaultOptions = ["firstname", "lastname", "email", "phonenumber"];
            return this.getAllFields(defaultOptions, "personalInformationOrder")
        },
        getBillingAddressFields() {
            const defaultOptions = ["companyname", "country", "address1", "address2", "city", "state", "postcode"];
            if (this.taxEnabled) {
                defaultOptions.push("tax_id")
            }
            return this.getAllFields(defaultOptions, "billingAddressOrder")
        },
        getAllFields(defaultOptions, sectionName) {
            if (this.layoutSettings[sectionName]) {
                let options = this.layoutSettings[sectionName];
                defaultOptions.forEach(opt => {
                    if (!options.includes(opt)) {
                        options.push(opt)
                    }
                });
                return options
            }
            return defaultOptions
        },
        clearPersonalDetails() {
            for (let detail in this.personalDetails) {
                this.personalDetails[detail] = null
            }
        },
        setMarketingEmail() {
            if (this.marketingEmailRequest) {
                this.personalDetails.marketingoptin = !this.orderSettings.EmailMarketingRequireOptIn;
                this.marketingEmailRequest = false
            }
        },
        areRegisterDetailsVisible() {
            this.registerDetailsVisible = $("#loginOrNewUser > div.panel.panel-check.panel-default.panel--no-border.panel--billing:nth-of-type(2)").hasClass("checked")
        },
        moveGoogleButtons() {
            const googleBtn = $(".googleBtn");
            if (googleBtn.length) {
                this.googleButtons = googleBtn
            }
            const login = document.querySelector(".google-button-login");
            const register = document.querySelector(".google-button-register");
            if (this.googleButtons && this.googleButtons.length === 2 && login && register) {
                login.insertAdjacentElement("beforebegin", this.googleButtons[0]);
                register.insertAdjacentElement("beforebegin", this.googleButtons[1]);
                this.googleButtons.css("display", "block")
            }
        },
        createScript(src) {
            var htmlScriptElement = document.createElement("script");
            htmlScriptElement.setAttribute("src", src);
            document.body.appendChild(htmlScriptElement)
        }
    }
});
const captchaHelper = {
    captchaType: "login",
    initializedCallbacks: false,
    captchaComponent: null,
    callbackEvent: function() {},
    onSuccessCallback: function(response) {},
    onFailCallback: function(error) {},
    initCaptcha: function() {
        this.initializeRecaptchaCallbacks();
        const modal = $("#captchaContainerModal");
        if (modal.length) {
            modalForCaptcha = $("#captchaContainerModal");
            if (typeof modalForCaptcha != "undefined" && modalForCaptcha.hasClass("modalForHCaptcha")) {
                this.initHCaptcha()
            }
            modalForCaptcha.modal()
        } else {
            this.captchaType = "invisible";
            this.initInvisibleCaptcha()
        }
    },
    sleep: function(ms) {
        return new Promise(resolve => setTimeout(resolve, ms))
    },
    initInvisibleCaptcha: async function() {
        if (typeof grecaptcha === "undefined") {
            await this.sleep(100);
            this.initInvisibleCaptcha()
        } else {
            if (typeof grecaptcha.execute !== "function") {
                await this.sleep(100);
                this.initInvisibleCaptcha()
            } else {
                grecaptcha.execute()
            }
        }
    },
    initHCaptcha: async function() {
        if (typeof window.hcaptcha == "undefined") {
            console.log("Failed hCaptcha script load")
        } else {
            window.hcaptcha.render("hCaptchaDiv")
        }
    },
    confirmCaptcha: function() {
        this.captchaComponent.confirm()
    },
    initializeRecaptchaCallbacks: function() {
        if (!this.initializedCallbacks) {
            const self = this;
            jQuery(".g-recaptcha").each(function(t, e) {
                var n = jQuery(e),
                    i = n.closest("form"),
                    r = i.find(".btn-recaptcha"),
                    o = n.attr("id").substring(1);
                let callbackName = o + "Callback";
                window[callbackName] = self.callbackEvent
            });
            this.initializedCallbacks = true
        }
    },
    runSuccessCallback: function(response) {
        this.onSuccessCallback(response)
    }
};
const captchaComponent = {
    template: "#t-mg-one-page-captcha",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            data: null,
            captchaCode: null,
            error: null,
            recaptchaFullInitialized: false,
            recaptchaKeyInitialized: false,
            recaptchaType: null
        }
    },
    watch: {
        isVisible: function(value) {}
    },
    computed: {
        captcha: {
            get() {
                return this.$store.getters["cartStore/getCaptchaSettings"]()
            }
        },
        isSpinning: {
            get() {
                return this.$store.getters["cartStore/getSpinners"]()["captcha"]
            }
        },
        isBlockedCaptcha: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["captcha"] > 1
            }
        },
        isVisible: {
            get() {
                return this.captcha.setting === "on" || this.captcha.setting === "offloggedin" && !this.userDetails.id
            }
        },
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        },
        captchaType: {
            get() {
                let self = this;
                if (this.captcha.type) {
                    self.$nextTick(() => {
                        self.initCaptcha()
                    });
                    return this.captcha.type
                } else {
                    return "recaptcha"
                }
            }
        }
    },
    created() {},
    methods: {
        confirmCaptcha(event) {
            event.preventDefault();
            this.confirm()
        },
        confirm() {
            const self = this;
            self.error = null;
            if (self.isBlockedCaptcha) {
                return false
            }
            if (this.captcha.type == "invisible") {
                this.confirmInvisibleCaptcha()
            } else {
                this.$store.dispatch("cartStore/confirmCaptcha", {
                    token: csrfToken,
                    code: self.captcha.type === "base" ? self.captchaCode : jQuery("#g-recaptcha-response").val(),
                    type: captchaHelper.captchaType,
                    hCaptchaResponse: $("textarea[name='h-captcha-response']").val()
                }).then(response => {
                    if (response.notifications && response.notifications.length > 0 && (response.appState && response.appState.captcha.confirmed != true)) {
                        self.showError(response.notifications);
                        self.reloadCaptcha()
                    }
                    if (response.appState && response.appState.captcha.confirmed === true) {
                        self.closeCaptcha();
                        self.runCallback(response);
                        self.reloadCaptcha();
                        self.captchaCode = null
                    }
                })
            }
        },
        confirmInvisibleCaptcha: () => {
            const self = this;
            self.error = null;
            this.$store.state.cartStore.app.captcha.confirmed = true;
            this.$store.state.cartStore.settings.captcha.isCompleted = true;
            grecaptcha.execute().then(function(token) {
                self.$store.dispatch("cartStore/confirmCaptcha", {
                    token: csrfToken,
                    code: grecaptcha.getResponse(),
                    type: "recaptcha"
                }).then(response => {
                    if (response.notifications && response.notifications.length > 0 && (response.appState && response.appState.captcha.confirmed != true)) {
                        self.showError(response.notifications);
                        self.confirmInvisibleCaptcha()
                    }
                    if (response.appState && response.appState.captcha.confirmed === true) {
                        self.closeCaptcha();
                        self.runCallback(response);
                        self.reloadCaptcha();
                        self.captchaCode = null
                    }
                })
            })
        },
        closeCaptcha() {
            if (this.isBlockedCaptcha) {
                return false
            }
            this.error = null;
            $("#captchaContainerModal").modal("hide")
        },
        reloadCaptcha() {
            const self = this;
            if (self.captcha.type === "hCaptcha" && typeof hcaptcha !== "undefined") {
                hcaptcha.reset()
            }
            let src = this.captcha.imgUrl;
            jQuery(jQuery("#inputCaptchaImageCheckout")).attr("src", src + "?nocache=" + (new Date).getTime())
        },
        showError(notifications) {
            this.error = notifications.find(notification => notification.component == "captcha").message
        },
        runCallback(response) {
            captchaHelper.runSuccessCallback(response)
        },
        initCaptcha() {
            const self = this;
            if (self.captcha.type === "base" || this.recaptchaFullInitialized === true) {
                return
            }
            if (self.captcha.siteKey) {
                recaptchaSiteKey = self.captcha.siteKey;
                self.recaptchaKeyInitialized = true;
                recaptchaLoadComplete = false;
                recaptchaCount = 0;
                self.$nextTick(() => {
                    WHMCS.recaptcha.register();
                    self.recaptchaFullInitialized = true;
                    captchaHelper.callbackEvent = self.captchaCallback
                })
            } else {
                this.captcha.type = "base"
            }
        },
        captchaCallback(val) {
            this.confirm()
        }
    },
    getCaptchaType() {
        return captchaHelper.captchaType
    }
};
mgJsComponentHandler.addDefaultComponent("mg-one-page-captcha", captchaComponent);
mgJsComponentHandler.addDefaultComponent("mg-one-page-cart", {
    template: "#t-mg-one-page-cart",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            data: {},
            code: null,
            tos: null,
            tosIsValid: true,
            captchaCode: null,
            promoEnabled: false,
            promoDescription: "",
            priceBeforePromo: "",
            showErrorBox: false
        }
    },
    watch: {
        isVisible: function(value) {
            this.setRequestedPromoCode();
            if (value === false) {
                return
            }
            if (!this.tosIsValid) {
                this.tosIsValid = true
            }
            if (this.$store.getters["cartStore/getBillingDetailsErrors"]()) {
                this.$store.commit("cartStore/setBillingDetailsErrors", false)
            }
            var self = this;
            this.$nextTick(function() {
                renderCheckBox("cart-component", function(val) {
                    self.tos = val;
                    self.setTos(self.tos)
                }, function(val) {
                    self.tos = null;
                    self.setTos(self.tos)
                });
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
                self.sticky = document.querySelectorAll("[data-fixed-actions]");
                if (self.sticky[0] !== undefined) {
                    let hash = self.sticky[0].attributes.href.value;
                    self.target = document.querySelectorAll(hash);
                    if (self.sticky.length) {
                        window.setTimeout(function() {
                            self.targetVisibility()
                        }, 500);
                        this.stickySidebar()
                    }
                }
                window.onbeforeunload = function() {
                    window.scrollTo(0, 0)
                }
            })
        },
        tos: function(value) {
            let self = this;
            self.$store.dispatch("cartStore/updateTermOfService", value);
            self.requireValidator()
        },
        orderFields: function(value) {
            if (this.orderFields.length) {
                this.orderFields.map(singleField => {
                    if (!this.data[singleField.id]) {
                        this.data[singleField.id] = singleField;
                        if (this.data[singleField.id].type == "dropdown") {
                            this.data[singleField.id].value = this.data[singleField.id].extra[0]
                        } else if (this.data[singleField.id].type == "inputText") {
                            this.data[singleField.id].value = ""
                        } else {
                            this.data[singleField.id].value = null
                        }
                    }
                })
            }
        }
    },
    computed: {
        renewalsLength: {
            get() {
                if (Object.keys(this.cart.renewals).length > 0) {
                    return Object.keys(this.cart.renewals).length
                }
            }
        },
        onlyDomains: {
            get() {
                return this.cartDomains && this.cart.products.length == 0
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        promo: {
            get() {
                let promoType = " ";
                if (this.cart.promo) {
                    this.promoEnabled = true;
                    if (this.cart.promo.type == "Price Override") {
                        promoType += this.cart.promo.type
                    } else {
                        promoType = ""
                    }
                    if (this.layoutSettings.displayPriceSuffix && this.currency.suffix) {
                        if (this.cart.promo.type == "Percentage") {
                            this.promoDescription = this.cart.promo.value + "% " + this.cart.promo.recurring
                        } else {
                            this.promoDescription = this.currency.prefix + this.cart.promo.discount.numeric + " " + this.currency.suffix + promoType + " " + this.cart.promo.recurring
                        }
                    } else {
                        if (this.cart.promo.type == "Percentage") {
                            this.promoDescription = this.cart.promo.value + "% " + this.cart.promo.recurring
                        }
                        this.promoDescription = this.currency.prefix + this.cart.promo.discount.numeric
                    }
                }
                return this.cart.promo && this.cart.promo.code ? this.cart.promo : false
            }
        },
        cartRecurringPrices: {
            get() {
                return this.cart !== undefined && this.cart.additionalPriceData !== undefined && this.cart.additionalPriceData.recurringPrices !== undefined
            }
        },
        promoCodeErrorMessage: {
            get() {
                return this.$store.getters["cartStore/getPromoCodeErrorMessage"]()
            }
        },
        cart: {
            get() {
                let cartSummary = this.$store.getters["cartStore/getCartSummary"]();
                if (!cartSummary.promo && cartSummary.total) {
                    this.priceBeforePromo = cartSummary.total.numeric
                }
                return cartSummary
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("cart")
            }
        },
        spinner: {
            get() {
                return this.$store.getters["cartStore/getSpinners"]()["cart"]
            }
        },
        cartDomains: {
            get() {
                return this.cart && this.cart.domains
            }
        },
        isOrdering: {
            get() {
                return this.$store.getters["cartStore/getSpinners"]()["ordering"]
            }
        },
        tosEnabled: {
            get() {
                return this.$store.getters["cartStore/getComponentsConfiguration"]()["tosEnabled"]
            }
        },
        tosLink: {
            get() {
                return this.$store.getters["cartStore/getComponentsConfiguration"]()["tosLink"]
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        captcha: {
            get() {
                return this.$store.getters["cartStore/getCaptchaSettings"]()
            }
        },
        isCaptchaOn: {
            get() {
                if (!this.captcha.setting) {
                    return false
                }
                return (this.captcha.setting === "on" || this.captcha.setting === "offloggedin" && !(this.$store.getters["cartStore/getClient"]()["id"] > 0)) && this.captcha.forms["checkoutCompletion"] === true
            }
        },
        isCaptchaConfirmed: {
            get() {
                return this.$store.getters["cartStore/getCaptchaConfirmation"]()
            }
        },
        paymentGateway: {
            get() {
                return this.$store.getters["cartStore/getSelectedPaymentGateway"]()
            }
        },
        promoAlert: {
            get() {
                let alerts = this.$store.getters["cartStore/getAlert"]();
                return alerts && alerts.promo ? alerts.promo : false
            }
        },
        isButtonBlocked: {
            get() {
                return !(this.cartDomains.length > 0 || this.cart.addons.length > 0 || this.cart.domains.length > 0 || this.cart.products.length > 0 || Object.keys(this.cart.renewals).length > 0 || this.cart.upgrades.length > 0)
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        cartErrors: {
            get() {
                return this.$store.getters["cartStore/getValidateErrors"]()
            }
        },
        isDiscountCenterOn: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]().isDiscountCenterOn
            }
        },
        isPromoVisible: {
            get() {
                return this.layoutSettings.choosePromotionInputPlacement == "orderSummary" ? true : false
            }
        },
        isPromoCodeInOrderSummary: {
            get() {
                return this.layoutSettings.choosePromotionInputPlacement == "orderSummary" ? true : false
            }
        },
        orderFields: {
            get() {
                return this.$store.getters["cartStore/getOrderFields"]()
            }
        },
        requestedPromoCode: {
            get() {
                return this.$store.getters["cartStore/getRequestedPromoCode"]()
            }
        },
        showSummaryFooter: {
            get() {
                return this.tosEnabled || (this.layoutSettings.orderFieldsLocation == "orderSummaryBox" || !this.layoutSettings.orderFieldsLocation) && this.orderFields.length
            }
        }
    },
    created() {
        var self = this;
        mgEventHandler.on("PreCompleteOrder", null, function() {
            self.requireValidator();
            Object.keys(self.data).forEach(function(key) {
                self.requireOrderFieldsValidator(self.data[key]);
                self.$forceUpdate()
            })
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.tosIsValid = true
        })
    },
    updated: function() {
        setInterval(() => {
            this.showErrorBox = $(".alert.alert-danger.alert-sm:visible").not("#tosCheckboxAlert").not("#validationErrorPanel").not(".promoAlert").length
        }, 2e3);
        if (!this.spinner) {
            this.scrollContent = document.querySelectorAll(".summary-content.content-scroll");
            if (this.scrollContent.length) {
                let that = this;
                setTimeout(function() {
                    let height = that.scrollContent[0].offsetHeight;
                    if (height > 160) {
                        that.scrollContent[0].classList.add("has-scroll")
                    } else {
                        that.scrollContent[0].classList.remove("has-scroll")
                    }
                }, 1)
            }
        }
        this.$nextTick(() => {
            this.addScrollToErrorBoxEvent(1e3)
        })
    },
    methods: {
        addPromo: function() {
            if (this.isBlockedPage) {
                return
            }
            this.$store.dispatch("cartStore/addPromocode", {
                code: this.code
            })
        },
        removePromo: function() {
            if (this.isBlockedPage) {
                return
            }
            this.$store.dispatch("cartStore/removePromocode")
        },
        removeItem: function(type, value) {
            switch (type) {
                case "renew":
                    this.$store.dispatch("cartStore/removeDomainRenew", {
                        id: value
                    });
                    break;
                default:
                    return
            }
        },
        setTos: function(value) {
            this.$store.dispatch("cartStore/updateTermOfService", value)
        },
        enablePromocode: function() {
            let self = this;
            this.promoEnabled = true
        },
        confirmOrder: function() {
            if (this.isBlockedPage) {
                return
            }
            if (this.$captchaIsOn("checkoutCompletion")) {
                this.$captchaCheck("checkoutCompletion").then(this.completeOrder)
            } else {
                this.completeOrder()
            }
        },
        validateCaptcha: function() {
            const self = this;
            captchaHelper.captchaComponent = this.$parent.$refs.captcha;
            captchaHelper.captchaType = "checkoutCompletion";
            captchaHelper.onSuccessCallback = function(data) {
                self.completeOrder()
            };
            captchaHelper.initCaptcha()
        },
        completeOrder: function() {
            this.$store.dispatch("cartStore/clearValidateErrors");
            this.$store.dispatch("cartStore/completeOrder", {})
        },
        stickySidebar: function() {
            $(window).on("scroll", event => this.targetVisibility(event))
        },
        targetVisibility: function() {
            if (this.isOnScreen()) {
                this.onScreen()
            } else {
                this.outScreen()
            }
        },
        isOnScreen: function() {
            let element = this.target[0];
            let position = element.getBoundingClientRect();
            if (position.bottom <= window.innerHeight) {
                return true
            }
        },
        onScreen: function() {
            this.sticky[0].classList.remove("is-fixed")
        },
        outScreen: function() {
            this.sticky[0].classList.add("is-fixed")
        },
        requireValidator: function() {
            let fieldId = "tos";
            if (this.tosEnabled && this.$store.getters["cartStore/getTermOfServiceValue"]() !== true) {
                this.tosIsValid = false;
                this.$store.commit("cartStore/pushValidateError", {
                    id: fieldId,
                    error: "Term of Service is required."
                });
                return
            }
            this.tosIsValid = true;
            this.$store.commit("cartStore/popValidateError", fieldId)
        },
        requireOrderFieldsValidator(field) {
            if (field.required === "off") {
                return
            }
            let result = pageOrderRequiredValidator(field.id, this.data[field.id].value);
            mgPageOrderCustomFieldValidatorCallback(field, result)
        },
        decodeHtml(html) {
            const txt = document.createElement("textarea");
            txt.innerHTML = html;
            return txt.value
        },
        getFormattedDomainPremium(domainWithPrefix) {
            const domain = domainWithPrefix.split(this.currency.suffix)[0];
            return this.layoutSettings.displayPriceSuffix && this.currency.suffix ? domain + " " + this.currency.suffix : domain
        },
        updateDataValue(event, fieldId, option, index) {
            this.data[fieldId].value = option;
            delete this.data[fieldId];
            this.data = { ...this.data
            };
            this.data[fieldId] = this.orderFields[index];
            this.data[fieldId].value = option;
            this.requireOrderFieldsValidator(this.data[fieldId]);
            this.$store.dispatch("cartStore/updateOrderFields", Object.values(this.data).filter(item => item.value))
        },
        isValid(field) {
            return field.isValidField
        },
        getRawDomainPrice(price, period) {
            return price.replace(period, "")
        },
        addScrollToErrorBoxEvent(timeout) {
            $("#checkout").click(() => {
                const box = $(".alert.alert-danger.alert-sm:visible").not("#validationErrorPanel");
                if (box.length) {
                    $("html, body").animate({
                        scrollTop: box.offset().top - 300
                    }, timeout)
                }
                setTimeout(() => {
                    $("html, body").stop(true, true)
                }, timeout)
            })
        },
        setRequestedPromoCode() {
            if (this.requestedPromoCode) {
                this.$store.dispatch("cartStore/addPromocode", {
                    code: this.requestedPromoCode
                });
                this.code = this.requestedPromoCode
            }
        },
        getTotalRecurringPrices() {
            return this.cart.additionalPriceData.recurringPrices
        },
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.currency.format)
        },
        getCartOriginalPrice() {
            let price = parseFloat(this.cart.original.subtotal.numeric) + parseFloat(this.cart.taxtotal.numeric) + parseFloat(this.cart.taxtotal2.numeric);
            if (this.cart.gatewayCharge) {
                price += this.cart.gatewayCharge.numeric
            }
            return this.getFormattedPrice(price)
        },
        getCartPrice() {
            let price = parseFloat(this.cart.subtotal.numeric) + parseFloat(this.cart.taxtotal.numeric) + parseFloat(this.cart.taxtotal2.numeric);
            if (this.cart.gatewayCharge) {
                price += this.cart.gatewayCharge.numeric
            }
            return this.getFormattedPrice(price)
        },
        getProductPrice(product) {
            if (product.billingcycle !== "onetime") {
                return product["pricing"]["baseprice"]["prefixed"] + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") + "/" + product.shortbillingcyclefriendly
            }
            return product["pricing"]["baseprice"]["prefixed"] + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "")
        },
        getConfigOptionPrice(conf) {
            if (conf.recurring.numeric !== "0.00") {
                return conf.friendlyprice
            }
            return conf.recurring.prefixed
        },
        getDomainPrice(domain) {
            return domain.totaltoday.prefixed + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") + domain.friendlyperiod
        },
        getAddonPrice(addon) {
            if (addon.recurring.numeric == 0) {
                return this.$store.getters["cartStore/getZeroPrice"]("addonsPrices") + (addon.setup.prefixed ? " + " + addon.setup.prefixed + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") : "")
            }
            return addon.recurring.prefixed + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") + addon.friendlypricelower + (addon.setup.prefixed ? " + " + addon.setup.prefixed + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") : "")
        },
        getDomainZeroValue() {
            return this.$store.getters["cartStore/getZeroPrice"]("domainsPrices")
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-complete-order", {
    template: "#t-mg-one-page-complete-order",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    components: {},
    data: function() {
        return {}
    },
    computed: {
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("complete")
            }
        },
        redirectionType: {
            get() {
                return this.$store.getters["cartStore/getCompleteOrderDetails"]()["redirectionType"]
            }
        },
        status: {
            get() {
                return this.$store.getters["cartStore/getCompleteOrderDetails"]()["status"]
            }
        },
        orderId: {
            get() {
                return this.$store.getters["cartStore/getCompleteOrderDetails"]()["number"]
            }
        },
        invoiceId: {
            get() {
                return this.$store.getters["cartStore/getCompleteOrderDetails"]()["invoiceId"]
            }
        },
        redirectButton: {
            get() {
                return this.$store.getters["cartStore/getCompleteOrderDetails"]()["redirectButton"]
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        }
    },
    watch: {
        redirectButton: function(value) {
            if (value === false) {
                return
            }
            if (this.redirectionType === "gateway") {
                setTimeout("autoSubmitFormByContainer('frmPayment')", 5e3)
            }
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-currency", {
    template: "#t-mg-one-page-currency",
    data: function() {
        return {
            currency: null,
            popoverIsVisible: false,
            popoverIsRequired: true,
            popoverNotShowAgain: false,
            currencyToPopover: null
        }
    },
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    computed: {
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("currency") && this.$store.getters["cartStore/getClient"]().exists !== true && Object.keys(this.currencies).length > 0 && this.layoutSettings.hideCurrencySelector !== "hide" && !(Object.keys(this.currencies).length === 1 && this.layoutSettings.hideCurrencySelector === "on")
            }
        },
        currencies: {
            get() {
                return this.$store.getters["cartStore/getCurrencies"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        selectedCurrency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        }
    },
    methods: {
        changeCurrency: function(currency, showPopover) {
            if (this.isBlockedPage) {
                return
            }
            if (showPopover === true && this.popoverNotShowAgain === false) {
                this.currencyToPopover = currency;
                this.showPopover()
            } else {
                this.currencyToPopover = null;
                this.hidePopover();
                this.$store.dispatch("cartStore/changeCurrency", {
                    currency: currency
                })
            }
        },
        showPopover() {
            this.popoverIsVisible = true
        },
        hidePopover() {
            this.popoverIsVisible = false
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-domains", {
    template: "#t-mg-one-page-domains",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            domainSld: null,
            domainTld: null,
            subdomain: null,
            domainName: null,
            searchedType: null,
            suggestionLimit: 10,
            suggestionCount: 0,
            period: 1,
            spotlightLimit: 5,
            showPopover: true,
            popoverIsVisible: false,
            popoverIsRequired: true,
            popoverNotShowAgain: false,
            field: {
                id: "domainName",
                name: "domain"
            },
            isValidField: true,
            fieldValidationMessages: null,
            searchedDomain: null,
            interactiveDomainFormMode: false,
            localFormData: {
                addons: {},
                servers: {},
                customFields: {},
                registerFields: {}
            },
            selectedType: null,
            recaptchaCounter: 0,
            isInvalidDomain: false,
            isDomainEmpty: false,
            tmpDomainName: "",
            selectedTld: null,
            searchedWord: "",
            tldToShow: [],
            domainDiscountPrice: false,
            isSliderMoving: false,
            ownDomainFlag: false,
            shortestPeriod: false,
            subdomainInput: false,
            subdomainError: ""
        }
    },
    components: {
        customFieldTextInput: domainText,
        customFieldCheckboxInput: domainCheckbox,
        customFieldDropdownInput: domainDropdown,
        customFieldDisplayInput: domainDisplay
    },
    created() {
        const self = this;
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            let domainSearched = typeof self.isDomainSelected == "object" ? self.isDomainSelected.domain : self.isDomainSelected;
            let result = productRequiresDomain(self.field.name, domainSearched);
            if (self.isVisible) {
                if (result === true) {
                    pageOrderStore.commit("cartStore/popValidateError", self.field.name);
                    self.isValidField = true;
                    self.fieldValidationMessages = false
                } else {
                    pageOrderStore.commit("cartStore/pushValidateError", {
                        id: self.field.name,
                        error: result
                    });
                    self.fieldValidationMessages = result;
                    self.isValidField = false
                }
            }
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = true;
            self.fieldValidationMessages = null
        })
    },
    watch: {
        domainToSearch: function(value) {
            if (!value && value == this.domainName) {
                return
            }
            this.domainName = value;
            this.searchDomain()
        },
        group: function() {
            if (this.searchDetails) {
                this.ownDomainFlag = true
            }
        },
        regTypes: function(value) {
            let self = this;
            let [type] = Object.keys(value);
            this.selectedType = this.selectedRegType;
            if (!value[this.selectedRegType] && type !== "renew") {
                this.setType(type)
            }
            return value
        },
        selectedProduct() {
            if (Object.keys(this.regTypes).includes("subdomain") && Array.isArray(this.productSubdomain)) {
                this.subdomain = this.productSubdomain[0]
            }
            if (this.isDomainSelected && this.selectedRegType === "subdomain") {
                this.$store.dispatch("cartStore/removeDomain", {
                    domain: this.selectedDomain
                })
            }
        },
        currencyId() {
            if (this.domainName) {
                this.searchDomain()
            }
        },
        isVisible: function(value) {
            $(this.$refs.inputFocus).tooltip("hide");
            this.domainName = this.$store.getters["cartStore/getDomainToSearch"]();
            this.$nextTick(function() {
                if (this.tlds[0] && !this.selectedTld) {
                    this.selectedTld = this.tlds[0] ? this.tlds[0].extension : null
                }
                this.domainTld = this.selectedTld;
                this.tldToShow = this.tlds;
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
                if (value) {
                    this.isSliderMoving = false;
                    this.handleNavTouchScroll(this.$refs.tabSlider, this.$refs.tabSliderContainer)
                }
            })
        },
        formData: {
            handler(formData) {
                if (!this.isDomainSelected || !this.interactiveDomainFormMode) {
                    return false
                }
                if (Array.isArray(formData.servers) || formData.servers !== null && ["function", "object"].includes(typeof formData.servers)) {
                    Object.keys(formData.servers).forEach(key => {
                        const input = document.getElementById(key);
                        if (input) {
                            formData.servers[key] = input.value
                        }
                    })
                }
                this.$store.dispatch("cartStore/updateDomain", {
                    formData: formData
                });
                setTimeout(() => this.customFields = this.$store.getters["cartStore/getDomainCustomFields"](), 1e3)
            },
            deep: true
        },
        stateFormData: {
            handler(formData) {
                this.interactiveDomainFormMode = false;
                this.localFormData = formData;
                this.$nextTick(() => {
                    this.interactiveDomainFormMode = true
                })
            },
            deep: true
        },
        domainOwn: function(newValue) {
            if (newValue !== undefined && newValue[0] !== undefined && newValue[0].status === "true") {
                let domain = this.convertDomainName();
                this.$store.commit("cartStore/setSelectedDomain", domain);
                this.$store.dispatch("cartStore/removeDomains");
                this.addDomain(this.selectedRegType)
            } else if (newValue !== undefined && newValue.error !== undefined) {
                console.log("WHMCS validation errror " + newValue.error)
            } else {}
        },
        period: function(value) {
            if (value) {
                this.changePeriod(this.selectedRegType, value)
            }
        },
        domainSubdomain: function(newValue) {
            if (newValue !== undefined && newValue[0] !== undefined && newValue[0].status) {
                this.addDomain(this.selectedRegType)
            } else if (newValue !== undefined && newValue.error !== undefined) {
                console.log("WHMCS validation errror " + newValue.error);
                this.subdomainError = newValue.error
            } else {
                this.subdomainError = ""
            }
        },
        searchedWord: function(val) {
            this.reloadTlds()
        },
        isDomainSelected: function() {
            $(this.$refs.inputFocus).tooltip("hide")
        },
        isSearchVisible: function() {
            $(this.$refs.inputFocus).tooltip("hide")
        }
    },
    computed: {
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        currencyId: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrencyId"]()
            }
        },
        getSPage: {
            get() {
                return this.$store.getters["cartStore/getSPage"]()
            }
        },
        domainToSearch: {
            get() {
                return this.$store.getters["cartStore/getDomainToSearch"]()
            }
        },
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        },
        isCaptchaOn: {
            get() {
                return this.captcha.forms.domainChecker && (this.captcha.setting === "on" || this.captcha.setting === "offloggedin" && this.$store.getters["cartStore/getClient"]()["id"] > 0)
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("domains")
            }
        },
        isSearchVisible: {
            get() {
                const selectedProduct = this.$store.getters["cartStore/getSelectedProductDetails"]();
                if (!selectedProduct) return this.$store.getters["cartStore/isDomainSectionAvailableComponent"]("search") && !this.$store.getters["cartStore/getGroupProducts"]().length;
                return selectedProduct.showdomainoptions && selectedProduct.type !== "other"
            }
        },
        regTypes: {
            get() {
                let domainsRegTypes = this.$store.getters["cartStore/getDomainRegTypes"]();
                const selectedProduct = this.$store.getters["cartStore/getSelectedProductDetails"]();
                if (selectedProduct && selectedProduct.subdomain == "") {
                    this.subdomainInput = domainsRegTypes.subdomain;
                    delete domainsRegTypes.subdomain
                } else if (this.subdomainInput) {
                    domainsRegTypes.subdomain = this.subdomainInput
                }
                if (this.userDetails.id) {
                    this.layoutSettings.domainElements = this.layoutSettings.domainElementsForUser
                }
                return this.layoutSettings.domainElements && this.layoutSettings.domainElements.length ? this.getSortedElementsBySettings(domainsRegTypes) : domainsRegTypes
            }
        },
        spotlights: {
            get() {
                let spotlights = this.$store.getters["cartStore/getDomainSpotlights"]()[this.selectedRegType];
                if (!spotlights) {
                    return []
                }
                let payType = this.selectedProductDetails && this.selectedProductDetails.paytype == "onetime" ? this.selectedProductDetails.paytype : this.$store.getters["cartStore/getSelectedProductCycle"]();
                spotlights.map(singleSpotlight => {
                    singleSpotlight.isFreeWithSelectedProduct = this.selectedProductDetails && this.selectedProductDetails.freedomaintlds && this.selectedProductDetails.freedomainpaymentterms.includes(payType) && this.selectedProductDetails.freedomaintlds.includes(singleSpotlight.tld);
                    if (this.layoutSettings.displayPriceSuffix) {
                        singleSpotlight.registerPriceFormated = singleSpotlight.register;
                        singleSpotlight.transferPriceFormated = singleSpotlight.transfer;
                        if (singleSpotlight.newRegisterPrice) {
                            singleSpotlight.newRegisterPriceFormatted = singleSpotlight.newRegisterPrice
                        }
                    } else {
                        singleSpotlight.registerPriceFormated = singleSpotlight.registerPrefixed;
                        singleSpotlight.transferPriceFormated = singleSpotlight.transferPrefixed;
                        if (singleSpotlight.newRegisterPrice) {
                            singleSpotlight.newRegisterPriceFormatted = singleSpotlight.newRegisterPrice
                        }
                    }
                    singleSpotlight.formattedPeriod = singleSpotlight.period > 1 ? singleSpotlight.period + mgPageLang.translate(["domain", "firstPeriodShortPlural"], {}) : mgPageLang.translate(["domain", "firstPeriodShort"], {})
                });
                return spotlights !== undefined && this.spotlightLimit !== 999 ? spotlights.slice(0, this.spotlightLimit) : spotlights
            }
        },
        availableMoreSpotlights: {
            get() {
                let spotlights = this.$store.getters["cartStore/getDomainSpotlights"]()[this.selectedRegType];
                return this.spotlightLimit && spotlights !== undefined && spotlights.length > spotlights.slice(0, this.spotlightLimit).length
            }
        },
        availableLessSpotlights: {
            get() {
                var spotlights = this.$store.getters["cartStore/getDomainSpotlights"]()[this.selectedRegType];
                return this.spotlightLimit === 999 && spotlights !== undefined && spotlights.length > spotlights.slice(0, 5).length
            }
        },
        domainSuggested: {
            get() {
                let records = this.$store.getters["cartStore/getDomainInfoByType"]("suggestions");
                if (records !== undefined) {
                    this.suggestionCount = Object.keys(records).length;
                    return Object.entries(records).slice(0, this.suggestionLimit).map(entry => entry[1])
                } else {
                    return records
                }
            }
        },
        domainSearched: {
            get() {
                return this.$store.getters["cartStore/getDomainInfoByType"]("domain")
            }
        },
        domainSpotlight: {
            get() {
                return this.$store.getters["cartStore/getDomainInfoByType"]("spotlight")
            }
        },
        domainTransfer: {
            get() {
                return this.$store.getters["cartStore/getDomainInfoByType"]("transfer")
            }
        },
        domainOwn: {
            get() {
                return this.$store.getters["cartStore/getDomainInfoByType"]("owndomain")
            }
        },
        domainSubdomain: {
            get() {
                return this.$store.getters["cartStore/getDomainInfoByType"]("subdomain")
            }
        },
        domainExtensions: {
            get() {
                return this.$store.getters["cartStore/getTldExtensions"]()
            }
        },
        selectedRegType: {
            get() {
                let regType = this.$store.getters["cartStore/getDomainRegistrationType"]();
                return regType ? regType : "register"
            }
        },
        searchPlaceholder: {
            get() {
                return this.regTypes[this.selectedRegType] ? this.regTypes[this.selectedRegType].searchPlaceholder : ""
            }
        },
        productSubdomain: {
            get() {
                if (this.selectedProductDetails && this.selectedProductDetails.subdomain) {
                    const subdomains = this.selectedProductDetails.subdomain.split(",");
                    if (subdomains.length > 0 && this.domainName) {
                        if (!this.domainName.includes(".") && !this.subdomain) {
                            this.subdomain = subdomains[0]
                        } else if (this.domainName.includes(".")) {
                            const domainTlds = this.domainName.split(".");
                            let domainTld = "";
                            for (let i = 1; i < domainTlds.length; i++) {
                                domainTld += "." + domainTlds[i]
                            }
                            if (subdomains.includes(domainTld)) {
                                this.subdomain = domainTld
                            }
                        }
                    }
                    return subdomains
                }
                return []
            }
        },
        periodPrice: {
            get() {
                this.getDiscountDomainPrice();
                if (this.isFreeForSelectedProduct) {
                    return true
                }
                if (!this.shortestPeriod) return null;
                this.period = this.shortestPeriod.period;
                return this.shortestPeriod[this.selectedRegType]
            }
        },
        isFreeForSelectedProduct: {
            get() {
                const freeDomainTlds = this.selectedProductDetails ? this.selectedProductDetails.freedomaintlds.map(tld => tld.slice(1)) : [];
                const domainTld = this.$store.getters["cartStore/getDomainInfoByType"]("domain")[0].tld;
                let payType = this.selectedProductDetails && this.selectedProductDetails.paytype == "onetime" ? this.selectedProductDetails.paytype : this.$store.getters["cartStore/getSelectedProductCycle"]();
                return this.selectedProductDetails.freedomaintlds ? freeDomainTlds.includes(domainTld) && this.selectedProductDetails.freedomainpaymentterms.includes(payType) : false
            }
        },
        searchDetails: {
            get() {
                let self = this;
                if (this.searchSpinner) {
                    return false
                }
                if (this.searchedType !== this.selectedRegType) {
                    return false
                }
                if (!pageOrderIsObjectEmpty(this.domainSearched)) {
                    return this.domainSearched
                }
                if (!pageOrderIsObjectEmpty(this.domainTransfer)) {
                    return this.domainTransfer
                }
                if (this.domainOwn && !this.ownDomainFlag) {
                    return this.domainOwn
                }
                if (!pageOrderIsObjectEmpty(this.domainSubdomain)) {
                    return this.domainSubdomain
                }
                return false
            }
        },
        searchedError: {
            get() {
                const self = this;
                let isValid = true;
                if (self.searchDetails === false) {
                    return false
                }
                if (self.searchDetails.error) {
                    return self.searchDetails.error
                }
                if (self.selectedRegType == "register") {
                    isValid = self.isRegisterValid()
                }
                if (self.selectedRegType == "transfer") {
                    isValid = self.isTransferValid()
                }
                if (self.selectedRegType == "subdomain") {
                    this.setType(this.selectedRegType);
                    isValid = self.isSubdomainValid();
                    if (this.subdomainError) {
                        isValid = this.subdomainError
                    }
                }
                if (self.selectedRegType == "own") {
                    isValid = self.isOwnValid()
                }
                return isValid === true ? false : isValid
            }
        },
        legacyStatusError: {
            get() {
                return this.domainTransfer !== undefined && this.domainTransfer[0] !== undefined && this.domainTransfer[0].legacyStatus == "error" || this.domainSearched !== undefined && this.domainSearched[0] !== undefined && this.domainSearched[0].legacyStatus == "error" || this.domainOwn !== undefined && this.domainOwn.error !== undefined
            }
        },
        searchSpinner: {
            get() {
                return this.$store.getters["cartStore/getSpinners"]()["domainSearchSpinner"]
            }
        },
        spinner: {
            get() {
                return this.$store.getters["cartStore/getSpinners"]()["domainAddSpinner"]
            }
        },
        showPeriods: {
            get() {
                return true
            }
        },
        isDomainSelected: {
            get() {
                return this.$store.getters["cartStore/isDomainSelected"]()
            }
        },
        selectedDomain: {
            get() {
                return this.$store.getters["cartStore/getDomainName"]()
            }
        },
        availablePeriods: {
            get() {
                const domainInfo = this.$store.getters["cartStore/getDomainInfoByType"]("domain");
                if (domainInfo[0]) {
                    this.shortestPeriod = domainInfo[0].shortestPeriod
                }
                if (domainInfo !== undefined && domainInfo[0] !== undefined && domainInfo[0].pricing) {
                    let items = Object.fromEntries(Object.entries(domainInfo[0].pricing).filter(([key, value]) => value[this.selectedRegType] !== undefined));
                    if (this.selectedType === "transfer") {
                        Object.entries(items[Object.keys(items)[0]]).forEach(item => {
                            if (item[1] !== -1) {
                                items[Object.keys(items)[0]][item[0]] = item[1].toString().replace(/[^0-9.|,]/g, "")
                            }
                        })
                    }
                    return items
                }
                return []
            }
        },
        domainAdditionalFields: {
            get() {
                return this.availablePeriods || this.customFields || this.domainServerNamespacesFormData
            }
        },
        domainServerNamespaces: {
            get() {
                return this.$store.getters["cartStore/getDomainSchemaServerNamespaces"]()
            }
        },
        domainServerNamespacesAvailable: {
            get() {
                return this.domainServerNamespaces && Object.keys(this.domainServerNamespaces).length > 0
            }
        },
        customFields: {
            get() {
                return this.$store.getters["cartStore/getDomainCustomFields"]()
            }
        },
        registerFields: {
            get() {
                return this.$store.getters["cartStore/getDomainSchemaRegisterFields"]()
            }
        },
        stateFormData: {
            get() {
                let selectedProduct = this.$store.getters["cartStore/getSelectedProductId"]();
                let productDetails = this.$store.getters["cartStore/getSelectedProductDetails"]();
                if (selectedProduct && productDetails) {
                    if (productDetails.showdomainoptions == 1) {
                        this.$store.commit("cartStore/showComponent", "domains", {
                            root: true
                        })
                    } else {
                        this.$store.commit("cartStore/hideComponent", "domains", {
                            root: true
                        })
                    }
                }
                return this.$store.getters["cartStore/getDomainForm"]()
            }
        },
        formData: {
            get() {
                return this.localFormData
            }
        },
        domainServerNamespacesFormData: {
            get() {
                return this.formData.servers ? this.formData.servers : {}
            }
        },
        customFieldsFormData: {
            get() {
                return this.formData.customFields ? this.formData.customFields : {}
            }
        },
        registerFieldsFormData: {
            get() {
                return this.formData.registerFields ? this.formData.registerFields : {}
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        captcha: {
            get() {
                return this.$store.getters["cartStore/getCaptchaSettings"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        selectedProductDetails: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductDetails"]()
            }
        },
        selectedProduct: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductId"]()
            }
        },
        tlds: {
            get() {
                return this.$store.getters["cartStore/getTldExtensions"]()
            }
        },
        domainType: {
            get() {
                return this.$store.getters["cartStore/getDomainRegistrationType"]()
            }
        },
        isIDNActive: {
            get() {
                return this.$store.getters["cartStore/isIDNDomainsActive"]()
            }
        },
        group: {
            get() {
                return this.$store.getters["cartStore/getSelectedGroupId"]()
            }
        }
    },
    methods: {
        requireValidator() {
            if (!this.isVisible) {
                mgPageOrderCustomFieldValidatorCallback(this, true);
                return
            }
            if (!this.isDomainSelected) {
                let result = pageOrderRequiredValidator(this.field.name, "");
                mgPageOrderCustomFieldValidatorCallback(this, result)
            } else {
                mgPageOrderCustomFieldValidatorCallback(this, false)
            }
        },
        changeType(event, type) {
            if (Object.keys(this.regTypes).includes("subdomain") && Array.isArray(this.productSubdomain)) {
                this.subdomain = this.productSubdomain[0]
            }
            event.preventDefault();
            let self = this;
            if (!this.isSliderMoving) {
                if (type != this.selectedRegType) {
                    self.searchDetails = false;
                    self.searchedDomain = ""
                }
                if (this.isBlockedPage) {
                    return
                }
                this.selectedType = type;
                this.searchedWord = "";
                this.selectedTld = this.tlds[0] ? this.tlds[0].extension : null;
                this.setType(type)
            }
        },
        setType(type) {
            this.$store.dispatch("cartStore/setDomainRegistrationType", type)
        },
        showMoreSpotlights() {
            this.spotlightLimit = 999
        },
        showLessSpotlights() {
            this.spotlightLimit = 5
        },
        setSeparateDomainName: function() {
            this.searchedDomain = this.domainName;
            let name = this.domainName.split(".");
            this.domainSld = name[0];
            delete name[0];
            const domainTld = name.join(".");
            if (domainTld && this.tlds.filter(e => e.extension === domainTld).length > 0 && (this.selectedType === "register" || this.selectedType === "transfer")) {
                this.changeTld(domainTld)
            }
        },
        searchDomain: function() {
            if (!this.domainName) {
                this.isDomainEmpty = true;
                $(this.$refs.inputFocus).tooltip("show");
                return
            }
            this.domainName = this.domainName.trim().replace("www.", "");
            if (!this.isIDNActive && !this.domainName.match(/^((?!-))(xn--)?[a-z0-9][a-z0-9-_]{0,61}[a-z0-9]{0,1}\.(xn--)?([a-z0-9\-]{1,61}|[a-z0-9-]{1,30}\.[a-z]{2,})$/i) && !this.domainName.match(/^[a-z0-9]+$/i)) {
                this.isInvalidDomain = true;
                return
            }
            if (this.selectedTld) {
                this.tmpDomainName = this.domainName + this.selectedTld
            } else {
                this.tmpDomainName = this.domainName.includes(".") ? this.domainName : this.domainName
            }
            this.isInvalidDomain = false;
            const domainCheckerType = "domainChecker";
            if (this.$captchaIsOn(domainCheckerType) && !this.$store.getters["cartStore/getCaptchaConfirmation"]()) {
                this.$captchaCheck(domainCheckerType).then(this.loadDomainInformation)
            } else {
                this.loadDomainInformation()
            }
        },
        loadDomainInformation: function() {
            this.searchedType = this.selectedRegType;
            this.isValidField = true;
            this.fieldValidationMessages = null;
            switch (this.selectedRegType) {
                case "register":
                    this.loadWhmcsDomainInformation("domain");
                    this.loadWhmcsDomainInformation("spotlight");
                    this.loadWhmcsDomainInformation("suggestions");
                    break;
                case "transfer":
                    this.loadWhmcsDomainInformation("transfer");
                    break;
                case "subdomain":
                    this.loadWhmcsDomainInformation("subdomain");
                    break;
                default:
                    this.loadWhmcsDomainInformation("owndomain");
                    break
            }
        },
        loadWhmcsDomainInformation: function(type) {
            let domainToCheck = undefined;
            if (this.domainName) {
                this.setSeparateDomainName()
            }
            if (this.selectedType == "register" || this.selectedType == "transfer") {
                if (this.domainTld) {
                    domainToCheck = this.domainSld + this.domainTld
                } else if (this.tlds[0]) {
                    domainToCheck = this.domainSld + (this.selectedTld ? this.selectedTld : this.tlds[0].extension)
                }
            } else if (this.selectedType === "own") {
                domainToCheck = this.domainName
            } else if (this.domainTld) {
                domainToCheck = this.domainSld + this.domainTld
            } else {
                domainToCheck = this.domainSld
            }
            if (type === "subdomain") {
                this.selectedTld = this.subdomain;
                domainToCheck = this.domainSld + this.subdomain
            }
            const data = {
                type: type,
                domain: domainToCheck,
                token: csrfToken,
                sld: this.domainSld,
                tld: this.selectedTld,
                a: "checkDomain"
            };
            this.$store.dispatch("cartStore/loadDomainInformation", data)
        },
        convertDomainName: function() {
            let glue = this.domainTld.indexOf(".") === 0 ? "" : ".";
            return this.domainSld + glue + this.domainTld
        },
        addDomain: function(type) {
            if (type === "own") {
                return this.addOwn()
            }
            if (type != "own" && type != "subdomain") {
                if (this.isBlockedPage) {
                    return
                }
            }
            let domain = this.getDomainByType(type);
            this.$store.dispatch("cartStore/addDomain", {
                type: type,
                domain: domain.domainName,
                year: this.period
            })
        },
        changePeriod: function(type, period) {
            if (type === "own") {
                return this.addOwn()
            }
            if (this.isBlockedPage) {
                return
            }
            let domain = this.getDomainByType(type);
            this.$store.dispatch("cartStore/changePeriod", {
                type: type,
                domain: domain.domainName,
                year: this.period
            })
        },
        getDomainByType: function(type) {
            switch (type) {
                case "subdomain":
                    return this.domainSubdomain[0];
                case "register":
                    return this.domainSearched[0];
                case "transfer":
                    return this.domainTransfer[0]
            }
        },
        changeDomainName: function(showPopover) {
            let self = this;
            if (this.isBlockedPage) {
                return
            }
            if (showPopover === true && self.popoverIsRequired === true) {
                self.popoverIsVisible = true
            } else {
                self.hidePopover();
                if (self.popoverNotShowAgain === true) {
                    self.popoverIsRequired = false
                }
                self.searchDetails = false;
                self.domainOwn = [];
                self.$store.dispatch("cartStore/removeDomain", {
                    domain: this.selectedDomain
                })
            }
            this.domainOwn = []
        },
        hidePopover: function() {
            this.popoverIsVisible = false
        },
        addToCart: function(type, domain) {
            if (this.isBlockedPage) {
                return
            }
            if (!domain.pricing[this.period]) {
                this.period = Object.keys(domain.pricing)[0]
            }
            this.$store.commit("cartStore/updateSearchedDomainInformation", domain);
            this.$store.dispatch("cartStore/addDomain", {
                type: type,
                domain: domain.domainName,
                year: this.period
            })
        },
        addOwn: function() {
            this.setSeparateDomainName();
            this.$store.dispatch("cartStore/addDomain", {
                type: this.selectedRegType,
                domain: this.domainName
            })
        },
        loadMoreSuggestions: function() {
            this.suggestionLimit += 10
        },
        checkDomainIsFree: function(domainName) {
            let cart = this.$store.getters["cartStore/getCartSummary"]();
            if (cart !== undefined && cart.domains !== undefined && Object.keys(cart.domains).length > 0) {
                Object.keys(cart.domains).forEach(function(key) {
                    if (cart.domains[key].domain === domainName) {
                        return false
                    }
                })
            }
            return true
        },
        getResultMessage: function(domain, message) {
            return mgPageLang.sprintf(mgPageLang.translate([message]), domain)
        },
        getResultMessageByActionType: function() {
            if (this.selectedRegType == "register") {
                return mgPageLang.sprintf(mgPageLang.translate(["cartcongratsdomainavailable"], {}), "<b>" + this.domainSearched[0].domainName + "</b>")
            }
            if (this.selectedRegType == "transfer") {
                return mgPageLang.sprintf(mgPageLang.translate(["domain_eligeble_for_transfer"], {}), "<b>" + this.domainTransfer[0].domainName + "</b>")
            }
            if (this.selectedRegType == "own") {
                return mgPageLang.sprintf(mgPageLang.translate(["domain_allowed_to_use"], {}), "<b>" + this.searchedDomain + "</b>")
            }
            if (this.selectedRegType == "subdomain") {
                return mgPageLang.sprintf(mgPageLang.translate(["cartcongratsdomainavailable"], {}), "<b>" + this.searchedDomain + this.subdomain + "</b>")
            }
            return "success"
        },
        isRegisterValid: function() {
            if (this.domainSearched === undefined || this.domainSearched[0] === undefined) {
                return "<p></p>" + mgPageLang.sprintf(mgPageLang.translate(["orderForm", "searchResult", "domainIsNotValid"], {}), "<b>" + this.searchedDomain + "</b>")
            }
            if (this.domainSearched[0].isValidDomain == "false") {
                return "<p></p>" + mgPageLang.sprintf(mgPageLang.translate(["orderForm", "searchResult", "domainIsNotValid"], {}), "<b>" + this.searchedDomain + "</b>")
            }
            if (this.domainSearched[0].isAvailable == "false" || this.domainSearched[0].isAvailable === false || this.domainSearched[0].isRegistered == true || this.domainSearched[0].preferredTLDNotAvailable == "true") {
                let domain = this.domainSearched[0] ? this.domainSearched[0].domainName : this.domainName;
                if (this.domainSearched[0].originalUnavailableDomain) {
                    domain = this.domainSearched[0].originalUnavailableDomain
                }
                return "<p></p>" + mgPageLang.sprintf(mgPageLang.translate(["orderForm", "searchResult", "domainIsNotAvailable"], {}), "<b>" + domain + "</b>")
            }
            return true
        },
        isTransferValid: function() {
            let domain = this.domainSearched[0] ? this.domainSearched[0].domainName : this.domainName;
            if (!this.layoutSettings.showDropdownWithTLDs && this.domainSearched[0].originalUnavailableDomain) {
                domain = this.domainSearched[0].originalUnavailableDomain
            }
            if (this.domainSearched[0] === undefined || this.domainSearched[0] && this.domainSearched[0].shortestPeriod.transfer.includes("-1")) {
                return "<p></p>" + mgPageLang.sprintf(mgPageLang.translate(["orderForm", "searchResult", "domainIsNotAvailable"], {}), "<b>" + domain + "</b>")
            }
            if (this.domainTransfer === undefined || this.domainTransfer[0] === undefined || this.domainTransfer[0].isValidDomain == "false" || !this.domainTransfer[0].shortestPeriod || !this.domainTransfer[0].shortestPeriod.transfer) {
                return mgPageLang.sprintf(mgPageLang.translate(["orderForm", "searchResult", "domainIsNotValid"], {}), "<b>" + domain + "</b>")
            }
            if (this.domainTransfer[0].isAvailable != "false" || this.domainTransfer[0].isRegistered != "true") {
                return mgPageLang.sprintf(mgPageLang.translate(["orderForm", "searchResult", "domain_transfer_not_registered"], {}), "<b>" + domain + "</b>")
            }
            return true
        },
        isSubdomainValid: function() {
            if (this.domainSubdomain === undefined || this.domainSubdomain[0] === undefined || this.domainSubdomain[0].status === "false") {
                return "<p></p>" + mgPageLang.sprintf(mgPageLang.translate(["orderForm", "searchResult", "domainIsNotAvailable"], {}), "<b>" + this.domainSld + this.domainTld + this.subdomain + "</b>")
            }
            return true
        },
        getSearchButtonTitleByType: function(actionType) {
            return mgPageLang.translate(["add", "button", actionType])
        },
        isOwnValid: function() {
            if (this.domainOwn === undefined || this.domainOwn[0] === undefined || this.domainOwn[0].status === "false") {
                return "<p></p>" + mgPageLang.sprintf(mgPageLang.translate(["orderForm", "searchResult", "domainIsNotAvailable"], {}), "<b>" + this.searchedDomain + "</b>")
            }
            return true
        },
        selectSpotlight: function(tld) {
            let self = this;
            if (!self.domainName) {
                self.domainName = tld
            } else if (!self.domainName.includes(".")) {
                self.domainName += tld
            } else {
                const splitDomain = self.domainName.split(".");
                self.domainName = splitDomain[0] + tld
            }
            setTimeout(function() {
                self.$refs.inputFocus.focus();
                self.$refs.inputFocus.setSelectionRange(0, 0)
            }, 10)
        },
        changeSubdomain: function(selectedSubdomain) {
            this.$el.querySelector(".tab-pane .dropdown").classList.remove("open");
            this.subdomain = selectedSubdomain;
            this.domainName = "";
            this.domainSld = "";
            this.searchedDomain = "";
            this.isDomainSelected = false;
            this.selectedDomain = false;
            this.searchDetails.length = 0
        },
        validateCaptcha: function() {
            const self = this;
            captchaHelper.captchaType = "domainChecker";
            captchaHelper.onSuccessCallback = function(data) {
                self.loadDomainInformation()
            };
            if (self.captcha.type === "invisible") {
                self.validateInvisibleCaptcha()
            }
        },
        validateInvisibleCaptcha: function() {
            this.$store.dispatch("cartStore/confirmCaptcha", {
                token: csrfToken,
                code: document.getElementById("g-recaptcha-response").value,
                type: captchaHelper.captchaType
            }).then(response => {
                captchaHelper.runSuccessCallback(response);
                grecaptcha.reset();
                $("#captchaContainerModal").modal("hide");
                $("#captchaContainerModal").html("");
                grecaptcha.execute()
            })
        },
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.currency.format)
        },
        customFieldUpdated(field) {
            this.formData.customFields[field.id] = field.value
        },
        registerFieldUpdated(field) {
            this.formData.registerFields[field.id] = field.value
        },
        changeTld(tld) {
            this.selectedTld = tld;
            this.domainTld = tld
        },
        reloadTlds: function() {
            let self = this;
            self.tldToShow = [];
            for (const [index, tld] of Object.entries(self.tlds)) {
                if (self.searchedWord !== null && tld.extension.indexOf(self.searchedWord) === -1) {
                    continue
                }
                self.tldToShow.push(tld)
            }
        },
        getDiscountDomainPrice() {
            const discountValueName = "new_" + this.selectedRegType;
            this.domainDiscountPrice = this.availablePeriods[Object.keys(this.availablePeriods)[0]] && this.availablePeriods[Object.keys(this.availablePeriods)[0]][discountValueName] && this.availablePeriods[Object.keys(this.availablePeriods)[0]][discountValueName] !== -1 && !this.isFreeForSelectedProduct ? this.getFormattedPrice(this.availablePeriods[Object.keys(this.availablePeriods)[0]][discountValueName]) : false
        },
        decodeHtml(html) {
            var txt = document.createElement("textarea");
            txt.innerHTML = html;
            return txt.value
        },
        getSearchBoxClasses() {
            return [{
                "search-box-default": this.layoutSettings.templates && this.layoutSettings.templates.lagom && this.layoutSettings.templates.lagom.style_settings && this.layoutSettings.templates.lagom.style_settings.group && this.layoutSettings.templates.lagom.style_settings.group.elements.styles.search.value == "default"
            }, {
                "search-box-primary": this.layoutSettings.templates && this.layoutSettings.templates.lagom && this.layoutSettings.templates.lagom.style_settings && this.layoutSettings.templates.lagom.style_settings.group && this.layoutSettings.templates.lagom.style_settings.group.elements.styles.search.value == "primary"
            }, {
                "search-box-secondary": this.layoutSettings.templates && this.layoutSettings.templates.lagom && this.layoutSettings.templates.lagom.style_settings && this.layoutSettings.templates.lagom.style_settings.group && this.layoutSettings.templates.lagom.style_settings.group.elements.styles.search.value == "secondary"
            }, {
                "search-box-primary": this.layoutSettings.templates && this.layoutSettings.templates.lagom && this.layoutSettings.templates.lagom.style_settings && this.layoutSettings.templates.lagom.style_settings.group && !this.layoutSettings.templates.lagom.style_settings.group.elements.styles.search.value || !this.layoutSettings.templates || !this.layoutSettings.templates.lagom.style_settings
            }, {
                "box-search-domain--results": this.searchDetails || this.searchSpinner
            }, {
                "tld-dropdown": this.selectedRegType == "subdomain" && this.productSubdomain.length > 0
            }]
        },
        getSpotlightClasses() {
            return [{
                open: this.availableLessSpotlights
            }, {
                "spotlight-list--full-width": this.showNumber
            }, {
                "spotlight-list--less": !this.availableMoreSpotlights && !this.availableLessSpotlights
            }, {
                hidden: this.spotlights.length == 0
            }]
        },
        getSpotlightDiscountData(spotlight) {
            let data = {
                save: null,
                discount: null
            };
            if (this.selectedType === "transfer" && spotlight.newTransferPrice && spotlight.newTransferPrice !== -1) {
                data.save = spotlight.transferPriceFormated + `/` + spotlight.formattedPeriod;
                data.discount = this.currency.prefix + this.getFormattedPrice(spotlight.newTransferPrice) + `/` + spotlight.formattedPeriod
            } else if (spotlight.newRegisterPrice && spotlight.newRegisterPrice !== -1) {
                data.save = spotlight.registerPriceFormated + `/` + spotlight.formattedPeriod;
                data.discount = this.currency.prefix + this.getFormattedPrice(spotlight.newRegisterPriceFormatted) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "") + `/` + spotlight.formattedPeriod
            }
            return data
        },
        getSpotlightPrice(spotlight) {
            let price = this.selectedType === "transfer" ? spotlight.transferPriceFormated : spotlight.registerPriceFormated;
            return !/\d/.test(price) ? price : price + `/` + spotlight.formattedPeriod
        },
        isPeriodSelectVisible() {
            return Object.keys(this.availablePeriods).length && !this.isFreeForSelectedProduct || this.registerFields.length || this.customFields.length || this.domainServerNamespacesAvailable && !this.selectedProduct || this.registerFields.eppCode !== undefined && this.registerFields.eppCode.id
        },
        getPeriodOptions(value) {
            if (this.layoutSettings.isDiscountCenterOn) {
                if (value["new_" + this.selectedRegType] && value["new_" + this.selectedRegType] !== -1) {
                    return this.currency.prefix + this.getFormattedPrice(value["new_" + this.selectedRegType]) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "")
                }
            }
            const price = this.currency.format === 1 || this.currency.format === 4 || this.currency.format === 2 && this.availablePeriods[this.period][this.selectedRegType] < 1e3 ? this.getFormattedPrice(value[this.selectedRegType]) : value[this.selectedRegType];
            return this.currency.prefix + price + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "")
        },
        getSpotlightValueForProductFreeDomain(spotlight) {
            if (this.selectedType === "transfer") {
                return spotlight.transferPriceFormated
            }
            return spotlight.registerPriceFormated
        },
        getSortedElementsBySettings(domainsRegTypes) {
            let elements = {};
            this.layoutSettings.domainElements.forEach(element => {
                if (domainsRegTypes[element]) {
                    elements[element] = domainsRegTypes[element]
                }
            });
            if (domainsRegTypes.renew) {
                elements.renew = domainsRegTypes.renew
            }
            return elements
        },
        getZeroValue() {
            return this.$store.getters["cartStore/getZeroPrice"]("domainsPrices")
        }
    }
});

function myCallback() {}
window.nvisibleCallback = myCallback;
mgJsComponentHandler.addDefaultComponent("mg-one-page-domain-addons", {
    template: "#t-mg-one-page-domain-addons",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            data: null,
            supportedRegTypes: ["register", "transfer"]
        }
    },
    components: {
        domainAddon: domainAddon
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            })
        }
    },
    computed: {
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("domains") && this.$store.getters["cartStore/isDomainSelected"]() && this.supportedRegTypes.indexOf(this.selectedRegType) !== -1 && this.availableAddons && this.availableAddons.length > 0
            }
        },
        selectedRegType: {
            get() {
                let regType = this.$store.getters["cartStore/getDomainRegistrationType"]();
                return regType ? regType : "register"
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        availableAddons: {
            get() {
                let addons = this.$store.getters["cartStore/getDomainSchemaAddons"]();
                return addons ? addons.filter(addon => addon.enabled === true) : null
            }
        },
        formData: {
            get() {
                return this.$store.getters["cartStore/getDomainAddonsFormData"]()
            }
        },
        addons: {
            get() {
                return this.$store.getters["cartStore/getDomainAddonsFormData"]()
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        }
    },
    methods: {
        updateFormData: function() {
            const self = this;
            if (self.isBlockedPage) {
                return
            }
            return this.$store.dispatch("cartStore/updateDomainAddons", this.formData)
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-domain-registrant-information", {
    template: "#t-mg-one-page-domain-registrant-information",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            domainContactOldData: {},
            domainContact: {
                contact: null,
                firstname: null,
                lastname: null,
                email: null,
                callingCode: null,
                phonenumber: null,
                companyname: null,
                tax_id: null,
                address1: null,
                address2: null,
                city: null,
                state: null,
                country: null,
                postcode: null,
                showStateElement: false
            },
            selectedStates: [],
            fieldValidators: {
                firstname: ["pageOrderRequiredValidator"],
                lastname: ["pageOrderRequiredValidator"],
                email: ["pageOrderRequiredValidator", "pageOrderEmailValidator"],
                callingCode: ["pageOrderRequiredValidator", "pageOrderNumberValidator"],
                phonenumber: ["pageOrderRequiredValidator"],
                address1: ["pageOrderRequiredValidator"],
                city: ["pageOrderRequiredValidator"],
                state: ["pageOrderRequiredValidator"],
                postcode: ["pageOrderRequiredValidator"],
                country: ["pageOrderRequiredValidator"]
            },
            fieldValidationMessages: {},
            isValidField: {},
            interactiveMode: false
        }
    },
    created() {
        const self = this;
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            if (self.isVisible !== true || self.newContactSection !== true) {
                return
            }
            self.validateAllFields();
            self.$forceUpdate()
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.isValidField = {};
            self.fieldValidationMessages = {}
        })
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            });
            if (value === true) {
                this.initDetails();
                this.setCountryIfEmpty();
                this.$nextTick(() => {
                    this.interactiveMode = true
                })
            } else {
                this.$nextTick(() => {
                    this.interactiveMode = false
                })
            }
        },
        countries: function(val) {
            this.setCountryIfEmpty()
        },
        newContactSection: function() {
            const self = this;
            self.$nextTick(function() {
                self.initCountryCodeInput()
            })
        },
        domainContact: {
            handler(details) {
                if (!this.interactiveMode) {
                    return false
                }
                this.checkPersonalDetailsIsValid(details);
                this.$store.dispatch("cartStore/updateDomainContactDetails", {
                    details: details
                })
            },
            deep: true
        },
        "domainContact.phonenumber": {
            handler(val) {
                if (val) {
                    this.domainContact.phonenumber = val.replace(/\s+/g, "").replace(/[^0-9]/gi, "")
                }
            },
            deep: true
        },
        "domainContact.country": {
            handler(val) {
                this.selectedStates = this.$store.getters["cartStore/getStatesByCountryCode"](val)
            },
            deep: true
        }
    },
    computed: {
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("domains") && (this.selectedRegType === "transfer" || this.selectedRegType === "register")
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        taxEnabled: {
            get() {
                const taxEnabled = this.$store.getters["cartStore/getComponentsConfiguration"]()["taxFieldEnabled"];
                return this.layoutSettings.hideVAT !== undefined ? taxEnabled && !this.layoutSettings.hideVAT.includes(this.domainContact.country) : taxEnabled
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        newContactSection: {
            get() {
                return this.domainContact.contact === "addingnew"
            }
        },
        countries: {
            get() {
                return this.$store.getters["cartStore/getCountries"]()
            }
        },
        taxAsVat: {
            get() {
                return this.$store.getters["cartStore/getComponentsConfiguration"]()["taxAsVat"]
            }
        },
        userDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        },
        userExist: {
            get() {
                return !!this.userDetails.id
            }
        },
        defaultCountry: {
            get() {
                return this.$store.getters["cartStore/getDefaultCountry"]()
            }
        },
        optionalFields: {
            get() {
                return this.$store.getters["cartStore/getBillingDetailsOptionalFields"]()
            }
        },
        selectedRegType: {
            get() {
                let regType = this.$store.getters["cartStore/getDomainRegistrationType"]();
                return regType ? regType : "register"
            }
        }
    },
    methods: {
        setCountryIfEmpty() {
            const self = this;
            if (!self.domainContact.country) {
                self.$nextTick(function() {
                    self.domainContact.country = this.defaultCountry
                })
            }
        },
        initCountryCodeInput() {
            const self = this;
            self.interactiveMode = false;
            self.setCallingCode(this.findCountry(self.domainContact.country).callingCode);
            LagomOrderFormTelInput(function(countryData) {
                self.setCallingCode(countryData.dialCode)
            });
            self.$nextTick(() => {
                self.interactiveMode = true
            })
        },
        setCallingCode(value) {
            this.domainContact["country-calling-code-phonenumber"] = value;
            this.domainContact["callingCode"] = value
        },
        findCountry: function(code) {
            if (this.countries[code]) {
                return this.countries[code]
            }
            return ""
        },
        estimateTax() {
            let details = {
                state: this.domainContact.state,
                country: this.domainContact.country
            };
            this.$store.dispatch("cartStore/updateDomainContactCountryDetails", {
                details: details
            })
        },
        checkPersonalDetailsIsValid(data) {
            for (const [key, value] of Object.entries(data)) {
                if (this.domainContactOldData[key] == undefined && value || this.domainContactOldData[key] !== undefined && this.domainContactOldData[key] !== value) {
                    this.validateField(key, value);
                    this.domainContactOldData[key] = value
                }
            }
        },
        isValid(name) {
            if (this.isValidField[name] !== undefined && this.isValidField[name] == false) {
                return false
            }
            return true
        },
        getValidationMessage(name) {
            if (this.fieldValidationMessages[name] == undefined) {
                return "invalid field data"
            }
            return this.fieldValidationMessages[name]
        },
        validateAllFields() {
            for (const [key, value] of Object.entries(this.domainContact)) {
                this.validateField(key, value)
            }
        },
        validateField(name, value) {
            if (this.fieldValidators[name] == undefined) {
                this.isValidField[name] = true;
                return
            }
            for (const [key, validatorName] of Object.entries(this.fieldValidators[name])) {
                if (typeof window[validatorName] !== "function") {
                    return
                }
                var result = window[validatorName](name, value);
                if (result === true) {
                    this.isValidField[name] = true;
                    this.fieldValidationMessages[name] = null;
                    pageOrderStore.commit("cartStore/popValidateError", name)
                } else {
                    pageOrderStore.commit("cartStore/pushValidateError", {
                        id: name,
                        error: result
                    });
                    this.isValidField[name] = false;
                    this.fieldValidationMessages[name] = result;
                    break
                }
            }
        },
        initDetails() {
            const details = this.$store.getters["cartStore/getDomainContactDetails"]();
            if (details) {
                this.domainContact = details
            }
        },
        getPersonalInformationFields() {
            const defaultOptions = ["firstname", "lastname", "email", "phonenumber"];
            return this.getAllFields(defaultOptions, "personalInformationOrder")
        },
        getBillingAddressFields() {
            const defaultOptions = ["companyname", "country", "address1", "address2", "city", "state", "postcode"];
            if (this.taxEnabled) {
                defaultOptions.push("tax_id")
            }
            return this.getAllFields(defaultOptions, "billingAddressOrder")
        },
        getAllFields(defaultOptions, sectionName) {
            if (this.layoutSettings[sectionName]) {
                let options = this.layoutSettings[sectionName];
                defaultOptions.forEach(opt => {
                    if (!options.includes(opt)) {
                        options.push(opt)
                    }
                });
                return options
            }
            return defaultOptions
        },
        getTranslatedMessage(name) {
            return mgPageLang.translate(name)
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-domain-renew", {
    template: "#t-mg-one-page-domain-renew",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            domainPeriods: [],
            loader: false,
            loaderId: null,
            searchedWord: null,
            renewDomains: [],
            visibleDomains: 8
        }
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex();
                    this.reloadRenewDomains()
                }
            })
        },
        domains: function() {
            this.reloadRenewDomains()
        },
        searchedWord: function() {
            this.reloadRenewDomains()
        },
        visibleDomains: function() {
            this.reloadRenewDomains()
        }
    },
    computed: {
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("domains") && this.domains && this.$store.getters["cartStore/isDomainSectionAvailableComponent"]("renew")
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        formData: {
            get() {
                return {}
            }
        },
        domains: {
            get() {
                let domainsResult = this.$store.getters["cartStore/getDomainSchemaRenewableDomains"]();
                if (domainsResult.length > this.visibleDomains) {
                    let splicedDomains = [...domainsResult];
                    splicedDomains.length = this.visibleDomains;
                    return splicedDomains
                } else {
                    return domainsResult
                }
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        selectedDomains: {
            get() {
                return this.$store.getters["cartStore/getSelectedRenewDomains"]()
            }
        }
    },
    methods: {
        renewDomain: function(id) {
            let self = this;
            if (self.isBlockedPage) {
                return
            }
            self.loader = true;
            self.loaderId = id;
            let period = this.domainPeriods[id] ? this.domainPeriods[id] : this.getDefaultDomainPeriod(id);
            this.$store.dispatch("cartStore/renewDomain", {
                id: id,
                period: period
            }).then(result => {
                self.loader = false;
                self.loaderId = null
            })
        },
        getTransletedExpireStatus: function(message, expire) {
            expire = expire < 0 ? expire * -1 : expire;
            return mgPageLang.sprintf(mgPageLang.translate([message], {
                expire: expire
            }))
        },
        changePeriod: function(id, event) {
            this.domainPeriods[id] = event;
            const renewDomain = this.renewDomains.filter(domain => domain.id === id)[0];
            if (this.selectedDomains.hasOwnProperty(id)) {
                this.$store.dispatch("cartStore/renewDomain", {
                    id: id,
                    period: renewDomain.selectedRenewal
                })
            }
        },
        getDefaultDomainPeriod: function(id) {
            let domain = this.domains.filter(domain => domain.id == id)[0];
            let firstKey = Object.keys(domain.renewalOptions)[0];
            return domain.renewalOptions[firstKey].rawPeriod
        },
        reloadRenewDomains: function() {
            let self = this;
            if (self.domains) {
                self.renewDomains = self.domains.filter(domain => {
                    if (self.searchedWord !== null && domain.domain.indexOf(self.searchedWord) === -1) {
                        return false
                    }
                    return true
                })
            }
        },
        hasDomains: function() {
            return Object.keys(this.domains).length > 0
        },
        loadMoreDomains: function() {
            this.visibleDomains += 8
        },
        selectRenewalOption: function(option, renewalOptions, domain) {
            let self = this;
            this.renewDomains.map(singleDomain => {
                if (singleDomain.id == domain.id) {
                    singleDomain.selectedRenewal = option.rawPeriod;
                    self.changePeriod(singleDomain.id, option.rawPeriod)
                } else if (!singleDomain.selectedRenewal) {
                    singleDomain.selectedRenewal = null
                }
            });
            this.reloadRenewDomains()
        },
        removeDomain: function(id) {
            this.$store.dispatch("cartStore/removeDomainRenew", {
                id: id
            })
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-domain-tlds", {
    template: "#t-mg-one-page-domain-tlds",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            selectedGroup: [],
            selectedPeriod: 1,
            searchedWord: null,
            tldToShow: [],
            sel: null,
            paginationEntriesNumber: 10,
            isComponentRendered: false,
            defaultSelectedGroups: null,
            defaultTldsToShow: null,
            isFunctionBroken: false,
            selectize: null,
            selectedOptions: []
        }
    },
    created() {
        renderCheckBox("tld-filters-wrapper", function(val) {
            self.accountId = val
        });
        let item = $(".tld-filters .items").find(".item").first();
        $('<span id="tldGroupCounter" class="tld-filters-counter">' + this.selectedGroup[0] + "</span>").insertAfter(item)
    },
    watch: {
        isVisible: function(value) {
            let self = this;
            if (!this.isComponentRendered) {
                self.defaultSelectedGroups = self.selectedGroup;
                self.defaultTldsToShow = self.tldToShow;
                self.isComponentRendered = true
            }
            this.selectedGroup = this.defaultSelectedGroups;
            this.tldToShow = this.defaultTldsToShow;
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            })
        },
        groups: function(value) {
            if (this.selectedGroup.length === 0 && value.length > 0) {
                this.selectedGroup.push(value[0]["name"])
            }
            this.reloadTlds()
        },
        searchedWord: function(val) {
            this.reloadTlds()
        },
        tlds: function(val) {
            this.reloadTlds()
        },
        selectedGroup: function(val) {
            let self = this;
            this.reloadTlds();
            this.updateCounter()
        },
        groupSelectVisibility: function(val) {
            const self = this;
            if (val === true) {
                self.$nextTick(() => {
                    self.renderSelect()
                })
            }
        },
        tldToShow: function() {
            const self = this;
            if (this.groupSelectVisibility) {
                self.$nextTick(() => {
                    let selectizeInput = document.querySelector(".tld-filters .selectize-input");
                    if (selectizeInput) {
                        self.renderPagination()
                    }
                    if (document.querySelector("#tld-pagination")) {
                        if (self.tldToShow.length == 0) {
                            document.querySelector("#tld-pagination").classList.add("hidden")
                        } else {
                            document.querySelector("#tld-pagination").classList.remove("hidden")
                        }
                    }
                })
            }
        }
    },
    computed: {
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("domains") && this.$store.getters["cartStore/isDomainSectionAvailableComponent"]("suggestions")
            }
        },
        groups: {
            get() {
                return this.$store.getters["cartStore/getTldCategories"]()
            }
        },
        tlds: {
            get() {
                return this.$store.getters["cartStore/getTldExtensions"]()
            }
        },
        currencyId: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrencyId"]()
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        groupSelectVisibility: {
            get() {
                return this.isVisible === true && this.groups && this.groups.length > 0
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        }
    },
    methods: {
        reloadTlds: function() {
            let self = this;
            self.tldToShow = [];
            for (const [index, tld] of Object.entries(self.tlds)) {
                if (self.searchedWord !== null && tld.extension.indexOf(self.searchedWord) === -1) {
                    continue
                }
                if (self.groups.length > 0) {
                    categories = tld.categories ? tld.categories : [];
                    let c = categories.filter(result => {
                        return self.selectedGroup.indexOf(result) !== -1
                    });
                    if (c.length > 0) {
                        self.tldToShow.push(tld)
                    }
                } else {
                    self.tldToShow.push(tld)
                }
            }
            this.updateCounter();
            this.filtersHandler()
        },
        changeSelect(event) {
            this.paginationEntriesNumber = event.target.value;
            this.renderPagination()
        },
        renderPagination: function() {
            let self = this;
            let visibleTlds = [...document.querySelectorAll(".tld-pricing.data-container .tld-row")];
            let tldPricingHeader = document.querySelector(".tld-pricing .tld-pricing-header");
            let entriesSelect = document.querySelector("#pagination-entries");
            if (entriesSelect) {
                $("#tld-pagination").pagination({
                    dataSource: visibleTlds,
                    pageSize: self.paginationEntriesNumber,
                    pageRange: 1,
                    prevText: mgPageLang.translate("previous"),
                    nextText: mgPageLang.translate("next"),
                    callback: function(data, pagination) {
                        let finalData = tldPricingHeader + data;
                        visibleTlds.map(singleItem => {
                            singleItem.classList.add("hidden")
                        });
                        data.map(singleItem => {
                            singleItem.classList.remove("hidden")
                        })
                    }
                })
            }
        },
        renderSelect: function() {
            const self = this;
            let dropdownRendered = false;
            let opt = {
                sortField: "id",
                copyClassesToDropdown: false,
                hideSelected: false,
                onItemAdd(value, item) {
                    let selectize = this;
                    let options = [...document.querySelectorAll(".tld-filters .selectize-dropdown-content .option")];
                    options.map((singleOption, index) => {
                        if (singleOption.dataset.value == "Others") {
                            $('<span class="divider"></span>').insertBefore(singleOption)
                        }
                    });
                    self.reloadTlds();
                    self.updateCounter();
                    let tldFiltersOptions = [...document.querySelectorAll(".tld-filters .selectize-dropdown-content .option")];
                    tldFiltersOptions.map(singleOption => {
                        $(singleOption).off();
                        setTimeout(function() {
                            if (singleOption.classList.contains("selected")) {
                                $(singleOption).off();
                                $(singleOption).on("click", function() {
                                    let item = this;
                                    setTimeout(function() {
                                        self.deselectHandler(item, item.dataset.value, selectize)
                                    }, 3)
                                })
                            }
                        }, 200)
                    })
                },
                onDropdownOpen() {
                    let selectize = this;
                    let item = $(".tld-filters .items").find(".item").first();
                    if (!dropdownRendered && item.length && self.selectedGroup[0] !== item[0].textContent) {
                        self.selectedGroup.push(item[0].textContent)
                    }
                    $(".tld-filters .selectize-control").addClass("selectize-open");
                    if (!dropdownRendered) {
                        addSelectBtns(this);
                        dropdownRendered = true
                    }
                    addDivider();
                    self.reloadTlds();
                    let tldFiltersOptions = [...document.querySelectorAll(".tld-filters .selectize-dropdown-content .option")];
                    tldFiltersOptions.map(singleOption => {
                        $(singleOption).off();
                        setTimeout(function() {
                            if (singleOption.classList.contains("selected")) {
                                $(singleOption).off();
                                $(singleOption).on("click", function() {
                                    let item = this;
                                    setTimeout(function() {
                                        self.deselectHandler(item, item.dataset.value, selectize)
                                    }, 3)
                                })
                            }
                        }, 200)
                    })
                },
                onDropdownClose() {
                    $(".tld-filters .selectize-control").removeClass("selectize-open")
                }
            };

            function removeHandler(value, selectize) {
                let options = [...document.querySelectorAll(".tld-filters .selectize-dropdown-content .option")];
                options.map((singleOption, index) => {
                    if (singleOption.dataset.value == value) {
                        setTimeout(function() {
                            $(singleOption).off();
                            $(singleOption).on("click", self.deselectHandler(singleOption, value))
                        }, 500)
                    }
                })
            }

            function addSelectBtns(selectize) {
                $(".selectize-option").remove();
                const selectAll = mgPageLang.translate("selectAll");
                const clearAllFilters = mgPageLang.translate("clearAllFilters");
                $('<div class="selectize-option" data-check-all>' + selectAll + '<i class="ls ls-check"></i></div>').insertBefore($(".tld-filters .selectize-dropdown-content"));
                $('<div class="selectize-option selectize-option--clear-all" data-clear-all>' + clearAllFilters + '<i class="ls ls-close"></i></div>').insertBefore($(".tld-filters .selectize-dropdown-content"));
                filterButtonsHandler(selectize)
            }

            function addDivider(selectize) {
                $(".tld-filters .divider").remove();
                let options = [...document.querySelectorAll(".tld-filters .selectize-dropdown-content .option")];
                options.map((singleOption, index) => {
                    if (singleOption.dataset.value == "Others") {
                        setTimeout(function() {
                            $('<span class="divider"></span>').insertBefore(singleOption)
                        }, 1)
                    }
                });
                $('<span class="divider"></span>').insertBefore($(".tld-filters .selectize-dropdown-content"))
            }
            let removeHandlerHelper = removeHandler();

            function filterButtonsHandler(selectize) {
                let selectAllBtn = document.querySelector(".tld-filters [data-check-all]");
                let clearAllBtn = document.querySelector(".tld-filters [data-clear-all]");
                let clearAll = function() {
                    selectize.clear();
                    $(".tld-filters .selectize-dropdown-content .option").removeClass("selected");
                    clearAllBtn.classList.add("hidden");
                    selectAllBtn.classList.remove("hidden");
                    self.updateCounter()
                };
                let selectAll = function() {
                    let options = Object.keys(selectize.options).filter(key => key !== "all");
                    self.selectize = selectize;
                    selectize.setValue(options, true);
                    self.selectedGroup = options;
                    selectAllBtn.classList.add("hidden");
                    clearAllBtn.classList.remove("hidden");
                    self.updateCounter()
                };
                selectAllBtn.addEventListener("click", selectAll);
                clearAllBtn.addEventListener("click", clearAll)
            }
            self.renderPagination();
            if ($("#tldGroupSelect").length > 0) {
                self.sel = $("#tldGroupSelect").selectize(opt).on("change", function() {
                    self.selectedGroup = self.sel.getValue();
                    let item = $(".tld-filters .items").find(".item").first();
                    let counter = $(this)[0].length;
                    let inputHeight = $(".tld-filters .item").length * 40;
                    $(".tld-filters .selectize-input").css("height", inputHeight + "px");
                    if (inputHeight == 0) {
                        $(".tld-filters .selectize-dropdown").css("top", "35px")
                    } else {
                        $(".tld-filters .selectize-dropdown").css("top", inputHeight + "px")
                    }
                })[0].selectize;
                self.sel.$dropdown_content.addClass("has-scroll");
                $(".tld-filters .selectize-input").on("click", function() {
                    $("#tldGroupSelect")[0].selectize.open();
                    let inputHeight = $(this).find(".item").length * 40;
                    $(this).css("height", inputHeight + "px");
                    if (inputHeight == 0) {
                        $(".tld-filters .selectize-dropdown").css("top", "35px")
                    } else {
                        $(".tld-filters .selectize-dropdown").css("top", inputHeight + "px")
                    }
                });
                if ($("#tldGroupSelect")[0].length > 1) {
                    let counter = $("#tldGroupSelect")[0].length;
                    let item = $(".tld-filters .items").find(".item").first()
                }
            }
        },
        countTldByCategoryName(category) {
            const self = this;
            let tlds = self.tlds.filter(cat => cat.pricing[self.currencyId]);
            let cat = tlds = tlds.filter(tld => tld.categories.indexOf(category) !== -1);
            return cat.length
        },
        getTldFirstPeriod(tld, name, prop) {
            if (!tld["pricing"][this.currencyId]) {
                return false
            }
            if (!tld["pricing"][this.currencyId][name] || !tld["pricing"][this.currencyId]["domainregister"]) {
                return false
            }
            let periods = Object.keys(tld["pricing"][this.currencyId]["domainregister"]);
            if (!periods) {
                return false
            }
            if (!tld["pricing"][this.currencyId][name][periods[0]]) {
                return false
            }
            if (!tld["pricing"][this.currencyId][name][periods[0]][prop]) {
                return false
            }
            if (tld["pricing"][this.currencyId][name][periods[0]].rawPrice == 0 && prop != "period") {
                return this.$store.getters["cartStore/getZeroPrice"]("domainsPrices")
            }
            return tld["pricing"][this.currencyId][name][periods[0]][prop]
        },
        updateCounter() {
            $("#tldGroupCounter").remove();
            let item = $(".tld-filters .items").find(".item").first();
            let counter = this.selectedGroup.length;
            $('<span id="tldGroupCounter" class="tld-filters-counter">' + counter + " categories selected</span>").insertAfter(item);
            if (counter > 1) {
                $(".tld-filters .items .item").css("display", "none");
                $("#tldGroupCounter").text(counter + " categories selected");
                $("#tldGroupCounter").css("display", "")
            } else {
                $(".tld-filters .items .item").css("display", "");
                $("#tldGroupCounter").css("display", "none")
            }
        },
        deselectHandler(singleOption, value, selectize) {
            let self = this;
            if (singleOption) {
                let selectedOptionIndex = self.selectedGroup.indexOf(singleOption.dataset.value);
                let selectedOptions = [...document.querySelectorAll("#tldGroupSelect option")];
                selectedOptions.map((singleSelectedOption, index) => {
                    if (index == selectedOptionIndex) {
                        selectize.removeItem(value);
                        singleSelectedOption.remove()
                    }
                });
                singleOption.classList.remove("selected");
                $('.tld-filters .item[data-value="' + value + '"]').remove();
                self.updateCounter();
                $(singleOption).off()
            }
        },
        filtersHandler() {
            let selectAllBtn = $(".tld-filters [data-check-all]");
            let clearAllBtn = $(".tld-filters [data-clear-all]");
            if (this.selectedGroup.length > 0) {
                selectAllBtn.addClass("hidden");
                clearAllBtn.removeClass("hidden")
            } else {
                clearAllBtn.addClass("hidden");
                selectAllBtn.removeClass("hidden")
            }
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-global-error", {
    template: "#t-mg-one-page-global-error",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {}
    },
    computed: {
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("globalError")
            }
        },
        error: {
            get() {
                return this.$store.getters["cartStore/getApiError"]()
            }
        }
    },
    methods: {}
});
const formatPrice = {
    getFormattedPrice: function(price, format) {
        switch (format) {
            case 2:
                if (price >= 1e3) {
                    return price.toLocaleString("en-US", {
                        minimumFractionDigits: 2,
                        maximumFractionDigits: 2
                    })
                }
                return parseFloat(price).toFixed(2);
            case 3:
                if (price >= 1e3) {
                    return price.toLocaleString("de-DE", {
                        minimumFractionDigits: 2,
                        maximumFractionDigits: 2
                    })
                }
                return parseFloat(price).toFixed(2).toString().replace(".", ",");
            case 4:
                return price.toLocaleString("en-US", {
                    minimumFractionDigits: 0,
                    maximumFractionDigits: 0
                });
            default:
                return parseFloat(price).toFixed(2)
        }
    }
};
mgJsComponentHandler.addDefaultComponent("mg-one-page-formatPrice", formatPrice);
mgJsComponentHandler.addDefaultComponent("mg-one-page-groups", {
    template: "#t-mg-one-page-groups",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            currency: null,
            showConfirm: true,
            groupInModal: null,
            hideConfirmationModal: false,
            isConfirmClicked: false,
            isSliderMoving: false
        }
    },
    watch: {
        isVisible: function(value) {
            let self = this;
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
                if (value) {
                    this.isSliderMoving = false;
                    renderNavScroll();
                    this.handleNavTouchScroll(this.$refs.tabSlider, this.$refs.tabSliderContainer)
                }
                $("#changeGroupModal").on("hidden.bs.modal", function() {
                    if (self.hideConfirmationModal && !self.showConfirm && !self.isConfirmClicked) {
                        self.hideConfirmationModal = false
                    }
                })
            })
        },
        currency: function(value) {
            this.changeCurrency(value)
        },
        isModalEnabled: function(val) {
            if (val === false) {
                this.setShowConfirmationModal(false)
            }
        },
        selectedGroupId: function(value) {
            this.$nextTick(() => {
                const isTwoStep = this.$store.getters["cartStore/isTwoStep"]();
                const showDomainOptions = this.$store.getters["cartStore/getSelectedProductDetailsValue"]("showdomainoptions");
                if (showDomainOptions == 1 && !isTwoStep) {
                    this.$store.commit("cartStore/showComponent", "domains", {
                        root: true
                    })
                } else {
                    this.$store.commit("cartStore/hideComponent", "domains", {
                        root: true
                    })
                }
            })
        },
        hideConfirmationModal: function(val) {
            if (val) {
                this.showConfirm = false
            }
        }
    },
    computed: {
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        selectedGroupId: {
            get() {
                return this.$store.getters["cartStore/getSelectedGroupId"]()
            }
        },
        groups: {
            get() {
                return this.$store.getters["cartStore/getGroups"]()
            }
        },
        isVisible: {
            get() {
                let self = this;
                if (Vue.$cookies.get("isGroupModalDisabled")) {
                    self.showConfirm = false
                }
                return this.$store.getters["cartStore/isVisible"]("groups")
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        isModalEnabled: {
            get() {
                return this.$store.getters["cartStore/isGroupModalEnabled"]()
            }
        },
        cart: {
            get() {
                return this.$store.getters["cartStore/getCartSummary"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        isTwoStep: {
            get() {
                return this.$store.getters["cartStore/isTwoStep"]()
            }
        },
        selectedGateway: {
            get() {
                return this.$store.getters["cartStore/getSelectedPaymentGateway"]()
            }
        }
    },
    methods: {
        setGroup: function(event, groupId) {
            event.preventDefault();
            if (!this.isSliderMoving) {
                if (this.isBlockedPage || this.selectedGroupId === groupId) {
                    return
                }
                if (this.showConfirm && !this.isTwoStep) {
                    return this.showConfirmationModal(groupId)
                }
                this.runGroup(groupId)
            }
        },
        runGroup: function(groupId) {
            this.$store.dispatch("cartStore/changeGroup", groupId);
            this.mountStripeFields()
        },
        showConfirmationModal: function(groupId) {
            $("#changeGroupModal").modal("show");
            this.groupInModal = groupId
        },
        setShowConfirmationModal(val) {
            this.showConfirm = val
        },
        confirm() {
            this.runGroup(this.groupInModal);
            this.isConfirmClicked = true;
            this.close()
        },
        close(e) {
            let self = this;
            $("#changeGroupModal").modal("hide");
            this.groupInModal = null;
            if (e) {
                self.showConfirm = true;
                self.hideConfirmationModal = false;
                self.isConfirmClicked = false
            } else {
                setTimeout(function() {
                    if (self.hideConfirmationModal) {
                        self.showConfirm = false;
                        Vue.$cookies.set("isGroupModalDisabled", "true", "7D")
                    } else {
                        self.showConfirm = true
                    }
                    self.isConfirmClicked = true
                }, 250)
            }
            setTimeout(function() {
                if ($("#changeGroupModal")[0]) {
                    if ($("#changeGroupModal")[0].classList.contains("in")) {
                        $("#changeGroupModal").removeClass("in")
                    }
                }
            }, 200)
        },
        mountStripeFields() {
            if (this.selectedGateway === "stripe") {
                const interval = setInterval(function() {
                    if ($("#mg-card-stripe").length) {
                        mgStripeMount();
                        clearInterval(interval)
                    }
                }, 1e3)
            }
        },
        isPageRTL() {
            return $("html").attr("dir") == "rtl" ? true : false
        },
        renderSlider: function(mode) {
            if (document.querySelector(".tabs-slider")) {
                this.sliderEnabled = true;
                let swiper = null;

                function initSlider(mode) {
                    swiper = new Swiper(".tabs-slider", {
                        spaceBetween: 0,
                        slidesPerView: "auto",
                        watchSlidesProgress: true,
                        watchSlidesVisibility: true,
                        containerModifierClass: "swiper-container-",
                        slideClass: "swiper-slide",
                        slideActiveClass: "swiper-slide-active",
                        slideDuplicateActiveClass: "swiper-slide-duplicate-active",
                        slideVisibleClass: "swiper-slide-visible",
                        slideDuplicateClass: "swiper-slide-duplicate",
                        slideNextClass: "swiper-slide-next",
                        slideDuplicateNextClass: "swiper-slide-duplicate-next",
                        slidePrevClass: "swiper-slide-prev",
                        slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
                        wrapperClass: "swiper-wrapper",
                        lazyLoadingClass: "swiper-lazy",
                        lazyStatusLoadingClass: "swiper-lazy-loading",
                        lazyStatusLoadedClass: "swiper-lazy-loaded",
                        lazyPreloaderClass: "swiper-lazy-preloader",
                        notificationClass: "swiper-notification",
                        preloaderClass: "preloader",
                        zoomContainerClass: "swiper-zoom-container",
                        observeSlideChildren: true,
                        nextButton: ".swiper-button-next",
                        prevButton: ".swiper-button-prev"
                    })
                }
                initSlider(mode);
                swiper.update()
            }
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-ip-log", {
    template: "#t-mg-one-page-ip-log",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {}
    },
    watch: {},
    computed: {
        isVisible: {
            get() {
                return this.layoutSettings.hideIpAddressBox !== true
            }
        },
        ipAddress: {
            get() {
                return this.$store.getters["cartStore/getIpAddress"]()
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-loader", {
    template: "#t-mg-one-page-loader",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            isPageBeingLoaded: false
        }
    },
    computed: {
        isVisible: {
            get() {
                let isVisible = this.$store.getters["cartStore/getSpinners"]()["page"];
                if (isVisible) {
                    anim.play();
                    document.querySelector("#one-page-order-init-loader").classList.remove("hidden");
                    document.querySelector(".main-header-content").classList.add("hidden");
                    if (document.querySelector("#integrations-containerlagomExtensionWidget")) {
                        document.querySelector("#integrations-containerlagomExtensionWidget").classList.add("hidden")
                    }
                    document.querySelector("body").classList.remove("page-complete")
                } else {
                    document.querySelector("#one-page-order-init-loader").classList.add("hidden");
                    document.querySelector(".main-header-content").classList.remove("hidden");
                    if (document.querySelector("#integrations-containerlagomExtensionWidget")) {
                        document.querySelector("#integrations-containerlagomExtensionWidget").classList.remove("hidden")
                    }
                    document.querySelector(".main-body").classList.remove("preloaded");
                    document.querySelector(".main-header").classList.remove("preloaded");
                    anim.stop()
                }
                return isVisible
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        }
    },
    methods: {}
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-marketing-email", {
    template: "#t-mg-one-page-marketing-email",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            value: null,
            interactiveMode: false
        }
    },
    watch: {
        isVisible: function(value) {
            if (value === false) {
                return
            }
            this.initValue(this.$store.getters["cartStore/getMarketingEmailsValue"]());
            this.$nextTick(() => {
                this.interactiveMode = true
            })
        },
        value: function(value) {
            if (!this.interactiveMode) {
                return false
            }
            let marketingEmail = value == true || value == "1" ? "1" : "";
            this.$store.dispatch("cartStore/updateMarketingEmail", {
                marketingEmail: marketingEmail
            })
        }
    },
    computed: {
        isChecked: {
            get() {
                return this.value === true
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("cart") && this.$store.getters["cartStore/getComponentsConfiguration"]()["marketingEmailEnabled"] === true && this.$store.getters["cartStore/getClient"]().exist !== true
            }
        },
        description: {
            get() {
                return this.$store.getters["cartStore/getComponentsConfiguration"]()["marketingEmailDescription"]
            }
        }
    },
    methods: {
        initValue(value) {
            this.value = value
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-metrics-billing", {
    template: "#t-mg-one-page-metrics-billing",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            floors: [],
            type: "",
            name: "",
            unit: "",
            included: ""
        }
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            })
        }
    },
    computed: {
        selectedProduct: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductId"]()
            }
        },
        metricsBilling: {
            get() {
                return this.$store.getters["cartStore/getMetricsBilling"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("metricsBilling")
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        }
    },
    methods: {
        capitalize(word) {
            return word[0].toUpperCase() + word.slice(1)
        },
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.currency.format)
        },
        setData(key) {
            this.floors = this.metricsBilling[key].nextFloors;
            this.type = this.metricsBilling[key].type;
            this.name = this.metricsBilling[key].name;
            this.unit = this.metricsBilling[key].unit;
            this.included = this.metricsBilling[key].included
        },
        getTranslatedMessage(name) {
            if (name) {
                name = this.capitalize(name)
            }
            let langs = pageOrderStore.getters["cartStore/getLang"]();
            return mgPageLang.getTranslation([name], langs) ? mgPageLang.sprintf(mgPageLang.translate(name, {
                name: name
            }, name)) : name
        },
        getUnit(unit) {
            return unit ? " /" + this.getTranslatedMessage(unit) : mgPageLang.translate("perUnit")
        },
        getUnitModal(unit) {
            return unit ? mgPageLang.translate("perUnitModal") + " " + this.getTranslatedMessage(unit) : mgPageLang.translate("perUnit")
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-notes", {
    template: "#t-mg-one-page-notes",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            message: "",
            interactiveMode: false
        }
    },
    watch: {
        isVisible: function(value) {
            if (value === false) {
                return
            }
            this.message = this.$store.getters["cartStore/getNotesValue"]()
        }
    },
    computed: {
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        orderSettings: {
            get() {
                return this.$store.getters["cartStore/getWhmcsOrderSettings"]()
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("cart") && this.$store.getters["cartStore/getWhmcsOrderSettings"]().ShowNotesFieldOnCheckout
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        }
    },
    methods: {
        updateMessage() {
            this.$store.dispatch("cartStore/updateNote", {
                note: this.message
            })
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-order-addon", {
    template: "#t-mg-one-page-order-addon",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            data: null,
            availableAddons: [],
            addonToModal: null,
            selectedProduct: null,
            selectedCycle: null,
            searchedWord: null,
            isSectionVisible: null
        }
    },
    computed: {
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        isVisible: {
            get() {
                if (this.$store.getters["cartStore/isVisible"]("addons")) {
                    this.isSectionVisible = true;
                    return true
                }
                this.isSectionVisible = false;
                return false
            }
        },
        addons: {
            get() {
                let addons = this.$store.getters["cartStore/getGroupProducts"]();
                return this.isVisible ? addons : []
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrencyId"]()
            }
        },
        selectedCurrency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        selectedAddons: {
            get() {
                return this.$store.getters["cartStore/getSelectedAddons"]()
            }
        },
        isDiscountCenterOn: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]().isDiscountCenterOn
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        }
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            })
        },
        addons: function() {
            this.updateAddonArray()
        },
        searchedWord: function() {
            this.updateAddonArray()
        },
        availableAddons: function() {
            this.$store.commit("cartStore/setAvailableAddons", {
                data: this.availableAddons.length,
                isSectionVisible: this.isSectionVisible
            })
        }
    },
    methods: {
        addAddon: function() {
            let self = this;
            if (self.isBlockedPage) {
                return
            }
            if (self.selectedProduct === null) {
                return
            }
            $("#orderAddonModal").modal("hide");
            this.$store.dispatch("cartStore/orderAddon", {
                addonId: this.addonToModal.id,
                productId: this.selectedProduct,
                cycle: this.selectedCycle
            }).then(() => {
                self.selectedProduct = null
            })
        },
        openModalAddon: function(addon) {
            this.addonToModal = addon;
            this.selectedProduct = addon.hostings[0].hostingId;
            if (addon.paytype !== "free") {
                this.selectedCycle = addon.pricings[this.currency][Object.keys(addon.pricings[this.currency])[0]].id
            }
        },
        updateAddonArray: function() {
            let self = this;
            self.availableAddons = [];
            self.addons.forEach(function(addon, index) {
                if (self.searchedWord !== null && addon.name.toLowerCase().indexOf(self.searchedWord.toLowerCase()) === -1) {
                    return
                }
                self.availableAddons.push(addon)
            })
        },
        closeModalAddon: function() {
            $("#orderAddonModal").modal("hide");
            this.addonToModal = null;
            this.selectedProduct = null
        },
        hasSelectedAddon: function(id) {
            return !!this.selectedAddons.find(addon => addon.id == id)
        },
        isAddonAvailable: function(addon) {
            return addon.paytype === "free" || addon.pricings && addon.pricings[this.currency]
        },
        removeAddon: function(id) {
            this.$store.dispatch("cartStore/deleteAddon", {
                id: id
            })
        },
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.selectedCurrency.format)
        },
        getAddonRegularPrice(addon) {
            return addon.pricings[this.currency][this.getAddonCycle(addon)].price
        },
        getAddonShortPeriod(addon) {
            return addon.pricings[this.currency][this.getAddonCycle(addon)].shortlyCycleSlashed
        },
        getAddonDiscountPrice(addon) {
            return addon.pricings[this.currency][this.getAddonCycle(addon)].discountPrice
        },
        getAddonRawSetupFee(addon) {
            return addon.pricings[this.currency][this.getAddonCycle(addon)].rawSetupFee
        },
        getAddonRegularSetupFee(addon) {
            return addon.pricings[this.currency][this.getAddonCycle(addon)].setupFee
        },
        getAddonDiscountSetupFee(addon) {
            return addon.pricings[this.currency][this.getAddonCycle(addon)].discountSetupFee
        },
        getAddonFinalPrice(addon) {
            const discountPrice = this.getAddonDiscountPrice(addon);
            return discountPrice ? discountPrice + this.getAddonShortPeriod(addon) : this.getAddonRegularPrice(addon) + this.getAddonShortPeriod(addon)
        },
        getAddonFinalSetupFee(addon) {
            const discountSetupFee = this.getAddonDiscountSetupFee(addon);
            return discountSetupFee ? discountSetupFee : this.getAddonRegularSetupFee(addon)
        },
        getModalAddonPrice(pricing) {
            return pricing.discountPrice ? pricing.discountPrice : pricing.price
        },
        getAddonCycle(addon) {
            let cycle = Object.keys(addon.pricings[this.currency])[0];
            if (this.addonToModal && this.addonToModal.id === addon.id && this.selectedCycle) {
                cycle = this.selectedCycle
            }
            return cycle
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-order-fields", {
    template: "#t-mg-one-page-order-fields",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            value: "",
            data: {},
            interactive: true
        }
    },
    created() {
        let self = this;
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            Object.keys(self.data).forEach(function(key) {
                self.requireValidator(self.data[key]);
                self.$forceUpdate()
            })
        })
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            })
        },
        orderFields: function(value) {
            if (this.orderFields.length) {
                this.orderFields.map(singleField => {
                    if (!this.data[singleField.id]) {
                        this.data[singleField.id] = singleField;
                        if (this.data[singleField.id].type == "dropdown") {
                            this.data[singleField.id].value = this.data[singleField.id].extra[0]
                        } else if (this.data[singleField.id].type == "inputText") {
                            this.data[singleField.id].value = ""
                        } else {
                            this.data[singleField.id].value = null
                        }
                    }
                })
            }
        }
    },
    computed: {
        selectedProduct: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductId"]()
            }
        },
        orderFields: {
            get() {
                return this.$store.getters["cartStore/getOrderFields"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/getOrderFields"]().length
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        getSPage: {
            get() {
                return this.$store.getters["cartStore/getSPage"]()
            }
        },
        isOneStep: {
            get() {
                return this.$store.getters["cartStore/isOneStep"]()
            }
        }
    },
    methods: {
        requireValidator(field) {
            if (field.required === "off") {
                return
            }
            let result = pageOrderRequiredValidator(field.id, this.data[field.id].value);
            mgPageOrderCustomFieldValidatorCallback(field, result)
        },
        updateDataValue(event, fieldId, option, index) {
            if (this.interactive) {
                this.data[fieldId].value = option
            }
            delete this.data[fieldId];
            this.data = { ...this.data
            };
            this.data[fieldId] = this.orderFields[index];
            this.data[fieldId].value = option;
            this.requireValidator(this.data[fieldId]);
            this.$store.dispatch("cartStore/updateOrderFields", Object.values(this.data).filter(item => item.value))
        },
        isValid(field) {
            return field.isValidField
        },
        parseHTML(html) {
            return $.parseHTML(html)
        }
    }
});
var pageOrderStore = {};
mgJsComponentHandler.addDefaultComponent("mg-one-page-order", {
    template: "#t-mg-one-page-order",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        },
        init_details: {}
    },
    data: function() {
        return {}
    },
    created() {
        const settings = JSON.parse(this.init_details);
        cartStore.modules.route = eval(settings.routeType);
        pageOrderStore = this.$store;
        pageOrderStore.registerModule("cartStore", cartStore);
        pageOrderStore.dispatch("cartStore/init", this.getSettings(settings))
    },
    computed: {
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        }
    },
    methods: {
        getMainEndpoint: function() {},
        getSettings: function(iniParams) {
            return {
                settings: {
                    requestParams: {
                        loadData: this.component_id,
                        namespace: this.component_namespace,
                        index: this.component_index
                    },
                    moduleSettings: {
                        apiEndpoint: iniParams["mainEndpoint"] + iniParams["apiUrl"],
                        mainEndpoint: iniParams["mainEndpoint"]
                    },
                    sPage: iniParams["sPage"],
                    baseUrl: iniParams["pageUri"],
                    pageType: iniParams["pageType"],
                    formType: iniParams["formType"],
                    componentsConfiguration: iniParams["componentsConfiguration"],
                    orderDetails: iniParams["orderDetails"]
                }
            }
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-payment-methods", {
    template: "#t-mg-one-page-payment-methods",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            selectedGateway: null,
            applyCredit: 0,
            ccinfo: "new",
            cardInfo: "new",
            ccvInputVisible: false,
            gatewayModel: null,
            ccinfoId: null,
            cccvv: null,
            cccvvError: false,
            interactiveMode: true,
            selectedCardId: null,
            stripeErrors: {},
            ccDescription: null
        }
    },
    watch: {
        isVisible: function(value) {
            if (value === false) {
                return
            }
            this.$nextTick(function() {
                this.renderGatewayCheckbox();
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
                this.updateSelectedGatewayIfDoesNotExists()
            })
        },
        selectedGateway: {
            handler(newValue, oldValue) {
                let self = this;
                const object = this.getGatewayByName(newValue);
                self.updateSelectedGateway(object);
                self.setCardInfo("new");
                self.$nextTick(async function() {
                    if (self.interactiveMode === true) {
                        await self.$store.dispatch("cartStore/changePaymentGateway", {
                            gateway: newValue
                        })
                    }
                    this.interactiveMode = true;
                    await self.$store.dispatch("cartStore/gatewayHooks/runHookOnGatewaySelect").then(() => {
                        const availableCards = self.getAvailableCreditCards(self.gatewayModel);
                        if (availableCards && availableCards.length > 0) {
                            self.setCardInfo("existing");
                            let card = availableCards.find(card => !card.isExpired);
                            if (card) {
                                self.enableCard(null);
                                self.enableCard(card.id, self.gatewayModel.gatewayKey)
                            }
                        }
                    })
                })
            },
            deep: true
        },
        applyCredit: {
            handler(newValue, oldValue) {
                this.updateApplyCredit(newValue);
                this.renderGatewayCheckbox()
            },
            deep: true
        },
        ccDetailsVisible: {
            handler(newValue, oldValue) {
                if (!newValue) {
                    return
                }
                this.$nextTick(async function() {
                    await this.$store.dispatch("cartStore/gatewayHooks/runHookOnGatewaySelect")
                })
            },
            deep: true
        },
        ccinfo: {
            handler(value, oldValue) {
                this.$store.dispatch("cartStore/updateCreditCardInfo", value);
                this.$nextTick(() => {
                    this.$store.dispatch("cartStore/gatewayHooks/runHookOnChangeCreditCard", {
                        ccinfo: value,
                        ccdescription: this.ccDescription
                    })
                })
            },
            deep: true
        },
        personalDetails: function(value) {
            if (this.isVisible && value.defaultgateway && !this.selectedGateway) {
                this.selectedGateway = value.defaultgateway
            }
        },
        paymentGateways: function(gateways) {
            if (gateways.length === 0) {
                this.selectedGateway = null;
                this.gatewayModel = null;
                return
            }
            if (this.selectedGateway) {
                const gateway = gateways.find(gateway => gateway.gatewayKey == this.selectedGateway);
                if (!gateway && gateways) {
                    this.selectedGateway = gateways[0].gatewayKey
                }
            }
        }
    },
    created() {
        const self = this;
        mgEventHandler.on("PreCompleteOrder", null, function(id, params) {
            self.validateCcvField();
            self.$forceUpdate()
        });
        mgEventHandler.on("RefreshAlertState", null, function() {
            self.cccvvError = false
        })
    },
    computed: {
        isAddonPage: {
            get() {
                return this.$store.getters["cartStore/getSPage"]() == "addons"
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        showPaymentGateways: {
            get() {
                return (this.$store.getters["cartStore/getApplyCreditsStatus"]() != "1" || this.furtherPayment) && this.paymentGateways !== null
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("paymentMethods") && this.countAvailableGateways() > 0
            }
        },
        personalDetails: {
            get() {
                return this.$store.getters["cartStore/getClient"]()
            }
        },
        paymentGateways: {
            get() {
                let gateways = this.$store.getters["cartStore/getPaymentGateways"]();
                if (gateways.length) {
                    gateways.sort((a, b) => a.order - b.order);
                    if (this.currency) {
                        gateways = Object.assign(...Object.keys(gateways).filter(key => gateways[key].supportedCurrencies && gateways[key].supportedCurrencies.includes(this.currency.code) || gateways[key].supportedCurrencies && !gateways[key].supportedCurrencies.length).map(key => ({
                            [key]: gateways[key]
                        })))
                    }
                    let paymentGateways = [];
                    Object.entries(gateways).forEach(gateway => {
                        if (this.isAvailableGateway(gateway[1])) {
                            paymentGateways.push(gateway[1])
                        }
                    });
                    return paymentGateways
                }
                return []
            }
        },
        personalDetailsValid: {
            get() {
                return this.personalDetails !== null && this.personalDetails !== undefined && this.personalDetails.credit !== undefined && this.personalDetails.credit.numeric > 0
            }
        },
        amount: {
            get() {
                if (this.furtherPayment) {
                    return this.getFormattedPrice(this.personalDetails.credit.numeric)
                }
                let total = this.$store.getters["cartStore/getCartSummary"]();
                return this.getFormattedPrice(total.total.numeric)
            }
        },
        furtherPayment: {
            get() {
                return parseFloat(this.personalDetails.credit.numeric) < parseFloat(this.$store.getters["cartStore/getCartSummary"]().total.numeric)
            }
        },
        availableCreditCards: {
            get() {
                return this.personalDetails["cards"] !== undefined ? this.personalDetails["cards"] : false
            }
        },
        ccDetailsVisible: {
            get() {
                return this.cardInfo == "new" || this.availableCreditCards == false ? true : false
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        group: {
            get() {
                return this.$store.getters["cartStore/getCurrentGroup"]()
            }
        },
        showCcvInput: {
            get() {
                let isCcvInputShown = this.cardInfo == "existing" && this.ccinfo != "new" && this.gatewayModel && this.gatewayModel.type === "CC" && this.gatewayModel.remote === false;
                if (isCcvInputShown) {
                    this.ccinfo = this.selectedCardId
                }
                if (this.gatewayModel && this.gatewayModel.showInput && this.cardInfo === "existing") {
                    return true
                }
                return isCcvInputShown
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        }
    },
    methods: {
        setCardInfo(value) {
            this.cardInfo = value;
            if (value == "new") {
                this.ccinfo = value
            } else {
                this.ccinfo = this.selectedCardId
            }
        },
        getFormattedPrice(price) {
            return this.currency.prefix + formatPrice.getFormattedPrice(price, this.currency.format) + (this.layoutSettings.displayPriceSuffix ? " " + this.currency.suffix : "")
        },
        updateSelectedGateway(gateway) {
            this.gatewayModel = gateway;
            if (gateway && gateway.charge) {
                this.$store.commit("cartStore/setGatewayChargeFlag", gateway.charge.isChargeable)
            }
        },
        updateSelectedGatewayIfDoesNotExists: function() {
            if (!this.selectedGateway && this.$store.getters["cartStore/getSelectedPaymentGateway"]()) {
                this.interactiveMode = false;
                this.selectedGateway = this.$store.getters["cartStore/getSelectedPaymentGateway"]()
            } else if (!this.selectedGateway && Object.values(this.paymentGateways)[0]) {
                this.selectedGateway = this.personalDetails.defaultgateway ? this.personalDetails.defaultgateway : Object.values(this.paymentGateways)[0].gatewayKey
            }
        },
        updateApplyCredit(applyCredits) {
            this.$store.dispatch("cartStore/applyCredits", {
                applyCredits: applyCredits
            })
        },
        enableCard(cardId, gatewayKey) {
            this.ccinfo = cardId;
            this.selectedCardId = cardId;
            if (gatewayKey) {
                this.ccinfoId = gatewayKey + "_" + cardId
            } else {
                this.ccinfoId = cardId
            }
        },
        renderGatewayCheckbox() {
            var self = this;
            renderCheckBox("payment-gateway-component", function(val) {
                self.selectedGateway = val
            }, function(val) {});
            renderCheckBox("payment-credits-component", function(val) {
                self.applyCredit = val
            }, function(val) {})
        },
        getAvailableCreditCards: function(gateway) {
            if (gateway && gateway.remote === true) {
                return this.getGatewayCreditCards(gateway.gatewayKey)
            } else {
                return this.getCCCards()
            }
        },
        getGatewayByName: function(name) {
            if (typeof this.paymentGateways !== "object") {
                return null
            }
            for (const [index, model] of Object.entries(this.paymentGateways)) {
                if (model.gatewayKey === name) {
                    return model
                }
            }
            return null
        },
        getDisabledGateways() {
            return this.group.disabledgateways ? this.group.disabledgateways.split(",") : []
        },
        getGatewayCreditCards: function(name) {
            if (Array.isArray(this.availableCreditCards)) {
                return this.availableCreditCards.filter(card => card.gateway === name)
            }
            return null
        },
        getCCCards: function() {
            if (Array.isArray(this.availableCreditCards)) {
                return this.availableCreditCards.filter(card => card.gateway == "")
            }
            return null
        },
        validateCcvField: function() {
            if (this.selectedGateway === "stripe") {
                this.$store.dispatch("cartStore/updateCreditCardDescription", this.ccDescription);
                if ($("#mg-stripe-cc").hasClass("StripeElement--invalid")) {
                    pageOrderStore.commit("cartStore/pushValidateError", {
                        id: "mg-stripe-cc",
                        error: result
                    });
                    this.stripeErrors.cc = true
                } else {
                    pageOrderStore.commit("cartStore/popValidateError", "mg-stripe-cc");
                    this.stripeErrors.cc = false
                }
                if ($("#mg-stripe-expiry").hasClass("StripeElement--invalid")) {
                    pageOrderStore.commit("cartStore/pushValidateError", {
                        id: "mg-stripe-expiry",
                        error: result
                    });
                    this.stripeErrors.expiry = true
                } else {
                    pageOrderStore.commit("cartStore/popValidateError", "mg-stripe-expiry");
                    this.stripeErrors.expiry = false
                }
                if ($("#mg-stripe-cardcvv").hasClass("StripeElement--invalid")) {
                    pageOrderStore.commit("cartStore/pushValidateError", {
                        id: "mg-stripe-cardcvv",
                        error: result
                    });
                    this.stripeErrors.cardcvv = true
                } else {
                    pageOrderStore.commit("cartStore/popValidateError", "mg-stripe-cardcvv");
                    this.stripeErrors.cardcvv = false
                }
            }
            if (this.showCcvInput === false || this.cardInfo === "new") {
                return
            }
            let useCCInput = document.getElementById("useFullCreditOnCheckout");
            var result = window["pageOrderRequiredValidator"]("cccvv", this.cccvv);
            if (result === true || useCCInput && useCCInput.value) {
                pageOrderStore.commit("cartStore/popValidateError", "cccvv");
                this.cccvvError = false
            } else if (useCCInput) {
                pageOrderStore.commit("cartStore/pushValidateError", {
                    id: "cccvv",
                    error: result
                });
                this.cccvvError = result
            }
        },
        countAvailableGateways: function() {
            let count = 0;
            for (const [index, model] of Object.entries(this.paymentGateways)) {
                if (this.isAvailableGateway(model)) {
                    count++
                }
            }
            return count
        },
        isAvailableGateway: function(gateway) {
            return !(this.group && this.getDisabledGateways() && this.getDisabledGateways().indexOf(gateway.gatewayKey) !== -1)
        },
        getTranslatedMessage: function(message, replace) {
            return mgPageLang.translate([message], replace)
        },
        isChecked(condition) {
            return condition ? "gateway-checked" : null
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-product-addons", {
    template: "#t-mg-one-page-product-addons",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    components: {
        vForm: vForm
    },
    data: function() {
        return {
            formData: {},
            interactive: true,
            visibleAddonsCount: 0
        }
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            })
        },
        stateFormData: {
            handler(formData) {
                this.updateComponentFormData(formData)
            },
            deep: true
        },
        formData: {
            handler(formData) {},
            deep: true
        }
    },
    computed: {
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        isVisible: {
            get() {
                if (!this.addons || !this.addons.fields) {
                    return false
                }
                if (!this.$store.getters["cartStore/isVisible"]("configurations")) {
                    return false
                }
                return true
            }
        },
        stateFormData: {
            get() {
                return this.$store.getters["cartStore/getProductAddonsFormData"]()
            }
        },
        addons: {
            get() {
                return this.$store.getters["cartStore/getProductAddons"]()
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        isDiscountCenterOn: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]().isDiscountCenterOn
            }
        }
    },
    mounted() {},
    methods: {
        updateComponentFormData(formData) {
            this.interactiveMode = false;
            this.formData = formData;
            this.$nextTick(() => {
                this.interactiveMode = true
            });
            this.visibleAddonsCount = $(".panel-addon").length
        },
        getFormattedPrice(price) {
            formatPrice.getFormattedPrice(price, this.currency.format)
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-product-conf-opt", {
    template: "#t-mg-one-page-product-conf-opt",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    components: {
        vForm: vForm
    },
    data: function() {
        return {
            formData: {},
            interactive: true
        }
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            })
        },
        formData: {
            handler(formData) {
                if (!this.interactiveMode) {
                    return
                }
                this.updateConfigOptions(formData)
            },
            deep: true
        },
        stateFormData: {
            handler(formData) {
                this.updateComponentFormData(formData)
            },
            deep: true
        }
    },
    computed: {
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("configurations") && this.configurableOptions !== undefined && this.configurableOptions.fields
            }
        },
        configurableOptions: {
            get() {
                let configOptions = this.$store.getters["cartStore/getProductConfigurableOptions"]();
                let groupIndex = null;
                if (configOptions.fields) {
                    configOptions.fields.map((singleField, singleFieldIndex) => {
                        if (singleField.groupSection.config_group_id != groupIndex) {
                            groupIndex = singleField.groupSection.config_group_id;
                            singleField.isFirstInGroup = true
                        } else {
                            singleField.isFirstInGroup = false
                        }
                    })
                }
                return configOptions
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        stateFormData: {
            get() {
                return this.$store.getters["cartStore/getConfigurableOptionsFormData"]()
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        groupSettings: {
            get() {
                return this.$store.getters["cartStore/getGroupSection"]()
            }
        }
    },
    methods: {
        updateComponentFormData(formData) {
            this.interactiveMode = false;
            this.formData = formData;
            this.$nextTick(() => {
                this.interactiveMode = true
            })
        },
        updateConfigOptions(data) {
            this.$store.dispatch("cartStore/updateConfigurableOptions", {
                configOptions: data
            })
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-product-custom-fields", {
    template: "#t-mg-one-page-product-custom-fields",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    components: {
        vForm: vForm
    },
    data: function() {
        return {
            interactiveMode: false,
            formData: {}
        }
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            })
        },
        formData: {
            handler(formData) {
                if (!(this.interactiveMode === true)) {
                    return
                }
                this.updateCustomFields(formData)
            },
            deep: true
        },
        stateFormData: {
            handler(formData) {
                this.updateComponentFormData(formData)
            },
            deep: true
        }
    },
    computed: {
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("configurations") && this.customFields !== undefined && this.customFields.fields && this.customFields.fields.length > 0
            }
        },
        customFields: {
            get() {
                return this.$store.getters["cartStore/getProductCustomFields"]()
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        billingCycle: {
            get() {
                return this.$store.getters["cartStore/getSelectedProductCycle"]()
            }
        },
        stateFormData: {
            get() {
                return this.$store.getters["cartStore/getCustomFieldsFormData"]()
            }
        }
    },
    methods: {
        updateComponentFormData(formData) {
            this.interactiveMode = false;
            this.formData = formData;
            this.$nextTick(() => {
                this.interactiveMode = true
            })
        },
        updateCustomFields(formData) {
            this.$store.dispatch("cartStore/updateCustomFields", {
                customFields: formData
            })
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-products", {
    template: "#t-mg-one-page-products",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            showLoaderOnId: null,
            selectedMode: "slider",
            sliderEnabled: true,
            isRendered: true,
            productCycleDuringLoading: null,
            slideWidths: [],
            chosenItem: 0,
            pricing: false
        }
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            })
        },
        currency: function(newValue, oldValue) {
            if (this.selectedProduct && oldValue && newValue.code != oldValue.code) {
                this.selectProduct(this.selectedProduct)
            }
        }
    },
    computed: {
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        products: {
            get() {
                return this.$store.getters["cartStore/getGroupProducts"]()
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("products")
            }
        },
        cart: {
            get() {
                return this.$store.getters["cartStore/getCartSummary"]()
            }
        },
        selectedProduct: {
            get() {
                const selectedProduct = this.$store.getters["cartStore/getSelectedProductId"]();
                if (!selectedProduct && this.products[0]) {
                    return this.products[0].id
                }
                return this.$store.getters["cartStore/getSelectedProductId"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        isButtonLoader: {
            get() {
                return this.$store.getters["cartStore/getSpinners"]()["productButton"] > 1
            }
        },
        refLinkProductId: {
            get() {
                return this.$store.getters["cartStore/getAppRefLinkProductId"]()
            }
        },
        productCycle: {
            get() {
                if (this.spinner) {
                    return this.$store.getters["cartStore/getBillingCycleDuringLoading"]()
                } else {
                    let cycle = this.$store.getters["cartStore/getSelectedProductCycle"]();
                    this.$store.commit("cartStore/setBillingCycleDuringLoading", cycle);
                    return cycle
                }
            }
        },
        isDiscountCenterOn: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]().isDiscountCenterOn
            }
        },
        highestBillingPeriod: {
            get() {
                return this.$store.getters["cartStore/getHighestPeriodPriceIfSettingExists"]()
            }
        },
        capitalizedProductCycle: {
            get() {
                if (this.spinner) {
                    return mgPageLang.translate(this.$store.getters["cartStore/getBillingCycleDuringLoading"]())
                } else {
                    return mgPageLang.translate(this.$store.getters["cartStore/getSelectedProductCycle"]())
                }
            }
        },
        spinner: {
            get() {
                return this.$store.getters["cartStore/getSpinners"]()["cart"]
            }
        },
        isOneStep: {
            get() {
                return this.$store.getters["cartStore/isOneStep"]()
            }
        },
        orderSettings: {
            get() {
                return this.$store.getters["cartStore/getWhmcsOrderSettings"]()
            }
        },
        visibleSlides: {
            get() {
                if (this.showNumber && this.isOneStep) {
                    return "[4, 3, 2, 2, 1]"
                } else if (!this.isOneStep) {
                    return "[4, 3, 2, 2, 1]"
                } else {
                    return "[3, 2, 2, 2, 1]"
                }
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        sysURL: {
            get() {
                return this.$store.state.cartStore.moduleSettings.mainEndpoint
            }
        }
    },
    methods: {
        selectProduct: function(productID) {
            if (this.isBlockedPage) {
                return
            }
            if (productID == this.selectedProduct) {
                return
            }
            this.chosenItem = productID;
            this.showLoaderOnId = productID;
            this.$store.dispatch("cartStore/changeProduct", productID)
        },
        getPercentageDiff(oldVal, newVal) {
            const diff = (newVal - oldVal) / oldVal;
            return Math.round(Math.abs(diff * 100)) + "%"
        },
        getTranslatedMessage(cycle) {
            return mgPageLang.sprintf(mgPageLang.translate(["cycle"], {
                cycle: cycle
            }), cycle)
        },
        isSelectedProduct: function(productId) {
            if (this.productExistsInGroup(this.chosenItem)) {
                return this.chosenItem !== 0 && this.chosenItem == productId || this.chosenItem === 0 && this.selectedProduct == productId && this.isOneStep
            }
            return this.selectedProduct == productId
        },
        addProduct: function(productID) {
            if (this.isBlockedPage) {
                return
            }
            this.showLoaderOnId = productID;
            this.$store.dispatch("cartStore/changeProduct", productID)
        },
        getNameToUpper(name) {
            return name.charAt(0).toUpperCase() + name.slice(1)
        },
        getProductPrice(product) {
            const pricing = product.pricing[this.getAvailableCycle(product)];
            if (this.getProductStartingPrice(product)) {
                return this.getProductStartingPrice(product)
            }
            return pricing ? product.pricing[this.getAvailableCycle(product)].finalPrice : false
        },
        getProductStartingPrice(product) {
            const pricing = product.pricing[this.getAvailableCycle(product)];
            return product.pricing && pricing ? pricing.startingPrice : false
        },
        getProductDiscountPrice(product) {
            const pricing = product.pricing[this.getAvailableCycle(product)];
            return product.pricing && pricing ? pricing.discountPrice : false
        },
        getProductDiscountPercentage(product) {
            const pricing = product.pricing[this.getAvailableCycle(product)];
            return product.pricing && pricing ? pricing.discountPercentage : false
        },
        getProductSetupFee(product) {
            const pricing = product.pricing[this.getAvailableCycle(product)];
            return product.pricing && pricing ? pricing.setupFee : false
        },
        getProductDiscountSetupFee(product) {
            const pricing = product.pricing[this.getAvailableCycle(product)];
            return product.pricing && pricing ? pricing.discountSetupFee : false
        },
        getProductDiscountSetupFeePercentage(product) {
            const pricing = product.pricing[this.getAvailableCycle(product)];
            return product.pricing && pricing ? pricing.discountSetupFeePercentage : false
        },
        getProductDiscountRawSetupFee(product) {
            const pricing = product.pricing[this.getAvailableCycle(product)];
            return product.pricing && pricing ? pricing.discountRawSetupFee : false
        },
        getAvailableCycle(product) {
            let cycle = this.productCycle;
            if (product.paytype === "onetime") {
                cycle = "monthly"
            } else if (product && product.pricing && product.pricing[this.productCycle] && this.isOneStep) {
                cycle = this.productCycle
            } else if (product && product.pricing && product.pricings[this.currency.id]) {
                const pricingsArray = product.pricings ? Object.keys(product.pricings[this.currency.id]) : product.pricing;
                cycle = this.layoutSettings.highestBillingPeriod ? pricingsArray[pricingsArray.length - 1] : pricingsArray[0]
            }
            return cycle
        },
        translateBillingCycle(cycle) {
            return mgPageLang.translate(cycle)
        },
        productExistsInGroup(id) {
            return this.$store.getters["cartStore/getGroupProducts"]().filter(product => product.id === id).length
        },
        renderSlider: function(mode) {
            let self = this;
            if (document.querySelector(".slider-container")) {
                this.sliderEnabled = true;
                let swiper = null;
                let visibleSlides = $(".slider-container").data("visibleSlides");

                function getSlideWidth() {
                    return document.querySelector(".slider-container .swiper-wrapper").offsetWidth
                }

                function getSliderNavigation() {
                    if ($(".swiper-nav").length) {
                        let navigationCurrentSlide = document.querySelector(".swiper-nav .swiper-navigation .swiper-navigation-current-slide");
                        let navigationLastSlide = document.querySelector(".swiper-nav .swiper-navigation .swiper-navigation-last-slide");
                        let swiperWrapper = document.querySelector(".slider-container .swiper-wrapper");
                        let prevButton = document.querySelector(".swiper-nav .swiper-button-prev");
                        let nextButton = document.querySelector(".swiper-nav .swiper-button-next");
                        let lastVisibleSlide;
                        let slidesLength = swiper.slides.length;
                        let slides = Object.values(swiper.slides);
                        swiper.updateSlidesOffset();
                        slides.pop();
                        slides.map((singleSlide, index) => {
                            if (singleSlide.classList.contains("swiper-slide-visible")) {
                                lastVisibleSlide = index
                            }
                        });
                        swiper.activeIndex = 0;
                        navigationCurrentSlide.textContent = lastVisibleSlide + 1;
                        navigationLastSlide.textContent = slidesLength;
                        var observer = new MutationObserver(function(mutations) {
                            slides = [...mutations[0].target.childNodes];
                            slides.map((singleSlide, index) => {
                                if (singleSlide.classList.contains("swiper-slide-visible")) {
                                    lastVisibleSlide = index
                                }
                            });
                            navigationCurrentSlide.textContent = lastVisibleSlide + 1;
                            if (swiper.translate < -(swiper.virtualSize - swiper.width - 100)) {
                                swiperWrapper.style.left = "32px"
                            } else if (swiper.translate < -200) {
                                swiperWrapper.style.left = "16px"
                            } else if (swiper.translate < -100) {
                                swiperWrapper.style.left = "8px"
                            } else {
                                swiperWrapper.style.left = "0"
                            }
                        });
                        let swiperContainer = document.querySelector(".slider-container .swiper-wrapper");
                        observer.observe(swiperContainer, {
                            attributes: true,
                            attributeFilter: ["style"],
                            childList: true
                        });
                        const swiperClass = document.querySelector(".swiper-wrapper");
                        if (swiperClass) {
                            swiper.on("transitionStart", function() {
                                swiperClass.classList.add("swiper-wrapper--move")
                            });
                            swiper.on("transitionEnd", function() {
                                setTimeout(function() {
                                    swiperClass.classList.remove("swiper-wrapper--move")
                                }, 100)
                            })
                        }
                        swiper.on("sliderMove", function() {
                            if (lastVisibleSlide == swiper.slides.length - 1) {
                                nextButton.classList.add("swiper-button-disabled")
                            } else if (swiper.activeIndex == 0) {
                                prevButton.classList.add("swiper-button-disabled")
                            } else {
                                nextButton.classList.remove("swiper-button-disabled");
                                prevButton.classList.remove("swiper-button-disabled")
                            }
                        });
                        swiper.on("slideChange", function() {})
                    }
                }

                function initNavigation() {
                    let prevButton = document.querySelector(".swiper-nav .swiper-button-prev");
                    let nextButton = document.querySelector(".swiper-nav .swiper-button-next");
                    swiper.activeIndex = 0;
                    let nextSlide = function nextSlide() {
                        swiper.slideNext();
                        if (swiper.activeIndex == swiper.slides.length - 1 || swiper.activeIndex + swiper.visibleSlidesIndexes.length == swiper.slides.length) {
                            nextButton.classList.add("swiper-button-disabled");
                            prevButton.classList.remove("swiper-button-disabled")
                        } else {
                            nextButton.classList.remove("swiper-button-disabled");
                            prevButton.classList.remove("swiper-button-disabled")
                        }
                    };
                    let prevSlide = function prevSlide() {
                        swiper.slidePrev();
                        if (swiper.activeIndex == 0) {
                            prevButton.classList.add("swiper-button-disabled");
                            nextButton.classList.remove("swiper-button-disabled")
                        } else {
                            prevButton.classList.remove("swiper-button-disabled");
                            nextButton.classList.remove("swiper-button-disabled")
                        }
                    };
                    prevButton.removeEventListener("click", prevSlide);
                    nextButton.removeEventListener("click", nextSlide);
                    prevButton.addEventListener("click", prevSlide);
                    nextButton.addEventListener("click", nextSlide);
                    prevButton.click()
                }

                function updateSlidesWidth() {
                    self.slideWidths = [];
                    visibleSlides.map(singleVisibleSliderCounter => {
                        self.slideWidths.push($(".slider-container .swiper-wrapper .swiper-slide").first().outerWidth() * singleVisibleSliderCounter + ($(".slider-container").innerWidth() - $(".slider-container").width()))
                    })
                }

                function initSlider(mode) {
                    swiper = new Swiper(".slider-container", {
                        direction: "horizontal",
                        loop: false,
                        initialSlide: 0,
                        spaceBetween: 0,
                        slidesPerView: visibleSlides[0],
                        watchSlidesProgress: true,
                        watchSlidesVisibility: true,
                        slidesPerGroup: 1,
                        centeredSlides: false,
                        slidesOffsetBefore: 0,
                        slidesOffsetAfter: 0,
                        width: self.slideWidths[0],
                        breakpoints: {
                            1250: {
                                width: self.slideWidths[0],
                                slidesPerView: visibleSlides[0]
                            },
                            1164: {
                                width: self.slideWidths[1],
                                slidesPerView: visibleSlides[1]
                            },
                            991: {
                                width: self.slideWidths[2],
                                slidesPerView: visibleSlides[2]
                            },
                            767: {
                                width: self.slideWidths[3],
                                slidesPerView: visibleSlides[3]
                            },
                            568: {
                                width: self.slideWidths[4],
                                slidesPerView: visibleSlides[4]
                            },
                            1: {
                                width: self.slideWidths[4],
                                slidesPerView: visibleSlides[4]
                            }
                        },
                        containerModifierClass: "swiper-container-",
                        slideClass: "swiper-slide",
                        slideActiveClass: "swiper-slide-active",
                        slideDuplicateActiveClass: "swiper-slide-duplicate-active",
                        slideVisibleClass: "swiper-slide-visible",
                        slideDuplicateClass: "swiper-slide-duplicate",
                        slideNextClass: "swiper-slide-next",
                        slideDuplicateNextClass: "swiper-slide-duplicate-next",
                        slidePrevClass: "swiper-slide-prev",
                        slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
                        wrapperClass: "swiper-wrapper",
                        lazyLoadingClass: "swiper-lazy",
                        lazyStatusLoadingClass: "swiper-lazy-loading",
                        lazyStatusLoadedClass: "swiper-lazy-loaded",
                        lazyPreloaderClass: "swiper-lazy-preloader",
                        notificationClass: "swiper-notification",
                        preloaderClass: "preloader",
                        zoomContainerClass: "swiper-zoom-container",
                        observeSlideChildren: true,
                        nextButton: ".swiper-button-next",
                        prevButton: ".swiper-button-prev"
                    });
                    getSliderNavigation()
                }
                window.onresize = getSlideWidth;
                window.onresize = updateSlidesWidth();
                window.onresize = initSlider(mode);
                window.onresize = getSliderNavigation;
                swiper.update();
                initNavigation();
                getSliderNavigation();
                $(".slider-container .swiper-wrapper .swiper-slide").each(function(index, slide) {
                    if ($(slide).find(".package-selected").length) {
                        swiper.slideTo(index, 500)
                    }
                });
                let buttons = [...document.querySelectorAll(".swiper-switcher .swiper-switcher__label")];
                buttons.map(singleButton => {
                    singleButton.addEventListener("click", () => {
                        if (singleButton.dataset.slider == "off") {
                            this.sliderEnabled = false
                        }
                        if (singleButton.dataset.slider == "on") {
                            this.sliderEnabled = true
                        }
                        this.selectedMode = singleButton.textContent;
                        if (!this.sliderEnabled) {
                            swiper.translateTo(0, 0, false);
                            swiper.detachEvents()
                        } else {
                            swiper.attachEvents();
                            swiper.update();
                            initNavigation();
                            getSliderNavigation()
                        }
                    })
                });
                let leftButton = document.querySelector(".swiper-container .swiper-navigation-secondary-left");
                let rightButton = document.querySelector(".swiper-container .swiper-navigation-secondary-right");
                leftButton.addEventListener("click", () => {
                    swiper.slidePrev()
                });
                rightButton.addEventListener("click", () => {
                    swiper.slideNext()
                })
            }
        },
        show(d) {
            return d
        },
        changeMode: function(event) {
            event.target.parentNode.querySelector(".active").classList.remove("active");
            event.target.classList.toggle("active");
            this.selectedMode = event.target.textContent;
            this.sliderEnabled = event.target.dataset.slider;
            if (event.target.dataset.slider == "off") {
                this.sliderEnabled = false
            }
            if (event.target.dataset.slider == "on") {
                this.sliderEnabled = true
            }
        },
        isMarketConnectProductWithDomain() {
            if (this.cart.products[0]) {
                return this.cart.products[0].productinfo.type === "other" && this.cart.products[0].domain
            }
            return false
        },
        getFormattedPrice(price) {
            return formatPrice.getFormattedPrice(price, this.currency.format)
        },
        getDefaultBillingCycle(obj) {
            return this.layoutSettings.highestBillingPeriod ? Object.keys(obj)[Object.keys(obj).length - 1] : Object.keys(obj)[0]
        },
        isPageRTL() {
            return $("html").attr("dir") == "rtl" ? true : false
        },
        getSlidesClasses() {
            return [{
                "slider-container swiper-container": this.products.length > 3 && this.layoutSettings.packagesSlider && this.sliderEnabled && this.$store.state.cartStore.pageType !== "bottom" && this.isOneStep || (this.products.length > 4 && this.layoutSettings.packagesSlider && this.sliderEnabled && this.$store.state.cartStore.pageType !== "bottom" && !this.isOneStep || this.products.length > 4 && this.layoutSettings.packagesSlider && this.sliderEnabled && this.$store.state.cartStore.pageType == "bottom")
            }, {
                "swiper-sidebar": !this.showNumber && this.isOneStep
            }, {
                "swiper-full-width": this.showNumber || !this.isOneStep
            }, {
                "swiper-full-width--number": this.showNumber && this.isOneStep
            }, {
                "swiper-full-width--futuristic": this.layoutSettings.templates && this.layoutSettings.templates.lagom.active_style === "futuristic"
            }, {
                "swiper-disabled": !this.sliderEnabled
            }]
        },
        getSecondaryNavigationClasses() {
            return [{
                "swiper-wrapper": this.products.length > 3 && this.layoutSettings.packagesSlider && this.sliderEnabled && this.$store.state.cartStore.pageType !== "bottom" && this.isOneStep || this.products.length > 4 && this.layoutSettings.packagesSlider && this.sliderEnabled && this.$store.state.cartStore.pageType !== "bottom" && !this.isOneStep || this.products.length > 4 && this.layoutSettings.packagesSlider && this.sliderEnabled && this.$store.state.cartStore.pageType == "bottom"
            }, {
                "swiper-steps": !this.showNumber
            }, {
                "swiper-two-step": !this.isOneStep
            }]
        },
        getProductClasses() {
            return [{
                "col-lg-3 col-md-4 col-xs-6 col-xxs-12": this.showNumber || !this.showNumber && this.products.length > 0 && !this.isOneStep
            }, {
                "col-lg-4 col-md-4 col-xs-6 col-xxs-12": !this.showNumber && this.products.length > 0 && this.isOneStep
            }, {
                "two-step-product": !this.isOneStep
            }, {
                "col-sm-4 col-xs-6 col-xxs-12 swiper-slide": this.products.length > 3 && this.layoutSettings.packagesSlider && this.sliderEnabled && this.$store.state.cartStore.pageType !== "bottom"
            }, {
                "swiper-slide": this.products.length > 4 && this.layoutSettings.packagesSlider && this.sliderEnabled && this.$store.state.cartStore.pageType == "bottom"
            }]
        },
        getPackageClass(product) {
            return [{
                "package-selected": this.selectedProduct == product.id && this.isOneStep
            }, {
                "package-featured": product.is_featured === 1
            }, {
                "package-sm": this.isOneStep
            }, {
                "is-disabled": product.outOfStock
            }]
        },
        getPackageHorizontalClass(product) {
            return [{
                "package-selected": this.selectedProduct == product.id && this.isOneStep
            }, {
                "package-featured": product.is_featured === 1
            }, {
                "package-sm": this.isOneStep
            }, {
                "is-disabled": product.outOfStock
            }, {
                "package-horizontal--bottom": this.showNumber
            }]
        }
    },
    mounted: function() {
        this.productCycle = this.$store.getters["cartStore/getSelectedProductCycle"]()
    },
    updated: function() {
        let that = this;
        if (document.querySelector(".swiper-header")) {
            if (!this.isRendered) {
                this.isRendered = true;
                this.sliderEnabled = true;
                setTimeout(function() {
                    that.renderSlider()
                }, 10)
            }
        } else {
            this.sliderEnabled = false;
            this.isRendered = false
        }
        this.productCycle = this.$store.getters["cartStore/getSelectedProductCycle"]()
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-promo-code", {
    template: "#t-mg-one-page-promo-code",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {
        return {
            promoEnabled: false,
            promoDescription: "",
            priceBeforePromo: "",
            code: null
        }
    },
    watch: {
        isVisible: function(value) {
            this.$nextTick(function() {
                if (this.showNumber == true) {
                    renderSectionIndex()
                }
            });
            if (value === false) {
                return
            }
            this.setRequestedPromoCode();
            this.promoEnabled = true
        }
    },
    computed: {
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        currency: {
            get() {
                return this.$store.getters["cartStore/getSelectedCurrency"]()
            }
        },
        sysURL: {
            get() {
                return this.$store.state.cartStore.moduleSettings.mainEndpoint
            }
        },
        isVisible: {
            get() {
                return this.layoutSettings.choosePromotionInputPlacement != "orderSummary" && this.$store.getters["cartStore/isVisible"]("promocode") ? true : false
            }
        },
        cart: {
            get() {
                return this.$store.getters["cartStore/getCartSummary"]()
            }
        },
        pageType: {
            get() {
                return this.$store.getters["cartStore/getPageType"]()
            }
        },
        getSPage: {
            get() {
                return this.$store.getters["cartStore/getSPage"]()
            }
        },
        isOneStep: {
            get() {
                return this.$store.getters["cartStore/isOneStep"]()
            }
        },
        promo: {
            get() {
                let promoType = " ";
                if (this.cart.promo) {
                    this.promoEnabled = true;
                    if (this.cart.promo.type == "Price Override") {
                        promoType += this.cart.promo.type
                    } else {
                        promoType = ""
                    }
                    if (this.layoutSettings.displayPriceSuffix && this.currency.suffix) {
                        if (this.cart.promo.type == "Percentage") {
                            this.promoDescription = this.cart.promo.value + "% " + this.cart.promo.recurring
                        } else {
                            this.promoDescription = this.currency.prefix + this.cart.promo.discount.numeric + " " + this.currency.suffix + promoType + " " + this.cart.promo.recurring
                        }
                    } else {
                        if (this.cart.promo.type == "Percentage") {
                            this.promoDescription = this.cart.promo.value + "% " + this.cart.promo.recurring
                        }
                        this.promoDescription = this.currency.prefix + this.cart.promo.discount.numeric
                    }
                }
                return this.cart.promo && this.cart.promo.code ? this.cart.promo : false
            }
        },
        promoAlert: {
            get() {
                let alerts = this.$store.getters["cartStore/getAlert"]();
                return alerts && alerts.promo ? alerts.promo : false
            }
        },
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        requestedPromoCode: {
            get() {
                return this.$store.getters["cartStore/getRequestedPromoCode"]()
            }
        },
        promoCodeErrorMessage: {
            get() {
                return this.$store.getters["cartStore/getPromoCodeErrorMessage"]()
            }
        }
    },
    methods: {
        enablePromocode: function() {
            let self = this;
            this.promoEnabled = true
        },
        addPromo: function() {
            if (this.isBlockedPage) {
                return
            }
            this.$store.dispatch("cartStore/addPromocode", {
                code: this.code
            })
        },
        removePromo: function() {
            if (this.isBlockedPage) {
                return
            }
            this.$store.dispatch("cartStore/removePromocode")
        },
        decodeHtml(html) {
            const txt = document.createElement("textarea");
            txt.innerHTML = html;
            return txt.value
        },
        setRequestedPromoCode() {
            if (this.requestedPromoCode) {
                this.$store.dispatch("cartStore/addPromocode", {
                    code: this.requestedPromoCode
                });
                this.code = this.requestedPromoCode
            }
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-promo-code-info", {
    template: "#t-mg-one-page-promo-code-info",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    data: function() {},
    watch: {
        cart: function() {
            if (this.cart.promo && !this.cart.promo.isApplied && !this.wasShow()) {
                window.scrollTo({
                    top: 0,
                    behavior: "smooth"
                });
                this.$nextTick(function() {
                    $(".promocode--not-applied").addClass("wasShow")
                })
            }
        }
    },
    computed: {
        cart: {
            get() {
                return this.$store.getters["cartStore/getCartSummary"]()
            }
        }
    },
    methods: {
        wasShow: function() {
            return $(".promocode--not-applied").hasClass("wasShow")
        }
    }
});
mgJsComponentHandler.addDefaultComponent("mg-one-page-product-server-fields", {
    template: "#t-mg-one-page-product-server-fields",
    props: {
        component_id: {
            type: String,
            required: true
        },
        component_namespace: {
            type: String,
            required: true
        },
        component_index: {
            type: String,
            required: true
        }
    },
    components: {
        vForm: vForm
    },
    data: function() {
        return {
            formData: {},
            interactiveMode: true
        }
    },
    watch: {
        formData: {
            handler(formData) {
                if (!(this.interactiveMode === true)) {
                    return
                }
                this.updateServerFields(formData)
            },
            deep: true
        },
        stateFormData: {
            handler(formData) {
                this.updateComponentFormData(formData)
            },
            deep: true
        }
    },
    computed: {
        showNumber: {
            get() {
                return this.$store.getters["cartStore/shouldShowNumber"]()
            }
        },
        isVisible: {
            get() {
                return this.$store.getters["cartStore/isVisible"]("configurations") && this.serverFields !== undefined && this.serverFields.fields && this.serverFields.fields.length > 0
            }
        },
        serverFields: {
            get() {
                if (this.lagomTemplateSettings.enable_custom_hostname == "1" && this.layoutSettings.templates && this.layoutSettings.templates.lagom && (this.layoutSettings.templates.lagom.hide_password_fields == this.selectedGroupId || $.inArray(this.selectedGroupId, this.layoutSettings.templates.lagom.hide_password_fields) !== -1)) {
                    if ((typeof this.layoutSettings.templates.lagom.hide_password_fields == "object" || typeof this.layoutSettings.templates.lagom.hide_password_fields == "number") && this.formData.rootpw == "") {
                        const pass = this.generatePass(14);
                        this.formData.rootpw = pass;
                        this.interactiveMode = true
                    }
                    if ((typeof this.layoutSettings.templates.lagom.hide_password_fields == "object" || typeof this.layoutSettings.templates.lagom.hide_password_fields == "number") && this.formData.hostname == "") {
                        const hostname = this.makeid(this.lagomTemplateSettings.custom_hostname_interfix_length) + "." + this.lagomTemplateSettings.custom_hostname_prefix + this.lagomTemplateSettings.custom_hostname_suffix;
                        this.formData.hostname = hostname;
                        this.interactiveMode = true
                    }
                }
                return this.filterByLayoutSettings(this.$store.getters["cartStore/getProductServerFields"]())
            }
        },
        configurableOptions: {
            get() {
                return this.$store.getters["cartStore/getProductConfigurableOptions"]()
            }
        },
        isBlockedPage: {
            get() {
                return this.$store.getters["cartStore/getBlockedEvents"]()["fullPage"] > 1
            }
        },
        stateFormData: {
            get() {
                return this.$store.getters["cartStore/getServerFieldsFormData"]()
            }
        },
        areConfigOptionsVisible: {
            get() {
                if (this.$store.getters["cartStore/isVisible"]("configurations") && this.configurableOptions !== undefined && this.configurableOptions.fields) {
                    return true
                } else {
                    return false
                }
            }
        },
        lagomTemplateSettings: {
            get() {
                return this.$store.getters["cartStore/getLagomTemplateSettings"]()
            }
        },
        layoutSettings: {
            get() {
                return this.$store.getters["cartStore/getLayoutSettings"]()
            }
        },
        selectedGroupId: {
            get() {
                return this.$store.getters["cartStore/getSelectedGroupId"]()
            }
        }
    },
    methods: {
        updateComponentFormData(formData) {
            this.interactiveMode = false;
            this.formData = formData;
            this.$nextTick(() => {
                this.interactiveMode = true
            })
        },
        updateServerFields(data) {
            this.$store.dispatch("cartStore/updateServerFields", {
                serverFields: data
            })
        },
        filterByLayoutSettings(serverFields) {
            if (!serverFields.fields) {
                return []
            }
            const layoutSettings = this.$store.getters["cartStore/getLayoutSettings"]();
            const gid = parseInt(this.$store.getters["cartStore/getSelectedGroupId"]());
            if (!layoutSettings || !layoutSettings.templates || !layoutSettings.templates.lagom) {
                return serverFields
            }
            const lagomLayoutSettings = layoutSettings.templates.lagom;
            if (typeof lagomLayoutSettings.hide_password_fields == "object" && lagomLayoutSettings.hide_password_fields.indexOf(gid) > -1 || parseInt(lagomLayoutSettings.hide_password_fields) == gid) {
                serverFields.fields = serverFields.fields.filter(el => el.name !== "rootpw");
                serverFields.fields = serverFields.fields.filter(el => el.name !== "hostname")
            }
            if (typeof lagomLayoutSettings.hide_nameserver_fields == "object" && lagomLayoutSettings.hide_nameserver_fields.indexOf(gid) > -1 || parseInt(lagomLayoutSettings.hide_nameserver_fields) == gid) {
                serverFields.fields = serverFields.fields.filter(el => el.name.indexOf("prefix") === -1)
            }
            return serverFields
        },
        makeid(length) {
            var result = "";
            var characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            var charactersLength = characters.length;
            for (var i = 0; i < length; i++) {
                result += characters.charAt(Math.floor(Math.random() * charactersLength))
            }
            return result
        },
        generatePass(pLength) {
            var keyListAlpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",
                keyListInt = "123456789",
                keyListSpec = "@#$%^&*-+=?",
                password = "";
            var len = Math.ceil(pLength / 2);
            len = len - 1;
            var lenSpec = pLength - 2 * len;
            for (i = 0; i < len; i++) {
                password += keyListAlpha.charAt(Math.floor(Math.random() * keyListAlpha.length));
                password += keyListInt.charAt(Math.floor(Math.random() * keyListInt.length))
            }
            for (i = 0; i < lenSpec; i++) password += keyListSpec.charAt(Math.floor(Math.random() * keyListSpec.length));
            password = password.split("").sort(function() {
                return .5 - Math.random()
            }).join("");
            return password
        }
    }
});
const orderModel = {
    request: {},
    addParam(key, value) {
        this.request[key] = encodeURIComponent(value)
    },
    clearParams() {
        this.request = {}
    },
    buildRequest(state) {
        this.clearParams();
        this.addParam("token", csrfToken);
        this.addParam("submit", "true");
        this.addParam("ajax", "true");
        let personalDetails = state.getters["cartStore/getAppBillingDetails"]();
        const postcodeInput = $('input[name="postcode"]:visible');
        this.addParam("firstname", personalDetails.firstname ? personalDetails.firstname : "");
        this.addParam("lastname", personalDetails.lastname ? personalDetails.lastname : "");
        this.addParam("companyname", personalDetails.companyname ? personalDetails.companyname : "");
        this.addParam("email", personalDetails.email ? personalDetails.email : "");
        this.addParam("address1", personalDetails.address1 ? personalDetails.address1 : "");
        this.addParam("address2", personalDetails.address2 ? personalDetails.address2 : "");
        this.addParam("city", personalDetails.city ? personalDetails.city : "");
        this.addParam("state", personalDetails.state ? personalDetails.state : "");
        this.addParam("postcode", postcodeInput.length ? postcodeInput.val() : personalDetails.postcode);
        this.addParam("country", personalDetails.country ? personalDetails.country : "");
        this.addParam("phonenumber", personalDetails.phonenumber ? personalDetails.phonenumber : "");
        this.addParam("tax_id", personalDetails.tax_id ? personalDetails.tax_id : "");
        this.addParam("marketingoptin", personalDetails.marketingoptin ? personalDetails.marketingoptin : "");
        let userDetails = state.getters["cartStore/getClient"]();
        let loginDetails = state.getters["cartStore/getLoginDetails"]();
        let authType = state.getters["cartStore/getAuthOption"]();
        if (!(userDetails.exist === true)) {
            this.addParam("loginemail", loginDetails.email ? loginDetails.email : "");
            this.addParam("loginpassword", loginDetails.password ? loginDetails.password : "");
            this.addParam("country-calling-code-phonenumber", personalDetails.callingCode)
        }
        let accountId = state.getters["cartStore/getAccountId"]();
        if (accountId === "new") {
            this.addParam("custtype", "add")
        } else {
            this.addParam("custtype", userDetails.exist === true || authType == "loginOption" ? "existing" : "new")
        }
        if (accountId && accountId !== "") {
            this.addParam("account_id", accountId)
        } else {
            this.addParam("account_id", "new")
        }
        let applyCredits = state.getters["cartStore/getApplyCreditsStatus"]();
        this.addParam("applycredit", applyCredits ? "1" : "");
        let paymentMethod = state.getters["cartStore/getSelectedPaymentGateway"]();
        this.addParam("paymentmethod", paymentMethod ? paymentMethod : "banktransfer");
        let billingFields = state.getters["cartStore/getLocalBillingDetails"]();
        for (var obj in billingFields) {
            this.addParam(obj, billingFields[obj] ? billingFields[obj] : "")
        }
        this.addParam("ccinfo", state.getters["cartStore/getCcInfo"]());
        this.addParam("ccdescription", state.getters["cartStore/getCcDescription"]());
        let notes = state.getters["cartStore/getNotesValue"]();
        this.addParam("notes", notes ? notes : "");
        let domainContact = state.getters["cartStore/getDomainContactDetails"]();
        if (domainContact.contact !== null && domainContact.contact > 0) {
            this.addParam("contact", domainContact.contact)
        } else if (domainContact.contact === "addingnew") {
            this.addParam("contact", domainContact.contact);
            this.addParam("domaincontactfirstname", domainContact.firstname);
            this.addParam("domaincontactlastname", domainContact.lastname);
            this.addParam("domaincontactemail", domainContact.email);
            this.addParam("country-calling-code-domaincontactphonenumber", domainContact.callingCode);
            this.addParam("domaincontactphonenumber", domainContact.phonenumber);
            this.addParam("domaincontactcompanyname", domainContact.companyname);
            this.addParam("domaincontacttax_id", domainContact.tax_id);
            this.addParam("domaincontactaddress1", domainContact.address1);
            this.addParam("domaincontactaddress2", domainContact.address2);
            this.addParam("domaincontactcity", domainContact.city);
            this.addParam("domaincontactstate", domainContact.state);
            this.addParam("domaincontactpostcode", postcodeInput.length ? postcodeInput.val() : domainContact.postcode);
            this.addParam("domaincontactcountry", domainContact.country)
        }
        if (state.getters["cartStore/getComponentsConfiguration"]()["marketingEmailEnabled"] === true) {
            let marketingopt = state.getters["cartStore/getMarketingEmailsValue"]();
            this.addParam("marketingoptin", marketingopt ? marketingopt : "")
        }
        if (state.getters["cartStore/getTermOfServiceValue"]() === true) {
            this.addParam("accepttos", "true")
        }
    },
    addGatewayParams(gatewayFormData) {
        for (var obj in gatewayFormData) {
            this.addParam(obj, gatewayFormData[obj] ? gatewayFormData[obj] : "")
        }
    },
    getRequestDetails() {
        return Object.keys(this.request).map(key => key + "=" + this.request[key]).join("&")
    },
    getRequest() {
        return this.request
    }
};
const LagomOrderFormApi = {
    namespaced: true,
    state: {
        cancelTokens: {}
    },
    actions: {
        loadPageConfiguration: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, params) {
            return new Promise((resolve, reject) => {
                let url = rootState.cartStore.moduleSettings.apiEndpoint + "/cart/configuration/get";
                axios.get(url, {
                    params: params
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    resolve(response.data)
                }).catch(async function(error) {
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        changeGroup: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, params) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/group/set", Qs.stringify(params)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    resolve(response.data)
                }).catch(async function(error) {
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        addProduct: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, {
            pid: pid,
            data: data
        }) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/product/" + pid + "/add", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: addProduct"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: addProduct - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        changeProduct: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/product/" + data.productId + "/change").then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: changeProduct"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: changeProduct - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        changeBillingCycle: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/billingCycle/change", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: Change Billing Cycle"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: Change Billing Cycle - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        updateConfigurableOptions: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.updateConfigurableOptions) {
                    state.cancelTokens.updateConfigurableOptions.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.updateConfigurableOptions = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/config-options/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: Update Config Options"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: Update Config Options - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        updateServerFields: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.updateServerFields) {
                    state.cancelTokens.updateServerFields.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.updateServerFields = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/server-fields/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: Update Config Options"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: Update Config Options - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        changeDomainRegistrationType: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.changeDomainRegistrationType) {
                    state.cancelTokens.changeDomainRegistrationType.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.changeDomainRegistrationType = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/registration-type/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: changeDomainRegistrationType"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: changeDomainRegistrationType - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        updateCustomFields: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.updateCustomFields) {
                    state.cancelTokens.updateCustomFields.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.updateCustomFields = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/custom-fields/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: Update Custom Fields"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: Update Custom Fields - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        updateBillingDetails: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.updateBillingDetails) {
                    state.cancelTokens.updateBillingDetails.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.updateBillingDetails = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/billing-details/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: updateBillingDetails"
                    }, {
                        root: true
                    });
                    resolve(response.data)
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "updateBillingDetails: complete - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        updateDomainContactDetails: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.updateDomainContactDetails) {
                    state.cancelTokens.updateDomainContactDetails.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.updateDomainContactDetails = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain-contact/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: updateBillingDetails"
                    }, {
                        root: true
                    });
                    resolve(response.data)
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "updateBillingDetails: complete - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        getDefaultCountrySetting: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return
        },
        updateTextNotes: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.updateTextNotes) {
                    state.cancelTokens.updateTextNotes.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.updateTextNotes = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/text-notes/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: updateBillingDetails"
                    }, {
                        root: true
                    });
                    resolve(response.data)
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "updateBillingDetails: complete - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        updateMarketingEmails: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.updateMarketingEmails) {
                    state.cancelTokens.updateMarketingEmails.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.updateMarketingEmails = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/marketing-emails/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: updateBillingDetails"
                    }, {
                        root: true
                    });
                    resolve(response.data)
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "updateBillingDetails: complete - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        updateApplyCredits: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.updateApplyCredits) {
                    state.cancelTokens.updateApplyCredits.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.updateApplyCredits = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/apply-credits/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: updateBillingDetails"
                    }, {
                        root: true
                    });
                    resolve(response.data)
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "updateBillingDetails: complete - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        addDomain: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain/add", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: addDomain"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: addDomain - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        changePeriod: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain/period/change", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: addDomain"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: addDomain - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        updateDomain: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.updateDomain) {
                    state.cancelTokens.updateDomain.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.updateDomain = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: updateDomain"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: updateDomain - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        updateDomainAddons: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.updateDomainAddons) {
                    state.cancelTokens.updateDomainAddons.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.updateDomainAddons = cancelTokenSource;
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain-addons/update", Qs.stringify(data), {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: updateDomain"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: updateDomain - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        renewDomain: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain/renew", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: addDomain"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: addDomain - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        deleteRenewDomain: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain/renew/delete", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: deleteRenewDomain"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: deleteRenewDomain - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        addPromoCode: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/promo/add", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: addPromoCode"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    commit("cartStore/setPromoCodeErrorMessage", error.response.data.message, {
                        root: true
                    });
                    dispatch("cartStore/errorLog", {
                        message: "api: addPromoCode - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        removePromoCode: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/promo/delete", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: removePromoCode"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: removePromoCode - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        changeCurrency: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/currency/change", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: changeCurrency"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: changeCurrency - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        domainUpdate: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain/update", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: domainUpdate"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: domainUpdate - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        removeDomains: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain/delete").then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: removeDomains"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: removeDomains - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        loginUser: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/user/login", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: loginUser"
                    }, {
                        root: true
                    });
                    resolve(response.data)
                }).catch(async function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: loginUser - " + error
                    }, {
                        root: true
                    });
                    await dispatch("cartStore/displayError", error.response ? error.response.data : [], {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        changeUserAccount: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            const queryString = data ? "?" + new URLSearchParams(data).toString() : null;
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.changeUserAccount) {
                    state.cancelTokens.changeUserAccount.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.changeUserAccount = cancelTokenSource;
                axios.get(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/account/change" + queryString, {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: getUser"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: getUser - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        getUserAccount: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            return new Promise((resolve, reject) => {
                if (state.cancelTokens.getUserAccount) {
                    state.cancelTokens.getUserAccount.cancel()
                }
                const cancelTokenSource = axios.CancelToken.source();
                state.cancelTokens.getUserAccount = cancelTokenSource;
                axios.get(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/account", {
                    cancelToken: cancelTokenSource.token
                }).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: getUser"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: getUser - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        addAddon: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/addon/add", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: addProduct"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: addProduct - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        addProductAddon: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/product-addon/add", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: addProduct"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: addProduct - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        changeProductAddon: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/product-addon/change", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: addProduct"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: addProduct - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        deleteProductAddon: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/product-addon/delete", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: delete product addon"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: delete product addon - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        deleteAddon: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/addon/delete", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: delete product addon"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: delete product addon - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        checkDomain: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                dispatch("checkDomainWhmcs", data).then(whmcsResponse => {
                    let result = whmcsResponse.data;
                    let config = whmcsResponse.config;
                    axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain/check", Qs.stringify({
                        requestData: data,
                        responseData: {
                            result: result
                        }
                    })).then(async function(response) {
                        await dispatch("setResponseDetails", response.data);
                        dispatch("cartStore/infoLog", {
                            message: "domainModule: checkDomain"
                        }, {
                            root: true
                        });
                        resolve()
                    }).catch(function(error) {
                        dispatch("cartStore/errorLog", {
                            message: "domainModule: checkDomain - " + error
                        }, {
                            root: true
                        });
                        reject(error.response ? error.response.data : "response not found")
                    })
                })
            })
        },
        checkDomainWhmcs: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                setTimeout(() => {
                    axios.post(rootState.cartStore.moduleSettings.mainEndpoint + "index.php?rp=/domain/check", Qs.stringify(data)).then(async function(response) {
                        resolve(response)
                    }).catch(function(error) {
                        dispatch("cartStore/errorLog", {
                            message: "domainModule: read - " + error
                        }, {
                            root: true
                        });
                        reject(error.response ? error.response.data : "response not found")
                    })
                }, 300)
            })
        },
        removeDomain: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/domain/delete", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: remove Domain"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: remove Domain - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        removeItems: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/remove/items", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: addProduct"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: addProduct - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        confirmCaptcha: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/captcha/confirm", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: confirmCaptcha"
                    }, {
                        root: true
                    });
                    resolve(response.data)
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "checkoutWhmcs: complete - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        twoFactorForm: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.get(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/twoFactor/form").then(async function(response) {
                    dispatch("cartStore/infoLog", {
                        message: "api: twoFactor"
                    }, {
                        root: true
                    });
                    resolve(response.data)
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "twoFactor: complete - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        complete: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                dispatch("checkoutWhmcs", data).then(whmcsResponse => {
                    let result = whmcsResponse.data;
                    let query = whmcsResponse.config.data;
                    axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/complete", Qs.stringify({
                        requestData: data,
                        responseData: {
                            query: query,
                            result: result
                        }
                    })).then(async response => {
                        dispatch("cartStore/infoLog", {
                            message: "api: completeOrder"
                        }, {
                            root: true
                        });
                        await dispatch("setResponseDetails", response.data);
                        if (response.data.settings && response.data.settings.completeOrder && response.data.settings.completeOrder.status !== "error") {
                            if (response.data.settings.activeFraudModule) {
                                await dispatch("fraudcheckWhmcs", {})
                            } else {
                                await dispatch("completeWhmcs", {})
                            }
                        }
                        resolve()
                    }).catch(function(error) {
                        dispatch("cartStore/errorLog", {
                            message: "api: completeOrder - " + error
                        }, {
                            root: true
                        });
                        reject(error.response ? error.response.data : "response not found")
                    })
                })
            })
        },
        checkoutWhmcs: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                var url = rootState.cartStore.moduleSettings.mainEndpoint + "cart.php?a=checkout";
                var params = data;
                axios.post(url, params).then(async function(response) {
                    dispatch("cartStore/infoLog", {
                        message: "api: checkoutWhmcs"
                    }, {
                        root: true
                    });
                    resolve(response)
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: checkoutWhmcs - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        fraudcheckWhmcs: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                var url = rootState.cartStore.moduleSettings.mainEndpoint + "cart.php?a=fraudcheck";
                var form = document.createElement("form");
                form.setAttribute("id", "myForm");
                form.setAttribute("name", "myForm");
                form.setAttribute("method", "post");
                form.setAttribute("action", url);
                form.enctype = "multipart/form-data";
                document.body.appendChild(form);
                form.submit()
            })
        },
        updateOrderFields: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, fields) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.mainEndpoint + "modules/addons/LagomOrderForm/api/index.php/cart/order-fields/update", Qs.stringify(fields)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: Update Order Fields"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: Update Order Fields - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        validateStripe: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, fields) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.mainEndpoint + "modules/addons/LagomOrderForm/api/index.php/cart/validate-stripe", Qs.stringify(fields)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    dispatch("cartStore/infoLog", {
                        message: "api: Validate Stripe"
                    }, {
                        root: true
                    });
                    resolve()
                }).catch(function(error) {
                    dispatch("cartStore/errorLog", {
                        message: "api: Validate Stripe - " + error
                    }, {
                        root: true
                    });
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        completeWhmcs: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                var url = rootState.cartStore.moduleSettings.mainEndpoint + "cart.php?a=complete";
                var params = data;
                rootState.cartStore.settings.gateways.forEach(item => {
                    if (item.gatewayKey === rootState.cartStore.app.paymentMethod) {
                        let selectedGateway = false;
                        const paymentGateways = rootState.cartStore.settings.gateways;
                        const selected = rootState.cartStore.app.paymentMethod;
                        if (paymentGateways) {
                            for (var index in paymentGateways) {
                                if (paymentGateways[index].gatewayKey == selected) {
                                    selectedGateway = paymentGateways[index]
                                }
                            }
                        }
                        if (selectedGateway.charge && selectedGateway.charge.isChargeable && selectedGateway.type === "CC") {
                            axios.post(url, params).then(async function(response) {
                                dispatch("cartStore/infoLog", {
                                    message: "api: completeWhmcs"
                                }, {
                                    root: true
                                });
                                resolve(response)
                            }).catch(function(error) {
                                dispatch("cartStore/errorLog", {
                                    message: "api: completeWhmcs - " + error
                                }, {
                                    root: true
                                });
                                reject(error.response ? error.response.data : "response not found")
                            })
                        } else {
                            var form = document.createElement("form");
                            form.setAttribute("id", "myForm");
                            form.setAttribute("name", "myForm");
                            form.setAttribute("method", "post");
                            form.setAttribute("action", url);
                            form.enctype = "multipart/form-data";
                            document.body.appendChild(form);
                            form.submit()
                        }
                    }
                })
            })
        },
        updateBillingAccount: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.mainEndpoint + "index.php?rp=/cart/account/select", Qs.stringify(data)).then(async function(response) {
                    resolve(response.data);
                    setTimeout(function() {
                        $.get(rootState.cartStore.moduleSettings.mainEndpoint + "index.php").done(function(data) {
                            $("body").addClass("page-user-logged");
                            data = data.replace(/<img[^>]((?!gravatar).)*>/g, "");
                            data = $.parseHTML(data);
                            let elements = $(data).find(".dropdown[menuitemname=Account]");
                            elements.each((elementIndex, element) => {
                                if ($(".dropdown[menuitemname=Account]").length) {
                                    $(".dropdown[menuitemname=Account]").replaceWith(element)
                                } else {
                                    $("#header .top-nav").append(element)
                                }
                            });
                            let avatar = $("#header .top-nav .client-avatar img");
                            let avatarURL = avatar.attr("src");
                            avatar.attr("src", "");
                            setTimeout(function() {
                                avatar.attr("src", avatarURL)
                            }, 1)
                        })
                    }, 20)
                }).catch(function(error) {
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        changeGateway: function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            return new Promise((resolve, reject) => {
                axios.post(rootState.cartStore.moduleSettings.apiEndpoint + "/cart/gateway/change", Qs.stringify(data)).then(async function(response) {
                    await dispatch("setResponseDetails", response.data);
                    resolve()
                }).catch(function(error) {
                    reject(error.response ? error.response.data : "response not found")
                })
            })
        },
        setResponseDetails: async function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            if (data.settings) {
                await dispatch("setAppSettings", data.settings)
            }
            if (data.appState) {
                await dispatch("setAppState", data.appState)
            }
        },
        setAppState: async function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            await commit("cartStore/setAppState", data, {
                root: true
            })
        },
        setAppSettings: async function({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }, data) {
            if (data.groups) {
                await commit("cartStore/setGroups", data.groups, {
                    root: true
                })
            }
            if (data.captcha) {
                await commit("cartStore/setCaptcha", data.captcha, {
                    root: true
                })
            }
            if (data.countryDetails) {
                await commit("cartStore/setCountryDetails", data.countryDetails, {
                    root: true
                })
            }
            if (data.billingDetailFields) {
                await commit("cartStore/setBillingDetailsFields", data.billingDetailFields, {
                    root: true
                })
            }
            if (data.currencies) {
                await commit("cartStore/setCurrencies", data.currencies, {
                    root: true
                })
            }
            if (data.lang) {
                await commit("cartStore/setLang", data.lang, {
                    root: true
                })
            }
            if (data.gateways) {
                await commit("cartStore/setGateways", data.gateways, {
                    root: true
                })
            }
            if (data.tldCategories) {
                await commit("cartStore/setTldCategories", data.tldCategories, {
                    root: true
                })
            }
            if (data.tldExtensions) {
                await commit("cartStore/setTldExtensions", data.tldExtensions, {
                    root: true
                })
            }
            if (data.summary) {
                await commit("cartStore/setCartSummary", data.summary, {
                    root: true
                })
            }
            if (data.notifications) {
                await commit("cartStore/updateNotifications", data.notifications, {
                    root: true
                })
            }
            if (data.completeOrder) {
                await commit("cartStore/setCompleteOrderDetails", data.completeOrder, {
                    root: true
                })
            }
            if (data.token) {
                let tokens = data.token;
                if (tokens.csrf) {
                    csrfToken = tokens.csrf
                }
            }
            if (data.template) {
                await commit("cartStore/setTemplate", data.template, {
                    root: true
                })
            }
            if (data.layoutSettings) {
                await commit("cartStore/setLayoutSettings", data.layoutSettings, {
                    root: true
                })
            }
            if (data.rsthemes) {
                await commit("cartStore/setRsThemes", data.rsthemes, {
                    root: true
                })
            }
            if (data.schema) {
                let schema = data.schema;
                if (schema.addons) {
                    await commit("cartStore/setSchemaAddons", schema.addons, {
                        root: true
                    })
                }
                if (schema.billingCycles) {
                    await commit("cartStore/setSchemaBillingCycles", schema.billingCycles, {
                        root: true
                    })
                }
                if (schema.configurableOptions) {
                    await commit("cartStore/setSchemaConfigOptions", schema.configurableOptions, {
                        root: true
                    })
                }
                if (schema.productsConfigurableOptions) {
                    await commit("cartStore/setSchemaProductsConfigOptions", schema.productsConfigurableOptions, {
                        root: true
                    })
                }
                if (schema.customFields) {
                    await commit("cartStore/setSchemaCustomFields", schema.customFields, {
                        root: true
                    })
                }
                schema.server = schema.server ? schema.server : {};
                await commit("cartStore/setSchemaServers", schema.server, {
                    root: true
                })
            }
            if (data.domain) {
                let domain = data.domain;
                if (domain.schema) {
                    if (domain.schema.registrationTypes) {
                        await commit("cartStore/setDomainSchemaRegistrationTypes", domain.schema.registrationTypes, {
                            root: true
                        })
                    }
                    if (domain.schema.addons) {
                        await commit("cartStore/setDomainSchemaAddons", domain.schema.addons, {
                            root: true
                        })
                    }
                    if (domain.schema.customFields) {
                        await commit("cartStore/setDomainSchemaCustomFields", domain.schema.customFields, {
                            root: true
                        })
                    }
                    if (domain.schema.registerFields) {
                        await commit("cartStore/setDomainSchemaRegisterFields", domain.schema.registerFields, {
                            root: true
                        })
                    }
                    if (domain.schema.spotlights) {
                        await commit("cartStore/setDomainSchemaSpotlights", domain.schema.spotlights, {
                            root: true
                        })
                    }
                    if (domain.schema.serverNamespaces) {
                        await commit("cartStore/setDomainSchemaServerNamespaces", domain.schema.serverNamespaces, {
                            root: true
                        })
                    }
                    if (domain.schema.renewable) {
                        await commit("cartStore/setDomainSchemaRenewableDomains", domain.schema.renewable, {
                            root: true
                        })
                    }
                }
            }
            if (data.domainInfo) {
                let info = data.domainInfo;
                if (info.domain) {
                    await commit("cartStore/setInfoDomain", info.domain, {
                        root: true
                    })
                }
                if (info.spotlight) {
                    await commit("cartStore/setInfoSpotlight", info.spotlight, {
                        root: true
                    })
                }
                if (info.transfer) {
                    await commit("cartStore/setInfoDomain", info.transfer, {
                        root: true
                    });
                    await commit("cartStore/setInfoTransfer", info.transfer, {
                        root: true
                    })
                }
                if (info.subdomain) {
                    await commit("cartStore/setInfoSubDomain", info.subdomain, {
                        root: true
                    })
                }
                if (info.owndomain) {
                    await commit("cartStore/setInfoOwn", info.owndomain, {
                        root: true
                    })
                }
                if (info.suggestions) {
                    await commit("cartStore/setInfoSuggestions", info.suggestions, {
                        root: true
                    })
                }
            }
        }
    }
};
const infoModule = {
    namespaced: true,
    actions: {
        infoLog: function({
            state: state,
            commit: commit,
            dispatch: dispatch
        }, {
            message: message
        }) {
            if (Vue.config.productionTip !== false && typeof console !== "undefined") {
                console.log("%c" + (new Date).toLocaleString() + " INFO: " + message, "color: green;")
            }
        },
        errorLog: function({
            state: state,
            commit: commit,
            dispatch: dispatch
        }, {
            message: message,
            response: response
        }) {
            if (Vue.config.productionTip !== false && typeof console !== "undefined") {
                console.log("%c" + (new Date).toLocaleString() + " ERROR: " + message, "color: red;");
                if (response !== undefined) {
                    console.log(response)
                }
            }
        }
    }
};

function pageOrderRequiredValidator(name, value) {
    if (typeof value === "boolean" && value === true) {
        return true
    }
    if (typeof value === "string" && value && value.replace(/\s/g, "") !== "") {
        return true
    }
    if (typeof value === "number") {
        return true
    }
    return mgTr(["fieldIsRequired"])
}

function pageOrderIsObjectEmpty(object) {
    if (typeof object === "null" || typeof object === "undefined") {
        return true
    }
    if (typeof object === "string" && object.length === 0) {
        return true
    }
    if (Array.isArray(object) && object.length === 0) {
        return true
    }
    return Object.keys(object).length === 0
}

function pageOrderEmailValidator(name, email) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if (re.test(String(email).toLowerCase())) {
        return true
    }
    return mgTr(["invalidEmailAddress"])
}

function pageOrderUrlLinkValidator(name, url) {
    const pattern = new RegExp("^(https?:\\/\\/)?" + "((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|" + "((\\d{1,3}\\.){3}\\d{1,3}))" + "(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*" + "(\\?[;&a-z\\d%_.~+=-]*)?" + "(\\#[-a-z\\d_]*)?$", "i");
    if (!!pattern.test(url)) {
        return true
    }
    return mgTr(["invalidUrlAddress"])
}

function mgPageOrderCustomFieldValidatorCallback(self, result) {
    if (result === true) {
        if (self.field) {
            pageOrderStore.commit("cartStore/popValidateError", self.field.id)
        } else {
            pageOrderStore.commit("cartStore/popValidateError", self.id)
        }
        self.isValidField = true;
        self.fieldValidationMessages = null
    } else {
        self.isValidField = false;
        self.fieldValidationMessages = result;
        if (self.field) {
            pageOrderStore.commit("cartStore/pushValidateError", {
                id: self.field.id,
                error: result
            })
        } else {
            pageOrderStore.commit("cartStore/pushValidateError", {
                id: self.id,
                error: result
            })
        }
    }
}

function productRequiresDomain(name, value) {
    if (typeof value === "boolean" && value === true) {
        return true
    }
    if (typeof value === "string" && value && value.replace(/\s/g, "") !== "") {
        return true
    }
    if (typeof value === "number") {
        return true
    }
    return mgTr(["productRequiresDomainAddDomainTOCart"])
}
const gatewayHooks = {
    namespaced: true,
    gatewayResolver: {},
    actions: {
        async runHookOnGatewaySelect({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters,
            rootState: rootState
        }, data) {
            var gateway = getters.getSelectedPaymentGatewayDetails();
            var hooks = gateway.hooks;
            if (hooks && typeof window[hooks.onMount] === "function") {
                await window[hooks.onMount](data, gateway)
            }
        },
        async runHookGatewayPreOrderFunction({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters,
            rootState: rootState
        }, data) {
            var gateway = getters.getSelectedPaymentGatewayDetails();
            if (gateway.charge && gateway.charge.isChargeable && gateway.type === "CC") {
                return
            }
            var hooks = gateway.hooks;
            if (hooks && typeof window[hooks.preOrder] === "function") {
                return await window[hooks.preOrder](data, gateway)
            }
            return Promise.resolve(1)
        },
        async runHookOnChangeCreditCard({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters,
            rootState: rootState
        }, data) {
            var gateway = getters.getSelectedPaymentGatewayDetails();
            var hooks = gateway.hooks;
            if (hooks && typeof window[hooks.onChangeCard] === "function") {
                await window[hooks.onChangeCard](data, gateway)
            }
        },
        runHookGatewayFormData({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters,
            rootState: rootState
        }, data) {
            var gateway = getters.getSelectedPaymentGatewayDetails();
            var hooks = gateway.hooks;
            if (hooks && typeof window[hooks.formData] === "function") {
                return Promise.resolve(window[hooks.formData](data, gateway))
            }
            return Promise.resolve({})
        }
    },
    getters: {
        getSelectedPaymentGatewayDetails: (state, getters, rootState) => (function() {
            const paymentGateways = rootState.cartStore.settings.gateways;
            const selected = rootState.cartStore.app.paymentMethod;
            if (paymentGateways) {
                for (var index in paymentGateways) {
                    if (paymentGateways[index].gatewayKey == selected) {
                        return paymentGateways[index]
                    }
                }
            }
            return []
        })
    }
};
mgPreventEventHelper = function(e) {
    e.preventDefault()
};

function LagomOrderFormTelInput(onChangeCountryCode) {
    if (jQuery("body").data("phone-cc-input")) {
        var phoneInput = jQuery('input[name^="phone"], input[name$="phone"], input[name="domaincontactphonenumber"]').not('input[type="hidden"]');
        if (phoneInput.length) {
            var countryInput = jQuery('[name^="country"], [name$="country"]'),
                initialCountry = "us";
            if (countryInput.length) {
                if (!!countryInput.val()) {
                    initialCountry = countryInput.val().toLowerCase()
                }
                if (initialCountry === "um") {
                    initialCountry = "us"
                }
            }
            phoneInput.each(function() {
                var thisInput = jQuery(this),
                    inputName = thisInput.attr("name");
                let countryCodeId = "populatedCountryCode" + inputName;
                if (inputName === "domaincontactphonenumber") {
                    initialCountry = jQuery('[name="domaincontactcountry"]').val() ? jQuery('[name="domaincontactcountry"]').val().toLowerCase() : null
                }
                jQuery(this).before('<input id="' + countryCodeId + '" type="hidden" name="country-calling-code-' + inputName + '" value="" />');
                if (!initialCountry) {
                    console.log("Initial Country Code is Empty!");
                    return
                }
                thisInput.intlTelInput({
                    preferredCountries: [initialCountry, "us", "gb"].filter(function(value, index, self) {
                        return self.indexOf(value) === index
                    }),
                    initialCountry: initialCountry,
                    autoPlaceholder: "polite",
                    separateDialCode: true
                });
                thisInput.on("countrychange", function(e, countryData) {
                    onChangeCountryCode(countryData);
                    jQuery("#" + countryCodeId).val(countryData.dialCode);
                    if (jQuery(this).val() === "+" + countryData.dialCode) {
                        jQuery(this).val("")
                    }
                });
                thisInput.on("blur keydown", function(e) {
                    if (e.type === "blur" || e.type === "keydown" && e.keyCode === 13) {
                        var number = jQuery(this).intlTelInput("getNumber"),
                            countryData = jQuery(this).intlTelInput("getSelectedCountryData"),
                            countryPrefix = "+" + countryData.dialCode;
                        if (number.indexOf(countryPrefix) === 0 && (number.match(/\+/g) || []).length > 1) {
                            number = number.substr(countryPrefix.length)
                        }
                        jQuery(this).intlTelInput("setNumber", number)
                    }
                });
                jQuery("#" + countryCodeId).val(thisInput.intlTelInput("getSelectedCountryData").dialCode);
                countryInput.on("change", function() {
                    if (thisInput.val() === "") {
                        var country = jQuery(this).val() ? jQuery(this).val().toLowerCase() : null;
                        if (country === "um") {
                            country = "us"
                        }
                        phoneInput.intlTelInput("setCountry", country)
                    }
                })
            })
        }
    }
}

function mgTr(lang, replace) {
    return mgPageLang.translate(lang, replace)
}

function mgTranslate() {
    return mgPageLang.translate(arguments)
}
const mgPageLang = {
    translate(lang, replace) {
        if (typeof lang == "string") {
            lang = [lang]
        }
        let langs = pageOrderStore.getters["cartStore/getLang"]();
        let translated = this.getTranslation(lang, langs);
        let result = this.getResult(lang, translated);
        result = this.setReplacements(result, replace);
        return result
    },
    getTranslation(lang, langs) {
        for (const [key, value] of Object.entries(lang)) {
            if (langs && langs[value] !== undefined) {
                var langs = langs[value]
            } else {
                return false
            }
        }
        return langs
    },
    getResult(lang, translated) {
        let result = null;
        if (translated === false) {
            result = "$_LANG['addonCA']['order']['mainContainer']['LagomOrderForm']['clientArea']['scripts']['" + lang.join("']['") + "']"
        } else if (typeof translated == "object") {
            console.log("lang object:" + translated);
            result = "Lang string is an object: " + "$_LANG['addonCA']['order']['mainContainer']['LagomOrderForm']['clientArea']['scripts']['" + lang.join("']['") + "']"
        } else if (typeof translated == "string") {
            result = translated
        }
        return result
    },
    setReplacements(translated, replacements) {
        if (replacements === undefined) {
            return translated
        }
        for (const [key, value] of Object.entries(replacements)) {
            let name = translated.indexOf(":" + key + ":") !== -1 ? ":" + key + ":" : ":" + key;
            translated = translated.replace(name, value)
        }
        return translated
    },
    sprintf() {
        if (typeof arguments[0] === "undefined") {
            return null
        }
        let messageParts = arguments[0].split(" ");
        let replaceIndex = 1;
        for (let i = 0; i <= messageParts.length; i++) {
            if (messageParts[i] === "%s" && arguments[replaceIndex] !== undefined) {
                messageParts[i] = arguments[replaceIndex];
                replaceIndex++
            }
        }
        return messageParts.join(" ")
    }
};
const mgOAuthService = {
    namespaced: true,
    callbackAjaxComplete: function() {},
    initOAuthHandler: function(callbackAjaxComplete) {
        this.callbackAjaxComplete = callbackAjaxComplete;
        this.setOnReloadPage();
        this.initButtonsEvent()
    },
    setOnReloadPage() {},
    initButtonsEvent: function() {
        var self = this;
        $(document).ajaxComplete(function(event, xhr, settings) {
            window.stop();
            event.preventDefault();
            var requestPattern = settings.url.split("/").reverse().slice(0, 4).join("_");
            switch (requestPattern) {
                case "finalize_google_signin_provider_auth":
                case "finalize_facebook_signin_provider_auth":
                case "finalize_facebook_signin_provider_auth":
                    self.callbackAjaxComplete(JSON.parse(xhr.responseText));
                    break
            }
        })
    }
};
const LagomOrderFormContainer = {
    integrationTarget: null,
    containerId: null
};
let mainGroupsPosition = 0;
let slidersArr = [];
let isPageRTL = $("html").attr("dir") == "rtl" ? true : false;

function renderCheckBox(component, onCheck = (() => {}), unCheck = (() => {})) {
    var checkboxes = $("#" + component).find("input.icheck-control:not(.icheck-input):not(.switch__checkbox), .addon-selector");
    checkboxes.iCheck({
        checkboxClass: "checkbox-styled",
        radioClass: "radio-styled",
        increaseArea: "40%"
    });
    checkboxes.on("ifChecked", function(e) {
        onCheck($(this).val())
    });
    checkboxes.on("ifUnchecked", function(e) {
        unCheck($(this).val())
    })
}

function renderFixedElements() {
    $("[data-fixed-actions]").luScrollTo({
        onScreen: function onScreen(element, target) {
            $(element).stop().removeClass("is-fixed")
        },
        outScreen: function outScreen(element, target) {
            $(element).stop().addClass("is-fixed")
        }
    })
}

function renderSectionIndex() {
    var a = 1;
    $(".section-number").each(function() {
        $(this).text(a);
        a = a + 1
    })
}

function addOrderIntegration(integrationTarget, contId, appContainer) {
    LagomOrderFormContainer.containerId = contId;
    LagomOrderFormContainer.integrationTarget = integrationTarget;
    const mgIntegration = jQuery("#" + contId);
    const container = $(integrationTarget);
    container.append('<div class="vue-app-main-container" id=' + contId + " hidden>" + mgIntegration[0].innerHTML + "</div>");
    appContainer.remove()
}

function renderNavScroll() {
    $("[data-nav-tabs-container]").each((singleNavContainerIndex, singleNavContainer) => {
        setTimeout(function() {
            navScroll($(singleNavContainer), singleNavContainerIndex);
            navScrollControl($(singleNavContainer), singleNavContainerIndex)
        }, 1);
        $(window).on("resize", function() {
            navScroll($(singleNavContainer), singleNavContainerIndex)
        })
    })
}

function navScroll(container, index) {
    let header = container;
    let nav = $(container).find("[data-nav]");
    let navWidth = nav.width();
    let navChildren = $(container).find(".nav-tabs li:not(.nav-arrow)");
    let navChildrenWidth = 0;
    navChildren.each(function() {
        navChildrenWidth += $(this).outerWidth(true)
    });
    setTimeout(function() {
        $('[data-toggle="tooltip"]').tooltip({
            boundary: "window"
        });
        if (isPageRTL) {
            if (navWidth + nav.scrollLeft() + 5 <= navChildrenWidth) {
                $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden");
                if (nav.scrollLeft() < 5) {
                    $(container).find(".nav-arrow--right").addClass("nav-arrow--hidden")
                } else {
                    $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden")
                }
                header.addClass("has-scroll")
            } else {
                header.removeClass("has-scroll");
                $(container).find(".nav-arrow--right").addClass("nav-arrow--hidden");
                $(container).find(".nav-arrow--left").addClass("nav-arrow--hidden")
            }
            if (nav.scrollLeft() > 5) {
                $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden")
            }
        } else {
            if (navWidth + nav.scrollLeft() + 5 <= navChildrenWidth) {
                $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden");
                if (nav.scrollLeft() < 5) {
                    $(container).find(".nav-arrow--left").addClass("nav-arrow--hidden")
                } else {
                    $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden")
                }
                header.addClass("has-scroll")
            } else {
                header.removeClass("has-scroll");
                $(container).find(".nav-arrow--left").addClass("nav-arrow--hidden");
                $(container).find(".nav-arrow--right").addClass("nav-arrow--hidden")
            }
            if (nav.scrollLeft() > 5) {
                $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden")
            }
        }
    }, 10)
}

function navScrollControl(container, index) {
    let nav = $(container).find("[data-nav]");
    let position = null;
    if (index == 0 && $(container).find(".nav-item.active").length) {
        positionLeft = $(container).find(".nav-item.active").position().left;
        if (positionLeft < 5) {
            position = 0
        } else {
            position = $(container).find(".nav-item.active").position().left - 32
        }
        nav.scrollLeft(position)
    } else {
        position = nav.scrollLeft()
    }
    let navTabsOuterWidth = $(container).find(".nav-tabs").outerWidth(true);
    let navChildren = $(container).find(".nav-tabs li:not(.nav-arrow)");
    let navChildrenWidth = 0;
    navChildren.each(function() {
        navChildrenWidth += $(this).outerWidth(true)
    });
    $(container).find("[data-scrollnav]").on("click", function(e) {
        e.preventDefault();
        navChildrenWidth = 0;
        navChildren.each(function() {
            navChildrenWidth += $(this).outerWidth(true)
        });
        let direction = $(this).data("scrollnav");
        position += direction;
        if (isPageRTL) {
            if (position > 0) {
                position = 0
            }
        } else {
            if (position > navChildrenWidth) {
                position = navChildrenWidth
            } else if (position < 0) {
                position = 0
            }
        }
        if (isPageRTL) {
            position += direction
        }
        let button = $(this);
        mainGroupsPosition = position;
        button.addClass("disabled");
        nav.animate({
            scrollLeft: position
        }, 200).promise().done(function() {
            mainGroupsPosition = position;
            button.removeClass("disabled")
        })
    });
    let navItemsWidth = 0;
    $(container).find(".nav-tabs .nav-item").each((index, item) => {
        navItemsWidth += $(item).outerWidth(true)
    });
    $(container).find(".nav-tabs").scroll(function() {
        if ($(container).find(".nav-tabs").scrollLeft()) {
            position = $(container).find(".nav-tabs").scrollLeft()
        }
        mainGroupsPosition = position;
        setTimeout(function() {
            if (isPageRTL) {
                if (position > -15 || $(container).find(".nav-tabs").scrollLeft() > -7) {
                    $(container).find(".nav-arrow--right").addClass("nav-arrow--hidden");
                    $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden")
                } else if (position - navTabsOuterWidth - 15 <= -navItemsWidth) {
                    $(container).find(".nav-arrow--left").addClass("nav-arrow--hidden");
                    $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden")
                } else {
                    $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden");
                    $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden")
                }
                slidersArr[index] = {
                    position: position,
                    navItemsWidth: navItemsWidth,
                    mainGroupsPosition: mainGroupsPosition,
                    scrollLeft: position - navTabsOuterWidth
                }
            } else {
                if (position < 5 || $(container).find(".nav-tabs").scrollLeft() < 7) {
                    $(container).find(".nav-arrow--left").addClass("nav-arrow--hidden");
                    $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden")
                } else if (position + navTabsOuterWidth + 15 >= navItemsWidth) {
                    $(container).find(".nav-arrow--right").addClass("nav-arrow--hidden");
                    $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden")
                } else {
                    $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden");
                    $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden")
                }
                slidersArr[index] = {
                    position: position,
                    navItemsWidth: navItemsWidth,
                    mainGroupsPosition: mainGroupsPosition,
                    scrollLeft: position + navTabsOuterWidth
                }
            }
        }, 10)
    });
    $(window).on("resize", function() {
        if ($(container).find(".nav-tabs").scrollLeft()) {
            position = $(container).find(".nav-tabs").scrollLeft()
        }
        navChildren = $(container).find(".nav-tabs li:not(.nav-arrow)");
        navChildrenWidth = 0;
        navChildren.each(function() {
            navChildrenWidth += $(this).outerWidth(true)
        });
        navTabsOuterWidth = $(container).find(".nav-tabs").outerWidth(true);
        navItemsWidth = 0;
        $(container).find(".nav-tabs .nav-item").each((index, item) => {
            navItemsWidth += $(item).outerWidth(true)
        });
        if (isPageRTL) {
            if (position == 0) {
                $(container).find(".nav-arrow--right").addClass("nav-arrow--hidden")
            } else if (position - navTabsOuterWidth - 5 <= navItemsWidth) {
                $(container).find(".nav-arrow--left").addClass("nav-arrow--hidden")
            } else {
                $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden");
                $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden")
            }
        } else {
            if (position == 0) {
                $(container).find(".nav-arrow--left").addClass("nav-arrow--hidden")
            } else if (position + navTabsOuterWidth + 5 >= navItemsWidth) {
                $(container).find(".nav-arrow--right").addClass("nav-arrow--hidden")
            } else {
                $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden");
                $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden")
            }
        }
    });
    $(container).find(".nav-tabs .nav-item").on("click", function(e) {
        let clickedElement = null;
        if (e.target.getAttribute("href")) {
            clickedElement = e.target
        } else {
            clickedElement = $(e.target).closest("a")
        }
        let rightPosition = isPageRTL ? $(container).width() - ($(clickedElement).position().left + $(clickedElement).width()) - $(container).find(".nav-tabs").width() + 1 : $(clickedElement).position().left - $(container).find(".nav-tabs").width() + 1;
        let leftPosition = $(clickedElement).position().left;
        let rightScroll = ($(clickedElement).outerWidth(true) + rightPosition) * -1;
        if (isPageRTL) {
            if (leftPosition < 16) {
                position -= leftPosition + 32;
                if (position >= -40) {
                    position = 0
                }
                if (position < -40) {
                    $(container).find(".nav-arrow--right").addClass("nav-arrow--hidden")
                } else {
                    $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden")
                }
                nav.animate({
                    scrollLeft: position
                }, 100).promise().done(function() {
                    mainGroupsPosition = position
                })
            } else if (rightScroll < -5) {
                position -= rightScroll * -1 - 32;
                if (position < -40) {
                    $(container).find(".nav-arrow--right").removeClass("nav-arrow--hidden")
                }
                nav.animate({
                    scrollLeft: position
                }, 200).promise().done(function() {
                    mainGroupsPosition = position
                })
            }
        } else {
            if (leftPosition < 16) {
                position += leftPosition - 32;
                if (position <= 40) {
                    position = 0
                }
                if (position < 40) {
                    $(container).find(".nav-arrow--left").addClass("nav-arrow--hidden")
                } else {
                    $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden")
                }
                nav.animate({
                    scrollLeft: position
                }, 100).promise().done(function() {
                    mainGroupsPosition = position
                })
            } else if (rightScroll < -5) {
                position += rightScroll * -1 + 32;
                if (position > 40) {
                    $(container).find(".nav-arrow--left").removeClass("nav-arrow--hidden")
                }
                nav.animate({
                    scrollLeft: position
                }, 200).promise().done(function() {
                    mainGroupsPosition = position
                })
            }
        }
    })
}
const routeOneStep = {
    namespaced: true,
    actions: {
        async goTo({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            let page = await (data !== null && typeof data === "object" ? data.next : data);
            switch (page) {
                case "domain-renew":
                    await dispatch("domainRenew");
                    break;
                case "domain":
                case "domains":
                    await dispatch("domain");
                    break;
                case "addon":
                case "addons":
                    await dispatch("addons");
                    break;
                case "product":
                case "products":
                case "oneStep":
                    await dispatch("oneStep");
                    break;
                case "nextStep":
                    await dispatch("nextStep");
                    break;
                case "previousStep":
                    await dispatch("previousStep");
                    break;
                case "complete":
                    await dispatch("complete");
                    break;
                case "checkout":
                    await dispatch("checkout");
                    break;
                default:
                    await dispatch("oneStep");
                    break
            }
            await commit("cartStore/setLastSPage", page, {
                root: true
            });
            await commit("cartStore/showComponent", "sectionNumber", {
                root: true
            })
        },
        async domain({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/pushSpinner", {
                spinner: "page"
            }, {
                root: true
            });
            if (rootState.cartStore.formType == "oneStep") {
                await commit("cartStore/showComponent", "groups", {
                    root: true
                })
            }
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/showComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "domains", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/showComponent", "promocode", {
                root: true
            });
            await commit("cartStore/showComponent", "orderFields", {
                root: true
            });
            await commit("cartStore/showComponent", "metricsBilling", {
                root: true
            });
            await commit("cartStore/popSpinner", {
                spinner: "page"
            }, {
                root: true
            })
        },
        async domainRenew({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/pushSpinner", {
                spinner: "page"
            }, {
                root: true
            });
            if (rootState.cartStore.formType == "oneStep") {
                await commit("cartStore/showComponent", "groups", {
                    root: true
                })
            }
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/showComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "domains", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/popSpinner", {
                spinner: "page"
            }, {
                root: true
            })
        },
        async oneStep({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters,
            rootState: rootState
        }) {
            domainDetails = await this.getters["cartStore/getSelectedProductDetails"]();
            if (domainDetails && domainDetails.showdomainoptions == 1) {
                await commit("cartStore/showComponent", "domains", {
                    root: true
                })
            } else {
                await commit("cartStore/hideComponent", "domains", {
                    root: true
                })
            }
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "products", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "configurations", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/showComponent", "promocode", {
                root: true
            });
            await commit("cartStore/showComponent", "orderFields", {
                root: true
            });
            await commit("cartStore/showComponent", "metricsBilling", {
                root: true
            });
            await commit("cartStore/showComponent", "ipLog", {
                root: true
            })
        },
        async addons({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "domain", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "addons", {
                root: true
            });
            await commit("cartStore/showComponent", "promocode", {
                root: true
            });
            await commit("cartStore/showComponent", "orderFields", {
                root: true
            });
            await commit("cartStore/showComponent", "metricsBilling", {
                root: true
            })
        },
        async checkout({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "newOrderHeader", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            })
        },
        async complete({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "newOrderHeader", {
                root: true
            });
            await commit("cartStore/hideComponent", "promocode", {
                root: true
            });
            await commit("cartStore/hideComponent", "orderFields", {
                root: true
            });
            await commit("cartStore/hideComponent", "metricsBilling", {
                root: true
            });
            await commit("cartStore/showComponent", "complete", {
                root: true
            });
            document.querySelector("body").classList.add("page-complete")
        },
        async nextStep({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {},
        async previousStep({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {},
        async getCurrentlySpage({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters,
            rootState: rootState
        }) {
            const queryString = window.location.search;
            const urlParams = new URLSearchParams(queryString);
            return urlParams.get("spage")
        },
        async goToError({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("cartStore/pushSpinner", {
                spinner: "page"
            }, {
                root: true
            });
            let page = await (typeof data === "object" ? data.next : data);
            switch (page) {
                case "FORBIDDEN":
                    await dispatch("forbidden");
                    break
            }
        },
        async hideAll({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            await commit("cartStore/hideComponent", "currency", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "complete", {
                root: true
            });
            await commit("cartStore/hideComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/hideComponent", "globalError", {
                root: true
            })
        },
        async forbidden({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await dispatch("hideAll");
            await commit("cartStore/showComponent", "globalError", {
                root: true
            })
        }
    }
};
const routeStepByStep = {
    namespaced: true,
    actions: {
        async goTo({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            let page = await (data !== null && typeof data === "object" ? data.next : data);
            switch (page) {
                case "products":
                    await dispatch("products");
                    break;
                case "domain":
                    await dispatch("domain");
                    break;
                case "addons":
                    await dispatch("addons");
                    break;
                case "configurations":
                    await dispatch("configurations");
                    break;
                case "complete":
                    await dispatch("complete");
                    break;
                case "domain-renew":
                case "domainRenew":
                case "domainRenewStepTwo":
                    await dispatch("domainRenewStepTwo");
                    break;
                case "domainStepTwo":
                    await dispatch("domainStepTwo");
                    break;
                default:
                    await dispatch("products");
                    break
            }
        },
        async products({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "products", {
                root: true
            });
            await dispatch("addFullWidthClass")
        },
        async configurations({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            const domainOptions = await this.getters["cartStore/getSelectedProductDetailsValue"]("showdomainoptions");
            if (domainOptions == 1) {
                await commit("cartStore/showComponent", "domains", {
                    root: true
                })
            } else {
                await commit("cartStore/hideComponent", "domains", {
                    root: true
                })
            }
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "currency", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "configurations", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/showComponent", "sectionNumber", {
                root: true
            });
            await dispatch("removeFullWidthClass")
        },
        async domain({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/showComponent", "domains", {
                root: true
            });
            await commit("cartStore/showComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/hideComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            })
        },
        async domainStepTwo({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "currency", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "suggestions", {
                root: true
            });
            await commit("cartStore/showComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/showComponent", "domains", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            })
        },
        async domainRenewStepTwo({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "currency", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "suggestions", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            })
        },
        async addons({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "addons", {
                root: true
            })
        },
        async addonsStepTwo({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "configurations", {
                root: true
            });
            await commit("cartStore/showComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            })
        },
        async complete({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "newOrderHeader", {
                root: true
            });
            await commit("cartStore/hideComponent", "sectionNumber", {
                root: true
            });
            commit("cartStore/showComponent", "complete", {
                root: true
            })
        },
        async previousStep({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            const sPage = await dispatch("getCurrentlySpage");
            switch (sPage) {
                case "domainStepTwo":
                    await dispatch("domain");
                    break;
                case "addonsStepTwo":
                    await dispatch("addons");
                    break
            }
        },
        async replaceURL({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters,
            rootState: rootState
        }, {
            urlParams: urlParams
        }) {
            if (rootState.cartStore.groupId && !urlParams["gid"]) {
                urlParams["gid"] = rootState.cartStore.groupId
            }
            return new Promise((resolve, reject) => {
                var baseUrl = rootState.cartStore.pageUri;
                for (var index in urlParams) {
                    baseUrl += "&" + index + "=" + urlParams[index]
                }
                window.history.pushState({
                    page: "singlePage"
                }, "sing page redirect", baseUrl);
                resolve()
            })
        },
        async addFullWidthClass() {
            let el = document.getElementById("baseOrderContent");
            if (el) {
                el.classList.add("full-width")
            }
        },
        async removeFullWidthClass() {
            let el = document.getElementById("baseOrderContent");
            if (el) {
                el.classList.remove("full-width")
            }
        },
        async getCurrentlySpage({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters,
            rootState: rootState
        }) {
            const queryString = window.location.search;
            const urlParams = new URLSearchParams(queryString);
            return urlParams.get("spage")
        },
        async goToError({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("cartStore/pushSpinner", {
                spinner: "page"
            }, {
                root: true
            });
            let page = await (typeof data === "object" ? data.next : data);
            switch (page) {
                case "FORBIDDEN":
                    await dispatch("forbidden");
                    break
            }
        },
        async hideAll({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            await commit("cartStore/hideComponent", "currency", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "complete", {
                root: true
            });
            await commit("cartStore/hideComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/hideComponent", "globalError", {
                root: true
            })
        },
        async forbidden({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await dispatch("hideAll");
            await commit("cartStore/showComponent", "globalError", {
                root: true
            })
        }
    }
};
const routeTwoSteps = {
    namespaced: true,
    actions: {
        async goTo({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            let page = await (data !== null && typeof data === "object" ? data.next : data);
            switch (page) {
                case "domain":
                    await dispatch("domain");
                    break;
                case "addons":
                    await dispatch("addons");
                    break;
                case "addonsStepTwo":
                    await dispatch("addonsStepTwo");
                    break;
                case "configurations":
                    await dispatch("configurations");
                    break;
                case "complete":
                    await dispatch("complete");
                    break;
                case "domainRenew":
                case "domainRenewStepTwo":
                    await dispatch("domainRenewStepTwo");
                    break;
                case "domainStepTwo":
                    await dispatch("domainStepTwo");
                    break;
                case "domain-renew":
                    await dispatch("domainRenew");
                    break;
                default:
                    await dispatch("products");
                    break
            }
        },
        async products({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            let productId = null;
            const arrayParams = rootState.cartStore.url.search.split("&");
            arrayParams.forEach(param => {
                const item = param.split("=");
                const key = item[0];
                if (key == "pid") {
                    productId = item[1]
                }
            });
            if (productId == null) {
                productId = rootState.cartStore.app.cart.products[0] ? rootState.cartStore.app.cart.products[0].pid : null
            }
            let urlArray = window.location.href.split("/");
            if (!isNaN(parseInt(urlArray[urlArray.length - 1])) || productId !== null) {
                domainDetails = await this.getters["cartStore/getSelectedProductDetails"]();
                if (domainDetails && domainDetails.showdomainoptions == 1) {
                    await commit("cartStore/showComponent", "domains", {
                        root: true
                    })
                } else {
                    await commit("cartStore/hideComponent", "domains", {
                        root: true
                    })
                }
                await commit("cartStore/hideComponent", "ipLog", {
                    root: true
                });
                await commit("cartStore/hideComponent", "packageInfo", {
                    root: true
                });
                await commit("cartStore/hideComponent", "addons", {
                    root: true
                });
                await commit("cartStore/hideComponent", "domainsRegistrant", {
                    root: true
                });
                await commit("cartStore/hideComponent", "groups", {
                    root: true
                });
                await commit("cartStore/showComponent", "cart", {
                    root: true
                });
                await commit("cartStore/showComponent", "configurations", {
                    root: true
                });
                await commit("cartStore/showComponent", "billingDetails", {
                    root: true
                });
                await commit("cartStore/showComponent", "paymentMethods", {
                    root: true
                });
                $(".section.section--full-width").show()
            } else {
                $(".section.section--full-width").hide();
                await commit("cartStore/hideComponent", "cart", {
                    root: true
                });
                await commit("cartStore/hideComponent", "domain", {
                    root: true
                });
                await commit("cartStore/hideComponent", "configurations", {
                    root: true
                });
                await commit("cartStore/hideComponent", "billingDetails", {
                    root: true
                });
                await commit("cartStore/hideComponent", "packageInfo", {
                    root: true
                });
                await commit("cartStore/hideComponent", "paymentMethods", {
                    root: true
                });
                await commit("cartStore/hideComponent", "addons", {
                    root: true
                });
                await commit("cartStore/hideComponent", "sectionNumber", {
                    root: true
                });
                await commit("cartStore/hideComponent", "domainsRegistrant", {
                    root: true
                });
                await commit("cartStore/hideComponent", "promocode", {
                    root: true
                });
                await commit("cartStore/hideComponent", "orderFields", {
                    root: true
                });
                await commit("cartStore/hideComponent", "metricsBilling", {
                    root: true
                });
                await commit("cartStore/showComponent", "groups", {
                    root: true
                });
                await commit("cartStore/showComponent", "products", {
                    root: true
                });
                await dispatch("addFullWidthClass")
            }
        },
        async configurations({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            $(".section.section--full-width").show();
            let productDetails = await this.getters["cartStore/getSelectedProductDetails"]();
            if (productDetails && productDetails.showdomainoptions == 1) {
                await commit("cartStore/showComponent", "domains", {
                    root: true
                })
            } else {
                await commit("cartStore/hideComponent", "domains", {
                    root: true
                })
            }
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "configurations", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/showComponent", "promocode", {
                root: true
            });
            await commit("cartStore/showComponent", "orderFields", {
                root: true
            });
            await commit("cartStore/showComponent", "metricsBilling", {
                root: true
            });
            await commit("cartStore/showComponent", "ipLog", {
                root: true
            });
            await dispatch("removeFullWidthClass")
        },
        async domain({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/showComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "domains", {
                root: true
            });
            await commit("cartStore/showComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/showComponent", "suggestions", {
                root: true
            });
            await commit("cartStore/showComponent", "promocode", {
                root: true
            });
            await commit("cartStore/showComponent", "orderFields", {
                root: true
            });
            $(".section.section--full-width").show()
        },
        async domainStepTwo({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "currency", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "suggestions", {
                root: true
            });
            await commit("cartStore/showComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/showComponent", "domains", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            })
        },
        async domainRenewStepTwo({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "currency", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/showComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "suggestions", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/showComponent", "domains", {
                root: true
            })
        },
        async addons({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "addons", {
                root: true
            });
            await commit("cartStore/showComponent", "promocode", {
                root: true
            });
            await commit("cartStore/showComponent", "orderFields", {
                root: true
            });
            $(".payment-section").hide();
            await dispatch("addFullWidthClass")
        },
        async addonsStepTwo({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/showComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            $(".payment-section").show()
        },
        async complete({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "newOrderHeader", {
                root: true
            });
            commit("cartStore/showComponent", "complete", {
                root: true
            })
        },
        async domainRenew({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await commit("cartStore/pushSpinner", {
                spinner: "page"
            }, {
                root: true
            });
            await commit("cartStore/showComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/showComponent", "groups", {
                root: true
            });
            await commit("cartStore/showComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/showComponent", "domains", {
                root: true
            });
            await commit("cartStore/showComponent", "cart", {
                root: true
            });
            await commit("cartStore/showComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/showComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/showComponent", "promocode", {
                root: true
            });
            await commit("cartStore/showComponent", "orderFields", {
                root: true
            });
            await commit("cartStore/popSpinner", {
                spinner: "page"
            }, {
                root: true
            })
        },
        async previousStep({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            const sPage = await dispatch("getCurrentlySpage");
            switch (sPage) {
                case "domainStepTwo":
                    await dispatch("domain");
                    break;
                case "addonsStepTwo":
                    await dispatch("addons");
                    break
            }
        },
        async replaceURL({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters,
            rootState: rootState
        }, {
            urlParams: urlParams
        }) {
            if (rootState.cartStore.groupId && !urlParams["gid"]) {
                urlParams["gid"] = rootState.cartStore.groupId
            }
            return new Promise((resolve, reject) => {
                var baseUrl = rootState.cartStore.pageUri;
                for (var index in urlParams) {
                    baseUrl += "&" + index + "=" + urlParams[index]
                }
                window.history.pushState({
                    page: "singlePage"
                }, "sing page redirect", baseUrl);
                resolve()
            })
        },
        async addFullWidthClass() {
            let el = document.getElementById("baseOrderContent");
            if (el) {
                el.classList.add("full-width")
            }
        },
        async removeFullWidthClass() {
            let el = document.getElementById("baseOrderContent");
            if (el) {
                el.classList.remove("full-width")
            }
        },
        async getCurrentlySpage({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters,
            rootState: rootState
        }) {
            const queryString = window.location.search;
            const urlParams = new URLSearchParams(queryString);
            return urlParams.get("spage")
        },
        async goToError({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("cartStore/pushSpinner", {
                spinner: "page"
            }, {
                root: true
            });
            let page = await (typeof data === "object" ? data.next : data);
            switch (page) {
                case "FORBIDDEN":
                    await dispatch("forbidden");
                    break
            }
        },
        async hideAll({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            await commit("cartStore/hideComponent", "currency", {
                root: true
            });
            await commit("cartStore/hideComponent", "products", {
                root: true
            });
            await commit("cartStore/hideComponent", "cart", {
                root: true
            });
            await commit("cartStore/hideComponent", "domains", {
                root: true
            });
            await commit("cartStore/hideComponent", "configurations", {
                root: true
            });
            await commit("cartStore/hideComponent", "billingDetails", {
                root: true
            });
            await commit("cartStore/hideComponent", "packageInfo", {
                root: true
            });
            await commit("cartStore/hideComponent", "paymentMethods", {
                root: true
            });
            await commit("cartStore/hideComponent", "groups", {
                root: true
            });
            await commit("cartStore/hideComponent", "addons", {
                root: true
            });
            await commit("cartStore/hideComponent", "complete", {
                root: true
            });
            await commit("cartStore/hideComponent", "sectionNumber", {
                root: true
            });
            await commit("cartStore/hideComponent", "domainsRegistrant", {
                root: true
            });
            await commit("cartStore/hideComponent", "globalError", {
                root: true
            })
        },
        async forbidden({
            state: state,
            commit: commit,
            dispatch: dispatch,
            rootState: rootState
        }) {
            await dispatch("hideAll");
            await commit("cartStore/showComponent", "globalError", {
                root: true
            })
        }
    }
};
const cartStore = {
    namespaced: true,
    modules: {
        gatewayHooks: gatewayHooks,
        api: LagomOrderFormApi,
        infoModule: infoModule
    },
    state: {
        requestParams: {},
        moduleSettings: {},
        url: {},
        isGatewayCharge: false,
        pageUri: null,
        app: {
            sPage: null,
            cart: {
                products: [],
                domains: [],
                addons: []
            },
            client: {
                exists: false
            },
            ipAddress: null,
            isIDNDomainsActive: false,
            groups: [],
            orderFields: {},
            groupSection: {},
            $isWhmcs88OrHigher: false,
            requestedPromoCode: "",
            domainCustomFields: {},
            promoCodeErrorMessage: "",
            metricsBilling: {},
            domainForm: {},
            billingDetails: {},
            urlParams: {},
            formType: null,
            domainToSearch: null,
            account_id: null,
            requestedConfigOption: false
        },
        localStorage: {
            billingDetails: {},
            loginDetails: {},
            ccinfo: "new",
            ccdescription: "",
            tos: ""
        },
        settings: {
            captcha: {},
            countryDetails: {},
            currencies: {},
            gateways: {},
            lang: {},
            tldCategories: {},
            tldExtensions: {},
            summary: {},
            schema: {
                addons: {},
                billingCycles: {},
                configurableOptions: {},
                customFields: {},
                server: {}
            },
            domain: {
                schema: {
                    addons: {},
                    customFields: {},
                    serverNamespaces: {},
                    registerFields: {},
                    registrationTypes: {},
                    spotlights: {},
                    renewable: {}
                }
            },
            domainInfo: {
                domain: {},
                spotlight: {},
                transfer: {},
                owndomain: {},
                subdomain: {},
                suggestions: {}
            },
            completeOrder: {},
            template: {},
            layoutSettings: {}
        },
        notifications: {},
        alerts: {},
        orderSettings: {},
        previous: {
            sPage: null
        },
        additionalNotes: [],
        validateErrors: [],
        showElements: {
            newOrderHeader: true,
            products: false,
            cart: false,
            domains: false,
            configurations: false,
            billingDetails: false,
            packageInfo: false,
            paymentMethods: false,
            groups: false,
            addons: false,
            complete: false,
            sectionNumber: false,
            currency: true,
            domainsRegistrant: false,
            globalError: false,
            alert: true,
            promocode: false,
            metricsBilling: false,
            orderFields: false,
            ipLog: false
        },
        spinners: {
            cart: null,
            domainSearchSpinner: null,
            domainAddSpinner: null,
            initial: null,
            logging: null,
            captcha: null,
            ordering: null,
            page: null,
            productButton: null
        },
        blockedEvents: {
            fullPage: null,
            logging: null,
            captcha: null,
            formData: null
        },
        apiError: {},
        areAvailableAddons: false,
        billingDetailsErrors: false,
        billingCycleDuringLoading: "",
        registerPasswords: {
            password: null,
            confirmPassword: null
        },
        billingDetailsValidFields: {},
        captchaOccurrence: 0
    },
    mutations: {
        setAppState: function(state, app) {
            Vue.set(state, "app", Object.assign({}, state.app, app))
        },
        setLocalDetails: function(state, object) {
            Vue.set(state.localStorage, object.name, object.details)
        },
        setGroups: function(state, groups) {
            state.app.groups = groups
        },
        setCaptcha: function(state, captcha) {
            state.settings.captcha = captcha
        },
        setCountryDetails: function(state, countryDetails) {
            state.settings.countryDetails = countryDetails
        },
        setBillingDetailsFields: function(state, billingDetailFields) {
            state.settings.billingDetailFields = billingDetailFields
        },
        setOrderFields: function(state, fields) {
            state.app.orderFields = fields
        },
        setAdditionalNotes: function(state, data) {
            state.app.additionalNotes = data
        },
        setPromoCodeErrorMessage: function(state, data) {
            state.app.promoCodeErrorMessage = data
        },
        setCurrencies: function(state, currencies) {
            state.settings.currencies = currencies
        },
        setTemplate: function(state, template) {
            state.settings.template = template
        },
        setLayoutSettings: function(state, layoutSettings) {
            state.settings.layoutSettings = layoutSettings
        },
        setGateways: function(state, gateways) {
            state.settings.gateways = gateways
        },
        setLang: function(state, lang) {
            state.settings.lang = lang
        },
        setTldCategories: function(state, tldCategories) {
            state.settings.tldCategories = tldCategories
        },
        setTldExtensions: function(state, extensions) {
            state.settings.tldExtensions = extensions
        },
        setCartSummary: function(state, summary) {
            state.settings.summary = summary
        },
        setSchemaAddons: function(state, schema) {
            state.settings.schema.addons = schema
        },
        setSchemaBillingCycles: function(state, schema) {
            state.settings.schema.billingCycles = schema
        },
        setSchemaConfigOptions: function(state, schema) {
            state.settings.schema.configurableOptions = schema
        },
        setSchemaCustomFields: function(state, schema) {
            state.settings.schema.customFields = schema
        },
        setSchemaServers: function(state, schema) {
            state.settings.schema.server = schema
        },
        setDomainSchemaRegistrationTypes: function(state, schema) {
            state.settings.domain.schema.registrationTypes = schema
        },
        setDomainSchemaAddons: function(state, schema) {
            state.settings.domain.schema.addons = schema
        },
        setDomainSchemaCustomFields: function(state, schema) {
            state.settings.domain.schema.customFields = schema
        },
        setDomainSchemaRegisterFields: function(state, schema) {
            state.settings.domain.schema.registerFields = schema
        },
        setDomainSchemaSpotlights: function(state, schema) {
            state.settings.domain.schema.spotlights = schema
        },
        setDomainSchemaServerNamespaces: function(state, schema) {
            state.settings.domain.schema.serverNamespaces = schema
        },
        setDomainSchemaRenewableDomains: function(state, schema) {
            state.settings.domain.schema.renewable = schema
        },
        setBillingCycle: function(state, cycle) {
            state.app.cart.products[state.app.productKey]["billingcycle"] = cycle
        },
        setPageUri: function(state, uri) {
            state.pageUri = uri
        },
        setClientDetails: function(state, clientDetails) {
            state.app.client = clientDetails
        },
        updateNotifications: function(state, notifications) {
            notifications.foreach(function(element) {
                if (!state.notifications.find(notif => notif.message === element.message)) {
                    state.notifications.push(element)
                }
            })
        },
        setDomainRegistrationType: function(state, type) {
            state.app.domainRegType = type
        },
        setInfoDomain: function(state, details) {
            state.settings.domainInfo.domain = details
        },
        setInfoSubDomain: function(state, details) {
            state.settings.domainInfo.subdomain = details
        },
        setInfoSpotlight: function(state, details) {
            state.settings.domainInfo.spotlight = details
        },
        setInfoTransfer: function(state, details) {
            state.settings.domainInfo.transfer = details
        },
        setInfoOwn: function(state, details) {
            state.settings.domainInfo.owndomain = details
        },
        setInfoSuggestions: function(state, details) {
            state.settings.domainInfo.suggestions = details
        },
        setCompleteOrderDetails: function(state, payload) {
            state.settings.completeOrder = payload
        },
        setGatewayChargeFlag: function(state, isCharge) {
            state.isGatewayCharge = isCharge
        },
        setAccountId: function(state, payload) {},
        clearSpinnersAndEvents: function(state) {
            state.spinners = {
                cart: null,
                domainSearchSpinner: null,
                domainAddSpinner: null,
                initial: null,
                logging: null,
                captcha: null,
                ordering: null,
                page: null
            };
            state.blockedEvents = {
                fullPage: null,
                logging: null,
                captcha: null
            }
        },
        setSPage: function(state, uri) {
            state.sPage = uri
        },
        setLastSPage: function(state, sPage) {
            state.previous.sPage = sPage
        },
        setModuleParams: function(state, payload) {
            state.moduleSettings = payload
        },
        initURLObject: function(state) {
            state.url = new URL(window.location.href)
        },
        setRequestParams: function(state, payload) {
            state.requestParams = payload
        },
        setSelectedConfigurationFormData: function(state, formData) {
            state.selectedConfigurations.formData = formData
        },
        setComponentsConfiguration: function(state, data) {
            state.componentsConfiguration = data
        },
        setPageType: function(state, type) {
            state.pageType = type
        },
        setFormType: function(state, type) {
            state.formType = type
        },
        setSelectedApplyCredits: function(state, value) {
            state.app.applyCredits = value
        },
        pushSpinner: function(state, params) {
            state.spinners[params.spinner] = state.spinners[params.spinner] + 10
        },
        popSpinner: function(state, params) {
            state.spinners[params.spinner] = state.spinners[params.spinner] > 0 ? state.spinners[params.spinner] - 10 : 0
        },
        pushBlockEvent: function(state, params) {
            state.blockedEvents[params.event] = state.blockedEvents[params.event] + 10
        },
        popBlockEvent: function(state, params) {
            state.blockedEvents[params.event] = state.blockedEvents[params.event] > 0 ? state.blockedEvents[params.event] - 10 : 0
        },
        showComponent: function(state, name) {
            state.showElements[name] = true
        },
        hideComponent: function(state, name) {
            state.showElements[name] = false
        },
        pushValidateError: function(state, data) {
            if (data.id === undefined) {
                throw new Error("field id is empty")
            }
            const exists = state.validateErrors.find(item => item.id === data.id);
            if (!exists) {
                state.validateErrors.push(data)
            }
        },
        popValidateError: function(state, id) {
            state.validateErrors = state.validateErrors.filter(item => item.id !== id)
        },
        clearValidators: function(state) {
            state.validateErrors = [];
            state.settings.completeOrder = null;
            state.alerts = {}
        },
        setApiError: function(state, data) {
            state.apiError = data
        },
        addAlert: function(state, alert) {
            Vue.set(state.alerts, alert.type, alert.message)
        },
        removeAlert: function(state, alert) {
            if (state.alerts) {
                Vue.set(state.alerts, alert.type, false)
            }
        },
        setAvailableAddons: function(state, data) {
            if (data.data) {
                state.areAvailableAddons = true
            } else if (!data.data && data.isSectionVisible) {
                state.areAvailableAddons = true
            } else {
                state.areAvailableAddons = false
            }
        },
        setBillingDetailsErrors: function(state, data) {
            state.billingDetailsErrors = data
        },
        setBillingCycleDuringLoading: function(state, data) {
            state.billingCycleDuringLoading = data
        },
        setRegisterPassword: function(state, data) {
            state.registerPasswords.password = data
        },
        setRegisterConfirmPassword: function(state, data) {
            state.registerPasswords.confirmPassword = data
        }
    },
    actions: {
        showValidation({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            let firstWithError = null;
            let elementPositionTop = 0;
            state.validateErrors.map(element => {
                let el = document.getElementById(element.id);
                if (el && (firstWithError == null || el.getBoundingClientRect().top < firstWithError.getBoundingClientRect().top)) {
                    elementPositionTop = el.getBoundingClientRect().top;
                    firstWithError = el
                }
            });
            if (firstWithError) {
                window.scrollTo({
                    behavior: "smooth",
                    top: firstWithError.getBoundingClientRect().y ? firstWithError.getBoundingClientRect().top + window.scrollY - 120 : firstWithError.getBoundingClientRect().top + window.scrollY
                })
            }
        },
        async init({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, {
            settings: settings
        }) {
            await commit("pushSpinner", {
                spinner: "page"
            });
            await commit("pushBlockEvent", {
                spinner: "fullPage"
            });
            await dispatch("setInitialDetails", settings);
            await dispatch("api/loadPageConfiguration", getters.getInitialParamsFromUrl());
            await dispatch("checkSinglePage");
            await dispatch("handleCustomUrls");
            await commit("popSpinner", {
                spinner: "page"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await dispatch("removeInitialLoader", settings);
            await dispatch("handleShowCartButton");
            await dispatch("handleEmptyDomainConfiguration")
        },
        async setInitialDetails({
            state: state,
            commit: commit,
            dispatch: dispatch
        }, settings) {
            await commit("setComponentsConfiguration", settings.componentsConfiguration);
            commit("setModuleParams", settings.moduleSettings);
            commit("initURLObject");
            commit("setRequestParams", settings.requestParams);
            commit("setPageUri", settings.baseUrl);
            commit("setPageType", settings.pageType);
            commit("setFormType", settings.formType)
        },
        async changeGroup({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, groupId) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "page"
            });
            await commit("clearValidators");
            await dispatch("api/changeGroup", {
                group: groupId
            }).then(async () => {
                await dispatch("checkSinglePage")
            }).catch(async () => {});
            await dispatch("clearValidators");
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await commit("popSpinner", {
                spinner: "page"
            })
        },
        async checkSinglePage({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            if (state.previous.sPage !== state.app.sPage) {
                commit("setLastSPage", state.app.sPage);
                await dispatch("route/goTo", state.app.sPage)
            }
            await dispatch("updateURI")
        },
        async removeInitialLoader({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            const mgIntegration = jQuery(LagomOrderFormContainer.integrationTarget);
            mgIntegration.find("#one-page-order-init-loader").addClass("hidden");
            mgIntegration.find("#" + LagomOrderFormContainer.containerId).attr("hidden", false)
        },
        async handleShowCartButton({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {},
        async handleEmptyDomainConfiguration({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            let domains = getters.isVisible("domains")
        },
        async handleCustomUrls({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            return;
            const params = {
                ordertype: "formType"
            };
            for (key in params) {
                let param = state.url.searchParams.get(key);
                if (param) {
                    state[params[key]] = param
                }
            }
        },
        updateURI({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            let baseUrl = state.pageUri;
            if (state.app.urlParams.friendlyUrl) {
                baseUrl += state.app.urlParams.friendlyUrl
            }
            let urlParams = "";
            if (typeof state.app.urlParams.query === "string") {
                urlParams += state.app.urlParams.query
            } else if (typeof state.app.urlParams.query === "object") {
                urlParams += Object.keys(state.app.urlParams.query).map(function(k) {
                    return k + "=" + state.app.urlParams.query[k]
                }).join("&")
            }
            const url = baseUrl + (urlParams ? "?" + urlParams : "");
            window.history.pushState({
                page: "singlePage"
            }, "sing page redirect", url)
        },
        async changeProduct({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, productId) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "productButton"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await commit("clearValidators");
            await dispatch("api/changeProduct", {
                productId: productId
            });
            await dispatch("clearValidators");
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await commit("popSpinner", {
                spinner: "productButton"
            });
            await commit("popSpinner", {
                spinner: "cart"
            });
            await dispatch("checkSinglePage");
            renderNavScroll()
        },
        async changeBillingCycle({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, cycle) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await commit("setBillingCycle", cycle);
            await dispatch("api/changeBillingCycle", {
                cycle: cycle
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await commit("popSpinner", {
                spinner: "cart"
            })
        },
        async updateConfigurableOptions({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/updateConfigurableOptions", data).then(async () => {}).catch(async () => {});
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await commit("popSpinner", {
                spinner: "cart"
            })
        },
        async updateServerFields({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await dispatch("api/updateServerFields", data).then(async () => {}).catch(async () => {})
        },
        async updateCustomFields({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await dispatch("api/updateCustomFields", data).then(async () => {}).catch(async () => {})
        },
        async addProductAddon({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/addProductAddon", data).then(async () => {}).catch(async () => {});
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await commit("popSpinner", {
                spinner: "cart"
            })
        },
        async changeProductAddon({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/changeProductAddon", data).then(async () => {}).catch(async () => {});
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await commit("popSpinner", {
                spinner: "cart"
            })
        },
        async deleteProductAddon({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/deleteProductAddon", data).then(async () => {}).catch(async () => {});
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await commit("popSpinner", {
                spinner: "cart"
            })
        },
        async deleteAddon({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/deleteAddon", data).then(async () => {}).catch(async () => {});
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await commit("popSpinner", {
                spinner: "cart"
            })
        },
        async updateBillingCountryDetails({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            let details = getters.getAppBillingDetails();
            details.country = data.details.country;
            details.state = data.details.state;
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/updateBillingDetails", details).then(async () => {}).catch(async () => {});
            await commit("popSpinner", {
                spinner: "cart"
            })
        },
        async updateDomainContactCountryDetails({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            let details = getters.getDomainContactDetails();
            details.country = data.details.country;
            details.state = data.details.state;
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/updateDomainContactDetails", details).then(async () => {}).catch(async () => {});
            await commit("popSpinner", {
                spinner: "cart"
            })
        },
        async updateBillingDetails({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await dispatch("api/updateBillingDetails", data).then(async () => {}).catch(async () => {})
        },
        async updateOrderFields({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, fields) {
            await dispatch("api/updateOrderFields", {
                fields: fields
            })
        },
        updateCreditCardInfo({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, value) {
            commit("setLocalDetails", {
                name: "ccinfo",
                details: value
            })
        },
        updateCreditCardDescription({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, value) {
            commit("setLocalDetails", {
                name: "ccdescription",
                details: value
            })
        },
        updateBillingDetailsLocal({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            commit("setLocalDetails", {
                name: "billingDetails",
                details: details
            })
        },
        async changePaymentGateway({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/changeGateway", details).then(async () => {}).catch(async () => {});
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async confirmCaptcha({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            let resp = {};
            await commit("pushBlockEvent", {
                event: "captcha"
            });
            await commit("pushSpinner", {
                spinner: "captcha"
            });
            await dispatch("api/confirmCaptcha", data).then(response => {
                resp = response
            }).catch(async () => {});
            await commit("popSpinner", {
                spinner: "captcha"
            });
            await commit("popBlockEvent", {
                event: "captcha"
            });
            return resp
        },
        async clearValidateErrors({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            await commit("clearValidators");
            await mgEventHandler.runCallback("RefreshAlertState", null, {})
        },
        setDomainRegistrationType({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, type) {
            if (type != state.app.domainRegType) {
                commit("setDomainRegistrationType", type);
                dispatch("api/changeDomainRegistrationType", {
                    type: type
                })
            }
        },
        updateDomainContactDetails({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            dispatch("api/updateDomainContactDetails", details).then(() => {}).catch(response => {})
        },
        updateNote({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            dispatch("api/updateTextNotes", details).then(() => {}).catch(response => {})
        },
        updateMarketingEmail({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            dispatch("api/updateMarketingEmails", details).then(() => {}).catch(response => {})
        },
        updateAccountId({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            state.app.account_id = details.val
        },
        updateTermOfService({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, value) {
            commit("setLocalDetails", {
                name: "tos",
                details: value
            })
        },
        async addPromocode({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/addPromoCode", details).then(() => {
                commit("removeAlert", {
                    type: "promo"
                })
            }).catch(response => {
                commit("addAlert", {
                    type: "promo",
                    message: response.message
                })
            });
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async removePromocode({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/removePromoCode", details).then(() => {
                commit("removeAlert", {
                    type: "promo"
                })
            }).catch(response => {
                commit("addAlert", {
                    type: "promo",
                    message: response.message
                })
            });
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async changeCurrency({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/changeCurrency", details).then(() => {}).catch(response => {});
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async addProduct({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, pid) {
            console.log("in progress..");
            console.log("If you want to add new product, add the body request.");
            console.log("If you want to change the product, use the changeProduct method ")
        },
        async orderAddon({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/addAddon", data).then(() => {}).catch(() => {});
            await dispatch("checkSinglePage");
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async addDomainAddon({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, aid) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            let formData = getters.getDomainAddonsFormData();
            formData[aid] = "on";
            await dispatch("api/updateDomainAddons", {
                addons: formData
            }).then(() => {}).catch(() => {});
            await dispatch("checkSinglePage");
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async deleteDomainAddon({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, aid) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            let formData = getters.getDomainAddonsFormData();
            formData[aid] = null;
            await dispatch("api/updateDomainAddons", {
                addons: formData
            }).then(() => {}).catch(() => {});
            await dispatch("updateDomainAddons", formData);
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async addDomain({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, {
            type: type,
            domain: domain,
            year: year
        }) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await commit("pushSpinner", {
                spinner: "domainAddSpinner"
            });
            if (type == "own" || type == "subdomain") {
                await commit("pushSpinner", {
                    spinner: "domainSearchSpinner"
                })
            }
            const data = {
                type: type,
                domain: domain,
                period: year
            };
            await dispatch("api/addDomain", data).then(() => {}).catch(() => {});
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popSpinner", {
                spinner: "domainAddSpinner"
            });
            if (type == "own" || type == "subdomain") {
                await commit("popSpinner", {
                    spinner: "domainSearchSpinner"
                })
            }
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await dispatch("checkSinglePage")
        },
        async changePeriod({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, {
            type: type,
            domain: domain,
            year: year
        }) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await commit("pushSpinner", {
                spinner: "domainAddSpinner"
            });
            const data = {
                type: type,
                domain: domain,
                period: year
            };
            await dispatch("api/changePeriod", data).then(() => {}).catch(() => {});
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popSpinner", {
                spinner: "domainAddSpinner"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            await dispatch("checkSinglePage")
        },
        async updateDomain({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await dispatch("api/updateDomain", data);
            await dispatch("checkSinglePage")
        },
        async removeDomain({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/removeDomain", data);
            state.settings.domain.schema.registerFields = {};
            state.validateErrors = [];
            await dispatch("checkSinglePage");
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async renewDomain({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/renewDomain", data).then(() => {}).catch(() => {});
            await dispatch("checkSinglePage");
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async removeDomainRenew({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, data) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/deleteRenewDomain", data).then(() => {}).catch(() => {});
            await dispatch("checkSinglePage");
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async loadDomainInformation({
            state: state,
            commit: commit,
            dispatch: dispatch
        }, data) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "domainSearchSpinner"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("disableDomainSectionAvailableComponent", "suggestions");
            await dispatch("api/checkDomain", data);
            await commit("popSpinner", {
                spinner: "domainSearchSpinner"
            });
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            })
        },
        async disableDomainSectionAvailableComponent({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, name) {
            let regTypes = getters.getDomainRegTypes();
            let section = regTypes[getters.getDomainRegistrationType()];
            if (section === undefined) {
                return true
            }
            if (section.supportedComponents === undefined) {
                return true
            }
            let index = section.supportedComponents.indexOf(name);
            if (index === -1) {
                return true
            }
            section.supportedComponents.splice(index, 1);
            regTypes[getters.getDomainRegistrationType()] = section;
            commit("setDomainSchemaRegistrationTypes", regTypes);
            return true
        },
        async completeOrder({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            await commit("pushBlockEvent", {
                event: "fullPage"
            });
            await commit("pushSpinner", {
                spinner: "ordering"
            });
            await commit("clearValidators");
            try {
                await mgEventHandler.runCallback("PreCompleteOrder", null, {}).then(resp => {
                    if (state.validateErrors.length > 0) {
                        throw Error(state.validateErrors)
                    }
                });
                orderModel.buildRequest(this);
                const client = getters.getClient();
                if (getters.getApplyCreditsStatus() !== 1 || client && client.credit.numeric < getters.getCartSummary().total.numeric) {
                    const resp = await dispatch("gatewayHooks/runHookGatewayPreOrderFunction", orderModel.getRequestDetails());
                    if (resp !== undefined && resp.validation_feedback && getters.getCartSummary().total.numeric > 0) {
                        await dispatch("api/validateStripe", {
                            message: resp.validation_feedback
                        })
                    }
                    let gatewayFormData = await dispatch("gatewayHooks/runHookGatewayFormData");
                    orderModel.addGatewayParams(gatewayFormData)
                }
            } catch (error) {
                await commit("popSpinner", {
                    spinner: "ordering"
                });
                await commit("popBlockEvent", {
                    event: "fullPage"
                });
                return dispatch("showValidation")
            }
            await dispatch("api/complete", orderModel.getRequestDetails());
            await dispatch("afterCompleteOrder");
            await commit("popSpinner", {
                spinner: "ordering"
            });
            await commit("popBlockEvent", {
                event: "fullPage"
            });
            return true
        },
        async afterCompleteOrder({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }) {
            const details = getters.getCompleteOrderDetails();
            if (!details || details.status == "error") {
                mgEventHandler.runCallback("ReloadBillingDetails");
                return
            }
            if (details.redirectionType === "on" || details.redirectionType === "gateway" && !details.redirectButton && details.invoiceId) {
                window.location.href = state.moduleSettings.mainEndpoint + `index.php?rp=/invoice/${details.invoiceId}/pay`
            } else {
                await dispatch("route/goTo", "complete")
            }
        },
        async loadUserData({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, params) {
            await commit("pushBlockEvent", {
                event: "logging"
            });
            await commit("pushSpinner", {
                spinner: "logging"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            await dispatch("api/getUserAccount").then(() => {}).catch(() => {});
            await commit("popSpinner", {
                spinner: "logging"
            });
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "logging"
            })
        },
        async loginUser({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, params) {
            await commit("pushBlockEvent", {
                event: "logging"
            });
            await commit("pushSpinner", {
                spinner: "logging"
            });
            await commit("pushSpinner", {
                spinner: "cart"
            });
            let data = await dispatch("api/loginUser", params).then(response => {
                return response
            }).catch(err => {
                if (err.status) {
                    return err
                }
                return {
                    status: "error"
                }
            });
            await commit("popSpinner", {
                spinner: "logging"
            });
            await commit("popSpinner", {
                spinner: "cart"
            });
            await commit("popBlockEvent", {
                event: "logging"
            });
            return data
        },
        async applyCredits({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            await commit("setSelectedApplyCredits", details.applyCredits);
            await dispatch("api/updateApplyCredits", details).then().catch()
        },
        async updateBillingAccount({
            state: state,
            commit: commit,
            dispatch: dispatch,
            getters: getters
        }, details) {
            await dispatch("api/updateBillingAccount", {
                account_id: details.id,
                token: csrfToken
            }).then(async () => {
                await dispatch("api/changeUserAccount", {
                    account_id: details.id
                }).then(() => {}).catch(() => {})
            }).catch(() => {})
        },
        infoLog: function({
            state: state,
            commit: commit,
            dispatch: dispatch
        }, {
            message: message
        }) {
            dispatch("infoModule/infoLog", {
                message: message
            })
        },
        errorLog: function({
            state: state,
            commit: commit,
            dispatch: dispatch
        }, {
            message: message,
            response: response
        }) {
            dispatch("infoModule/errorLog", {
                message: message,
                response: response
            })
        }
    },
    getters: {
        isVisible: state => (function(index) {
            return state.showElements[index] === true && !(state.spinners["page"] > 1)
        }),
        getAppItemKey: state => (function() {
            return Number.isInteger(state.app.productKey) ? 0 : state.app.productKey
        }),
        getGroups: state => (function() {
            return state.app.groups ? state.app.groups : []
        }),
        getDefaultGroupId: state => (function() {
            return !pageOrderIsObjectEmpty(state.app.groups) ? state.app.groups.find(group => group).id : false
        }),
        getSelectedGroupId: (state, getters) => (function() {
            if (state.app.group) {
                return state.app.group
            }
            if (getters.getGroupBySelectedProductId()) {
                return getters.getGroupBySelectedProductId()
            }
            return getters.getDefaultGroupId()
        }),
        getAppBillingDetails: (state, getters) => (function() {
            return state.app.billingDetails ? state.app.billingDetails : false
        }),
        getGroupByIdOrDefault: (state, getters) => (function(id) {
            let group = getters.getGroupById(id);
            return group ? group : getters.getGroupById(getters.getDefaultGroupId())
        }),
        getSelectedGroupByIdOrBestMatch: (state, getters) => (function(id) {
            return getters.getGroupById(id) ? getters.getGroupById(id) : getters.getGroupById(getters.getSelectedGroupId())
        }),
        getGroupBySelectedProductId: (state, getters) => (function() {
            const selectedProduct = getters.getSelectedProduct();
            if (!selectedProduct) {
                return null
            }
            const gid = selectedProduct.gid;
            return getters.getGroupById(gid)
        }),
        getGroupById: state => (function(id) {
            return state.app.groups.find(group => group.id == id)
        }),
        getCurrentGroup: (state, getters) => (function() {
            const group = getters.getSelectedGroupByIdOrBestMatch(getters.getSelectedGroupId());
            return group ? group : false
        }),
        getGroupProducts: (state, getters) => (function() {
            const group = getters.getCurrentGroup();
            if (group && group.products !== undefined && group.products !== null) {
                const groupProductsArray = Object.keys(group.products).map(key => group.products[key]);
                if (groupProductsArray.length) {
                    let visibleProducts = [];
                    if (group.type == "addons") {
                        visibleProducts = groupProductsArray
                    } else {
                        visibleProducts = groupProductsArray.filter(product => product.hidden == 0 || state.app.cart.products[0] && product.id == state.app.cart.products[0].pid)
                    }
                    return visibleProducts ? visibleProducts : []
                }
            }
            return []
        }),
        getGroupProductById: (state, getters) => (function(id) {
            let products = getters.getGroupProducts();
            return products ? products.find(product => product.id == id) : false
        }),
        getCurrencies: state => (function() {
            return state.settings.currencies ? state.settings.currencies : []
        }),
        getDefaultCountry: state => (function() {
            if (state.app.client.exists && state.app.client.type === "logged") {
                return state.app.client.country
            } else {
                return state.settings.countryDetails.defaultCountry ? state.settings.countryDetails.defaultCountry : false
            }
        }),
        getTemplate: state => (function() {
            return state.settings.template ? state.settings.template : ""
        }),
        getLayoutSettings: state => (function() {
            return state.settings.layoutSettings ? state.settings.layoutSettings : {}
        }),
        getSelectedProduct: (state, getters) => (function() {
            let itemKey = getters.getAppItemKey();
            return itemKey !== false ? getters.getCartProductByKey(itemKey) : false
        }),
        getSelectedProductDetails: (state, getters) => (function() {
            let itemKey = getters.getAppItemKey();
            let product = itemKey !== false ? getters.getCartProductByKey(itemKey) : false;
            return product ? getters.getGroupProductById(product.pid) : false
        }),
        getSelectedProductDetailsValue: (state, getters) => (function(option) {
            const product = getters.getSelectedProductDetails();
            return product ? product[option] : null
        }),
        getSelectedProductCycle: (state, getters) => (function() {
            const productDetails = getters.getSelectedProductDetails();
            let defaultCycle = productDetails && productDetails.pricing ? Object.keys(productDetails.pricing)[0] : "monthly";
            if (state.settings.layoutSettings.highestBillingPeriod) {
                defaultCycle = Object.keys(state.settings.schema.billingCycles)[Object.keys(state.settings.schema.billingCycles).length - 1]
            }
            let payType = getters.getSelectedProductDetailsValue("paytype");
            if (payType === "onetime") {
                return defaultCycle
            }
            let product = getters.getSelectedProduct();
            if (product && product.billingcycle && !Object.keys(state.settings.schema.billingCycles).includes(product.billingcycle)) {
                return Object.keys(productDetails.pricing)[0]
            }
            return product && product.billingcycle ? product.billingcycle : defaultCycle
        }),
        getSelectedProductId: (state, getters) => (function() {
            let product = getters.getSelectedProduct();
            return product ? product.pid : false
        }),
        getSelectedRenewDomains: state => (function() {
            return state.app.cart.renewals ? state.app.cart.renewals : {}
        }),
        getSelectedAddons: state => (function() {
            return state.app.cart.addons ? state.app.cart.addons : {}
        }),
        getSelectedCurrencyId: state => (function() {
            return state.app.currency ? state.app.currency.id : false
        }),
        getSelectedCurrency: (state, getters) => (function() {
            return state.app.currency ? state.app.currency : getters.getDefaultCurrency()
        }),
        getCurrencyById: state => (function(id) {
            return state.settings.currencies.find(currency => currency.id == id)
        }),
        getDefaultCurrency: state => (function() {
            return state.app.currency ? state.app.currency : null
        }),
        getCartProductByKey: state => (function(key) {
            return state.app.cart.products[key] ? state.app.cart.products[key] : false
        }),
        getCartDomainByKey: state => (function(key) {
            return state.app.cart.domains[key] ? state.app.cart.domains[key] : false
        }),
        getCartSummary: state => (function() {
            return state.settings.summary ? state.settings.summary : {}
        }),
        getCaptchaSettings: state => (function() {
            return state.settings.captcha ? state.settings.captcha : {}
        }),
        getCaptchaConfirmation: state => (function() {
            return state.app.captcha.confirmed ? state.app.captcha.confirmed : false
        }),
        getPromo: state => (function() {
            return state.settings.promo ? state.settings.promo : false
        }),
        getBillingCycles: state => (function() {
            return state.settings.schema.billingCycles ? state.settings.schema.billingCycles : false
        }),
        getOrderFields: state => (function() {
            return state.app.orderFields ? state.app.orderFields : false
        }),
        getDomainCustomFields: state => (function() {
            return state.app.domainCustomFields ? state.app.domainCustomFields : false
        }),
        getGroupSection: state => (function() {
            return state.app.groupSection ? state.app.groupSection : false
        }),
        getGatewayChargeFlag: state => (function() {
            return state.isGatewayCharge
        }),
        getAdditionalNotes: state => (function() {
            return state.app.additionalNotes ? state.app.additionalNotes : false
        }),
        getIpAddress: state => (function() {
            return state.app.ipAddress ? state.app.ipAddress : false
        }),
        getMetricsBilling: state => (function() {
            return state.app.metricsBilling ? state.app.metricsBilling : false
        }),
        getRequestedPromoCode: state => (function() {
            return state.app.requestedPromoCode ? state.app.requestedPromoCode : false
        }),
        isWhmcs88OrHigher: state => (function() {
            return state.app.isWhmcs88OrHigher ? state.app.isWhmcs88OrHigher : false
        }),
        getRequestedConfigOption: state => (function() {
            return state.app.requestedConfigOption ? state.app.requestedConfigOption : false
        }),
        getPromoCodeErrorMessage: state => (function() {
            return state.app.promoCodeErrorMessage ? state.app.promoCodeErrorMessage : false
        }),
        getProductAddons: state => (function() {
            return state.settings.schema.addons ? state.settings.schema.addons : []
        }),
        getProductConfigurableOptions: state => (function() {
            return state.settings.schema.configurableOptions ? state.settings.schema.configurableOptions : false
        }),
        getConfigurableOptionsFormData: (state, getters) => (function() {
            let product = getters.getSelectedProduct();
            return product ? Object.assign({}, product.configoptions) : false
        }),
        getCustomFieldsFormData: (state, getters) => (function() {
            let product = getters.getSelectedProduct();
            return product ? Object.assign({}, product.customfields) : false
        }),
        getServerFieldsFormData: (state, getters) => (function() {
            let product = getters.getSelectedProduct();
            return product ? Object.assign({}, product.server) : false
        }),
        getProductAddonsFormData: (state, getters) => (function() {
            let product = getters.getSelectedProduct();
            return product ? product.addons : false
        }),
        getProductServerFields: state => (function() {
            return state.settings.schema.server ? state.settings.schema.server : false
        }),
        getProductCustomFields: state => (function() {
            return state.settings.schema.customFields ? state.settings.schema.customFields : false
        }),
        getBillingDetailsSchema: state => (function() {
            return state.settings.billingDetailFields.schema ? state.settings.billingDetailFields.schema : false
        }),
        getBillingDetailsOptionalFields: state => (function() {
            return state.settings.billingDetailFields.optionalFields ? state.settings.billingDetailFields.optionalFields : []
        }),
        getClient: state => (function() {
            return state.app.client ? state.app.client : false
        }),
        getAccountId: state => (function() {
            return state.app.account_id ? state.app.account_id : false
        }),
        getLoginDetails: state => (function() {
            return state.localStorage.loginDetails
        }),
        getAuthOption: state => (function() {
            return state.localStorage.authOption
        }),
        getLocalBillingDetails: state => (function() {
            return state.localStorage.billingDetails
        }),
        getCcInfo: state => (function() {
            return state.localStorage.ccinfo
        }),
        getCcDescription: state => (function() {
            return state.localStorage.ccdescription
        }),
        getTermOfServiceValue: state => (function() {
            return state.localStorage.tos
        }),
        getCountryDetails: state => (function() {
            return state.settings.countryDetails ? state.settings.countryDetails : false
        }),
        getCountries: state => (function() {
            return state.settings.countryDetails.countries ? state.settings.countryDetails.countries : false
        }),
        getDomainSchema: state => (function() {
            return state.settings.domain.schema ? state.settings.domain.schema : false
        }),
        getDomainSchemaAddons: (state, getters) => (function() {
            let schema = getters.getDomainSchema();
            return schema ? schema.addons : false
        }),
        getDomainSchemaCustomFields: (state, getters) => (function() {
            let schema = getters.getDomainSchema();
            return schema ? schema.customFields : false
        }),
        getDomainSchemaRegisterFields: (state, getters) => (function() {
            let schema = getters.getDomainSchema();
            return schema ? schema.registerFields : false
        }),
        getDomainSchemaServerNamespaces: (state, getters) => (function() {
            let schema = getters.getDomainSchema();
            return schema ? schema.serverNamespaces : false
        }),
        getDomainSchemaRenewableDomains: (state, getters) => (function() {
            let schema = getters.getDomainSchema();
            return schema ? schema.renewable : false
        }),
        getDomainRegTypes: (state, getters) => (function() {
            let schema = getters.getDomainSchema();
            return schema ? schema.registrationTypes : false
        }),
        getDomainSpotlights: (state, getters) => (function() {
            let schema = getters.getDomainSchema();
            return schema ? schema.spotlights : false
        }),
        getPaymentGateways: state => (function() {
            return state.settings.gateways ? state.settings.gateways : false
        }),
        getApplyCreditsStatus: state => (function() {
            return state.app.applyCredits ? state.app.applyCredits : false
        }),
        getTldExtensions: state => (function() {
            return state.settings.tldExtensions ? state.settings.tldExtensions : false
        }),
        isIDNDomainsActive: state => (function() {
            return state.app.isIDNDomainsActive ? state.app.isIDNDomainsActive : false
        }),
        getProductDomain: (state, getters) => (function() {
            let product = getters.getSelectedProduct();
            return product.domain && product.domain.length > 0 ? product.domain : false
        }),
        getDomainRegistrationType: state => (function() {
            return state.app.domainRegType
        }),
        getDomainInfo: state => (function() {
            return state.settings.domainInfo
        }),
        getDomainInfoByType: (state, getters) => (function(type) {
            let info = getters.getDomainInfo();
            return info ? info[type] : false
        }),
        getDomainForm: state => (function() {
            return state.app.domainForm
        }),
        getDomainToSearch: state => (function() {
            return state.app.domainToSearch
        }),
        getDomainFormServers: (state, getters) => (function() {
            let form = getters.getDomainForm();
            return form ? form.servers : false
        }),
        getDomainFormCustomFields: (state, getters) => (function() {
            let form = getters.getDomainForm();
            return form ? form.customFields : false
        }),
        getDomainFormRegisterFields: (state, getters) => (function() {
            let form = getters.getDomainForm();
            return form ? form.registerFields : false
        }),
        getDomainAddonsFormData: (state, getters) => (function() {
            let form = getters.getDomainForm();
            return form ? form.addons : false
        }),
        getLang: state => (function() {
            return state.settings.lang
        }),
        isDomainSelected: (state, getters) => (function() {
            if (state.app.domainRegType === "renew") {
                return 1
            } else if (state.app.domainRegType === "own" || state.app.domainRegType === "subdomain") {
                return getters.getProductDomain()
            } else if (state.app.cartType === "domain" || state.app.cartType === "product") {
                let itemKey = getters.getAppItemKey();
                return itemKey !== false ? getters.getCartDomainByKey(itemKey) : false
            }
            return false
        }),
        getDomainName: (state, getters) => (function() {
            if (state.app.cartType === "product") {
                return getters.getProductDomain()
            } else if (state.app.cartType === "domain") {
                let itemKey = getters.getAppItemKey();
                let domain = itemKey !== false ? getters.getCartDomainByKey(itemKey) : false;
                return domain ? domain["domain"] : false
            }
            return false
        }),
        getTldCategories: state => (function() {
            return state.settings.tldCategories
        }),
        getAlert: state => (function(type) {
            return state.alerts
        }),
        getMarketingEmailsValue: state => (function() {
            return state.app ? state.app.marketingEmails : false
        }),
        getNotesValue: state => (function() {
            return state.app ? state.app.notes : false
        }),
        getDomainContactDetails: state => (function() {
            return state.app.domainContact ? state.app.domainContact : false
        }),
        getStatesByCountryCode: (state, getters) => (function(countryCode) {
            if (states) {
                for (var index in states) {
                    if (index == countryCode) {
                        if (states[index].includes("end")) {
                            const i = states[index].indexOf("end");
                            if (i !== -1) {
                                states[index].splice(i, 1)
                            }
                        }
                        return states[index]
                    }
                }
            }
            return []
        }),
        getSpinners: state => (function() {
            return state.spinners
        }),
        getBlockedEvents: state => (function() {
            return state.blockedEvents
        }),
        getSPage: state => (function() {
            return state.app.sPage
        }),
        getSelectedPaymentGateway: state => (function() {
            return state.app.paymentMethod ? state.app.paymentMethod : null
        }),
        getComponentsConfiguration: state => (function() {
            return state.componentsConfiguration
        }),
        getCompleteOrderDetails: state => (function() {
            return state.settings.completeOrder ? state.settings.completeOrder : false
        }),
        getWhmcsOrderSettings: state => (function() {
            return state.app.orderSettings ? state.app.orderSettings : {}
        }),
        isDomainSectionAvailableComponent: (state, getters) => (function(name) {
            let section = getters.getDomainRegTypes()[getters.getDomainRegistrationType()];
            if (section === undefined) {
                return false
            }
            if (section.supportedComponents === undefined) {
                return false
            }
            if (section.supportedComponents.indexOf(name) === -1) {
                return false
            }
            return true
        }),
        shouldShowNumber: state => (function() {
            return state.pageType === "bottom" && state.showElements["sectionNumber"] === true
        }),
        getPageType: state => (function() {
            return state.pageType
        }),
        isGroupModalEnabled: state => (function() {
            return state.formType === "oneStep"
        }),
        isTwoStep: state => (function() {
            return state.formType === "twoSteps"
        }),
        isOneStep: state => (function() {
            return state.formType === "oneStep"
        }),
        isBillingAccountsSupported: state => (function() {
            return state.componentsConfiguration["billingAccountsSupported"] === true
        }),
        getBillingCycleDuringLoading: state => (function() {
            return state.billingCycleDuringLoading
        }),
        getInitialParamsFromUrl: state => (function() {
            let path = state.url.pathname.replace(whmcsBaseUrl, "");
            const [, group, pid, ...otherUrlParams] = path.split("/").filter(el => el.length);
            let params = {
                group: group,
                pid: pid
            };
            for (let i = 0; i < Math.floor(otherUrlParams.length / 2); i++) {
                params[otherUrlParams[i]] = otherUrlParams[i + 1]
            }
            state.url.searchParams.forEach(function(value, key) {
                params[key] = value
            });
            return params
        }),
        getBillingDetailsErrors: state => (function() {
            return state.billingDetailsErrors
        }),
        getValidateErrors: state => (function() {
            return state.validateErrors
        }),
        getLagomTemplateSettings: state => (function() {
            return state.app.lagomTemplateSettings
        }),
        getZeroPrice: state => (function(setting) {
            switch (state.settings.layoutSettings[setting]) {
                case "hide":
                    return "";
                case "free":
                    return mgPageLang.translate("free");
                default:
                    const currency = state.app.currency;
                    return currency.prefix + formatPrice.getFormattedPrice(0, currency.format) + (state.settings.layoutSettings.displayPriceSuffix ? " " + currency.suffix : "")
            }
        })
    }
};

function mgDefaultMount(data, gateway) {
    if (gateway.type.toLowerCase() === "cc") {
        mgCCCardForm.mount(gateway)
    }
}

function mgDefaultPreOrder(data, gateway) {}

function mgDefaultChangeCard(data, gateway) {
    mgCCCardForm.data.ccinfo = data.ccinfo
}

function mgDefaultFormData(data, gateway) {
    var formData = {};
    $("#mg-card-container-" + gateway.gatewayKey).find("input").each(function() {
        formData[jQuery(this).attr("name")] = jQuery(this).val()
    });
    return formData
}
const mgCCCardForm = {
    data: {
        ccinfo: "new",
        mounted: []
    },
    mount(gateway) {
        const self = this;
        let cardId = "mg-card-" + gateway.gatewayKey;
        let card = document.getElementById(cardId);
        if (card) {
            card.addEventListener("input", function(event) {
                self.cardListener(cardId, event)
            })
        } else {}
        let cardExpiryId = "mg-card-expiry-" + gateway.gatewayKey;
        let cardExpiry = document.getElementById(cardExpiryId);
        if (cardExpiry) {
            cardExpiry.addEventListener("input", function(event) {
                self.cardExpiryListener(cardId, event)
            })
        }
        let cardCcvId = "mg-card-cvv-" + gateway.gatewayKey;
        let cardCcv = document.getElementById(cardCcvId);
        if (cardCcv) {
            cardCcv.addEventListener("input", function(event) {
                self.cardCVListener(cardId, event)
            })
        }
    },
    cardListener(cardId, event) {
        event.target.value = creditCardFormat(event.target.value)
    },
    cardExpiryListener(cardId, event) {
        event.target.value = expiryFormat(event.target.value)
    },
    cardCVListener(cardId, event) {
        event.target.value = ccvFormat(event.target.value)
    },
    displayError() {}
};

function expiryFormat(value) {
    var v = value.replace(/\s+/g, "").replace(/[^0-9]/gi, "");
    var matches = v.match(/\d{2,4}/g);
    if (matches && matches[0]) {
        return matches[0].substring(0, 2) + " / " + matches[0].substring(2, 4)
    }
    return v
}

function ccvFormat(value) {
    var v = value.replace(/\s+/g, "").replace(/[^0-9]/gi, "").substring(0, 4);
    return v
}

function creditCardFormat(value) {
    var value = value;
    var v = value.replace(/\s+/g, "").replace(/[^0-9]/gi, "");
    var matches = v.match(/\d{4,16}/g);
    var match = matches && matches[0] || "";
    var parts = [];
    for (i = 0, len = match.length; i < len; i += 4) {
        parts.push(match.substring(i, i + 4))
    }
    if (parts.length) {
        value = parts.join(" ")
    }
    return value
}
async function mgStripePreOrder(details) {
    var newCcInputs = jQuery("#newCardInfo");
    const amount = parseFloat($("#cartTotalAmount").html());
    if (mgStripe.existingToken) {
        return mgStripe.orderExisting(details)
    } else if (amount > 0) {
        return mgStripe.orderNew(details)
    } else {
        return mgStripe.freeOrder(details)
    }
}

function mgStripeMount(details) {
    mgStripe.mount()
}

function mgStripeFormData() {
    return mgStripe.formData
}
async function mgStripeChangeCard(details) {
    if (details.ccinfo === "new") {
        await mgStripe.removeToken()
    } else {
        await mgStripe.loadCardToken(details.ccinfo)
    }
}
const mgStripe = {
    complete: {
        cardNumber: false,
        cardExpiry: false,
        cardCvc: false
    },
    existingToken: null,
    formData: {},
    mount() {
        var self = this;
        self.mountInputs().then(result => {
            self.mountApp()
        })
    },
    change(callback, id, errorElass) {
        var self = mgStripe;
        if (callback.error !== undefined && callback.complete !== true) {
            self.complete[callback.elementType] = false;
            $("#" + id).parent().addClass("has-error has-error--form")
        }
        if (callback.complete === true) {
            self.complete[callback.elementType] = true;
            $("#" + id).parent().removeClass("has-error has-error--form")
        }
    },
    removeToken() {
        this.existingToken = null
    },
    loadCardToken(card) {
        var self = this;
        WHMCS.http.jqClient.jsonPost({
            url: WHMCS.utils.getRouteUrl("/payment/stripe/token/get"),
            data: "paymethod_id=" + card + "&token=" + csrfToken,
            success: function(e) {
                self.existingToken = e.token;
                return Promise.resolve(1)
            },
            warning: function(e) {
                return Promise.reject(e)
            },
            fail: function(e) {
                return Promise.reject(e)
            }
        })
    },
    orderExisting(details) {
        var self = this;
        if (document.getElementById("g-recaptcha-response") && captchaComponent.getCaptchaType() === "invisible") {
            grecaptcha.execute()
        }
        return new Promise((resolve, reject) => {
            WHMCS.http.jqClient.jsonPost({
                url: WHMCS.utils.getRouteUrl("/stripe/payment/intent"),
                data: details + "&payment_method_id=" + self.existingToken,
                success: function(e) {
                    if (e.success) {
                        self.formData["remoteStorageToken"] = e.token;
                        resolve(1)
                    } else if (e.validation_feedback) {
                        resolve(e)
                    } else {
                        stripe.handleCardPayment(e.token).then(function(result) {
                            if (result.error) {
                                e.validation_feedback = result.error.message;
                                resolve(e)
                            } else {
                                self.formData["remoteStorageToken"] = result.paymentIntent.id;
                                resolve(1)
                            }
                        })
                    }
                },
                warning: function(e) {
                    reject(e)
                },
                fail: function(e) {
                    reject(e)
                }
            })
        })
    },
    async orderNew(details) {
        const input = document.getElementById("isWhmcs88OrHigher");
        return new Promise((resolve, reject) => {
            if (input && input.value !== "false") {
                stripe.createPaymentMethod("card", card).then(function(e) {
                    if (e.error) {
                        reject(e)
                    } else {
                        WHMCS.http.jqClient.jsonPost({
                            url: WHMCS.utils.getRouteUrl("/stripe/payment/intent"),
                            data: details,
                            async: false,
                            success: function(e) {
                                if (e.requires_payment) {
                                    stripe.confirmCardPayment(e.token, {
                                        payment_method: {
                                            card: card,
                                            billing_details: e.billing_details,
                                            metadata: e.metadata
                                        }
                                    })
                                }
                                resolve(1)
                            },
                            warning: function(e) {
                                reject(e)
                            },
                            fail: function(e) {
                                reject(e)
                            }
                        })
                    }
                })
            } else {
                const self = this;
                stripe.createPaymentMethod("card", card).then(function(e) {
                    if (e.error) {
                        reject(e)
                    } else {
                        details = details + "&payment_method_id=" + e.paymentMethod.id;
                        WHMCS.http.jqClient.jsonPost({
                            url: WHMCS.utils.getRouteUrl("/stripe/payment/intent"),
                            data: details,
                            async: false,
                            success: function(e) {
                                if (e.success) {
                                    self.formData["remoteStorageToken"] = e.token;
                                    resolve(1)
                                } else if (e.validation_feedback) {
                                    resolve(e)
                                } else {
                                    stripe.handleCardPayment(e.token).then(function(result) {
                                        if (result.error) {
                                            e.validation_feedback = result.error.message;
                                            resolve(e)
                                        } else {
                                            self.formData["remoteStorageToken"] = result.paymentIntent.id;
                                            resolve(1)
                                        }
                                    })
                                }
                            },
                            warning: function(e) {
                                reject(e)
                            },
                            fail: function(e) {
                                reject(e)
                            }
                        })
                    }
                }).catch(e => {
                    reject(e)
                })
            }
        })
    },
    async freeOrder(details) {
        var self = this;
        return new Promise((resolve, reject) => {
            stripe.createPaymentMethod("card", card).then(function(e) {
                if (e.error) {
                    reject(e)
                } else {
                    details = details + "&payment_method_id=" + e.paymentMethod.id;
                    WHMCS.http.jqClient.jsonPost({
                        url: WHMCS.utils.getRouteUrl("/stripe/setup/intent"),
                        data: details,
                        async: false,
                        success: function(response) {
                            if (response.success) {
                                stripe.handleCardSetup(response.setup_intent, card).then(function(result) {
                                    self.formData["remoteStorageToken"] = response.setup_intent.split("_secret")[0];
                                    resolve(1)
                                })
                            }
                        },
                        warning: function(e) {
                            reject(e)
                        },
                        fail: function(e) {
                            reject(e)
                        }
                    })
                }
            }).catch(e => {
                reject(e)
            })
        })
    },
    mountInputs() {
        return new Promise((resolve, reject) => {
            var card = $("#mg-card-stripe").parent();
            $("#mg-card-stripe").remove();
            card.append('<div id="mg-stripe-cc" class="form-control"></div>');
            var expiry = $("#mg-card-expiry-stripe").parent();
            $("#mg-card-expiry-stripe").remove();
            expiry.append('<div id="mg-stripe-expiry" class="form-control"></div>');
            var cvv = $("#mg-card-cvv-stripe").parent();
            $("#mg-card-cvv-stripe").remove();
            cvv.append('<div id="mg-stripe-cardcvv" class="form-control"></div>');
            resolve()
        })
    },
    mountApp() {
        if (jQuery("#mg-stripe-cc")[0] !== undefined) {
            var self = this;
            card.mount("#mg-stripe-cc");
            card.addEventListener("change", function(result) {
                self.change(result, "mg-stripe-cc", "has-error")
            });
            cardExpiryElements.mount("#mg-stripe-expiry");
            cardExpiryElements.addEventListener("change", function(result) {
                self.change(result, "mg-stripe-expiry", "has-error")
            });
            cardCvcElements.mount("#mg-stripe-cardcvv");
            cardCvcElements.addEventListener("change", function(result) {
                self.change(result, "mg-stripe-cardcvv", "has-error")
            })
        }
    }
};